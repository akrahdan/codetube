{"version":3,"sources":["store/useInstructor.ts","portal/scenes/Instructor/Editor/components.tsx","portal/scenes/Instructor/Editor/index.tsx","static/images/avatar/profile-avatar.png","portal/scenes/Instructor/Courses/Landing/UploadProgress.js","portal/scenes/Instructor/Dashboard/Profile/BasicInfo.tsx","portal/scenes/Instructor/Dashboard/Profile/Picture.tsx","portal/scenes/Instructor/Dashboard/Profile/index.tsx"],"names":["useInstructor","instructor","useAppSelector","selectInstructor","useMemo","Button","React","forwardRef","ref","className","props","active","reversed","cx","Icon","Menu","Toolbar","HOTKEYS","LIST_TYPES","RTEditor","handleChange","editorValue","html","DOMParser","parseFromString","initEditValue","deserialize","body","initialValue","useState","value","setValue","renderElement","useCallback","renderLeaf","editor","withHistory","withReact","createEditor","onChange","result","map","serialize","join","format","placeholder","spellCheck","autoFocus","onKeyDown","event","hotkey","isHotkey","preventDefault","toggleMark","isMarkActive","Editor","removeMark","addMark","isBlockActive","nodes","match","n","isEditor","SlateElement","isElement","type","marks","Element","attributes","children","element","Leaf","leaf","bold","code","italic","underline","BlockButton","useSlate","onMouseDown","isActive","isList","includes","Transforms","unwrapNodes","split","newProperties","setNodes","block","wrapNodes","toggleBlock","MarkButton","text","node","Text","isText","string","escapeHtml","url","el","nodeType","textContent","Array","from","childNodes","length","nodeName","jsx","getAttribute","UploadProgress","progress","changeUpload","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","onClick","BasicInfo","useEditInstructorInfoMutation","editInstructor","profile","setProfile","alert","useAlert","useEffect","classNames","hidden","onSubmit","then","res","data","show","htmlFor","name","first_name","target","maxLength","id","last_name","headline","data-purpose","description","disabled","filestack","client","process","Picture","setProgress","upLoading","setUpLoading","setError","setStatus","editInstructorInfo","onProgress","eve","console","log","totalPercent","onUpload","files","a","upload","results","avatar","catch","err","status","alt","src","aria-label","accept","data-type","tabIndex","InstructorProfile","setActive"],"mappings":"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","file":"static/js/27.22c3b2e8.chunk.js","sourcesContent":["import { useMemo } from \"react\";\nimport { useAppSelector } from \"./hooks\";\nimport { selectInstructor } from \"state/instructor/instructorSplice\";\n\nexport const useInstructor = () => {\n    const instructor = useAppSelector(selectInstructor)\n    \n\n    return useMemo(() => ({ instructor}), [instructor])\n}","import React, { Ref, PropsWithChildren } from 'react'\nimport ReactDOM from 'react-dom'\nimport { cx, css } from '@emotion/css'\n\ninterface BaseProps {\n  className: string\n  [key: string]: unknown\n}\ntype OrNull<T> = T | null\n\nexport const Button = React.forwardRef(\n  (\n    {\n      className,\n      active,\n      reversed,\n      ...props\n    }: PropsWithChildren<\n      {\n        active: boolean\n        reversed: boolean\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const EditorValue = React.forwardRef(\n  (\n    {\n      className,\n      value,\n      ...props\n    }: PropsWithChildren<\n      {\n        value: any\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<null>>\n  ) => {\n    const textLines = value.document.nodes\n      .map(node => node.text)\n      .toArray()\n      .join('\\n')\n    return (\n      <div\n        ref={ref}\n        {...props}\n        className={cx(\n          className,\n          css`\n            margin: 30px -20px 0;\n          `\n        )}\n      >\n        <div\n          className={css`\n            font-size: 14px;\n            padding: 5px 20px;\n            color: #404040;\n            border-top: 2px solid #eeeeee;\n            background: #f8f8f8;\n          `}\n        >\n          Slate's value as text\n        </div>\n        <div\n          className={css`\n            color: #404040;\n            font: 12px monospace;\n            white-space: pre-wrap;\n            padding: 10px 20px;\n            div {\n              margin: 0 0 0.5em;\n            }\n          `}\n        >\n          {textLines}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport const Icon = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Instruction = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n       \n      )}\n    />\n  )\n)\n\nexport const Menu = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Portal = ({ children }) => {\n  return typeof document === 'object'\n    ? ReactDOM.createPortal(children, document.body)\n    : null\n}\n\nexport const Toolbar = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <Menu\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)","import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\nimport {\n  Editor,\n  Text,\n  Transforms,\n  createEditor,\n  Descendant,\n  Node,\n  Element as SlateElement,\n} from 'slate'\nimport { withHistory } from 'slate-history'\nimport escapeHtml from 'escape-html'\nimport { Button, Icon, Toolbar } from './components'\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code',\n}\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list', 'list-item']\n\nexport const RTEditor = ({ handleChange, editorValue }) => {\n  const html = editorValue ? new DOMParser().parseFromString(editorValue, 'text/html') : ''\n  const initEditValue = html ? deserialize(html.body) : initialValue\n  const [value, setValue] = useState<Descendant[]>(initEditValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  \n  return (\n    <Slate editor={editor} value={value} onChange={value => {\n      setValue(value)\n      const result = value.map(serialize).join('\\n')\n      handleChange(result)\n    }}>\n      <Toolbar className=\"rt-menu-bar-container\">\n        <div className=\"rt-menu-bar fx-lt\">\n          <div className='btn-group'>\n            <MarkButton className=\"cfi cfi-bold\" format=\"bold\" />\n            <MarkButton className=\"cfi cfi-italic\" format=\"italic\" />\n            <BlockButton format=\"numbered-list\" className=\"cfi cfi-list-ol\" />\n            <BlockButton format=\"bulleted-list\" className=\"cfi cfi-list-ul\" />\n          </div>\n          <div className=\"fx\"></div>\n          <div className=\"btn-group\"></div>\n        </div>\n\n      </Toolbar>\n      <div className=\"rt-editor rt-editor--empty rt-editor--wysiwyg-mode \">\n        <Editable\n\n          className=\"ProseMirror\"\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Description goes here\"\n          spellCheck\n          autoFocus\n          onKeyDown={event => {\n            for (const hotkey in HOTKEYS) {\n              if (isHotkey(hotkey, event as any)) {\n                event.preventDefault()\n                const mark = HOTKEYS[hotkey]\n                toggleMark(editor, mark)\n              }\n            }\n          }}\n        />\n      </div>\n\n    </Slate>\n  )\n}\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\n      ),\n    split: true,\n  })\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  }\n  Transforms.setNodes(editor, newProperties)\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  })\n\n  return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\n\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst BlockButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className='btn btn-link'\n      active={isBlockActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleBlock(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst MarkButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className=\"btn btn-link\"\n      active={isMarkActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleMark(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst initialValue: Descendant[] = [\n  {\n    type: 'paragraph',\n    children: [\n      { text: '' },\n\n\n    ],\n  },\n\n]\n\n\nconst serialize = (node) => {\n  if (Text.isText(node)) {\n    let string = escapeHtml(node.text)\n    if (node.bold) {\n      string = `<strong>${string}</strong>`\n    }\n    if (node.italic) {\n      string = `<em>${string}</em>`\n    }\n    return string\n  }\n\n  const children = node.children.map(n => serialize(n)).join('')\n\n  switch (node.type) {\n    case 'quote':\n      return `<blockquote><p>${children}</p></blockquote>`\n    case 'paragraph':\n      return `<p>${children}</p>`\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`\n    case 'list-item':\n      return `<li>${children}</li>`\n    case 'numbered-list':\n      return `<ol>${children}</ol>`\n\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\n    default:\n      return children\n  }\n}\n\nconst deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  }\n\n  let children = Array.from(el.childNodes).map(deserialize)\n\n  if (children.length === 0) {\n    children = [{ text: '' }]\n  }\n\n  switch (el.nodeName) {\n    case 'BODY':\n      return jsx('fragment', {}, children)\n    case 'BR':\n      return '\\n'\n    case 'BLOCKQUOTE':\n      return jsx('element', { type: 'quote' }, children)\n    case 'P':\n      return jsx('element', { type: 'paragraph' }, children)\n    case 'UL':\n      return jsx('element', { type: 'bulleted-list' }, children)\n    case 'OL':\n      return jsx('element', { type: 'numbered-list' }, children)\n    case 'LI':\n      return jsx('element', { type: 'list-item' }, children)\n    case 'A':\n      return jsx(\n        'element',\n        { type: 'link', url: el.getAttribute('href') },\n        children\n      )\n    default:\n      return el.textContent\n  }\n}\n\nexport default RTEditor","export default __webpack_public_path__ + \"static/media/profile-avatar.8170c656.png\";","export const UploadProgress = ({ progress, changeUpload }) => {\n  return (\n    <span className=\"file-uploader--progressBarWrapper--2lCJU input-group\">\n      <div className=\"file-uploader--progressBar--3WNS9 progress\">\n        <div\n          role=\"progressbar\"\n          className=\"progress-bar\"\n          aria-valuenow={100}\n          aria-valuemin={0}\n          aria-valuemax={100}\n          style={{ width: `${progress}% `}}\n        >\n          {`${progress}%`}\n        </div>\n      </div>\n      <span className=\"input-group-btn\">\n        <button type=\"button\"\n        onClick={changeUpload}\n         className=\"btn btn-default\">\n          Change\n        </button>\n      </span>\n    </span>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport classNames from 'classnames';\nimport { RTEditor } from 'portal/scenes/Instructor/Editor'\nimport { useInstructor } from 'store/useInstructor'\nimport { useAlert } from \"react-alert\";\nimport type { InstructorResponse } from 'services/courses'\nimport { useFetchInstructorInfoQuery, useEditInstructorInfoMutation } from 'services/courses';\ntype BasicInfoProps = {\n  active: boolean\n}\n\nexport const BasicInfo: React.FC<BasicInfoProps> = ({ active }) => {\n\n  const { instructor } = useInstructor()\n  const [ editInstructor ] = useEditInstructorInfoMutation()\n  const [profile, setProfile] = useState<InstructorResponse>(instructor)\n  const alert = useAlert()\n\n  useEffect(() => {\n    setProfile(instructor)\n  }, [instructor])\n\n  return (\n    <div className={classNames(\"two-columns--two-columns--t3o3b\", {\n      hidden: !active\n    })}>\n      <form onSubmit={event => {\n        event.preventDefault();\n        editInstructor(profile).then((res: { data: InstructorResponse}) => {\n           if(res.data) {\n             alert.show(\"Your changes have been successfully saved.\")\n           }\n        })\n\n      }} >\n        <div className=\"two-columns-ia__group\">\n          <div className=\"two-columns-ia__group__section\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\" className=\"mb5 control-label\">\n                First Name\n              </label>\n              <input\n                name=\"name\"\n                value={profile ? profile.first_name ? profile.first_name : '' : ''}\n                onChange={event => {\n                  setProfile({\n                    ...profile,\n                    first_name: event.target.value\n                  })\n                }}\n                maxLength={64}\n                id=\"name\"\n                className=\"form-control\"\n\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"surname\" className=\"mb5 control-label\">\n                Last Name\n              </label>\n              <input\n                name=\"surname\"\n                value={profile ? profile.last_name ? profile.last_name : '' : ''}\n                onChange={event => {\n                  setProfile({\n                    ...profile,\n                    last_name: event.target.value\n                  })\n                }}\n                maxLength={64}\n                id=\"surname\"\n                className=\"form-control\"\n\n              />\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"jobTitle\" className=\"mb5 control-label\">\n                  Headline\n                </label>\n                <div className=\"form-control-counter-container\">\n                  <input\n                    name=\"jobTitle\"\n                    value={profile ? profile.headline ? profile.headline : '' : ''}\n                    onChange={event => {\n                      setProfile({\n                        ...profile,\n                        headline: event.target.value\n                      })\n                    }}\n                    placeholder=\"'Software  Architect' or 'Architect'\"\n                    maxLength={60}\n                    id=\"jobTitle\"\n                    className=\"form-control\"\n\n                  />\n                  <div\n                    className=\"form-control-counter\"\n                    data-purpose=\"form-control-counter\"\n                  >\n                    43\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\" className=\"mb5 control-label\">\n                  Biography\n                </label>\n                <div >\n                  <RTEditor editorValue={profile.description} handleChange={(value) => {\n                    setProfile({\n                      ...profile,\n                      description: value\n                    })\n                  }} />\n                </div>\n                <span className=\"help-block\">\n                  Your biography should have at least 50 characters, links and\n                  coupon codes are not permitted.\n                </span>\n              </div>\n\n            </div>\n          </div>\n          <div className=\"two-columns-ia__group__section\">\n            <div className=\"form-group\">\n              <label htmlFor=\"urlPersonalWebsite\" className=\"mb5 control-label\">\n                Website\n              </label>\n              <input\n                name=\"urlPersonalWebsite\"\n                data-purpose=\"edit-profile-personal-website\"\n                placeholder=\"Url\"\n                maxLength={128}\n                disabled\n                id=\"urlPersonalWebsite\"\n                className=\"form-control\"\n\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"twitterProfile\" className=\"mb5 control-label\">\n                Twitter\n              </label>\n              <span className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  http://www.twitter.com/{\" \"}\n                </span>\n                <input\n                  name=\"twitterProfile\"\n                  data-purpose=\"edit-profile-twitter\"\n                  placeholder=\"Username\"\n                  maxLength={128}\n                  id=\"twitterProfile\"\n                  className=\"form-control\"\n\n                />\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"facebookProfile\" className=\"mb5 control-label\">\n                Facebook\n              </label>\n              <span className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  http://www.facebook.com/{\" \"}\n                </span>\n                <input\n                  name=\"facebookProfile\"\n                  data-purpose=\"edit-profile-facebook\"\n                  placeholder=\"Username\"\n                  maxLength={128}\n                  id=\"facebookProfile\"\n                  className=\"form-control\"\n\n                />\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"linkedInProfile\" className=\"mb5 control-label\">\n                LinkedIn\n              </label>\n              <span className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  http://www.linkedin.com/{\" \"}\n                </span>\n                <input\n                  name=\"linkedInProfile\"\n                  data-purpose=\"edit-profile-linkedin\"\n                  placeholder=\"Resource ID\"\n                  maxLength={128}\n                  id=\"linkedInProfile\"\n                  className=\"form-control\"\n\n                />\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"youtubeProfile\" className=\"mb5 control-label\">\n                Youtube\n              </label>\n              <span className=\"input-group\">\n                <span className=\"input-group-addon\">\n                  http://www.youtube.com/{\" \"}\n                </span>\n                <input\n                  name=\"youtubeProfile\"\n                  data-purpose=\"edit-profile-youtube\"\n                  placeholder=\"Username\"\n                  maxLength={128}\n                  id=\"youtubeProfile\"\n                  className=\"form-control\"\n\n                />\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"text-right mt20\">\n          <button\n            type=\"submit\"\n            \n            className=\"udlite-btn udlite-btn-large udlite-btn-primary udlite-heading-md\"\n          >\n            <span>Save</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport * as client from 'filestack-js'\nimport classNames from 'classnames';\nimport avatar from 'static/images/avatar/profile-avatar.png'\n\nimport { selectInstructor } from 'state/instructor/instructorSplice';\nimport type { Instructor, InstructorResponse } from 'services/courses';\nimport { useInstructor } from \"store/useInstructor\";\nimport { useAlert } from 'react-alert';\nimport { UploadProgress } from \"../../Courses/Landing/UploadProgress\";\nimport { useEditInstructorInfoMutation } from 'services/courses';\n\nconst filestack = client.Filestack(process.env.REACT_APP_FILESTACK_APP_KEY, {})\n\ntype PictureProps = {\n  active: boolean\n}\nexport const Picture: React.FC<PictureProps> = ({ active }) => {\n\n  const [progress, setProgress] = useState(0)\n  const [upLoading, setUpLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [status, setStatus] = useState('Progress')\n  const [editInstructorInfo] = useEditInstructorInfoMutation()\n  const { instructor } = useInstructor()\n  const alert = useAlert()\n  const [profile, setProfile] = useState<InstructorResponse>(instructor)\n\n\n  const onProgress = eve => {\n    console.log(eve.totalPercent)\n    setProgress(eve.totalPercent)\n\n  }\n\n  const onUpload = async (files, onProgress) => {\n    setError(null)\n    setStatus('Progress')\n    setUpLoading(true)\n\n    filestack.upload(files, { onProgress })\n      .then(results => {\n        setProfile({\n          ...profile,\n          avatar: results.url\n        });\n        setUpLoading(false)\n      }).catch(err => {\n        setStatus('Failed')\n        console.log(err)\n        setError(err.status)\n      })\n  }\n\n  useEffect(() => {\n    setProfile(instructor)\n  }, [instructor])\n\n\n  return (\n    <div className={classNames(\"one-column--one-column--3pI7D\", {\n      hidden: !active\n    })}>\n      <form onSubmit={event => {\n        event.preventDefault()\n        editInstructorInfo({\n          ...profile\n        }).then((res: { data: InstructorResponse }) => {\n          if (res.data && res.data.avatar) {\n\n            alert.show('Your profile picture has been successfully saved.')\n\n          }\n        })\n      }} >\n        <div>\n          <div className=\"form-group\">\n            <label className=\"control-label\">Image preview</label>\n            <span className=\"help-block\">\n              Minimum 200x200 pixels, Maximum 6000x6000 pixels\n            </span>\n            <div className=\"photo--profileCrop--tdqoW\">\n              <div >\n                <div className=\"image-upload-preview-with-crop--previewWrapper--1eYsy\">\n                  <div className=\"image-upload-preview-with-crop--imageWrapper--fNINE\">\n                    <img\n                      data-purpose=\"image-preview\"\n                      alt=\"Course image\"\n\n                      src={profile && profile.avatar ? profile.avatar : avatar}\n                    />\n                    {(upLoading && progress < 100) && <div className=\"uploading-backdrop--wrapperLoader--3qlfG\">\n                      <span\n                        aria-label=\"Loading\"\n                        className=\"uploading-backdrop--loader--23uMA cfi-medium cfi cfi-circle-loader\"\n                      />\n                    </div>}\n                  </div>\n                  <div className=\"image-upload-preview-with-crop--tips--17Lj2\" />\n                </div>\n                <div className=\"image-upload-preview-with-crop--form-element--2Nnsf\">\n                  <div\n                    className=\"file-uploader--file-selector--SGCns\"\n\n                  >\n                    {upLoading ? <UploadProgress progress={progress} changeUpload={() => setUpLoading(!upLoading)} /> : <>\n                      <input\n                        accept=\".gif,.jpg,.jpeg,.png\"\n                        type=\"file\"\n                        onChange={event => onUpload(event.target.files[0], onProgress)}\n                        id=\"FileUploaderS3-0--1\"\n                        className=\"sr-only\"\n                      />\n                      <label htmlFor=\"FileUploaderS3-0--1\">\n                        <span className=\"input-group\">\n                          <div className=\"form-control file-uploader--fake-file-input--1_ohV\">\n                            No file selected\n                          </div>\n                          <span className=\"input-group-btn\">\n                            <div data-type=\"button\" className=\"btn btn-default\">\n                              Upload image\n                            </div>\n                          </span>\n                        </span>\n                      </label>\n                    </>}\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-right mt20\">\n            <button\n              type=\"submit\"\n\n              disabled={!profile || !profile.avatar}\n              tabIndex={-1}\n              className={classNames(\"udlite-btn udlite-btn-large udlite-btn-primary udlite-heading-md\", {\n                'udlite-btn-disabled': !profile || !profile.avatar\n              })}\n            >\n              <span>Save</span>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { BasicInfo } from \"./BasicInfo\";\nimport { Picture } from \"./Picture\";\nimport { useInstructor } from \"store/useInstructor\";\nimport { InstructorResponse } from \"services/courses\";\n\nexport const InstructorProfile = () => {\n  const [active, setActive ] = useState('basicInfo')\n  \n  return (\n    <div className=\"responsive_container \">\n      <div>\n        <div>\n          <h1\n            className=\"udlite-heading-serif-xxl sub-header--title--1CSOo\"\n            data-purpose=\"page-title\"\n          >\n            Profile &amp; settings\n          </h1>\n          <div className=\"nav-container\">\n            <ul className=\"nav-slide sub-header--nav--1hT_o nav nav-tabs\">\n              <li role=\"presentation\" className={classNames({\n                active: active == \"basicInfo\"\n              })}>\n                <a onClick={event => {\n                  event.preventDefault()\n                  setActive(\"basicInfo\")\n                }}>\n                Profile\n                </a>\n              </li>\n              <li role=\"presentation\" className={classNames({\n                active: active == \"picture\"\n              })} >\n                <a onClick={event => {\n                  event.preventDefault()\n                  setActive(\"picture\")\n                }}>Profile picture</a>\n              </li>\n              <BasicInfo active= {active == \"basicInfo\"} />\n              <Picture active= {active == \"picture\"} />\n            </ul>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default InstructorProfile;\n"],"sourceRoot":""}