{"version":3,"sources":["portal/scenes/Instructor/Editor/components.tsx","portal/scenes/Instructor/Editor/index.tsx","static/images/avatar/profile-avatar.png","portal/scenes/Instructor/Courses/Landing/UploadProgress.js","portal/scenes/Instructor/Dashboard/Payout/PersonalInfo.tsx","static/images/brand/paypal.svg","static/images/brand/payoneer.svg","portal/scenes/Instructor/Dashboard/Payout/PayoutMethod.js","portal/scenes/Instructor/Dashboard/Payout/Profile.tsx","portal/scenes/Instructor/Dashboard/Payout/index.jsx"],"names":["Button","React","forwardRef","ref","className","props","active","reversed","cx","Icon","Menu","Toolbar","HOTKEYS","LIST_TYPES","RTEditor","handleChange","editorValue","html","DOMParser","parseFromString","initEditValue","deserialize","body","initialValue","useState","value","setValue","renderElement","useCallback","renderLeaf","editor","useMemo","withHistory","withReact","createEditor","onChange","result","map","serialize","join","format","placeholder","spellCheck","autoFocus","onKeyDown","event","hotkey","isHotkey","preventDefault","toggleMark","isMarkActive","Editor","removeMark","addMark","isBlockActive","nodes","match","n","isEditor","SlateElement","isElement","type","marks","Element","attributes","children","element","Leaf","leaf","bold","code","italic","underline","BlockButton","useSlate","onMouseDown","isActive","isList","includes","Transforms","unwrapNodes","split","newProperties","setNodes","block","wrapNodes","toggleBlock","MarkButton","text","node","Text","isText","string","escapeHtml","url","el","nodeType","textContent","Array","from","childNodes","length","nodeName","jsx","getAttribute","UploadProgress","progress","changeUpload","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","onClick","PersonalInfo","next","useEditInstructorInfoMutation","editInstructorInfo","useFetchInstructorInfoQuery","isLoading","data","selectedProfile","useAppSelector","selectInstructor","alert","useAlert","profile","setProfile","useEffect","data-purpose","classNames","hidden","onSubmit","email","first_name","last_name","headline","description","then","res","show","id","htmlFor","name","user","username","target","required","data-module-id","maxLength","defaultValue","PayoutMethod","href","rel","pa-marked","display","src","paypal","alt","height","xmlns","version","viewBox","focusable","fill","d","fillOpacity","aria-label","payoneer","filestack","client","process","Profile","setProgress","upLoading","setUpLoading","setError","setStatus","onProgress","eve","console","log","totalPercent","onUpload","files","a","upload","results","avatar","catch","err","status","accept","data-type","PayoutSettings","setActive"],"mappings":"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","file":"static/js/24.eb04dbd5.chunk.js","sourcesContent":["import React, { Ref, PropsWithChildren } from 'react'\nimport ReactDOM from 'react-dom'\nimport { cx, css } from '@emotion/css'\n\ninterface BaseProps {\n  className: string\n  [key: string]: unknown\n}\ntype OrNull<T> = T | null\n\nexport const Button = React.forwardRef(\n  (\n    {\n      className,\n      active,\n      reversed,\n      ...props\n    }: PropsWithChildren<\n      {\n        active: boolean\n        reversed: boolean\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const EditorValue = React.forwardRef(\n  (\n    {\n      className,\n      value,\n      ...props\n    }: PropsWithChildren<\n      {\n        value: any\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<null>>\n  ) => {\n    const textLines = value.document.nodes\n      .map(node => node.text)\n      .toArray()\n      .join('\\n')\n    return (\n      <div\n        ref={ref}\n        {...props}\n        className={cx(\n          className,\n          css`\n            margin: 30px -20px 0;\n          `\n        )}\n      >\n        <div\n          className={css`\n            font-size: 14px;\n            padding: 5px 20px;\n            color: #404040;\n            border-top: 2px solid #eeeeee;\n            background: #f8f8f8;\n          `}\n        >\n          Slate's value as text\n        </div>\n        <div\n          className={css`\n            color: #404040;\n            font: 12px monospace;\n            white-space: pre-wrap;\n            padding: 10px 20px;\n            div {\n              margin: 0 0 0.5em;\n            }\n          `}\n        >\n          {textLines}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport const Icon = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Instruction = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n       \n      )}\n    />\n  )\n)\n\nexport const Menu = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Portal = ({ children }) => {\n  return typeof document === 'object'\n    ? ReactDOM.createPortal(children, document.body)\n    : null\n}\n\nexport const Toolbar = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <Menu\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)","import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\nimport {\n  Editor,\n  Text,\n  Transforms,\n  createEditor,\n  Descendant,\n  Node,\n  Element as SlateElement,\n} from 'slate'\nimport { withHistory } from 'slate-history'\nimport escapeHtml from 'escape-html'\nimport { Button, Icon, Toolbar } from './components'\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code',\n}\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list', 'list-item']\n\nexport const RTEditor = ({ handleChange, editorValue }) => {\n  const html = editorValue ? new DOMParser().parseFromString(editorValue, 'text/html') : ''\n  const initEditValue = html ? deserialize(html.body) : initialValue\n  const [value, setValue] = useState<Descendant[]>(initEditValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  \n  return (\n    <Slate editor={editor} value={value} onChange={value => {\n      setValue(value)\n      const result = value.map(serialize).join('\\n')\n      handleChange(result)\n    }}>\n      <Toolbar className=\"rt-menu-bar-container\">\n        <div className=\"rt-menu-bar fx-lt\">\n          <div className='btn-group'>\n            <MarkButton className=\"cfi cfi-bold\" format=\"bold\" />\n            <MarkButton className=\"cfi cfi-italic\" format=\"italic\" />\n            <BlockButton format=\"numbered-list\" className=\"cfi cfi-list-ol\" />\n            <BlockButton format=\"bulleted-list\" className=\"cfi cfi-list-ul\" />\n          </div>\n          <div className=\"fx\"></div>\n          <div className=\"btn-group\"></div>\n        </div>\n\n      </Toolbar>\n      <div className=\"rt-editor rt-editor--empty rt-editor--wysiwyg-mode \">\n        <Editable\n\n          className=\"ProseMirror\"\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Description goes here\"\n          spellCheck\n          autoFocus\n          onKeyDown={event => {\n            for (const hotkey in HOTKEYS) {\n              if (isHotkey(hotkey, event as any)) {\n                event.preventDefault()\n                const mark = HOTKEYS[hotkey]\n                toggleMark(editor, mark)\n              }\n            }\n          }}\n        />\n      </div>\n\n    </Slate>\n  )\n}\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\n      ),\n    split: true,\n  })\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  }\n  Transforms.setNodes(editor, newProperties)\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  })\n\n  return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\n\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst BlockButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className='btn btn-link'\n      active={isBlockActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleBlock(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst MarkButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className=\"btn btn-link\"\n      active={isMarkActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleMark(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst initialValue: Descendant[] = [\n  {\n    type: 'paragraph',\n    children: [\n      { text: '' },\n\n\n    ],\n  },\n\n]\n\n\nconst serialize = (node) => {\n  if (Text.isText(node)) {\n    let string = escapeHtml(node.text)\n    if (node.bold) {\n      string = `<strong>${string}</strong>`\n    }\n    if (node.italic) {\n      string = `<em>${string}</em>`\n    }\n    return string\n  }\n\n  const children = node.children.map(n => serialize(n)).join('')\n\n  switch (node.type) {\n    case 'quote':\n      return `<blockquote><p>${children}</p></blockquote>`\n    case 'paragraph':\n      return `<p>${children}</p>`\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`\n    case 'list-item':\n      return `<li>${children}</li>`\n    case 'numbered-list':\n      return `<ol>${children}</ol>`\n\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\n    default:\n      return children\n  }\n}\n\nconst deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  }\n\n  let children = Array.from(el.childNodes).map(deserialize)\n\n  if (children.length === 0) {\n    children = [{ text: '' }]\n  }\n\n  switch (el.nodeName) {\n    case 'BODY':\n      return jsx('fragment', {}, children)\n    case 'BR':\n      return '\\n'\n    case 'BLOCKQUOTE':\n      return jsx('element', { type: 'quote' }, children)\n    case 'P':\n      return jsx('element', { type: 'paragraph' }, children)\n    case 'UL':\n      return jsx('element', { type: 'bulleted-list' }, children)\n    case 'OL':\n      return jsx('element', { type: 'numbered-list' }, children)\n    case 'LI':\n      return jsx('element', { type: 'list-item' }, children)\n    case 'A':\n      return jsx(\n        'element',\n        { type: 'link', url: el.getAttribute('href') },\n        children\n      )\n    default:\n      return el.textContent\n  }\n}\n\nexport default RTEditor","export default __webpack_public_path__ + \"static/media/profile-avatar.8170c656.png\";","export const UploadProgress = ({ progress, changeUpload }) => {\n  return (\n    <span className=\"file-uploader--progressBarWrapper--2lCJU input-group\">\n      <div className=\"file-uploader--progressBar--3WNS9 progress\">\n        <div\n          role=\"progressbar\"\n          className=\"progress-bar\"\n          aria-valuenow={100}\n          aria-valuemin={0}\n          aria-valuemax={100}\n          style={{ width: `${progress}% `}}\n        >\n          {`${progress}%`}\n        </div>\n      </div>\n      <span className=\"input-group-btn\">\n        <button type=\"button\"\n        onClick={changeUpload}\n         className=\"btn btn-default\">\n          Change\n        </button>\n      </span>\n    </span>\n  );\n};\n","import { RTEditor } from 'portal/scenes/Instructor/Editor'\nimport { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { selectInstructor } from 'state/instructor/instructorSplice';\nimport type { Instructor, InstructorResponse } from 'services/courses';\nimport { useAppSelector } from 'store/hooks';\nimport { useAlert } from 'react-alert';\nimport { useFetchInstructorInfoQuery, useEditInstructorInfoMutation } from 'services/courses';\nexport const PersonalInfo = ({ active, next }) => {\n  const [editInstructorInfo] = useEditInstructorInfoMutation()\n  const { data: profileQuery, isLoading } = useFetchInstructorInfoQuery()\n  const selectedProfile = useAppSelector(selectInstructor)\n  const alert = useAlert()\n  const [profile, setProfile] = useState<InstructorResponse>(selectedProfile)\n\n  useEffect(() => {\n    setProfile(selectedProfile)\n  }, [selectedProfile])\n\n  if (isLoading || !profile) {\n    return (\n      <div className=\"ud-app-loader\">\n        <div className=\"sub-header--wrapper--3Vunm\">\n          <div className=\"sub-header--main-content--22it3\">\n            <h2\n              data-purpose=\"page-title\"\n              className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n            >\n              Course landing page\n            </h2>\n          </div>\n        </div>\n        <div className=\"main-content--wrap_component--2TEkz\">\n          <form>\n            <div className=\"form-group\">\n              <div className={classNames(\"cfi-medium\", \"cfi\", \"cfi-circle-loader\",\n                )}>\n\n              </div>\n            </div>\n          </form>\n\n        </div>\n\n\n      </div>\n    );\n  }\n\n  return (\n    <form className={classNames({\n      hidden: !active\n    })}\n    onSubmit= {event => {\n      event.preventDefault();\n      if(profile) {\n        editInstructorInfo({\n          email: profile.email,\n          first_name: profile.first_name,\n          last_name: profile.last_name,\n          headline: profile.headline,\n          description: profile.description\n        }).then((res: { data: InstructorResponse}) => {\n           alert.show(\"Your profile changes have been saved successfully\")\n           next()\n        })\n      }\n\n    }}\n    >\n      <div className=\"manage-fields-wrapper sectioned\">\n\n        <div\n          className=\"form-field-container  labeled form-section\"\n          id=\"form-item-name\"\n        >\n\n          <label className=\"control-label \" htmlFor=\"id_name\">\n            Basics:\n          </label>\n          <div id=\"tooltip-reference-name\" className=\"tooltip-reference pos-r \">\n\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              value={profile.first_name || profile.user && profile.user.first_name ||profile.user && profile.user.username}\n              className=\"textinput textInput form-control\"\n              onChange={(event) => {\n                setProfile({\n                  ...profile,\n                  first_name:event.target.value\n                })\n              }}\n              required\n              id=\"id_first_name\"\n              placeholder=\"First Name\"\n            />\n          </div>\n        </div>\n        <div\n          className=\"form-field-container  non-labeled form-section\"\n          id=\"form-item-surname\"\n        >\n\n          <div\n            id=\"tooltip-reference-surname\"\n            className=\"tooltip-reference pos-r \"\n          >\n\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              value={profile.last_name ||profile.user && profile.user.last_name ||profile.user && profile.user.username}\n              onChange={(event) => {\n                setProfile({\n                  ...profile,\n                  last_name:event.target.value\n                })\n              }}\n              className=\"textinput textInput form-control\"\n              required\n              id=\"last_name\"\n              placeholder=\"Last Name\"\n            />\n          </div>\n        </div>\n        <div\n          className=\"form-field-container  non-labeled form-section\"\n          id=\"form-item-job_title\"\n        >\n\n          <div\n            id=\"tooltip-reference-job_title\"\n            className=\"tooltip-reference pos-r \"\n          >\n\n            <div\n              className=\"ud-app-loader ud-component--form-fields--form-control-with-counter ud-app-loaded\"\n              data-module-id=\"form-fields\"\n            >\n              <div className=\"form-control-counter-container\">\n                <input\n                  name=\"job_title\"\n                  maxLength={60}\n                  value={profile.headline || ''}\n                  onChange={(event) => {\n                    setProfile({\n                      ...profile,\n                      headline:event.target.value\n                    })\n                  }}\n                  placeholder=\"Headline\"\n                  type=\"text\"\n                  id=\"id_job_title\"\n                  className=\"textinput textInput form-control form-control\"\n\n                />\n                <div\n                  className=\"form-control-counter\"\n                  data-purpose=\"form-control-counter\"\n                >\n                  60\n                </div>\n              </div>\n            </div>\n            <div className=\"help-block\">\n              Add a professional headline like, \"Engineer at Codefluent\" or\n              \"Architect.\"\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"form-field-container  non-labeled form-section\"\n          id=\"form-item-email\"\n        >\n\n          <div\n            id=\"tooltip-reference-email\"\n            className=\"tooltip-reference pos-r \"\n          >\n\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={(event) => {\n                setProfile({\n                  ...profile,\n                  email:event.target.value\n                })\n              }}\n              value={profile.email || profile.user && profile.user.email}\n              className=\"emailinput form-control\"\n              required\n              id=\"id_email\"\n              placeholder=\"Email\"\n            />\n          </div>\n        </div>\n        <div\n          className=\"form-field-container  labeled form-section\"\n          id=\"form-item-description\"\n        >\n\n          <label className=\"control-label \" htmlFor=\"id_description\">\n            Biography:\n          </label>\n          <div\n            id=\"tooltip-reference-description\"\n            className=\"tooltip-reference pos-r \"\n          >\n\n            <div\n              className=\"ud-app-loader ud-component--form-fields--rich-text-editor ud-app-loaded\"\n              data-module-id=\"form-fields\"\n            >\n              <div >\n                <RTEditor editorValue={profile.description} handleChange={(value) => {\n                  setProfile({\n                    ...profile,\n                    description: value\n                  })\n                }} />\n\n              </div>\n            </div>\n            <div className=\"help-block\">\n              Your instructor biography should emphasize your experience and\n              expertise. It should have at least 50 characters and may not\n              contain links or coupon codes.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-actions\">\n\n        <div className=\"submit-row\">\n\n          <input\n            type=\"submit\"\n            name=\"submit\"\n            defaultValue=\"Save and Continue\"\n            className=\"btn btn-primary \"\n            id=\"submit-id-submit\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\nexport default PersonalInfo","export default __webpack_public_path__ + \"static/media/paypal.45578438.svg\";","export default __webpack_public_path__ + \"static/media/payoneer.eaa67ff7.svg\";","import classNames from \"classnames\";\nimport paypal from 'static/images/brand/paypal.svg'\nimport payoneer from 'static/images/brand/payoneer.svg'\nexport const PayoutMethod = ({ active }) => {\n  return (\n    <form\n      className={classNames({\n        hidden: !active,\n      })}\n    >\n     \n      <div id=\"premium-instructor-item-wrapper\" className=\"item-wrapper\">\n        \n        <div className=\"item-section\">\n          \n          <div className=\"list-group-item list-group-item-info\">\n            \n            <div className=\"df\">\n              \n              <i className=\"ud-icon-info mr10\" />\n              <div>\n                Choose your payout method below\n                <a\n                  href=\"#\"\n                  target=\"_blank\"\n                  rel=\" noopener noreferrer\"\n                  pa-marked={1}\n                >\n                  (learn more)\n                </a>\n                . <br />\n                <br /> Connecting to a new payout method may take a few days.\n                You won't receive payments to the new linked account until its\n                status is approved.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"item-section\">\n          \n          <div className=\"list-group-item\">\n            \n            <div className=\"fx-c fx-dc-xs\">\n              \n              <div className=\"fx\">\n                \n                <div className=\"flex-container\">\n                  \n                  <div className=\"ach-heading\">Direct Deposit (ACH) </div>\n                  <div className=\"green-badge uppercase\">Recommended</div>\n                </div>\n                <span className=\"item-section__status initial\">\n                  Avoid fees by using Direct Deposit\n                </span>\n              </div>\n              <div className=\"fx-dc-xs\">\n                \n                <button\n                  type=\"button\"\n                  className=\"item-section__button btn btn-default btn-sm ud-component--user-manage--jpmorgan-manage\"\n                  pa-marked={1}\n                >\n                  Connect\n                </button>\n              </div>\n            </div>\n            <div className=\"df fx-dc-xs\">\n             \n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-link collapsible-button\" pa-marked={1}>\n          \n          <span>Hide additional payout methods</span>\n          <i className=\"cfi cfi-chevron-up\" />\n        </button>\n        <div className=\"collapsible-area\" style={{ display: \"block\" }}>\n          \n          <div className=\"item-section\">\n            \n            <div className=\"list-group-item\">\n              \n              <div className=\"df fx-dc-xs\">\n                \n                <div className=\"fx\">\n                  \n                  <img\n                    src={paypal}\n                    alt=\"PayPal\"\n                    width={124}\n                    height={33}\n                    className=\"item-section__paypal-logo\"\n                  />\n                </div>\n                <div className=\"fx-dc-xs\">\n                  \n                  <span className=\"item-section__status initial\">\n                    Not Connected\n                  </span>\n                  <span\n                    className=\"item-section__button ud-app-loader ud-component--paypal-login--app ud-app-loaded\"\n              \n                  >\n                    <span id=\"lippButton\">\n                      <a\n                        id=\"LIwPP70234390\"\n                        className=\"LIwPP_V2 nuetral_V2 pillClass\"\n                        text=\"Log in with PayPal\"\n                        href=\"javascript:;\"\n                        type=\"button\"\n                        pa-marked={1}\n                      >\n                        <svg\n                          className=\"PPTM\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          version=\"1.1\"\n                          width=\"25px\"\n                          height=\"25px\"\n                          viewBox=\"0 0 18 18\"\n                          focusable=\"false\"\n                        >\n                          <path\n                            id=\"Fill-8\"\n                            className=\"PPTM-btm\"\n                            fill=\"#009cde\"\n                            d=\"M13.6023044,4.67342223 C13.8196336,3.28812419 13.6008532,2.34542498 12.8514484,1.49160831 C12.0263956,0.551629995 10.5359309,0.148937623 8.62894883,0.148937623 L3.09322219,0.148937623 C2.70355347,0.148937623 2.37175455,0.43245482 2.3109822,0.817370681 L0.00598653054,15.4327457 C-0.0395473836,15.7211605 0.183405526,15.9818221 0.475294243,15.9818221 L3.89269613,15.9818221 L3.65686311,17.4774071 C3.61713431,17.7297247 3.81196867,17.957917 4.06739398,17.957917 L6.94782221,17.957917 C7.28887304,17.957917 7.57912907,17.7097715 7.63228221,17.3731061 L7.66058217,17.226722 L8.20317953,13.7860604 L8.23819166,13.5959605 C8.29134479,13.2591138 8.58160082,13.0111496 8.92247024,13.0111496 L9.35331903,13.0111496 C12.1439493,13.0111496 14.329033,11.8774436 14.9674148,8.59894727 C15.2342689,7.22906764 15.0963973,6.08556642 14.3908938,5.28163282 C14.1773742,5.03856625 13.9119713,4.83740146 13.6023044,4.67342223\"\n                          />\n                          <path\n                            id=\"Fill-9\"\n                            className=\"PPTM-top\"\n                            fill=\"#012169\"\n                            d=\"M13.6023044,4.67384766 C13.8196336,3.28841937 13.6008532,2.34563151 12.8514484,1.49173456 C12.0263956,0.55166786 10.5359309,0.148937623 8.62894883,0.148937623 L3.09322219,0.148937623 C2.70355347,0.148937623 2.37175455,0.432481479 2.3109822,0.817433533 L0.00598653054,15.4341828 C-0.0395473836,15.7226247 0.183405526,15.9833109 0.475294243,15.9833109 L3.89269613,15.9833109 L4.75112833,10.5399219 L4.72446105,10.7106288 C4.78523341,10.3256767 5.11431118,10.0419515 5.50397989,10.0419515 L7.12832518,10.0419515 C10.3182389,10.0419515 12.815892,8.7459583 13.5457045,4.99802736 C13.5672923,4.88718584 13.5857961,4.7796097 13.6023044,4.67384766\"\n                            fillOpacity=\"0.699999988079071\"\n                          />\n                          <path\n                            id=\"Fill-10\"\n                            className=\"PPTM-top\"\n                            fill=\"#003087\"\n                            d=\"M5.67323544,4.69235148 C5.70988026,4.46069089 5.85845507,4.27111742 6.05855031,4.17515152 C6.14961814,4.13161312 6.25120775,4.10730418 6.35769543,4.10730418 L10.6968416,4.10730418 C11.2109576,4.10730418 11.6902429,4.14104644 12.128348,4.21161494 C12.2537024,4.23175145 12.3754285,4.25497193 12.4938892,4.28127638 C12.6121686,4.30739943 12.7271825,4.33678785 12.8383869,4.36944165 C12.8940797,4.38558714 12.9486841,4.40263969 13.0025629,4.42059928 C13.2177152,4.49189341 13.4179919,4.57624907 13.6023044,4.67384766 C13.8196336,3.28841937 13.6008532,2.34563151 12.8514484,1.49173456 C12.0263956,0.55166786 10.5359309,0.148937623 8.62894883,0.148937623 L3.09322219,0.148937623 C2.70355347,0.148937623 2.37175455,0.432481479 2.3109822,0.817433533 L0.00598653054,15.4341828 C-0.0395473836,15.7226247 0.183405526,15.9833109 0.475294243,15.9833109 L3.89269613,15.9833109 L5.67323544,4.69235148\"\n                          />\n                        </svg>\n                        <b className aria-label=\"Log in with PayPal\">\n                          Log in with PayPal\n                        </b>\n                      </a>\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"item-section\">\n            \n            <div className=\"list-group-item\">\n              \n              <div className=\"df fx-dc-xs\">\n                \n                <div className=\"fx\">\n                  \n                  <img\n                    src={payoneer}\n                    alt=\"Payoneer\"\n                    width={300}\n                    height={105}\n                    className=\"item-section__payoneer-logo\"\n                  />\n                  <span>Prepaid MasterCard, Local Bank Transfer</span>\n                </div>\n                <div className=\"fx-dc-xs\">\n                  \n                  <span className=\"item-section__status initial\">\n                    Not Connected\n                  </span>\n                  <a\n                    href=\"#\"\n                    className=\"item-section__button btn btn-default btn-sm\"\n                    pa-marked={1}\n                  >\n                    Connect\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"item-section pt20\">\n          \n          <a\n            href=\"#\"\n            target=\"_blank\"\n            rel=\" noopener noreferrer\"\n            pa-marked={1}\n          >\n            Manage Promotional Agreements\n            <i className=\"cfi cfi-external-link\" />\n          </a>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PayoutMethod;\n","import classNames from \"classnames\";\nimport * as client from 'filestack-js'\nimport { useEffect, useState } from \"react\";\nimport avatar from 'static/images/avatar/profile-avatar.png'\nimport { selectInstructor } from 'state/instructor/instructorSplice';\nimport type { Instructor, InstructorResponse } from 'services/courses';\nimport { useAppSelector } from 'store/hooks';\nimport { useAlert } from 'react-alert';\nimport { UploadProgress } from \"../../Courses/Landing/UploadProgress\";\nimport { useFetchInstructorInfoQuery, useEditInstructorInfoMutation } from 'services/courses';\n\nconst filestack = client.Filestack(process.env.REACT_APP_FILESTACK_APP_KEY, {})\nexport const Profile = ({ active, next }) => {\n  const [progress, setProgress] = useState(0)\n  const [upLoading, setUpLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [status, setStatus] = useState('Progress')\n  const [editInstructorInfo] = useEditInstructorInfoMutation()\n  const { data: profileQuery, isLoading } = useFetchInstructorInfoQuery()\n  const selectedProfile = useAppSelector(selectInstructor)\n  const alert = useAlert()\n  const [profile, setProfile] = useState<InstructorResponse>(selectedProfile)\n\n\n  const onProgress = eve => {\n    console.log(eve.totalPercent)\n    setProgress(eve.totalPercent)\n\n  }\n\n  const onUpload = async (files, onProgress) => {\n    setError(null)\n    setStatus('Progress')\n    setUpLoading(true)\n\n    filestack.upload(files, { onProgress })\n      .then(results => {\n        setProfile({\n          ...profile,\n          avatar: results.url\n        });\n        setUpLoading(false)\n      }).catch(err => {\n        setStatus('Failed')\n        console.log(err)\n        setError(err.status)\n      })\n  }\n\n  useEffect(() => {\n    setProfile(selectedProfile)\n  }, [selectedProfile])\n\n\n  if (isLoading || !profile) {\n    return (\n      <div className=\"ud-app-loader\">\n        <div className=\"sub-header--wrapper--3Vunm\">\n          <div className=\"sub-header--main-content--22it3\">\n            <h2\n              data-purpose=\"page-title\"\n              className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n            >\n              Course landing page\n            </h2>\n          </div>\n        </div>\n        <div className=\"main-content--wrap_component--2TEkz\">\n          <form>\n            <div className=\"form-group\">\n              <div className={classNames(\"cfi-medium\", \"cfi\", \"cfi-circle-loader\",\n              )}>\n\n              </div>\n            </div>\n          </form>\n\n        </div>\n\n\n      </div>\n    );\n  }\n\n  return (\n    <form\n      className={classNames({\n        hidden: !active\n      })}\n      onSubmit={event => {\n        event.preventDefault()\n        editInstructorInfo({\n          ...profile\n        }).then((res: { data: InstructorResponse }) => {\n          if (res.data && res.data.avatar) {\n\n            alert.show('Your profile picture has been successfully saved.')\n            next()\n          }\n        })\n      }}\n    >\n      <div className=\"manage-fields-wrapper\">\n\n        <div\n          className=\"form-field-container  labeled form-section\"\n          id=\"form-item-image_file\"\n        >\n\n          <label className=\"control-label \" htmlFor=\"id_image_file\">\n            Image preview\n          </label>\n          <div\n            id=\"tooltip-reference-image_file\"\n            className=\"tooltip-reference pos-r \"\n          >\n\n            <div>\n\n              <div\n                className=\"ud-app-loader ud-component--versioned-image-upload-with-preview--app mt20 mb30 ud-app-loaded\"\n\n              >\n                <div >\n                  <div className=\"image-upload-preview-with-crop--previewWrapper--1eYsy\">\n                    <div className=\"image-upload-preview-with-crop--imageWrapper--fNINE\">\n                      <img\n                        data-purpose=\"image-preview\"\n                        alt=\"Course image\"\n                        style={{ width: '200px', height: '200px' }}\n                        src={profile && profile.avatar ? profile.avatar : avatar}\n                      />\n                      {(upLoading && progress < 100) && <div className=\"uploading-backdrop--wrapperLoader--3qlfG\">\n                        <span\n                          aria-label=\"Loading\"\n                          className=\"uploading-backdrop--loader--23uMA cfi-medium cfi cfi-circle-loader\"\n                        />\n                      </div>}\n                    </div>\n                    <div className=\"image-upload-preview-with-crop--tips--17Lj2\">\n                      Your image should be at minimum 200x200 pixels and maximum\n                      6000x6000 pixels.\n                    </div>\n                  </div>\n                  <div className=\"image-upload-preview-with-crop--form-element--2Nnsf\">\n                    <div>\n                      <label>Add / Change Image:</label>\n                    </div>\n                    <div\n                      className=\"file-uploader--file-selector--SGCns\"\n\n                    >\n                      {upLoading ? <UploadProgress progress={progress} changeUpload={() => setUpLoading(!upLoading)} /> : <>\n                        <input\n                          accept=\".gif,.jpg,.jpeg,.png\"\n                          type=\"file\"\n                          onChange={event => onUpload(event.target.files[0], onProgress)}\n                          id=\"FileUploaderS3-0--1\"\n                          className=\"sr-only\"\n                        />\n                        <label htmlFor=\"FileUploaderS3-0--1\">\n                          <span className=\"input-group\">\n                            <div className=\"form-control file-uploader--fake-file-input--1_ohV\">\n                              No file selected\n                            </div>\n                            <span className=\"input-group-btn\">\n                              <div data-type=\"button\" className=\"btn btn-default\">\n                                Upload image\n                              </div>\n                            </span>\n                          </span>\n                        </label>\n                      </>}\n                    </div>\n                    <input type=\"hidden\" name=\"image_file\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-actions\">\n\n        <div className=\"submit-row\">\n\n          <input\n            type=\"submit\"\n            name=\"submit\"\n            defaultValue=\"Save and Continue\"\n            className=\"btn btn-primary \"\n            id=\"submit-id-submit\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Profile\n","import { PersonalInfo } from \"./PersonalInfo\";\nimport { PayoutMethod } from \"./PayoutMethod\";\nimport { Profile } from \"./Profile\";\nimport \"./userinfo.scss\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nexport const PayoutSettings = () => {\n  const [active, setActive] = useState(\"personal\");\n  return (\n    <div className=\"responsive_container ud-app-loader ud-app-loaded\">\n      <div id=\"edit-template\">\n        <div id=\"main-section\">\n          <h2>\n            <span className=\"font-heading-serif-xxl\">\n              Codefluent Instructor Application\n            </span>\n          </h2>\n          <div className=\"form-wrapper\">\n            <div className=\"mt30 mb60 fx-c\">\n              <ul className=\"nav nav-tabs nav-tabs--wizard df\">\n                <li\n                  className={classNames({\n                    active: active == \"personal\",\n                  })}\n                >\n                  <a className=\"no-hover\" onClick={() => setActive(\"personal\")}>\n                    Personal Information\n                  </a>\n                </li>\n                <li\n                  className={classNames({\n                    active: active == \"profile\",\n                  })}\n                >\n                  <a className=\"no-hover\" onClick={() => setActive(\"profile\")}>\n                    Profile Picture\n                  </a>\n                </li>\n\n                <li\n                  className={classNames({\n                    active: active == \"payout\",\n                  })}\n                >\n                  <a className=\"no-hover\" onClick={() => setActive(\"payout\")}>\n                    Payout Method\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <PersonalInfo\n              active={active == \"personal\"}\n              next={() => {\n                setActive(\"profile\");\n              }}\n            />\n            <Profile\n              active={active == \"profile\"}\n              next={() => {\n                setActive(\"payout\");\n              }}\n            />\n            <PayoutMethod active={active == \"payout\"} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PayoutSettings;\n"],"sourceRoot":""}