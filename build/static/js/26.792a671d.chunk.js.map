{"version":3,"sources":["portal/scenes/Instructor/Editor/components.tsx","portal/scenes/Instructor/Editor/index.tsx","static/images/brand/logo/codefluent.svg","portal/scenes/Instructor/Projects/routes.js","portal/scenes/Instructor/Projects/Category.tsx","portal/scenes/Instructor/Projects/Title.tsx","portal/scenes/Instructor/Projects/Description.tsx","portal/scenes/Instructor/Projects/createProject.tsx","portal/scenes/Instructor/Projects/getRouteComponent.tsx"],"names":["Button","React","forwardRef","ref","className","props","active","reversed","cx","Icon","Menu","Toolbar","HOTKEYS","LIST_TYPES","RTEditor","handleChange","editorValue","html","DOMParser","parseFromString","initEditValue","deserialize","body","initialValue","useState","value","setValue","renderElement","useCallback","renderLeaf","editor","useMemo","withHistory","withReact","createEditor","onChange","result","map","serialize","join","format","placeholder","spellCheck","autoFocus","onKeyDown","event","hotkey","isHotkey","preventDefault","toggleMark","isMarkActive","Editor","removeMark","addMark","isBlockActive","nodes","match","n","isEditor","SlateElement","isElement","type","marks","Element","attributes","children","element","Leaf","leaf","bold","code","italic","underline","BlockButton","useSlate","onMouseDown","isActive","isList","includes","Transforms","unwrapNodes","split","newProperties","setNodes","block","wrapNodes","toggleBlock","MarkButton","text","node","Text","isText","string","escapeHtml","url","el","nodeType","textContent","Array","from","childNodes","length","nodeName","jsx","getAttribute","TITLE","CATEGORY","DESCRIPTION","ProjectCategory","project","updateProject","categories","useFetchProjectCategoriesQuery","data","data-purpose","id","category","target","Number","cat","title","ProjectTitle","htmlFor","maxLength","ProjectDescription","description","routesMeta","scene","pageName","undefined","CreateProject","locationType","setLocationType","useCreateProjectMutation","createProject","width","setWidth","step","setStep","setProjectId","setProject","headings","useHistory","push","handleCreateProject","projectRequest","a","unwrap","window","location","replace","console","log","Scene","route","Error","getRouteComponent","alt","height","src","logo","onClick","style","v","heading","classNames","disabled","tabIndex"],"mappings":"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","file":"static/js/26.792a671d.chunk.js","sourcesContent":["import React, { Ref, PropsWithChildren } from 'react'\nimport ReactDOM from 'react-dom'\nimport { cx, css } from '@emotion/css'\n\ninterface BaseProps {\n  className: string\n  [key: string]: unknown\n}\ntype OrNull<T> = T | null\n\nexport const Button = React.forwardRef(\n  (\n    {\n      className,\n      active,\n      reversed,\n      ...props\n    }: PropsWithChildren<\n      {\n        active: boolean\n        reversed: boolean\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const EditorValue = React.forwardRef(\n  (\n    {\n      className,\n      value,\n      ...props\n    }: PropsWithChildren<\n      {\n        value: any\n      } & BaseProps\n    >,\n    ref: Ref<OrNull<null>>\n  ) => {\n    const textLines = value.document.nodes\n      .map(node => node.text)\n      .toArray()\n      .join('\\n')\n    return (\n      <div\n        ref={ref}\n        {...props}\n        className={cx(\n          className,\n          css`\n            margin: 30px -20px 0;\n          `\n        )}\n      >\n        <div\n          className={css`\n            font-size: 14px;\n            padding: 5px 20px;\n            color: #404040;\n            border-top: 2px solid #eeeeee;\n            background: #f8f8f8;\n          `}\n        >\n          Slate's value as text\n        </div>\n        <div\n          className={css`\n            color: #404040;\n            font: 12px monospace;\n            white-space: pre-wrap;\n            padding: 10px 20px;\n            div {\n              margin: 0 0 0.5em;\n            }\n          `}\n        >\n          {textLines}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport const Icon = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLSpanElement>>\n  ) => (\n    <span\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Instruction = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n       \n      )}\n    />\n  )\n)\n\nexport const Menu = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <div\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)\n\nexport const Portal = ({ children }) => {\n  return typeof document === 'object'\n    ? ReactDOM.createPortal(children, document.body)\n    : null\n}\n\nexport const Toolbar = React.forwardRef(\n  (\n    { className, ...props }: PropsWithChildren<BaseProps>,\n    ref: Ref<OrNull<HTMLDivElement>>\n  ) => (\n    <Menu\n      {...props}\n      ref={ref}\n      className={cx(\n        className,\n        \n      )}\n    />\n  )\n)","import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\nimport {\n  Editor,\n  Text,\n  Transforms,\n  createEditor,\n  Descendant,\n  Node,\n  Element as SlateElement,\n} from 'slate'\nimport { withHistory } from 'slate-history'\nimport escapeHtml from 'escape-html'\nimport { Button, Icon, Toolbar } from './components'\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code',\n}\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list', 'list-item']\n\nexport const RTEditor = ({ handleChange, editorValue }) => {\n  const html = editorValue ? new DOMParser().parseFromString(editorValue, 'text/html') : ''\n  const initEditValue = html ? deserialize(html.body) : initialValue\n  const [value, setValue] = useState<Descendant[]>(initEditValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  \n  return (\n    <Slate editor={editor} value={value} onChange={value => {\n      setValue(value)\n      const result = value.map(serialize).join('\\n')\n      handleChange(result)\n    }}>\n      <Toolbar className=\"rt-menu-bar-container\">\n        <div className=\"rt-menu-bar fx-lt\">\n          <div className='btn-group'>\n            <MarkButton className=\"cfi cfi-bold\" format=\"bold\" />\n            <MarkButton className=\"cfi cfi-italic\" format=\"italic\" />\n            <BlockButton format=\"numbered-list\" className=\"cfi cfi-list-ol\" />\n            <BlockButton format=\"bulleted-list\" className=\"cfi cfi-list-ul\" />\n          </div>\n          <div className=\"fx\"></div>\n          <div className=\"btn-group\"></div>\n        </div>\n\n      </Toolbar>\n      <div className=\"rt-editor rt-editor--empty rt-editor--wysiwyg-mode \">\n        <Editable\n\n          className=\"ProseMirror\"\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Description goes here\"\n          spellCheck\n          autoFocus\n          onKeyDown={event => {\n            for (const hotkey in HOTKEYS) {\n              if (isHotkey(hotkey, event as any)) {\n                event.preventDefault()\n                const mark = HOTKEYS[hotkey]\n                toggleMark(editor, mark)\n              }\n            }\n          }}\n        />\n      </div>\n\n    </Slate>\n  )\n}\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\n      ),\n    split: true,\n  })\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  }\n  Transforms.setNodes(editor, newProperties)\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  })\n\n  return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\n\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst BlockButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className='btn btn-link'\n      active={isBlockActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleBlock(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst MarkButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className=\"btn btn-link\"\n      active={isMarkActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleMark(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst initialValue: Descendant[] = [\n  {\n    type: 'paragraph',\n    children: [\n      { text: '' },\n\n\n    ],\n  },\n\n]\n\n\nconst serialize = (node) => {\n  if (Text.isText(node)) {\n    let string = escapeHtml(node.text)\n    if (node.bold) {\n      string = `<strong>${string}</strong>`\n    }\n    if (node.italic) {\n      string = `<em>${string}</em>`\n    }\n    return string\n  }\n\n  const children = node.children.map(n => serialize(n)).join('')\n\n  switch (node.type) {\n    case 'quote':\n      return `<blockquote><p>${children}</p></blockquote>`\n    case 'paragraph':\n      return `<p>${children}</p>`\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`\n    case 'list-item':\n      return `<li>${children}</li>`\n    case 'numbered-list':\n      return `<ol>${children}</ol>`\n\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\n    default:\n      return children\n  }\n}\n\nconst deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  }\n\n  let children = Array.from(el.childNodes).map(deserialize)\n\n  if (children.length === 0) {\n    children = [{ text: '' }]\n  }\n\n  switch (el.nodeName) {\n    case 'BODY':\n      return jsx('fragment', {}, children)\n    case 'BR':\n      return '\\n'\n    case 'BLOCKQUOTE':\n      return jsx('element', { type: 'quote' }, children)\n    case 'P':\n      return jsx('element', { type: 'paragraph' }, children)\n    case 'UL':\n      return jsx('element', { type: 'bulleted-list' }, children)\n    case 'OL':\n      return jsx('element', { type: 'numbered-list' }, children)\n    case 'LI':\n      return jsx('element', { type: 'list-item' }, children)\n    case 'A':\n      return jsx(\n        'element',\n        { type: 'link', url: el.getAttribute('href') },\n        children\n      )\n    default:\n      return el.textContent\n  }\n}\n\nexport default RTEditor","export default __webpack_public_path__ + \"static/media/codefluent.a0011642.svg\";","export const CURRICULUM = 'curriculum';\nexport const COURSE_DESCRIPTION = 'course_description';\nexport const COVER_MEDIA = 'cover_media';\nexport const SUBMIT_REVIEW = 'submit_review';\nexport const PRICING = 'pricing';\nexport const TARGET = 'target';\nexport const TITLE = 'title';\nexport const CATEGORY = 'category';\nexport const CHOICE ='choice';\nexport const DESCRIPTION = 'description'","import \"./course.scss\";\nimport { useFetchProjectCategoriesQuery } from \"services/projects\";\nimport { ProjectEntityResponse } from \"services/projects\";\nimport React from \"react\";\n\ntype CategoryProps = {\n  handleChange: (value: string) => void,\n  project: ProjectEntityResponse,\n  updateProject: (course: ProjectEntityResponse) => void,\n};\nexport const ProjectCategory: React.FC<CategoryProps> = ({\n  handleChange,\n  project,\n  updateProject,\n}) => {\n  const { data: categories } = useFetchProjectCategoriesQuery();\n  if (!categories) return null;\n  return (\n    <div className=\"full-page-takeover--content-wrapper--3Vzz1\">\n      <div className=\"container full-page-takeover--content--1ynJq\">\n        <div className=\"text-center create-course-flow--takeoverContent--1ds0W\">\n          <div>\n            <div\n              className=\"create-course-flow--headerText--1hV-a\"\n              data-purpose=\"header-text\"\n            >\n              Provide the category for the project you will share\n            </div>\n            <h2 data-purpose=\"subhead-text\">\n              <small>\n                If you're not sure about the right category, you can change it\n                later.\n              </small>\n            </h2>\n            <form className=\"create-course-flow--responseForm--DLkKF\">\n              <div className=\"create-course-flow--formOptions--15Rpx form-group\">\n                <div className=\"create-course-flow--optionsContainer--3TNVh\">\n                  <div className=\"create-course-flow--formField--m9MGJ\">\n                    <div className=\"form-control-single-select-container\">\n                      <select\n                        id=\"courseCategory\"\n                        className=\"form-control\"\n                        value={project ? project.category : -1}\n                        onChange={(event) => {\n                          handleChange(event.target.value);\n                          updateProject({\n                            ...project,\n                            category: Number(event.target.value),\n                          });\n                        }}\n                      >\n                        <option value=\"default\">Choose a category</option>\n                        {categories &&\n                          categories.map((cat) => (\n                            <option value={cat.id} key={cat.id}>\n                              {cat.title}\n                            </option>\n                          ))}\n\n                        <option value={-1}>I don't know yet</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCategory;\n","import React, { useState } from \"react\";\nimport { CourseRequest } from \"services/courses\";\nimport { ProjectEntityResponse } from 'services/projects'\ntype TitleProps = {\n  handleChange: (value: string) => void,\n  project: ProjectEntityResponse,\n  updateProject: (project: ProjectEntityResponse) => void,\n};\nexport const ProjectTitle: React.FC<TitleProps> = ({\n  handleChange,\n  project,\n  updateProject,\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"full-page-takeover--content-wrapper--3Vzz1\">\n      <div className=\"container full-page-takeover--content--1ynJq\">\n        <div className=\"text-center create-course-flow--takeoverContent--1ds0W\">\n          <div>\n            <div\n              className=\"create-course-flow--headerText--1hV-a\"\n              data-purpose=\"header-text\"\n            >\n              Provide a working title?\n            </div>\n            <h2 data-purpose=\"subhead-text\">\n              <small>\n                You can think up any title for now. You can change it later.\n              </small>\n            </h2>\n            <form className=\"create-course-flow--responseForm--DLkKF\">\n              <div className=\"create-course-flow--formOptions--15Rpx form-group\">\n                <div className=\"create-course-flow--optionsContainer--3TNVh\">\n                  <div className=\"create-course-flow--formField--m9MGJ\">\n                    <label\n                      htmlFor=\"input-course-title\"\n                      className=\"sr-only control-label\"\n                    >\n                      Project title\n                    </label>\n                    <div className=\"form-control-counter-container\">\n                      <input\n                        placeholder=\"e.g. Learn Photoshop CS6 from Scratch\"\n                        maxLength={60}\n                        value={project ? project.title : \"\"}\n                        onChange={(event) => {\n                          setValue(event.target.value);\n                          handleChange(event.target.value);\n                          updateProject({\n                            ...project,\n                            title: event.target.value,\n                          });\n                        }}\n                        id=\"input-course-title\"\n                        className=\"form-control\"\n                      />\n                      <div\n                        className=\"form-control-counter\"\n                        data-purpose=\"form-control-counter\"\n                      >\n                        60\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectTitle;\n","import React, { useState } from \"react\";\nimport RTEditor from \"../Editor\";\n\nimport { ProjectEntityResponse} from 'services/projects'\ntype DescriptionProps = {\n  handleChange: (value: string) => void,\n  project: ProjectEntityResponse,\n  updateProject: (project: ProjectEntityResponse) => void,\n};\nexport const ProjectDescription: React.FC<DescriptionProps> = ({\n  handleChange,\n  project,\n  updateProject,\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"full-page-takeover--content-wrapper--3Vzz1\">\n      <div className=\"container full-page-takeover--content--1ynJq\">\n        <div className=\"text-center create-course-flow--takeoverContent--1ds0W\">\n          <div>\n            <div\n              className=\"create-course-flow--headerText--1hV-a\"\n              data-purpose=\"header-text\"\n            >\n              Tell users what your course is about.\n            </div>\n            <h2 data-purpose=\"subhead-text\">\n              <small>\n                Let your students know what they will get for their time and\n                bucks. You can change it later.\n              </small>\n            </h2>\n            <form className=\"create-course-flow--responseForm--DLkKF\">\n              <div className=\"create-course-flow--formOptions--15Rpx form-group\">\n                <div className=\"create-course-flow--optionsContainer--3TNVh\">\n                  <div className=\"create-course-flow--formField--m9MGJ\">\n                    <label\n                      htmlFor=\"input-course-title\"\n                      className=\"sr-only control-label\"\n                    >\n                      Course Description\n                    </label>\n                    <div className=\"form-control-counter-container text-justify\">\n                      <RTEditor\n                        editorValue={project ? project.description : \"\"}\n                        handleChange={(value) => {\n                          setValue(value);\n                          handleChange(value);\n                          updateProject({\n                            ...project,\n                            description: value,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDescription;\n","import './course.scss';\nimport { RouteMeta } from 'libs/location/routing';\nimport { getRouteComponent } from './getRouteComponent';\nimport { CATEGORY, CHOICE, DESCRIPTION, TITLE } from './routes';\n\nimport ProjectCategory from './Category';\nimport ProjectTitle from './Title';\nimport ProjectDescription from './Description';\n\nimport logo from 'static/images/brand/logo/codefluent.svg';\nimport { useEffect, useState } from 'react';\n\n\nimport { useHistory } from 'react-router';\n\nimport classNames from 'classnames';\n\nimport { ProjectEntityResponse } from 'services/projects';\n\nimport {useCreateProjectMutation  } from 'services/projects'\nexport const routesMeta: Record<string, RouteMeta> = {\n\n  [`${CATEGORY}`]: {\n    scene: ProjectCategory,\n    pageName: undefined,\n  },\n\n  [`${TITLE}`]: {\n    scene: ProjectTitle,\n    pageName: undefined,\n  },\n\n  [`${DESCRIPTION}`]: {\n    scene: ProjectDescription,\n    pageName: undefined,\n  },\n\n\n\n\n\n}\nconst initialState = {\n  title: '',\n  description: '',\n  category: ''\n}\nexport const CreateProject = (props) => {\n  const [locationType, setLocationType] = useState('title')\n  \n  const [ createProject ] = useCreateProjectMutation()\n  const [value, setValue] = useState('');\n  const [width, setWidth] = useState(25)\n  const [step, setStep] = useState(1)\n\n  const [projectId, setProjectId]= useState(null);\n  const [ project, setProject ] = useState<Partial<ProjectEntityResponse>>()\n\n  const { push } = useHistory()\n  const headings = [ TITLE, CATEGORY, DESCRIPTION,]\n\n\n  const handleCreateProject = async (projectRequest: Partial<ProjectEntityResponse>) => {\n    try {\n     \n      const result = await createProject(projectRequest).unwrap()\n      if (result) {\n        setProjectId(result.id)\n        window.location.replace(`/instructor/project/${result.id}/manage/goals`)\n      }\n      console.log('Project: ', result)\n    }\n    catch (error) {\n      console.log(\"Error:\", error)\n    }\n\n  } \n\n  const { scene: Scene } = getRouteComponent(routesMeta, locationType)\n \n  return (\n    <div className=\"full-page-takeover--window--1ei3d\">\n      <div className=\"full-page-takeover--page--2QirY\" >\n        <div>\n          \n          <div className=\"full-page-takeover--header--2mfbT\">\n            <div className=\"full-page-takeover--logo-block--1Op9u\">\n              <img\n                className=\"udemy-logo full-page-takeover--rebrand-logo--36Lru\"\n                alt=\"codefluent\"\n                width={91}\n                height={34}\n\n                src={logo}\n              />\n            </div>\n            <div className=\"full-page-takeover--header-divider--3XSTc\" />\n            <div\n              className=\"full-page-takeover--header-text-block--1PdFS\"\n              data-purpose=\"header-text\"\n            >\n              Step {step} of 3\n            </div>\n            <div className=\"full-page-takeover--header-buttons--1lu2t\">\n              <button\n                onClick={() => {\n                  window.location.replace('/')\n                }}\n                type=\"button\"\n                className=\"btn btn-tertiary\"\n              >\n                Exit\n              </button>\n            </div>\n          </div>\n          <div\n            data-purpose=\"header-bottom\"\n            className=\"full-page-takeover--header-bottom--progress--2Hfvp\"\n          >\n            <div\n              className=\"full-page-takeover--header-bottom--progress-highlight--1Pr6t\"\n              style={{ width: `${width}%` }}\n            />\n          </div>\n        </div>\n        <Scene project={project} handleChange={(v) => setValue(v)\n        }\n          updateProject={setProject} />\n        <div data-purpose=\"footer\" className=\"full-page-takeover--footer--2wFgA\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xxs-6 full-page-takeover--button-container--1rnpO\">\n                <div className=\"udlite-in-udheavy\">\n                  {(locationType != CHOICE) && <button\n                    onClick={() => {\n                      const heading = headings[step - 1]\n                      const wd = ((step - 1) * 100 / (headings.length))\n                      setWidth(wd);\n                      setStep(step - 1)\n                      setLocationType(heading)\n\n                    }}\n                    type=\"button\"\n                    data-purpose=\"left-button\"\n                    className=\"udlite-btn udlite-btn-large udlite-btn-ghost udlite-heading-md udlite-link-neutral full-page-takeover--left-button--3-75z\"\n                  >\n                    <span>Previous</span>\n                  </button>}\n                </div>\n              </div>\n              <div className=\"col-xxs-6 full-page-takeover--button-container--1rnpO\">\n                <div className=\"udlite-in-udheavy\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      if (step >= headings.length) {\n                        handleCreateProject(project)\n                      } else {\n                        const heading = headings[step]\n                        const wd = ((step + 1) * 100 / (headings.length))\n                        setWidth(wd);\n                        setStep(step + 1)\n                        setLocationType(heading)\n                        setValue('')\n                      }\n                    }}\n\n                    className={classNames(\"udlite-btn udlite-btn-large udlite-btn-primary udlite-heading-md full-page-takeover--right-button--i1q_g\", {\n                      'udlite-btn-disabled': project && !project[locationType] && !value\n                    })}\n                    disabled={ project && !project[locationType] && !value}\n                    tabIndex={-1}\n                  >\n                    <span>{locationType == DESCRIPTION ? 'Create Project' : ' Continue'}</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","import React from 'react';\n\nexport type MetaScene = {\n  portalData: unknown;\n};\n\nexport type RouteMeta = {\n  scene: React.ComponentType<MetaScene & any>;\n\n\n  pageName: string | undefined;\n};\n\nexport const getRouteComponent = (\n  routesMeta: Record<string, RouteMeta>,\n  locationType: string,\n \n) => {\n  const route = (() => {\n\n    return routesMeta[locationType];\n  })();\n\n  if (!route) {\n    throw new Error(`Could not find equivalent route for '${locationType}'.`);\n  }\n\n  return route;\n};\n"],"sourceRoot":""}