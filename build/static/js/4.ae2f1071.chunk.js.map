{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@codecademy/gamut/dist/Box/props.js","../node_modules/@codecademy/gamut/dist/Box/Box.js","../node_modules/@codecademy/gamut/dist/Box/GridBox.js","../node_modules/@codecademy/gamut/dist/Box/FlexBox.js","../node_modules/react-truncate-markup/es/tokenize-rules.js","../node_modules/react-truncate-markup/es/atom.js","../node_modules/react-truncate-markup/es/index.js","../node_modules/line-height/lib/line-height.js","../node_modules/line-height/node_modules/computed-style/dist/computedStyle.commonjs.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","boxProps","variance","compose","system","space","border","layout","color","shadow","positioning","background","typography","flex","grid","sharedStates","states","fit","width","height","WebkitTouchCallout","userSelect","flexStates","inline","display","wrap","flexWrap","center","justifyContent","alignItems","row","flexDirection","column","gridStates","fitContent","gridTemplate","_extends","assign","arguments","source","hasOwnProperty","call","apply","this","Box","_styled","label","styledOptions","GridBox","css","FlexBox","TOKENIZE_POLICY","characters","tokenizeString","isAtomic","str","words","match","test","Atom","children","__rtm_atom","_class","_temp","isAtomComponent","reactEl","type","ATOM_STRING_ID","_typeof","Symbol","iterator","obj","constructor","defineProperties","SPLIT","toString","node","string","undefined","Array","isArray","React","Children","map","child","join","cloneWithChildren","isRootEl","level","style","validateTree","toArray","reduce","isValid","TruncateMarkup","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","lineHeight","splitDirectionSeq","shouldTruncate","wasLastCharTested","endFound","latestThatFits","onTruncateCalled","toStringMemo","memoizeOne","childrenWithRefMemo","childrenElementWithRef","validateTreeMemo","onTruncate","wasTruncated","handleResize","el","prevResizeObserver","disconnect","initialRender","resizeObserver","ResizeObserver","setState","text","origText","truncate","observe","setRef","isNewEl","state","subClass","superClass","create","value","setPrototypeOf","__proto__","_inherits","componentDidMount","getLineHeight","UNSAFE_componentWillReceiveProps","nextProps","_this2","componentDidUpdate","fits","splice","push","tryToFit","componentWillUnmount","truncateOriginalText","only","cloneElement","ref","wordWrap","rootEl","splitDirections","newRootEl","split","ellipsis","newChildren","newChildrenWithEllipsis","concat","shouldRenderEllipsis","isRoot","splitString","splitArray","policy","wordsArray","splitDirection","restSplitDirections","slice","pivotIndex","Math","ceil","beforeString","substring","afterString","array","beforeArray","afterArray","maxLines","lines","getBoundingClientRect","round","parseFloat","render","get","tokenize","Component","defaultProps","propTypes","computedStyle","require","module","exports","lnHeightStr","lnHeight","_lnHeightStyle","indexOf","nodeName","_node","document","createElement","innerHTML","toUpperCase","setAttribute","fontSizeStr","fontSize","padding","body","appendChild","offsetHeight","removeChild","prop","getComputedStyle","window","currentStyle","replace","word","letter","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","set","delete","entries","has","clear","forEach","callback","ctx","_i","_a","isBrowser","global$1","global","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","_b","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","styles","positions","size","position","getHTMLElementContentRect","clientWidth","clientHeight","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","WeakMap","method"],"mappings":"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","file":"static/js/4.ae2f1071.chunk.js","sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { system } from '@codecademy/gamut-styles';\nimport { variance } from '@codecademy/variance';\nexport var boxProps = variance.compose(system.space, system.border, system.layout, system.color, system.shadow, system.positioning, system.background, system.typography, system.flex, system.grid);\nexport var sharedStates = system.states({\n  fit: {\n    width: 1,\n    height: 1\n  },\n  'no-select': {\n    WebkitTouchCallout: 'none',\n    userSelect: 'none'\n  }\n});\nexport var flexStates = system.states({\n  inline: {\n    display: 'inline-flex'\n  },\n  wrap: {\n    flexWrap: 'wrap'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  column: {\n    flexDirection: 'column'\n  }\n});\nexport var gridStates = system.states({\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fitContent: {\n    gridTemplate: 'minmax(0, 1fr) / minmax(0, 1fr)'\n  }\n});","import _styled from \"@emotion/styled/base\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { styledOptions } from '@codecademy/gamut-styles';\nimport { boxProps, sharedStates } from './props';\nexport var Box = /*#__PURE__*/_styled('div', _extends({}, {\n  target: \"ebnwbv90\",\n  label: \"Box\"\n}, styledOptions(['fit'])))(sharedStates, boxProps, process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Cb3gvQm94LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLbUIiLCJmaWxlIjoiLi4vLi4vc3JjL0JveC9Cb3gudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkT3B0aW9ucyB9IGZyb20gJ0Bjb2RlY2FkZW15L2dhbXV0LXN0eWxlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmltcG9ydCB7IEJveFByb3BzLCBib3hQcm9wcywgc2hhcmVkU3RhdGVzIH0gZnJvbSAnLi9wcm9wcyc7XG5cbmV4cG9ydCBjb25zdCBCb3ggPSBzdHlsZWQoJ2RpdicsIHN0eWxlZE9wdGlvbnMoWydmaXQnXSkpPEJveFByb3BzPihcbiAgc2hhcmVkU3RhdGVzLFxuICBib3hQcm9wc1xuKTtcblxuZXhwb3J0IHR5cGUgeyBCb3hQcm9wcyB9IGZyb20gJy4vcHJvcHMnO1xuIl19 */\");","import _styled from \"@emotion/styled/base\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { styledOptions, system } from '@codecademy/gamut-styles';\nimport { boxProps, gridStates, sharedStates } from './props';\nexport var GridBox = /*#__PURE__*/_styled('div', _extends({}, {\n  target: \"e13vpdv0\",\n  label: \"GridBox\"\n}, styledOptions(['fit', 'center', 'fitContent'])))(system.css({\n  display: 'grid'\n}), sharedStates, gridStates, boxProps, process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Cb3gvR3JpZEJveC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS3VCIiwiZmlsZSI6Ii4uLy4uL3NyYy9Cb3gvR3JpZEJveC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWRPcHRpb25zLCBzeXN0ZW0gfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG5pbXBvcnQgeyBib3hQcm9wcywgR3JpZEJveFByb3BzLCBncmlkU3RhdGVzLCBzaGFyZWRTdGF0ZXMgfSBmcm9tICcuL3Byb3BzJztcblxuZXhwb3J0IGNvbnN0IEdyaWRCb3ggPSBzdHlsZWQoXG4gICdkaXYnLFxuICBzdHlsZWRPcHRpb25zKFsnZml0JywgJ2NlbnRlcicsICdmaXRDb250ZW50J10pXG4pPEdyaWRCb3hQcm9wcz4oXG4gIHN5c3RlbS5jc3MoeyBkaXNwbGF5OiAnZ3JpZCcgfSksXG4gIHNoYXJlZFN0YXRlcyxcbiAgZ3JpZFN0YXRlcyxcbiAgYm94UHJvcHNcbik7XG4iXX0= */\");","import _styled from \"@emotion/styled/base\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { styledOptions, system } from '@codecademy/gamut-styles';\nimport { boxProps, flexStates, sharedStates } from './props';\nexport var FlexBox = /*#__PURE__*/_styled('div', _extends({}, {\n  target: \"e1tc6bzh0\",\n  label: \"FlexBox\"\n}, styledOptions(['fit', 'wrap', 'center', 'column', 'row', 'inline'])))(system.css({\n  display: 'flex'\n}), sharedStates, flexStates, boxProps, process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Cb3gvRmxleEJveC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS3VCIiwiZmlsZSI6Ii4uLy4uL3NyYy9Cb3gvRmxleEJveC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWRPcHRpb25zLCBzeXN0ZW0gfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG5pbXBvcnQgeyBib3hQcm9wcywgRmxleEJveFByb3BzLCBmbGV4U3RhdGVzLCBzaGFyZWRTdGF0ZXMgfSBmcm9tICcuL3Byb3BzJztcblxuZXhwb3J0IGNvbnN0IEZsZXhCb3ggPSBzdHlsZWQoXG4gICdkaXYnLFxuICBzdHlsZWRPcHRpb25zKFsnZml0JywgJ3dyYXAnLCAnY2VudGVyJywgJ2NvbHVtbicsICdyb3cnLCAnaW5saW5lJ10pXG4pPEZsZXhCb3hQcm9wcz4oXG4gIHN5c3RlbS5jc3MoeyBkaXNwbGF5OiAnZmxleCcgfSksXG4gIHNoYXJlZFN0YXRlcyxcbiAgZmxleFN0YXRlcyxcbiAgYm94UHJvcHNcbik7XG4iXX0= */\");","var TOKENIZE_POLICY = {\n  characters: {\n    tokenizeString: null,\n    isAtomic: function isAtomic(str) {\n      return str.length <= 1;\n    }\n  },\n  words: {\n    tokenizeString: function tokenizeString(str) {\n      return str.match(/(\\s*\\S[\\S\\xA0]*)/g);\n    },\n    isAtomic: function isAtomic(str) {\n      return (/^\\s*[\\S\\xA0]*\\s*$/.test(str)\n      );\n    }\n  }\n};\n\nexport default TOKENIZE_POLICY;","export var Atom = function Atom(props) {\n  return props.children || null;\n};\nAtom.__rtm_atom = true;\n\nexport var isAtomComponent = function isAtomComponent(reactEl) {\n  return !!(reactEl && reactEl.type && reactEl.type.__rtm_atom === true);\n};\n\nexport var ATOM_STRING_ID = '<Atom>';","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport memoizeOne from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport getLineHeight from 'line-height';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport TOKENIZE_POLICY from './tokenize-rules';\nimport { Atom, isAtomComponent, ATOM_STRING_ID } from './atom';\n\nvar SPLIT = {\n  LEFT: true,\n  RIGHT: false\n};\n\nvar toString = function toString(node) {\n  var string = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!node) {\n    return string;\n  } else if (typeof node === 'string') {\n    return string + node;\n  } else if (isAtomComponent(node)) {\n    return string + ATOM_STRING_ID;\n  }\n  var children = Array.isArray(node) ? node : node.props.children || '';\n\n  return string + React.Children.map(children, function (child) {\n    return toString(child);\n  }).join('');\n};\n\nvar cloneWithChildren = function cloneWithChildren(node, children, isRootEl, level) {\n  var getDisplayStyle = function getDisplayStyle() {\n    if (isRootEl) {\n      return {\n        // root element cannot be an inline element because of the line calculation\n        display: (node.props.style || {}).display || 'block'\n      };\n    } else if (level === 2) {\n      return {\n        // level 2 elements (direct children of the root element) need to be inline because of the ellipsis.\n        // if level 2 element was a block element, ellipsis would get rendered on a new line, breaking the max number of lines\n        display: (node.props.style || {}).display || 'inline-block'\n      };\n    } else return {};\n  };\n\n  return _extends({}, node, {\n    props: _extends({}, node.props, {\n      style: _extends({}, node.props.style, getDisplayStyle()),\n      children: children\n    })\n  });\n};\n\nvar validateTree = function validateTree(node) {\n  if (typeof node === 'string' || isAtomComponent(node)) {\n    return true;\n  } else if (typeof node.type === 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      console.error('ReactTruncateMarkup tried to render <' + node.type.name + ' />, but truncating React components is not supported, the full content is rendered instead. Only DOM elements are supported. Alternatively, you can take advantage of the <TruncateMarkup.Atom /> component (see more in the docs https://github.com/parsable/react-truncate-markup/blob/master/README.md#truncatemarkupatom-).');\n      /* eslint-enable */\n    }\n\n    return false;\n  }\n\n  if (node.props.children) {\n    return React.Children.toArray(node.props.children).reduce(function (isValid, child) {\n      return isValid && validateTree(child);\n    }, true);\n  }\n\n  return true;\n};\n\nvar TruncateMarkup = (_temp = _class = function (_React$Component) {\n  _inherits(TruncateMarkup, _React$Component);\n\n  function TruncateMarkup(props) {\n    _classCallCheck(this, TruncateMarkup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _this.lineHeight = null;\n    _this.splitDirectionSeq = [];\n    _this.shouldTruncate = true;\n    _this.wasLastCharTested = false;\n    _this.endFound = false;\n    _this.latestThatFits = null;\n    _this.onTruncateCalled = false;\n    _this.toStringMemo = memoizeOne(toString);\n    _this.childrenWithRefMemo = memoizeOne(_this.childrenElementWithRef);\n    _this.validateTreeMemo = memoizeOne(validateTree);\n\n    _this.onTruncate = function (wasTruncated) {\n      if (!_this.onTruncateCalled) {\n        _this.onTruncateCalled = true;\n        _this.props.onTruncate(wasTruncated);\n      }\n    };\n\n    _this.handleResize = function (el, prevResizeObserver) {\n      // clean up previous observer\n      if (prevResizeObserver) {\n        prevResizeObserver.disconnect();\n      }\n\n      // unmounting or just unsetting the element to be replaced with a new one later\n      if (!el) return null;\n\n      /* Wrapper element resize handing */\n      var initialRender = true;\n      var resizeCallback = function resizeCallback() {\n        if (initialRender) {\n          // ResizeObserer cb is called on initial render too so we are skipping here\n          initialRender = false;\n        } else {\n          // wrapper element has been resized, recalculating with the original text\n          _this.shouldTruncate = false;\n          _this.latestThatFits = null;\n\n          _this.setState({\n            text: _this.origText\n          }, function () {\n            _this.shouldTruncate = true;\n            _this.onTruncateCalled = false;\n            _this.truncate();\n          });\n        }\n      };\n\n      var resizeObserver = prevResizeObserver || new ResizeObserver(resizeCallback);\n\n      resizeObserver.observe(el);\n\n      return resizeObserver;\n    };\n\n    _this.setRef = function (el) {\n      var isNewEl = _this.el !== el;\n      _this.el = el;\n\n      // whenever we obtain a new element, attach resize handler\n      if (isNewEl) {\n        _this.resizeObserver = _this.handleResize(el, _this.resizeObserver);\n      }\n    };\n\n    _this.state = {\n      text: _this.childrenWithRefMemo(_this.props.children)\n    };\n    return _this;\n  }\n\n  TruncateMarkup.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isValid) {\n      return;\n    }\n\n    // get the computed line-height of the parent element\n    // it'll be used for determining whether the text fits the container or not\n    this.lineHeight = this.props.lineHeight || getLineHeight(this.el);\n    this.truncate();\n  };\n\n  TruncateMarkup.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    this.shouldTruncate = false;\n    this.latestThatFits = null;\n\n    this.setState({\n      text: this.childrenWithRefMemo(nextProps.children)\n    }, function () {\n      if (!_this2.isValid) {\n        return;\n      }\n\n      _this2.lineHeight = nextProps.lineHeight || getLineHeight(_this2.el);\n      _this2.shouldTruncate = true;\n      _this2.truncate();\n    });\n  };\n\n  TruncateMarkup.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.shouldTruncate === false || this.isValid === false) {\n      return;\n    }\n\n    if (this.endFound) {\n      // we've found the end where we cannot split the text further\n      // that means we've already found the max subtree that fits the container\n      // so we are rendering that\n      if (this.latestThatFits !== null && this.state.text !== this.latestThatFits) {\n        /* eslint-disable react/no-did-update-set-state */\n        this.setState({\n          text: this.latestThatFits\n        });\n\n        return;\n        /* eslint-enable */\n      }\n\n      this.onTruncate( /* wasTruncated */true);\n\n      return;\n    }\n\n    if (this.splitDirectionSeq.length) {\n      if (this.fits()) {\n        this.latestThatFits = this.state.text;\n        // we've found a subtree that fits the container\n        // but we need to check if we didn't cut too much of it off\n        // so we are changing the last splitting decision from splitting and going left\n        // to splitting and going right\n        this.splitDirectionSeq.splice(this.splitDirectionSeq.length - 1, 1, SPLIT.RIGHT, SPLIT.LEFT);\n      } else {\n        this.splitDirectionSeq.push(SPLIT.LEFT);\n      }\n\n      this.tryToFit(this.origText, this.splitDirectionSeq);\n    }\n  };\n\n  TruncateMarkup.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.lineHeight = null;\n    this.latestThatFits = null;\n    this.splitDirectionSeq = [];\n  };\n\n  TruncateMarkup.prototype.truncate = function truncate() {\n    if (this.fits()) {\n      // the whole text fits on the first try, no need to do anything else\n      this.shouldTruncate = false;\n      this.onTruncate( /* wasTruncated */false);\n\n      return;\n    }\n\n    this.truncateOriginalText();\n  };\n\n  TruncateMarkup.prototype.childrenElementWithRef = function childrenElementWithRef(children) {\n    var child = React.Children.only(children);\n\n    return React.cloneElement(child, {\n      ref: this.setRef,\n      style: _extends({\n        wordWrap: 'break-word'\n      }, child.props.style)\n    });\n  };\n\n  TruncateMarkup.prototype.truncateOriginalText = function truncateOriginalText() {\n    this.endFound = false;\n    this.splitDirectionSeq = [SPLIT.LEFT];\n    this.wasLastCharTested = false;\n\n    this.tryToFit(this.origText, this.splitDirectionSeq);\n  };\n\n  /**\n   * Splits rootEl based on instructions and updates React's state with the returned element\n   * After React rerenders the new text, we'll check if the new text fits in componentDidUpdate\n   * @param  {ReactElement} rootEl - the original children element\n   * @param  {Array} splitDirections - list of SPLIT.RIGHT/LEFT instructions\n   */\n\n\n  TruncateMarkup.prototype.tryToFit = function tryToFit(rootEl, splitDirections) {\n    if (!rootEl.props.children) {\n      // no markup in container\n      return;\n    }\n\n    var newRootEl = this.split(rootEl, splitDirections, /* isRootEl */true);\n\n    var ellipsis = typeof this.props.ellipsis === 'function' ? this.props.ellipsis(newRootEl) : this.props.ellipsis;\n\n    ellipsis = (typeof ellipsis === 'undefined' ? 'undefined' : _typeof(ellipsis)) === 'object' ? React.cloneElement(ellipsis, { key: 'ellipsis' }) : ellipsis;\n\n    var newChildren = newRootEl.props.children;\n    var newChildrenWithEllipsis = [].concat(newChildren, ellipsis);\n\n    // edge case tradeoff EC#1 - on initial render it doesn't fit in the requested number of lines (1) so it starts truncating\n    // - because of truncating and the ellipsis position, div#lvl2 will have display set to 'inline-block',\n    //   causing the whole body to fit in 1 line again\n    // - if that happens, ellipsis is not needed anymore as the whole body is rendered\n    // - NOTE this could be fixed by checking for this exact case and handling it separately so it renders <div>foo {ellipsis}</div>\n    //\n    // Example:\n    // <TruncateMarkup lines={1}>\n    //   <div>\n    //     foo\n    //     <div id=\"lvl2\">bar</div>\n    //   </div>\n    // </TruncateMarkup>\n    var shouldRenderEllipsis = toString(newChildren) !== this.toStringMemo(this.props.children);\n\n    this.setState({\n      text: _extends({}, newRootEl, {\n        props: _extends({}, newRootEl.props, {\n          children: shouldRenderEllipsis ? newChildrenWithEllipsis : newChildren\n        })\n      })\n    });\n  };\n\n  /**\n   * Splits JSX node based on its type\n   * @param  {null|string|Array|Object} node - JSX node\n   * @param  {Array} splitDirections - list of SPLIT.RIGHT/LEFT instructions\n   * @return {null|string|Array|Object} - split JSX node\n   */\n\n\n  TruncateMarkup.prototype.split = function split(node, splitDirections) {\n    var isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n    if (!node || isAtomComponent(node)) {\n      this.endFound = true;\n\n      return node;\n    } else if (typeof node === 'string') {\n      return this.splitString(node, splitDirections, level);\n    } else if (Array.isArray(node)) {\n      return this.splitArray(node, splitDirections, level);\n    }\n\n    var newChildren = this.split(node.props.children, splitDirections,\n    /* isRoot */false, level + 1);\n\n    return cloneWithChildren(node, newChildren, isRoot, level);\n  };\n\n  TruncateMarkup.prototype.splitString = function splitString(string) {\n    var splitDirections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var level = arguments[2];\n\n    if (!splitDirections.length) {\n      return string;\n    }\n\n    if (splitDirections.length && this.policy.isAtomic(string)) {\n      // allow for an extra render test with the current character included\n      // in most cases this variation was already tested, but some edge cases require this check\n      // NOTE could be removed once EC#1 is taken care of\n      if (!this.wasLastCharTested) {\n        this.wasLastCharTested = true;\n      } else {\n        // we are trying to split further but we have nowhere to go now\n        // that means we've already found the max subtree that fits the container\n        this.endFound = true;\n      }\n\n      return string;\n    }\n\n    if (this.policy.tokenizeString) {\n      var wordsArray = this.splitArray(this.policy.tokenizeString(string), splitDirections, level);\n\n      // in order to preserve the input structure\n      return wordsArray.join('');\n    }\n\n    var splitDirection = splitDirections[0],\n        restSplitDirections = splitDirections.slice(1);\n\n    var pivotIndex = Math.ceil(string.length / 2);\n    var beforeString = string.substring(0, pivotIndex);\n\n    if (splitDirection === SPLIT.LEFT) {\n      return this.splitString(beforeString, restSplitDirections, level);\n    }\n    var afterString = string.substring(pivotIndex);\n\n    return beforeString + this.splitString(afterString, restSplitDirections, level);\n  };\n\n  TruncateMarkup.prototype.splitArray = function splitArray(array) {\n    var splitDirections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var level = arguments[2];\n\n    if (!splitDirections.length) {\n      return array;\n    }\n\n    if (array.length === 1) {\n      return [this.split(array[0], splitDirections, /* isRoot */false, level)];\n    }\n\n    var splitDirection = splitDirections[0],\n        restSplitDirections = splitDirections.slice(1);\n\n    var pivotIndex = Math.ceil(array.length / 2);\n    var beforeArray = array.slice(0, pivotIndex);\n\n    if (splitDirection === SPLIT.LEFT) {\n      return this.splitArray(beforeArray, restSplitDirections, level);\n    }\n    var afterArray = array.slice(pivotIndex);\n\n    return beforeArray.concat(this.splitArray(afterArray, restSplitDirections, level));\n  };\n\n  TruncateMarkup.prototype.fits = function fits() {\n    var maxLines = this.props.lines;\n\n    var _el$getBoundingClient = this.el.getBoundingClientRect(),\n        height = _el$getBoundingClient.height;\n\n    var computedLines = Math.round(height / parseFloat(this.lineHeight));\n\n    return maxLines >= computedLines;\n  };\n\n  TruncateMarkup.prototype.render = function render() {\n    return this.state.text;\n  };\n\n  _createClass(TruncateMarkup, [{\n    key: 'isValid',\n    get: function get() {\n      return this.validateTreeMemo(this.props.children);\n    }\n  }, {\n    key: 'origText',\n    get: function get() {\n      return this.childrenWithRefMemo(this.props.children);\n    }\n  }, {\n    key: 'policy',\n    get: function get() {\n      return TOKENIZE_POLICY[this.props.tokenize] || TOKENIZE_POLICY.characters;\n    }\n  }]);\n\n  return TruncateMarkup;\n}(React.Component), _class.Atom = Atom, _class.defaultProps = {\n  lines: 1,\n  ellipsis: '...',\n  lineHeight: '',\n  onTruncate: function onTruncate() {},\n  tokenize: 'characters'\n}, _temp);\nexport { TruncateMarkup as default };\nTruncateMarkup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.element.isRequired,\n  lines: PropTypes.number,\n  ellipsis: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.func]),\n  lineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onTruncate: PropTypes.func,\n  // eslint-disable-next-line\n  onAfterTruncate: function onAfterTruncate(props, propName, componentName) {\n    if (props[propName]) {\n      return new Error(componentName + ': Setting `onAfterTruncate` prop is deprecated, use `onTruncate` instead.');\n    }\n  },\n  tokenize: function tokenize(props, propName, componentName) {\n    var tokenizeValue = props[propName];\n\n    if (typeof tokenizeValue !== 'undefined') {\n      if (!TOKENIZE_POLICY[tokenizeValue]) {\n        /* eslint-disable no-console */\n        return new Error(componentName + ': Unknown option for prop \\'tokenize\\': \\'' + tokenizeValue + '\\'. Option \\'characters\\' will be used instead.');\n        /* eslint-enable */\n      }\n    }\n  }\n} : {};","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}