function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { Svg } from '../../props';
export var ProgrammingBrowserIcon = /*#__PURE__*/React.forwardRef(function ProgrammingBrowserIcon(_ref, svgRef) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Programming Browser Icon' : _ref$title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, ["title", "titleId"]);

  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 140 140",
    fill: "currentColor",
    role: "img",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title === undefined ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, 'programming-browser-1') : title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("g", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 8.75
  }, /*#__PURE__*/React.createElement("path", {
    d: "M13.125 126.875a8.75 8.75 0 01-8.75-8.75v-95.58a9.45 9.45 0 019.42-9.42h112.456a9.403 9.403 0 019.374 9.374v94.955a9.45 9.45 0 01-9.42 9.421zm122.5-87.5H4.375m70 43.75h26.25"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M39.375 65.625l17.5 17.5-17.5 17.5"
  })));
});