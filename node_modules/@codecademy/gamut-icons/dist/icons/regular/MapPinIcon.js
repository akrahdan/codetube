function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { Svg } from '../../props';
export var MapPinIcon = /*#__PURE__*/React.forwardRef(function MapPinIcon(_ref, svgRef) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Map Pin Icon' : _ref$title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, ["title", "titleId"]);

  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 140 140",
    fill: "currentColor",
    role: "img",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title === undefined ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, 'maps-pin-1') : title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("g", {
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 8.75
  }, /*#__PURE__*/React.createElement("path", {
    d: "M135.625 52.5V27.125a8.75 8.75 0 00-5.5-8.126l-35-14a8.75 8.75 0 00-6.5 0l-37.25 14.904a8.75 8.75 0 01-6.5 0L10.379 6.102a4.375 4.375 0 00-6.003 4.083v83.842a8.75 8.75 0 005.5 8.126l35 14a8.75 8.75 0 006.5 0l16.805-6.726m-20.056-88.9v96.25M91.875 4.375v43.75m17.5 41.995a2.188 2.188 0 012.188 2.187m-4.375 0a2.188 2.188 0 012.187-2.188m0 4.381a2.188 2.188 0 01-2.188-2.188m4.376-.005a2.188 2.188 0 01-2.188 2.187"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M109.375 66.057a26.25 26.25 0 0126.25 26.25c0 11.205-15.68 32.526-22.802 41.638a4.375 4.375 0 01-6.895 0c-7.123-9.106-22.803-30.432-22.803-41.638a26.25 26.25 0 0126.25-26.25z"
  })));
});