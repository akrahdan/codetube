function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { Svg } from '../../props';
export var PdfIcon = /*#__PURE__*/React.forwardRef(function PdfIcon(_ref, svgRef) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Pdf Icon' : _ref$title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, ["title", "titleId"]);

  return /*#__PURE__*/React.createElement(Svg, _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    role: "img",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title === undefined ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, 'office-file-adobe-alternate') : title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("path", {
    d: "M8.515 6.723a3.954 3.954 0 00-.509-1.465A1.569 1.569 0 006.717 4.5a1.5 1.5 0 00-1.325 1.284 2.756 2.756 0 00.487 1.893 42.285 42.285 0 003.936 3.972 17.631 17.631 0 005.236 2.929 3.789 3.789 0 001.664.354 1.379 1.379 0 001.265-.981 1.311 1.311 0 00-.484-1.206 2.752 2.752 0 00-1.237-.535 10.789 10.789 0 00-5.321.564c-1.622.5-6.362 2.067-6.144 6.052a.858.858 0 00.089.382.758.758 0 00.758.284 2.583 2.583 0 001.708-1.186c1.093-1.543 1.207-3.51 1.35-5.331a24.062 24.062 0 00-.184-6.252z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /*#__PURE__*/React.createElement("path", {
    d: "M22.81 5.56a1.5 1.5 0 01.439 1.06V21A2.25 2.25 0 0121 23.249H3A2.25 2.25 0 01.749 21V3A2.25 2.25 0 013 .749h14.378a1.5 1.5 0 011.061.439z",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }), /*#__PURE__*/React.createElement("path", {
    d: "M17.249.749v4.5a1.5 1.5 0 001.5 1.5h4.5",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: 1.5
  }));
});