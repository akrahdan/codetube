export declare const testConfig: {
    readonly textColor: {
        readonly property: "color";
    };
    readonly bg: {
        readonly property: "backgroundColor";
    };
    readonly borderColor: {
        readonly property: "borderColor";
    };
    readonly borderColorX: {
        readonly property: "borderColor";
        readonly properties: readonly ["borderLeftColor", "borderRightColor"];
        readonly scale: "colors";
    };
    readonly borderColorY: {
        readonly property: "borderColor";
        readonly properties: readonly ["borderTopColor", "borderBottomColor"];
        readonly scale: "colors";
    };
    readonly borderColorLeft: {
        readonly property: "borderLeftColor";
    };
    readonly borderColorRight: {
        readonly property: "borderRightColor";
    };
    readonly borderColorTop: {
        readonly property: "borderTopColor";
    };
    readonly borderColorBottom: {
        readonly property: "borderBottomColor";
    };
    readonly border: {
        readonly property: "border";
    };
    readonly borderX: {
        readonly property: "border";
        readonly properties: readonly ["borderLeft", "borderRight"];
    };
    readonly borderY: {
        readonly property: "border";
        readonly properties: readonly ["borderTop", "borderBottom"];
    };
    readonly borderTop: {
        readonly property: "borderTop";
    };
    readonly borderRight: {
        readonly property: "borderRight";
    };
    readonly borderBottom: {
        readonly property: "borderBottom";
    };
    readonly borderLeft: {
        readonly property: "borderLeft";
    };
    readonly borderWidth: {
        readonly property: "borderWidth";
    };
    readonly borderWidthX: {
        readonly property: "borderWidth";
        readonly properties: readonly ["borderLeftWidth", "borderRightWidth"];
    };
    readonly borderWidthY: {
        readonly property: "borderWidth";
        readonly properties: readonly ["borderTopWidth", "borderBottomWidth"];
    };
    readonly borderRadius: {
        readonly property: "borderRadius";
    };
    readonly borderRadiusLeft: {
        readonly property: "borderRadius";
        readonly properties: readonly ["borderTopLeftRadius", "borderBottomLeftRadius"];
    };
    readonly borderRadiusTop: {
        readonly property: "borderRadius";
        readonly properties: readonly ["borderTopLeftRadius", "borderTopRightRadius"];
    };
    readonly borderRadiusBottom: {
        readonly property: "borderRadius";
        readonly properties: readonly ["borderBottomLeftRadius", "borderBottomRightRadius"];
    };
    readonly borderRadiusRight: {
        readonly property: "borderRadius";
        readonly properties: readonly ["borderTopRightRadius", "borderBottomRightRadius"];
    };
    readonly borderStyle: {
        readonly property: "borderStyle";
    };
    readonly borderStyleX: {
        readonly property: "borderStyle";
        readonly properties: readonly ["borderLeftStyle", "borderRightStyle"];
    };
    readonly borderStyleY: {
        readonly property: "borderStyle";
        readonly properties: readonly ["borderTopStyle", "borderBottomStyle"];
    };
    readonly flex: {
        readonly property: "flex";
    };
    readonly flexBasis: {
        readonly property: "flexBasis";
    };
    readonly p: {
        readonly property: "padding";
    };
    readonly px: {
        readonly property: "padding";
        readonly properties: readonly ["paddingLeft", "paddingRight"];
        readonly scale: "spacing";
    };
    readonly py: {
        readonly property: "padding";
        readonly properties: readonly ["paddingTop", "paddingBottom"];
        readonly scale: "spacing";
    };
    readonly pt: {
        readonly property: "paddingTop";
    };
    readonly pb: {
        readonly property: "paddingBottom";
    };
    readonly pr: {
        readonly property: "paddingRight";
    };
    readonly pl: {
        readonly property: "paddingLeft";
    };
    readonly m: {
        readonly property: "margin";
    };
    readonly mx: {
        readonly property: "margin";
        readonly properties: readonly ["marginLeft", "marginRight"];
        readonly scale: "spacing";
    };
    readonly my: {
        readonly property: "margin";
        readonly properties: readonly ["marginTop", "marginBottom"];
        readonly scale: "spacing";
    };
    readonly mt: {
        readonly property: "marginTop";
    };
    readonly mb: {
        readonly property: "marginBottom";
    };
    readonly mr: {
        readonly property: "marginRight";
    };
    readonly ml: {
        readonly property: "marginLeft";
    };
};
