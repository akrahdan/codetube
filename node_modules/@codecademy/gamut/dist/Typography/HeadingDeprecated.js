function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import cx from 'classnames';
import React from 'react';
import { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';
import styles from './styles/Heading.module.scss';

/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component
 * ```
 * import { Text } from '@codecademy/gamut';
 *
 * <Text as="h3">paragraph text</Text>
 * ```
 */
export var HeadingDeprecated = function HeadingDeprecated(_ref) {
  var children = _ref.children,
      Element = _ref.as,
      className = _ref.className,
      _ref$fontSize = _ref.fontSize,
      fontSize = _ref$fontSize === void 0 ? 'md' : _ref$fontSize,
      style = _ref.style,
      testId = _ref.testId,
      _ref$hideMargin = _ref.hideMargin,
      hideMargin = _ref$hideMargin === void 0 ? false : _ref$hideMargin;
  return /*#__PURE__*/React.createElement(Element, {
    className: cx(styles.heading, className, generateResponsiveClassnames({
      fontSize: fontSize
    }, styles), _defineProperty({}, styles.hideMargin, hideMargin)),
    "data-testid": testId,
    style: style
  }, children);
};