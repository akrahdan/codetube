import { Component, ReactElement } from 'react';
export interface TabsProps {
    /**
     * Changes this to a controlled component by only forcing this index to be active.
     */
    activeTabIndex?: number;
    children: ReactElement<any, any>[];
    className?: string;
    /**
     * Index to start the active tab on, if not provided by `activeTabIndex`.
     */
    defaultActiveTabIndex?: number;
    /**
     * Callback for when a tab index is requested to be active.
     *
     * @param activeTabIndex  New active tab index.
     */
    onChange?: (activeTabIndex: number) => void;
    renderAllPanels?: boolean;
}
export interface TabsState {
    activeTabIndex: number;
}
/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status
 */
export declare class Tabs extends Component<TabsProps> {
    state: TabsState;
    componentDidUpdate(prevProps: TabsProps, prevState: TabsState): void;
    idPrefix: string;
    createBaseId: (index: number) => string;
    isControlled: () => boolean;
    updateTabIndexState: (index: number) => void;
    render(): JSX.Element;
}
