function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import cx from 'classnames';
import React from 'react';
import { Tab } from '../Tab';
import styles from './styles.module.scss';
var defaultProps = {
  createBaseId: function createBaseId(i) {
    return "".concat(i);
  },
  activeTabIndex: 0,
  onChange: function onChange() {}
};
/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status
 */

export var TabList = function TabList(_ref) {
  var activeTabIndex = _ref.activeTabIndex,
      center = _ref.center,
      children = _ref.children,
      className = _ref.className,
      createBaseId = _ref.createBaseId,
      maxWidth = _ref.maxWidth,
      onChange = _ref.onChange;
  var classes = cx(styles.tabList, className, _defineProperty({}, styles.center, center));
  return /*#__PURE__*/React.createElement("div", {
    className: classes,
    role: "tablist",
    style: {
      maxWidth: maxWidth
    }
  }, React.Children.toArray(children).filter(function (c) {
    return c && c.type === Tab;
  }).map(function (tab, index) {
    var baseId = createBaseId ? createBaseId(index) : index;
    return /*#__PURE__*/React.cloneElement(tab, {
      active: activeTabIndex === index,
      tabIndex: index,
      onChange: onChange,
      id: baseId,
      key: baseId
    });
  }));
};
TabList.defaultProps = defaultProps;