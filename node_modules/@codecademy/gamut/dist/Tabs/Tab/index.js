function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import cx from 'classnames';
import React from 'react';
import { omitProps } from '../../utils/omitProps';
import styles from './styles.module.scss';

/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status
 */
export var Tab = function Tab(_ref) {
  var _cx;

  var active = _ref.active,
      children = _ref.children,
      activeClassName = _ref.activeClassName,
      className = _ref.className,
      disabled = _ref.disabled,
      id = _ref.id,
      _ref$defaultTheme = _ref.defaultTheme,
      defaultTheme = _ref$defaultTheme === void 0 ? true : _ref$defaultTheme,
      _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,
      _ref$tabIndex = _ref.tabIndex,
      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,
      rest = _objectWithoutProperties(_ref, ["active", "children", "activeClassName", "className", "disabled", "id", "defaultTheme", "onChange", "tabIndex"]);

  var tabClasses = cx(styles.tab, className, (_cx = {}, _defineProperty(_cx, styles.tab_default, defaultTheme), _defineProperty(_cx, styles.active, active), _defineProperty(_cx, styles.tab_default__active, defaultTheme && active), _defineProperty(_cx, activeClassName, active && activeClassName), _defineProperty(_cx, styles.disabled, disabled), _cx));
  var dataPropsToTransfer = omitProps([], rest);
  return /*#__PURE__*/React.createElement("button", _extends({
    id: id,
    className: tabClasses,
    "aria-selected": active,
    "aria-controls": "".concat(id, "-panel"),
    onClick: function onClick(e) {
      e.preventDefault();

      if (disabled) {
        return;
      }

      onChange(tabIndex);
    },
    onKeyDown: function onKeyDown(e) {
      if (disabled) {
        return;
      } // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_link_role


      if (e.key === ' ' || e.key === 'Enter') {
        e.preventDefault();
        onChange(tabIndex);
      }
    },
    role: "tab",
    tabIndex: disabled ? -1 : 0,
    type: "button"
  }, dataPropsToTransfer), children);
};