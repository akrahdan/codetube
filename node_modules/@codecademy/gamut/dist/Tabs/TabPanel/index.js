function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import cx from 'classnames';
import React from 'react';
import styles from './styles.module.scss';

/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status
 */
export var TabPanel = function TabPanel(_ref) {
  var _cx;

  var children = _ref.children,
      active = _ref.active,
      renderAllPanels = _ref.renderAllPanels,
      id = _ref.id,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("div", {
    id: id // id should be passed by the TabList - confusing, but workable.
    ,
    "aria-labelledby": id.replace('-panel', ''),
    "aria-hidden": !active,
    role: "tabpanel",
    className: cx(className, (_cx = {}, _defineProperty(_cx, styles.active, active), _defineProperty(_cx, styles.hidden, !active), _cx))
  }, active || renderAllPanels ? children : null);
};