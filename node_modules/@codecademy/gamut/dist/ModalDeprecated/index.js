function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { CloseIcon } from '@codecademy/gamut-icons';
import cx from 'classnames';
import React from 'react';
import { ButtonDeprecated } from '../ButtonDeprecated';
import { CardShell } from '../DeprecatedCard';
import { Overlay } from '../Overlay';
import styles from './styles.module.scss';

/**
 * @deprecated  This component is deprecated and will be updated soon.
 *
 * Please check the gamut board for updates on the new version of ModalDeprecated
 */
export var ModalDeprecated = function ModalDeprecated(_ref) {
  var children = _ref.children,
      className = _ref.className,
      onRequestClose = _ref.onRequestClose,
      overlayProps = _ref.overlayProps,
      isOpen = _ref.isOpen,
      hideDefaultCloseButton = _ref.hideDefaultCloseButton,
      ariaLabel = _ref.ariaLabel;
  return /*#__PURE__*/React.createElement(Overlay, _extends({
    isOpen: isOpen
  }, overlayProps, {
    className: cx(styles.modal, overlayProps === null || overlayProps === void 0 ? void 0 : overlayProps.className),
    onRequestClose: onRequestClose,
    "data-testid": "modal"
  }), /*#__PURE__*/React.createElement(CardShell, {
    className: cx(styles.modalBody, className),
    "aria-hidden": "false",
    "aria-modal": "true",
    role: "dialog",
    "aria-label": ariaLabel
  }, !hideDefaultCloseButton && /*#__PURE__*/React.createElement("div", {
    className: styles.closeButtonContainer,
    "data-testid": "modal-default-close-button"
  }, /*#__PURE__*/React.createElement(ButtonDeprecated, {
    flat: true,
    theme: "brand-dark-blue",
    fitText: true,
    onClick: onRequestClose,
    className: styles.closeButton
  }, /*#__PURE__*/React.createElement(CloseIcon, {
    width: 22,
    height: 22,
    className: styles.closeIcon
  }))), children));
};