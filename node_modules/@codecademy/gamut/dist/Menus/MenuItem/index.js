function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import cx from 'classnames';
import React from 'react';
import styles from './styles.module.scss';

/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status
 */
export var MenuItem = function MenuItem(_ref) {
  var _ref$as = _ref.as,
      As = _ref$as === void 0 ? 'a' : _ref$as,
      _ref$asProps = _ref.asProps,
      asProps = _ref$asProps === void 0 ? {} : _ref$asProps,
      selected = _ref.selected,
      children = _ref.children,
      ariaLabel = _ref.ariaLabel;
  var childClassName = cx(styles.link, asProps.className);
  return /*#__PURE__*/React.createElement("li", {
    className: cx(styles.menuItem, _defineProperty({}, styles.selected, selected))
  }, /*#__PURE__*/React.createElement(As, _extends({}, asProps, {
    className: childClassName,
    "aria-label": ariaLabel
  }), children));
};