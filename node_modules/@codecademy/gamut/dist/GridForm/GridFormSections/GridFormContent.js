import React from 'react';
import { useFormContext } from 'react-hook-form';
import { GridFormInputGroup } from '../GridFormInputGroup';
export var GridFormContent = function GridFormContent(_ref) {
  var _errors$field$name, _field$validation;

  var field = _ref.field,
      showRequired = _ref.showRequired;

  var _useFormContext = useFormContext(),
      register = _useFormContext.register,
      errors = _useFormContext.errors,
      setValue = _useFormContext.setValue;
  /**
   * Keep track of the first error in this form.
   * This is so we only add the correct aria-live props on the first error.
   */


  var isFirstError = Object.keys(errors)[0] === field.name;
  var errorMessage = (_errors$field$name = errors[field.name]) === null || _errors$field$name === void 0 ? void 0 : _errors$field$name.message;
  var requiredBoolean = !!(field.type !== 'hidden' && field.type !== 'sweet-container' && (_field$validation = field.validation) !== null && _field$validation !== void 0 && _field$validation.required);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GridFormInputGroup, {
    error: errorMessage,
    isFirstError: isFirstError,
    field: field,
    key: field.name,
    register: register,
    setValue: setValue,
    required: requiredBoolean,
    showRequired: showRequired
  }));
};