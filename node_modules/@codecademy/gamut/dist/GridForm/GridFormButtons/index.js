function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Box } from '../../Box';
import { CTAButton, FillButton, TextButton } from '../../Button';
import { ButtonDeprecated } from '../../ButtonDeprecated';
import { Column } from '../../Layout';
var positions = {
  left: 'flex-start',
  center: 'center',
  right: 'flex-end',
  stretch: 'stretch'
};
export var GridFormButtons = function GridFormButtons(props) {
  var getButton = function getButton() {
    switch (props.type) {
      case 'cta':
        return /*#__PURE__*/React.createElement(CTAButton, {
          type: "submit",
          mode: props.mode,
          disabled: props.disabled
        }, props.contents);

      case 'business':
        /**
         * There are current designs that currently rely on the deprecated button.
         * Primarily business components such as /WorkerSupportApplication/index.tsx,
         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx
         * currently using brand-blue variant of the deprecated button. With the later two also using the also
         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button
         * can be removed.
         */
        return /*#__PURE__*/React.createElement(ButtonDeprecated, {
          disabled: props.disabled,
          outline: props.outline,
          theme: props.theme,
          type: "submit"
        }, props.contents);

      default:
        return /*#__PURE__*/React.createElement(FillButton, {
          type: "submit",
          mode: props.mode,
          disabled: props.disabled
        }, props.contents);
    }
  };

  return /*#__PURE__*/React.createElement(Column, {
    size: props.size
  }, /*#__PURE__*/React.createElement(Box, {
    mb: 8,
    alignSelf: "center",
    justifySelf: positions[props.position || 'left']
  }, props.cancel && /*#__PURE__*/React.createElement(TextButton, _extends({}, props.cancel, {
    mr: 32,
    "data-testid": "cancel-button"
  })), getButton()));
};