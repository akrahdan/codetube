function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { createButtonComponent } from './shared';
import { iconSizeVariants, textButtonVariants } from './variants';
var IconButtonInner = createButtonComponent(iconSizeVariants, textButtonVariants);
export var IconButton = /*#__PURE__*/forwardRef(function IconButton(_ref, ref) {
  var Icon = _ref.icon,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'secondary' : _ref$variant,
      props = _objectWithoutProperties(_ref, ["icon", "variant"]);

  return /*#__PURE__*/React.createElement(IconButtonInner, _extends({}, props, {
    variant: variant,
    ref: ref
  }), Icon && /*#__PURE__*/React.createElement(Icon, {
    width: "calc(100% - 14px)",
    height: "calc(100% - 14px)",
    "aria-hidden": true
  }));
});