import React, { ReactNode } from 'react';
import { ButtonDeprecatedBaseProps } from '../ButtonDeprecatedBase';
export declare const buttonPresetThemes: {
    readonly secondary: "mint";
    readonly platform: "greyblue";
    readonly lantern: "darkmint";
    readonly royalblue: "brand-purple";
};
declare const themes: readonly ["hyper", "navy", "red", "white", "brand-red", "brand-yellow", "brand-purple", "brand-dark-blue", "brand-blue", "mint", "darkmint", "grey", "greyblue"];
export declare type ButtonDeprecatedThemes = keyof typeof buttonPresetThemes | typeof themes[number];
export declare type ButtonDeprecatedProps = ButtonDeprecatedBaseProps & {
    /**
     * Whether button should behave like a block element or inline.
     */
    block?: boolean;
    /**
     * Capitalize the text of the button.
     */
    caps?: boolean;
    children: ReactNode;
    /**
     * Disables the button and adds visual indicators to show it is not interactive.
     */
    disabled?: boolean;
    /**
     * Variant that displays the button as flat.
     */
    flat?: boolean;
    /**
     * Adds a pulsing animation to the button
     */
    go?: boolean;
    /**
     * Changes the button to a link with no visual indication
     */
    href?: string;
    /**
     * Link relationship property to be used with `href`
     */
    rel?: string;
    /**
     * Link target property to be used with `href`
     */
    target?: string;
    id?: string;
    /**
     * Variant that displays the button as an inline link element, but maintains its semantic meaning as a button.
     */
    link?: boolean;
    /**
     * Variant the displays the button as a button that is outlined instead of solid.
     */
    outline?: boolean;
    /**
     *  Variant that rounds the corners of the button
     */
    round?: boolean;
    /**
     * Variant that determines the size of the button
     */
    size?: 'small' | 'large';
    /**
     * Variant that displays the button as a square
     */
    square?: boolean;
    /**
     * Variant that controls the background and text color of the button
     * */
    theme?: ButtonDeprecatedThemes;
    type?: string;
    /**
     * Variant that underlines the text of the button.
     */
    underline?: boolean;
    /**
     *  Determines whether button dimensions should be determined by the content
     */
    fitText?: boolean;
};
/**
 * @deprecated
 * This component is deprecated and is no longer supported.
 *
 * See [FillButon](https://gamut.codecademy.com/storybook/?path=/docs/atoms-button--fill-button#fill-button)
 *
 * @example
 * import { FillButton } fom '@codecademy/gamut';
 *
 * <FillButton variant="primary" />
 */
export declare const ButtonDeprecated: React.FC<ButtonDeprecatedProps>;
export {};
