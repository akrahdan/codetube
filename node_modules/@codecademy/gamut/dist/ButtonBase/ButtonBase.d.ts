import React, { HTMLProps, MutableRefObject } from 'react';
export declare type ButtonBaseElements = HTMLAnchorElement | HTMLButtonElement;
export declare type ButtonBaseRef = ((instance: ButtonBaseElements | null) => void) | MutableRefObject<ButtonBaseElements | null> | null;
export declare type ButtonBaseElementProps = HTMLProps<HTMLAnchorElement | HTMLButtonElement> & {
    as?: never;
    ref?: ButtonBaseRef;
};
export declare enum ButtonSelectors {
    HOVER = "&:hover",
    ACTIVE = "&:active",
    FOCUS = "&:focus",
    DISABLED = "[disabled], &:disabled, &[aria-disabled='true']",
    FOCUS_VISIBLE = " &:focus-visible",
    OUTLINE = "&:before",
    OUTLINE_FOCUS_VISIBLE = "&:focus-visible:before"
}
export declare const ButtonBase: React.ForwardRefExoticComponent<Pick<any, string | number | symbol> & React.RefAttributes<HTMLAnchorElement | HTMLButtonElement>>;
