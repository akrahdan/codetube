import _styled from "@emotion/styled/base";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { styledOptions, system } from '@codecademy/gamut-styles';
import { variance } from '@codecademy/variance';
import React, { forwardRef } from 'react';
import { Pattern } from '../Pattern';
var cardProps = variance.compose(system.layout, system.padding);
var beakVariants = system.variant({
  prop: 'beak',
  base: {
    p: 12,
    '&:after': {
      content: '""',
      width: '1.25rem',
      height: '1.25rem',
      bg: 'inherit',
      transform: 'rotate(45deg)',
      position: 'absolute',
      borderRadiusTopLeft: '2px',
      border: 1,
      borderStyleRight: 'none',
      borderStyleBottom: 'none'
    }
  },
  variants: {
    'bottom-left': {
      '&:after': {
        bottom: 'calc(-0.625rem - 1px)',
        left: '1.5rem',
        transform: 'rotate(225deg)'
      }
    },
    'bottom-right': {
      '&:after': {
        bottom: 'calc(-0.625rem - 1px)',
        right: '1.5rem',
        transform: 'rotate(225deg)'
      }
    },
    'top-left': {
      '&:after': {
        top: 'calc(-0.625rem - 1px)',
        left: '1.5rem',
        transform: 'rotate(45deg)'
      }
    },
    'top-right': {
      '&:after': {
        top: 'calc(-0.625rem - 1px)',
        right: '1.5rem',
        transform: 'rotate(45deg)'
      }
    }
  }
});

var CardWrapper = _styled("div", {
  target: "eq74rko2",
  label: "CardWrapper"
})(system.css({
  maxWidth: '100%',
  position: 'relative',
  display: 'inline-block',
  textColor: 'text',
  zIndex: 1
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRG9CIiwiZmlsZSI6Ii4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZE9wdGlvbnMsIHN5c3RlbSB9IGZyb20gJ0Bjb2RlY2FkZW15L2dhbXV0LXN0eWxlcyc7XG5pbXBvcnQgeyBTdHlsZVByb3BzLCB2YXJpYW5jZSB9IGZyb20gJ0Bjb2RlY2FkZW15L3ZhcmlhbmNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRQcm9wcywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUGF0dGVybiB9IGZyb20gJy4uL1BhdHRlcm4nO1xuXG5jb25zdCBjYXJkUHJvcHMgPSB2YXJpYW5jZS5jb21wb3NlKHN5c3RlbS5sYXlvdXQsIHN5c3RlbS5wYWRkaW5nKTtcblxuY29uc3QgYmVha1ZhcmlhbnRzID0gc3lzdGVtLnZhcmlhbnQoe1xuICBwcm9wOiAnYmVhaycsXG4gIGJhc2U6IHtcbiAgICBwOiAxMixcbiAgICAnJjphZnRlcic6IHtcbiAgICAgIGNvbnRlbnQ6ICdcIlwiJyxcbiAgICAgIHdpZHRoOiAnMS4yNXJlbScsXG4gICAgICBoZWlnaHQ6ICcxLjI1cmVtJyxcbiAgICAgIGJnOiAnaW5oZXJpdCcsXG4gICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgYm9yZGVyUmFkaXVzVG9wTGVmdDogJzJweCcsXG4gICAgICBib3JkZXI6IDEsXG4gICAgICBib3JkZXJTdHlsZVJpZ2h0OiAnbm9uZScsXG4gICAgICBib3JkZXJTdHlsZUJvdHRvbTogJ25vbmUnLFxuICAgIH0sXG4gIH0sXG4gIHZhcmlhbnRzOiB7XG4gICAgJ2JvdHRvbS1sZWZ0Jzoge1xuICAgICAgJyY6YWZ0ZXInOiB7XG4gICAgICAgIGJvdHRvbTogJ2NhbGMoLTAuNjI1cmVtIC0gMXB4KScsXG4gICAgICAgIGxlZnQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMjI1ZGVnKScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgJ2JvdHRvbS1yaWdodCc6IHtcbiAgICAgICcmOmFmdGVyJzoge1xuICAgICAgICBib3R0b206ICdjYWxjKC0wLjYyNXJlbSAtIDFweCknLFxuICAgICAgICByaWdodDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgyMjVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICAndG9wLWxlZnQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgbGVmdDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSg0NWRlZyknLFxuICAgICAgfSxcbiAgICB9LFxuICAgICd0b3AtcmlnaHQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgcmlnaHQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0pO1xuXG5jb25zdCBDYXJkV3JhcHBlciA9IHN0eWxlZC5kaXYoXG4gIHN5c3RlbS5jc3Moe1xuICAgIG1heFdpZHRoOiAnMTAwJScsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgdGV4dENvbG9yOiAndGV4dCcsXG4gICAgekluZGV4OiAxLFxuICB9KVxuKTtcblxuY29uc3QgQ2FyZFNoYWRvdyA9IHN0eWxlZChQYXR0ZXJuKShcbiAgc3lzdGVtLmNzcyh7XG4gICAgd2lkdGg6IDEsXG4gICAgaGVpZ2h0OiAxLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJy41cmVtJyxcbiAgICBsZWZ0OiAnLS41cmVtJyxcbiAgfSlcbik7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkKCdkaXYnLCBzdHlsZWRPcHRpb25zKTxcbiAgU3R5bGVQcm9wczx0eXBlb2YgYmVha1ZhcmlhbnRzPiAmIFN0eWxlUHJvcHM8dHlwZW9mIGNhcmRQcm9wcz5cbj4oXG4gIHN5c3RlbS5jc3Moe1xuICAgIHA6IDEyLFxuICAgIHpJbmRleDogMSxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBiZzogJ2JhY2tncm91bmQnLFxuICAgIGJvcmRlclJhZGl1czogJzJweCcsXG4gICAgYm9yZGVyOiAxLFxuICAgIG1heFdpZHRoOiAxLFxuICB9KSxcbiAgYmVha1ZhcmlhbnRzLFxuICBjYXJkUHJvcHNcbik7XG5cbmV4cG9ydCB0eXBlIEZsb2F0aW5nQ2FyZFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHBhdHRlcm46IENvbXBvbmVudFByb3BzPHR5cGVvZiBQYXR0ZXJuPlsnbmFtZSddO1xufSAmIENvbXBvbmVudFByb3BzPHR5cGVvZiBDYXJkQm9keT47XG5cbmV4cG9ydCBjb25zdCBGbG9hdGluZ0NhcmQgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBGbG9hdGluZ0NhcmRQcm9wcz4oXG4gICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHBhdHRlcm4gPSAnY2hlY2tlckRlbnNlJywgLi4ucmVzdCB9LCByZWYpID0+IChcbiAgICA8Q2FyZFdyYXBwZXI+XG4gICAgICA8Q2FyZFNoYWRvdyBuYW1lPXtwYXR0ZXJufSAvPlxuICAgICAgPENhcmRCb2R5IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB7Li4ucmVzdH0gcmVmPXtyZWZ9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0NhcmRCb2R5PlxuICAgIDwvQ2FyZFdyYXBwZXI+XG4gIClcbik7XG4iXX0= */");

var CardShadow = /*#__PURE__*/_styled(Pattern, {
  target: "eq74rko1",
  label: "CardShadow"
})(system.css({
  width: 1,
  height: 1,
  position: 'absolute',
  top: '.5rem',
  left: '-.5rem'
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRW1CIiwiZmlsZSI6Ii4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZE9wdGlvbnMsIHN5c3RlbSB9IGZyb20gJ0Bjb2RlY2FkZW15L2dhbXV0LXN0eWxlcyc7XG5pbXBvcnQgeyBTdHlsZVByb3BzLCB2YXJpYW5jZSB9IGZyb20gJ0Bjb2RlY2FkZW15L3ZhcmlhbmNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRQcm9wcywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUGF0dGVybiB9IGZyb20gJy4uL1BhdHRlcm4nO1xuXG5jb25zdCBjYXJkUHJvcHMgPSB2YXJpYW5jZS5jb21wb3NlKHN5c3RlbS5sYXlvdXQsIHN5c3RlbS5wYWRkaW5nKTtcblxuY29uc3QgYmVha1ZhcmlhbnRzID0gc3lzdGVtLnZhcmlhbnQoe1xuICBwcm9wOiAnYmVhaycsXG4gIGJhc2U6IHtcbiAgICBwOiAxMixcbiAgICAnJjphZnRlcic6IHtcbiAgICAgIGNvbnRlbnQ6ICdcIlwiJyxcbiAgICAgIHdpZHRoOiAnMS4yNXJlbScsXG4gICAgICBoZWlnaHQ6ICcxLjI1cmVtJyxcbiAgICAgIGJnOiAnaW5oZXJpdCcsXG4gICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgYm9yZGVyUmFkaXVzVG9wTGVmdDogJzJweCcsXG4gICAgICBib3JkZXI6IDEsXG4gICAgICBib3JkZXJTdHlsZVJpZ2h0OiAnbm9uZScsXG4gICAgICBib3JkZXJTdHlsZUJvdHRvbTogJ25vbmUnLFxuICAgIH0sXG4gIH0sXG4gIHZhcmlhbnRzOiB7XG4gICAgJ2JvdHRvbS1sZWZ0Jzoge1xuICAgICAgJyY6YWZ0ZXInOiB7XG4gICAgICAgIGJvdHRvbTogJ2NhbGMoLTAuNjI1cmVtIC0gMXB4KScsXG4gICAgICAgIGxlZnQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMjI1ZGVnKScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgJ2JvdHRvbS1yaWdodCc6IHtcbiAgICAgICcmOmFmdGVyJzoge1xuICAgICAgICBib3R0b206ICdjYWxjKC0wLjYyNXJlbSAtIDFweCknLFxuICAgICAgICByaWdodDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgyMjVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICAndG9wLWxlZnQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgbGVmdDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSg0NWRlZyknLFxuICAgICAgfSxcbiAgICB9LFxuICAgICd0b3AtcmlnaHQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgcmlnaHQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0pO1xuXG5jb25zdCBDYXJkV3JhcHBlciA9IHN0eWxlZC5kaXYoXG4gIHN5c3RlbS5jc3Moe1xuICAgIG1heFdpZHRoOiAnMTAwJScsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgdGV4dENvbG9yOiAndGV4dCcsXG4gICAgekluZGV4OiAxLFxuICB9KVxuKTtcblxuY29uc3QgQ2FyZFNoYWRvdyA9IHN0eWxlZChQYXR0ZXJuKShcbiAgc3lzdGVtLmNzcyh7XG4gICAgd2lkdGg6IDEsXG4gICAgaGVpZ2h0OiAxLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJy41cmVtJyxcbiAgICBsZWZ0OiAnLS41cmVtJyxcbiAgfSlcbik7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkKCdkaXYnLCBzdHlsZWRPcHRpb25zKTxcbiAgU3R5bGVQcm9wczx0eXBlb2YgYmVha1ZhcmlhbnRzPiAmIFN0eWxlUHJvcHM8dHlwZW9mIGNhcmRQcm9wcz5cbj4oXG4gIHN5c3RlbS5jc3Moe1xuICAgIHA6IDEyLFxuICAgIHpJbmRleDogMSxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBiZzogJ2JhY2tncm91bmQnLFxuICAgIGJvcmRlclJhZGl1czogJzJweCcsXG4gICAgYm9yZGVyOiAxLFxuICAgIG1heFdpZHRoOiAxLFxuICB9KSxcbiAgYmVha1ZhcmlhbnRzLFxuICBjYXJkUHJvcHNcbik7XG5cbmV4cG9ydCB0eXBlIEZsb2F0aW5nQ2FyZFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHBhdHRlcm46IENvbXBvbmVudFByb3BzPHR5cGVvZiBQYXR0ZXJuPlsnbmFtZSddO1xufSAmIENvbXBvbmVudFByb3BzPHR5cGVvZiBDYXJkQm9keT47XG5cbmV4cG9ydCBjb25zdCBGbG9hdGluZ0NhcmQgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBGbG9hdGluZ0NhcmRQcm9wcz4oXG4gICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHBhdHRlcm4gPSAnY2hlY2tlckRlbnNlJywgLi4ucmVzdCB9LCByZWYpID0+IChcbiAgICA8Q2FyZFdyYXBwZXI+XG4gICAgICA8Q2FyZFNoYWRvdyBuYW1lPXtwYXR0ZXJufSAvPlxuICAgICAgPENhcmRCb2R5IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB7Li4ucmVzdH0gcmVmPXtyZWZ9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0NhcmRCb2R5PlxuICAgIDwvQ2FyZFdyYXBwZXI+XG4gIClcbik7XG4iXX0= */");

var CardBody = /*#__PURE__*/_styled('div', _extends({}, {
  target: "eq74rko0",
  label: "CardBody"
}, styledOptions))(system.css({
  p: 12,
  zIndex: 1,
  position: 'relative',
  bg: 'background',
  borderRadius: '2px',
  border: 1,
  maxWidth: 1
}), beakVariants, cardProps, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RWlCIiwiZmlsZSI6Ii4uLy4uL3NyYy9GbG9hdGluZ0NhcmQvRmxvYXRpbmdDYXJkLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZE9wdGlvbnMsIHN5c3RlbSB9IGZyb20gJ0Bjb2RlY2FkZW15L2dhbXV0LXN0eWxlcyc7XG5pbXBvcnQgeyBTdHlsZVByb3BzLCB2YXJpYW5jZSB9IGZyb20gJ0Bjb2RlY2FkZW15L3ZhcmlhbmNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRQcm9wcywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgUGF0dGVybiB9IGZyb20gJy4uL1BhdHRlcm4nO1xuXG5jb25zdCBjYXJkUHJvcHMgPSB2YXJpYW5jZS5jb21wb3NlKHN5c3RlbS5sYXlvdXQsIHN5c3RlbS5wYWRkaW5nKTtcblxuY29uc3QgYmVha1ZhcmlhbnRzID0gc3lzdGVtLnZhcmlhbnQoe1xuICBwcm9wOiAnYmVhaycsXG4gIGJhc2U6IHtcbiAgICBwOiAxMixcbiAgICAnJjphZnRlcic6IHtcbiAgICAgIGNvbnRlbnQ6ICdcIlwiJyxcbiAgICAgIHdpZHRoOiAnMS4yNXJlbScsXG4gICAgICBoZWlnaHQ6ICcxLjI1cmVtJyxcbiAgICAgIGJnOiAnaW5oZXJpdCcsXG4gICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgYm9yZGVyUmFkaXVzVG9wTGVmdDogJzJweCcsXG4gICAgICBib3JkZXI6IDEsXG4gICAgICBib3JkZXJTdHlsZVJpZ2h0OiAnbm9uZScsXG4gICAgICBib3JkZXJTdHlsZUJvdHRvbTogJ25vbmUnLFxuICAgIH0sXG4gIH0sXG4gIHZhcmlhbnRzOiB7XG4gICAgJ2JvdHRvbS1sZWZ0Jzoge1xuICAgICAgJyY6YWZ0ZXInOiB7XG4gICAgICAgIGJvdHRvbTogJ2NhbGMoLTAuNjI1cmVtIC0gMXB4KScsXG4gICAgICAgIGxlZnQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoMjI1ZGVnKScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgJ2JvdHRvbS1yaWdodCc6IHtcbiAgICAgICcmOmFmdGVyJzoge1xuICAgICAgICBib3R0b206ICdjYWxjKC0wLjYyNXJlbSAtIDFweCknLFxuICAgICAgICByaWdodDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgyMjVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICAndG9wLWxlZnQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgbGVmdDogJzEuNXJlbScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSg0NWRlZyknLFxuICAgICAgfSxcbiAgICB9LFxuICAgICd0b3AtcmlnaHQnOiB7XG4gICAgICAnJjphZnRlcic6IHtcbiAgICAgICAgdG9wOiAnY2FsYygtMC42MjVyZW0gLSAxcHgpJyxcbiAgICAgICAgcmlnaHQ6ICcxLjVyZW0nLFxuICAgICAgICB0cmFuc2Zvcm06ICdyb3RhdGUoNDVkZWcpJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn0pO1xuXG5jb25zdCBDYXJkV3JhcHBlciA9IHN0eWxlZC5kaXYoXG4gIHN5c3RlbS5jc3Moe1xuICAgIG1heFdpZHRoOiAnMTAwJScsXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgdGV4dENvbG9yOiAndGV4dCcsXG4gICAgekluZGV4OiAxLFxuICB9KVxuKTtcblxuY29uc3QgQ2FyZFNoYWRvdyA9IHN0eWxlZChQYXR0ZXJuKShcbiAgc3lzdGVtLmNzcyh7XG4gICAgd2lkdGg6IDEsXG4gICAgaGVpZ2h0OiAxLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJy41cmVtJyxcbiAgICBsZWZ0OiAnLS41cmVtJyxcbiAgfSlcbik7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkKCdkaXYnLCBzdHlsZWRPcHRpb25zKTxcbiAgU3R5bGVQcm9wczx0eXBlb2YgYmVha1ZhcmlhbnRzPiAmIFN0eWxlUHJvcHM8dHlwZW9mIGNhcmRQcm9wcz5cbj4oXG4gIHN5c3RlbS5jc3Moe1xuICAgIHA6IDEyLFxuICAgIHpJbmRleDogMSxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBiZzogJ2JhY2tncm91bmQnLFxuICAgIGJvcmRlclJhZGl1czogJzJweCcsXG4gICAgYm9yZGVyOiAxLFxuICAgIG1heFdpZHRoOiAxLFxuICB9KSxcbiAgYmVha1ZhcmlhbnRzLFxuICBjYXJkUHJvcHNcbik7XG5cbmV4cG9ydCB0eXBlIEZsb2F0aW5nQ2FyZFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHBhdHRlcm46IENvbXBvbmVudFByb3BzPHR5cGVvZiBQYXR0ZXJuPlsnbmFtZSddO1xufSAmIENvbXBvbmVudFByb3BzPHR5cGVvZiBDYXJkQm9keT47XG5cbmV4cG9ydCBjb25zdCBGbG9hdGluZ0NhcmQgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBGbG9hdGluZ0NhcmRQcm9wcz4oXG4gICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHBhdHRlcm4gPSAnY2hlY2tlckRlbnNlJywgLi4ucmVzdCB9LCByZWYpID0+IChcbiAgICA8Q2FyZFdyYXBwZXI+XG4gICAgICA8Q2FyZFNoYWRvdyBuYW1lPXtwYXR0ZXJufSAvPlxuICAgICAgPENhcmRCb2R5IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB7Li4ucmVzdH0gcmVmPXtyZWZ9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0NhcmRCb2R5PlxuICAgIDwvQ2FyZFdyYXBwZXI+XG4gIClcbik7XG4iXX0= */");

export var FloatingCard = /*#__PURE__*/forwardRef(function FloatingCard(_ref, ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$pattern = _ref.pattern,
      pattern = _ref$pattern === void 0 ? 'checkerDense' : _ref$pattern,
      rest = _objectWithoutProperties(_ref, ["children", "className", "pattern"]);

  return /*#__PURE__*/React.createElement(CardWrapper, null, /*#__PURE__*/React.createElement(CardShadow, {
    name: pattern
  }), /*#__PURE__*/React.createElement(CardBody, _extends({
    className: className
  }, rest, {
    ref: ref
  }), children));
});