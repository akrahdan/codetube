function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { FocusOn } from 'react-focus-on';
var focusOnStyles = {
  /**
   * Prevent the focus-on wrapper from interfering with parent layout
   */
  display: 'contents'
};
export var FocusTrap = function FocusTrap(_ref) {
  var className = _ref.className,
      children = _ref.children,
      onClickOutside = _ref.onClickOutside,
      onEscapeKey = _ref.onEscapeKey,
      _ref$active = _ref.active,
      active = _ref$active === void 0 ? true : _ref$active,
      _ref$allowPageInterac = _ref.allowPageInteraction,
      allowPageInteraction = _ref$allowPageInterac === void 0 ? false : _ref$allowPageInterac,
      focusOnProps = _ref.focusOnProps;
  return /*#__PURE__*/React.createElement(FocusOn, _extends({
    enabled: active,
    onClickOutside: onClickOutside,
    onEscapeKey: onEscapeKey,
    style: focusOnStyles,
    className: className,
    scrollLock: !allowPageInteraction,
    noIsolation: allowPageInteraction,
    "data-testid": "focus-trap"
  }, focusOnProps), children);
};