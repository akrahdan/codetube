import { StyleProps } from '@codecademy/variance';
import React, { InputHTMLAttributes, ReactNode } from 'react';
import { conditionalRadioInputStyles } from './styles/shared-system-props';
export declare type RadioProps = InputHTMLAttributes<HTMLInputElement> & {
    checked?: boolean;
    disabled?: boolean;
    htmlFor?: string;
    id?: string;
    label?: ReactNode;
    name?: string;
    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;
    required?: boolean;
    tabIndex?: number;
    value?: string;
    readOnly?: boolean;
    error?: boolean;
};
export interface RadioElementProps extends RadioProps, StyleProps<typeof conditionalRadioInputStyles> {
}
export declare const Radio: React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    checked?: boolean | undefined;
    disabled?: boolean | undefined;
    htmlFor?: string | undefined;
    id?: string | undefined;
    label?: ReactNode;
    name?: string | undefined;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    required?: boolean | undefined;
    tabIndex?: number | undefined;
    value?: string | undefined;
    readOnly?: boolean | undefined;
    error?: boolean | undefined;
} & React.RefAttributes<HTMLInputElement>>;
