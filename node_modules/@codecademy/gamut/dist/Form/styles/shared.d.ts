import { conditionalStyleProps } from './shared-system-props';
export declare const colorStates: {
    base: {
        color: "var(--color-navy)";
        placeholder: "var(--color-gray-900)";
        backgroundColor: "var(--color-white)";
        borderColor: "var(--color-gray-600)";
    };
    hover: {
        borderColor: "var(--color-hyper)";
    };
    disabled: {
        color: "var(--color-gray-900)";
        backgroundColor: "var(--color-gray-100)";
        borderColor: "var(--color-gray-900)";
    };
    error: {
        color: "var(--color-red)";
        borderColor: "var(--color-red)";
    };
    valid: {
        color: "var(--color-green)";
    };
    activated: {
        borderColor: "var(--color-navy)";
    };
    dropdown: {
        focused: {
            backgroundColor: "var(--color-gray-100)";
        };
        selected: {
            backgroundColor: "var(--color-gray-300)";
        };
    };
};
export declare const formFieldFocusStyles: import("@emotion/react").SerializedStyles;
export declare const conditionalBorderStyles: ({ error, activated, isFocused, isDisabled, }: conditionalStyleProps) => import("@emotion/react").SerializedStyles | undefined;
export declare const formBaseStyles: import("@emotion/react").SerializedStyles;
export declare const formBaseComponentStyles: import("@emotion/react").SerializedStyles;
export declare const formDropdownStyles: (error: boolean) => import("@emotion/react").SerializedStyles;
export declare const formBaseFieldStyles: import("@emotion/react").SerializedStyles;
export declare const formFieldPaddingStyles: import("@emotion/react").SerializedStyles;
export declare const formFieldStyles: import("@emotion/react").SerializedStyles;
