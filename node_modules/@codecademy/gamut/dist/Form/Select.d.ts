import { StyleProps } from '@codecademy/variance';
import React, { SelectHTMLAttributes } from 'react';
import { conditionalStyles } from './styles/shared-system-props';
export declare type SelectComponentProps = Pick<SelectHTMLAttributes<HTMLSelectElement>, 'disabled' | 'id'> & {
    error?: boolean;
    htmlFor?: string;
    options?: string[] | Record<string, number | string>;
};
export declare type SelectWrapperProps = SelectComponentProps & SelectHTMLAttributes<HTMLSelectElement> & {
    sizeVariant?: 'small' | 'base';
};
export interface SelectProps extends SelectWrapperProps, StyleProps<typeof conditionalStyles> {
}
export declare const Select: React.ForwardRefExoticComponent<Pick<React.SelectHTMLAttributes<HTMLSelectElement>, "disabled" | "id"> & {
    error?: boolean | undefined;
    htmlFor?: string | undefined;
    options?: string[] | Record<string, string | number> | undefined;
} & React.SelectHTMLAttributes<HTMLSelectElement> & {
    sizeVariant?: "small" | "base" | undefined;
} & React.RefAttributes<HTMLSelectElement>>;
