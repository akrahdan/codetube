import { each, isObject } from 'lodash';
import React from 'react';

var formatAsOptions = function formatAsOptions(_ref) {
  var label = _ref.label,
      value = _ref.value,
      key = _ref.key;
  var option = key ? /*#__PURE__*/React.createElement("option", {
    label: label,
    key: key,
    value: value,
    "data-testid": key
  }, label) : /*#__PURE__*/React.createElement("option", {
    label: value,
    key: label,
    value: value,
    "data-testid": label
  }, value);
  return option;
};

export var parseOptions = function parseOptions(_ref2) {
  var options = _ref2.options,
      id = _ref2.id;
  var parsedOptions = [];

  if (options instanceof Array) {
    options.forEach(function (value) {
      var label = id ? "".concat(id, "-").concat(value) : value;
      parsedOptions.push({
        label: label,
        value: value
      });
    });
  } else if (isObject(options)) {
    each(options, function (label, value) {
      var key = id ? "".concat(id, "-").concat(value) : value;
      parsedOptions.push({
        label: label,
        value: value,
        key: key
      });
    });
  }

  return parsedOptions;
};
export var parseSelectOptions = function parseSelectOptions(props) {
  return parseOptions(props).map(formatAsOptions);
};