import _styled from "@emotion/styled/base";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { styledOptions, system, variant } from '@codecademy/gamut-styles';
import { variance } from '@codecademy/variance';
var rows = {
  1: 1,
  2: 2,
  3: 3
};
var columns = {
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  10: 10,
  11: 11
};
var gridProps = variance.create({
  rowOffset: {
    property: 'gridRowStart',
    scale: rows,
    transform: function transform(row) {
      return row === 0 ? 'auto' : row;
    }
  },
  rowspan: {
    property: 'gridRowEnd',
    scale: rows,
    transform: function transform(row) {
      return "span ".concat(row);
    }
  },
  size: {
    property: 'gridColumnEnd',
    scale: _objectSpread(_objectSpread({}, columns), {}, {
      12: 12
    }),
    transform: function transform(col) {
      return "span ".concat(col);
    }
  },
  offset: {
    property: 'gridColumnStart',
    scale: _objectSpread({
      0: 0
    }, columns),
    transform: function transform(col) {
      return col === 0 ? 'auto' : "".concat(col + 1);
    }
  }
});
var columnVariants = variant({
  variants: {
    fitContent: {
      display: 'grid',
      gridTemplateColumns: 'minmax(0, 1fr)'
    }
  }
});
var columnProps = variance.compose(system.layout, system.space, system.grid, gridProps);
export var Column = /*#__PURE__*/_styled('div', _extends({}, {
  target: "e1y0e4q30",
  label: "Column"
}, styledOptions(columnProps.propNames)))(columnProps({
  size: 12
}), columnVariants, columnProps, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MYXlvdXQvQ29sdW1uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRXNCIiwiZmlsZSI6Ii4uLy4uL3NyYy9MYXlvdXQvQ29sdW1uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZE9wdGlvbnMsIHN5c3RlbSwgdmFyaWFudCB9IGZyb20gJ0Bjb2RlY2FkZW15L2dhbXV0LXN0eWxlcyc7XG5pbXBvcnQgeyBTdHlsZVByb3BzLCB2YXJpYW5jZSB9IGZyb20gJ0Bjb2RlY2FkZW15L3ZhcmlhbmNlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuY29uc3Qgcm93cyA9IHsgMTogMSwgMjogMiwgMzogMyB9O1xuXG5jb25zdCBjb2x1bW5zID0ge1xuICAxOiAxLFxuICAyOiAyLFxuICAzOiAzLFxuICA0OiA0LFxuICA1OiA1LFxuICA2OiA2LFxuICA3OiA3LFxuICA4OiA4LFxuICA5OiA5LFxuICAxMDogMTAsXG4gIDExOiAxMSxcbn07XG5cbmNvbnN0IGdyaWRQcm9wcyA9IHZhcmlhbmNlLmNyZWF0ZSh7XG4gIHJvd09mZnNldDoge1xuICAgIHByb3BlcnR5OiAnZ3JpZFJvd1N0YXJ0JyxcbiAgICBzY2FsZTogcm93cyxcbiAgICB0cmFuc2Zvcm06IChyb3c6IG51bWJlcikgPT4gKHJvdyA9PT0gMCA/ICdhdXRvJyA6IHJvdyksXG4gIH0sXG4gIHJvd3NwYW46IHtcbiAgICBwcm9wZXJ0eTogJ2dyaWRSb3dFbmQnLFxuICAgIHNjYWxlOiByb3dzLFxuICAgIHRyYW5zZm9ybTogKHJvdykgPT4gYHNwYW4gJHtyb3d9YCxcbiAgfSxcbiAgc2l6ZToge1xuICAgIHByb3BlcnR5OiAnZ3JpZENvbHVtbkVuZCcsXG4gICAgc2NhbGU6IHsgLi4uY29sdW1ucywgMTI6IDEyIH0sXG4gICAgdHJhbnNmb3JtOiAoY29sOiBudW1iZXIpID0+IGBzcGFuICR7Y29sfWAsXG4gIH0sXG4gIG9mZnNldDoge1xuICAgIHByb3BlcnR5OiAnZ3JpZENvbHVtblN0YXJ0JyxcbiAgICBzY2FsZTogeyAwOiAwLCAuLi5jb2x1bW5zIH0sXG4gICAgdHJhbnNmb3JtOiAoY29sOiBudW1iZXIpID0+IChjb2wgPT09IDAgPyAnYXV0bycgOiBgJHtjb2wgKyAxfWApLFxuICB9LFxufSk7XG5cbmNvbnN0IGNvbHVtblZhcmlhbnRzID0gdmFyaWFudCh7XG4gIHZhcmlhbnRzOiB7XG4gICAgZml0Q29udGVudDoge1xuICAgICAgZGlzcGxheTogJ2dyaWQnLFxuICAgICAgZ3JpZFRlbXBsYXRlQ29sdW1uczogJ21pbm1heCgwLCAxZnIpJyxcbiAgICB9LFxuICB9LFxufSk7XG5cbmNvbnN0IGNvbHVtblByb3BzID0gdmFyaWFuY2UuY29tcG9zZShcbiAgc3lzdGVtLmxheW91dCxcbiAgc3lzdGVtLnNwYWNlLFxuICBzeXN0ZW0uZ3JpZCxcbiAgZ3JpZFByb3BzXG4pO1xuXG5leHBvcnQgdHlwZSBDb2x1bW5WYXJpYW50UHJvcHMgPSBTdHlsZVByb3BzPHR5cGVvZiBjb2x1bW5WYXJpYW50cz47XG5leHBvcnQgdHlwZSBDb2x1bW5TdHlsZVByb3BzID0gU3R5bGVQcm9wczx0eXBlb2YgY29sdW1uUHJvcHM+O1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbHVtblByb3BzIGV4dGVuZHMgQ29sdW1uVmFyaWFudFByb3BzLCBDb2x1bW5TdHlsZVByb3BzIHt9XG5cbmV4cG9ydCBjb25zdCBDb2x1bW4gPSBzdHlsZWQoXG4gICdkaXYnLFxuICBzdHlsZWRPcHRpb25zKGNvbHVtblByb3BzLnByb3BOYW1lcylcbik8Q29sdW1uUHJvcHM+KGNvbHVtblByb3BzKHsgc2l6ZTogMTIgfSksIGNvbHVtblZhcmlhbnRzLCBjb2x1bW5Qcm9wcyk7XG5cbkNvbHVtbi5kZWZhdWx0UHJvcHMgPSB7IHZhcmlhbnQ6ICdmaXRDb250ZW50JyB9O1xuIl19 */");
Column.defaultProps = {
  variant: 'fitContent'
};