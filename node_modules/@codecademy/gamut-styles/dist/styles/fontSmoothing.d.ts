declare const smoothing: {
    pixel: {
        WebkitFontSmoothing: string;
        MozOsxFontSmoothing: string;
    };
    subpixel: {
        WebkitFontSmoothing: string;
        MozOsxFontSmoothing: string;
    };
};
export declare const fontSmoothing: import("@codecademy/variance/dist/types/config").Parser<import("@codecademy/variance/dist/types/config").TransformerMap<{
    fontSmoothing: {
        property: "fontSmooth";
        scale: {
            pixel: string;
            subpixel: string;
        };
        transform: (value: keyof typeof smoothing) => {
            WebkitFontSmoothing: string;
            MozOsxFontSmoothing: string;
        } | {
            WebkitFontSmoothing: string;
            MozOsxFontSmoothing: string;
        };
    };
}>>;
export declare const fontSmoothPixel: import("@codecademy/variance").CSSObject;
export declare const fontSmoothSubpixel: import("@codecademy/variance").CSSObject;
export {};
