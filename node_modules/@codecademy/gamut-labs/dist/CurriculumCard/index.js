import { Card, FlexBox, ProLabel, Text } from '@codecademy/gamut';
import { pxRem } from '@codecademy/gamut-styles';
import React from 'react';
import { Footer } from './Footer/index';
import { Image } from './Image/index';
import { Subtitle } from './Subtitle';
var cardHeight = 180;
var cardStyles = {
  inProgress: 'yellow',
  completed: 'navy'
};
export var CurriculumCard = function CurriculumCard(_ref) {
  var difficulty = _ref.difficulty,
      _ref$headingLevel = _ref.headingLevel,
      headingLevel = _ref$headingLevel === void 0 ? 'h3' : _ref$headingLevel,
      image = _ref.image,
      _ref$isFullSize = _ref.isFullSize,
      isFullSize = _ref$isFullSize === void 0 ? false : _ref$isFullSize,
      progressState = _ref.progressState,
      scope = _ref.scope,
      scopeCount = _ref.scopeCount,
      showProLogo = _ref.showProLogo,
      tag = _ref.tag,
      tagColor = _ref.tagColor,
      text = _ref.text,
      title = _ref.title;
  var boxVariant = progressState && cardStyles[progressState];
  var mode = progressState === 'completed' ? 'dark' : 'light';
  return /*#__PURE__*/React.createElement(Card, {
    display: "grid",
    gridTemplateRows: "repeat(3, max-content) 1fr max-content",
    minHeight: isFullSize ? pxRem(cardHeight * 2 + 32) : pxRem(cardHeight),
    variant: boxVariant !== null && boxVariant !== void 0 ? boxVariant : 'white',
    shadow: "medium",
    position: "relative"
  }, /*#__PURE__*/React.createElement(Text, {
    display: "flex",
    fontSize: 14,
    mb: 12,
    fontFamily: "accent",
    textTransform: "capitalize"
  }, showProLogo && /*#__PURE__*/React.createElement(ProLabel, {
    alignSelf: "center",
    mr: 8,
    mode: mode
  }), text), /*#__PURE__*/React.createElement(Text, {
    as: headingLevel,
    mb: 4,
    fontSize: 20
  }, title), /*#__PURE__*/React.createElement(FlexBox, {
    flexWrap: "wrap"
  }, !progressState && /*#__PURE__*/React.createElement(Subtitle, {
    scope: scope,
    scopeCount: scopeCount,
    difficulty: difficulty
  })), /*#__PURE__*/React.createElement(FlexBox, {
    center: true,
    pb: 16
  }, isFullSize && image && /*#__PURE__*/React.createElement(Image, {
    image: image,
    progressState: progressState
  })), /*#__PURE__*/React.createElement(Footer, {
    progressState: progressState,
    tag: tag,
    tagColor: tagColor
  }));
};