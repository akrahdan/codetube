import _styled from "@emotion/styled/base";

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

import { Anchor, Box, FlexBox, GridBox, Pattern } from '@codecademy/gamut';
import { colors } from '@codecademy/gamut-styles';
import React from 'react';
import darkQuotes from '../assets/darkQuotes.svg';
import lightQuotes from '../assets/lightQuotes.svg';
import { Avatar } from '../Avatar';
import { Byline } from '../Byline';
var modes = {
  dark: {
    cardBackground: colors.navy,
    textColor: colors.beige,
    quoteIcon: darkQuotes
  },
  light: {
    cardBackground: colors.beige,
    textColor: colors.navy,
    quoteIcon: lightQuotes
  }
};

var Shadow = /*#__PURE__*/_styled(Pattern, {
  target: "e5lkuj64",
  label: "Shadow"
})("display:block;position:absolute;bottom:0;right:0;height:calc(100% - 1rem);width:calc(100% - 1rem);color:", function (_ref) {
  var mode = _ref.mode;
  return modes[mode].cardBackground;
}, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UZXN0aW1vbmlhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEJxRCIsImZpbGUiOiIuLi8uLi9zcmMvVGVzdGltb25pYWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5jaG9yLFxuICBCb3gsXG4gIEZsZXhCb3gsXG4gIEdyaWRCb3gsXG4gIFBhdHRlcm4sXG4gIFZpc3VhbFRoZW1lLFxufSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRhcmtRdW90ZXMgZnJvbSAnLi4vYXNzZXRzL2RhcmtRdW90ZXMuc3ZnJztcbmltcG9ydCBsaWdodFF1b3RlcyBmcm9tICcuLi9hc3NldHMvbGlnaHRRdW90ZXMuc3ZnJztcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL0F2YXRhcic7XG5pbXBvcnQgeyBCeWxpbmUgfSBmcm9tICcuLi9CeWxpbmUnO1xuXG5jb25zdCBtb2RlcyA9IHtcbiAgZGFyazoge1xuICAgIGNhcmRCYWNrZ3JvdW5kOiBjb2xvcnMubmF2eSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5iZWlnZSxcbiAgICBxdW90ZUljb246IGRhcmtRdW90ZXMsXG4gIH0sXG4gIGxpZ2h0OiB7XG4gICAgY2FyZEJhY2tncm91bmQ6IGNvbG9ycy5iZWlnZSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5uYXZ5LFxuICAgIHF1b3RlSWNvbjogbGlnaHRRdW90ZXMsXG4gIH0sXG59O1xuXG5jb25zdCBTaGFkb3cgPSBzdHlsZWQoUGF0dGVybik8eyBtb2RlOiBWaXN1YWxUaGVtZSB9PmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxcmVtKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDFyZW0pO1xuICBjb2xvcjogJHsoeyBtb2RlIH0pID0+IG1vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbmA7XG5cbmNvbnN0IFRlc3RpbW9uaWFsQ2FyZCA9IHN0eWxlZChHcmlkQm94KSgpO1xuXG5jb25zdCBUZXN0aW1vbmlhbFdyYXBwZXIgPSBzdHlsZWQoQm94KTx7IG1vZGU6IFZpc3VhbFRoZW1lIH0+YFxuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgfVxuICB9XG5cbiAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgICR7KHsgbW9kZSB9KSA9PiBgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke21vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbiAgICAgIGNvbG9yOiAke21vZGVzW21vZGVdLnRleHRDb2xvcn07XG4gICAgYH1cbiAgICBjbGlwLXBhdGg6IGluc2V0KDAgMXJlbSAxcmVtIDApO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcbiAgfVxuYDtcblxuY29uc3QgUXVvdGVJY29uID0gc3R5bGVkLmltZ2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC0yLjVyZW07XG5gO1xuXG5jb25zdCBRdW90ZVRleHQgPSBzdHlsZWQucWBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBxdW90ZXM6IG5vbmU7XG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5mb250U2l6ZVsyNl19O1xuICBsaW5lLWhlaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuYDtcblxuZXhwb3J0IHR5cGUgVGVzdGltb25pYWxQcm9wcyA9IHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIG9jY3VwYXRpb246IHN0cmluZztcbiAgcXVvdGU6IHN0cmluZztcbiAgbW9kZTogVmlzdWFsVGhlbWU7XG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIHdvcmtwbGFjZSBvciBpbnN0aXR1dGlvblxuICAgKi9cbiAgY29tcGFueT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFuIGF2YXRhciBwb3J0cmFpdFxuICAgKi9cbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxvbmcgcXVvdGUgdG8gcmVwbGFjZSB0aGUgdGV4dCB3aXRoIGF0IFNNIHZpZXdwb3J0cyBhbmQgaGlnaGVyLlxuICAgKi9cbiAgbG9uZ1F1b3RlPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBUZXN0aW1vbmlhbDogUmVhY3QuRkM8VGVzdGltb25pYWxQcm9wcz4gPSAoe1xuICBmaXJzdE5hbWUsXG4gIGxhc3ROYW1lLFxuICBvY2N1cGF0aW9uLFxuICBxdW90ZSxcbiAgbW9kZSA9ICdsaWdodCcsXG4gIGNvbXBhbnksXG4gIGltYWdlVXJsLFxuICBsb25nUXVvdGUsXG4gIGhyZWYsXG4gIG9uQ2xpY2ssXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRlc3RpbW9uaWFsV3JhcHBlciBwb3NpdGlvbj1cInJlbGF0aXZlXCIgbW9kZT17bW9kZX0+XG4gICAgICA8U2hhZG93IG5hbWU9XCJjaGVja2VyRGVuc2VcIiBtb2RlPXttb2RlfSAvPlxuICAgICAgPEFuY2hvclxuICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICB2YXJpYW50PVwiaW50ZXJmYWNlXCJcbiAgICAgICAgZGlzcGxheT1cImJsb2NrXCJcbiAgICAgICAgaGVpZ2h0PVwiaW5oZXJpdFwiXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICA+XG4gICAgICAgIDxUZXN0aW1vbmlhbENhcmQ+XG4gICAgICAgICAgPEZsZXhCb3hcbiAgICAgICAgICAgIHB4PXt7IF86IDI0IH19XG4gICAgICAgICAgICBwdD17eyBfOiAzMiB9fVxuICAgICAgICAgICAgcGI9e3sgXzogNDggfX1cbiAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJyb3dcIlxuICAgICAgICAgICAgZmxleFdyYXA9XCJ3cmFwXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJzdGFydFwiXG4gICAgICAgICAgICB0ZXh0Q29sb3I9e21vZGUgPT09ICdkYXJrJyA/ICdiZWlnZScgOiAnbmF2eSd9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEZsZXhCb3ggZmxleFdyYXA9XCJ3cmFwXCIgZmxleEdyb3c9ezF9IGZsZXhCYXNpcz1cIjBcIj5cbiAgICAgICAgICAgICAge2ltYWdlVXJsICYmIChcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPVwiNzdweFwiIGhlaWdodD1cIjc3cHhcIiBtYj17MTZ9IG1yPXsxNn0+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyIGFsdD1cIlwiIHNyYz17aW1hZ2VVcmx9IG1vZGU9e21vZGV9IC8+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxCb3ggbWI9ezE2fSBtcj17MTZ9IG1pbldpZHRoPVwiOS41cmVtXCI+XG4gICAgICAgICAgICAgICAgPEJ5bGluZVxuICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lPXtmaXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICBvY2N1cGF0aW9uPXtvY2N1cGF0aW9ufVxuICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgIGxhc3ROYW1lPXtsYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDxCb3ggZmxleEdyb3c9ezk5OTl9IGZsZXhTaHJpbms9ezF9IGZsZXhCYXNpcz1cIjBcIiBtaW5XaWR0aD1cIjcwJVwiPlxuICAgICAgICAgICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8UXVvdGVJY29uXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDlweFwiXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI3NHB4XCJcbiAgICAgICAgICAgICAgICAgIHNyYz17bW9kZXNbbW9kZV0ucXVvdGVJY29ufVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPFF1b3RlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtsb25nUXVvdGUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBhcz1cInNwYW5cIiBkaXNwbGF5PXt7IF86ICdpbml0aWFsJywgc206ICdub25lJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtxdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IGFzPVwic3BhblwiIGRpc3BsYXk9e3sgXzogJ25vbmUnLCBzbTogJ2luaXRpYWwnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvbmdRdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBxdW90ZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1F1b3RlVGV4dD5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8L0ZsZXhCb3g+XG4gICAgICAgIDwvVGVzdGltb25pYWxDYXJkPlxuICAgICAgPC9BbmNob3I+XG4gICAgPC9UZXN0aW1vbmlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */"));

var TestimonialCard = /*#__PURE__*/_styled(GridBox, {
  target: "e5lkuj63",
  label: "TestimonialCard"
})(process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UZXN0aW1vbmlhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0N3QiIsImZpbGUiOiIuLi8uLi9zcmMvVGVzdGltb25pYWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5jaG9yLFxuICBCb3gsXG4gIEZsZXhCb3gsXG4gIEdyaWRCb3gsXG4gIFBhdHRlcm4sXG4gIFZpc3VhbFRoZW1lLFxufSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRhcmtRdW90ZXMgZnJvbSAnLi4vYXNzZXRzL2RhcmtRdW90ZXMuc3ZnJztcbmltcG9ydCBsaWdodFF1b3RlcyBmcm9tICcuLi9hc3NldHMvbGlnaHRRdW90ZXMuc3ZnJztcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL0F2YXRhcic7XG5pbXBvcnQgeyBCeWxpbmUgfSBmcm9tICcuLi9CeWxpbmUnO1xuXG5jb25zdCBtb2RlcyA9IHtcbiAgZGFyazoge1xuICAgIGNhcmRCYWNrZ3JvdW5kOiBjb2xvcnMubmF2eSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5iZWlnZSxcbiAgICBxdW90ZUljb246IGRhcmtRdW90ZXMsXG4gIH0sXG4gIGxpZ2h0OiB7XG4gICAgY2FyZEJhY2tncm91bmQ6IGNvbG9ycy5iZWlnZSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5uYXZ5LFxuICAgIHF1b3RlSWNvbjogbGlnaHRRdW90ZXMsXG4gIH0sXG59O1xuXG5jb25zdCBTaGFkb3cgPSBzdHlsZWQoUGF0dGVybik8eyBtb2RlOiBWaXN1YWxUaGVtZSB9PmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxcmVtKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDFyZW0pO1xuICBjb2xvcjogJHsoeyBtb2RlIH0pID0+IG1vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbmA7XG5cbmNvbnN0IFRlc3RpbW9uaWFsQ2FyZCA9IHN0eWxlZChHcmlkQm94KSgpO1xuXG5jb25zdCBUZXN0aW1vbmlhbFdyYXBwZXIgPSBzdHlsZWQoQm94KTx7IG1vZGU6IFZpc3VhbFRoZW1lIH0+YFxuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgfVxuICB9XG5cbiAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgICR7KHsgbW9kZSB9KSA9PiBgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke21vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbiAgICAgIGNvbG9yOiAke21vZGVzW21vZGVdLnRleHRDb2xvcn07XG4gICAgYH1cbiAgICBjbGlwLXBhdGg6IGluc2V0KDAgMXJlbSAxcmVtIDApO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcbiAgfVxuYDtcblxuY29uc3QgUXVvdGVJY29uID0gc3R5bGVkLmltZ2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC0yLjVyZW07XG5gO1xuXG5jb25zdCBRdW90ZVRleHQgPSBzdHlsZWQucWBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBxdW90ZXM6IG5vbmU7XG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5mb250U2l6ZVsyNl19O1xuICBsaW5lLWhlaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuYDtcblxuZXhwb3J0IHR5cGUgVGVzdGltb25pYWxQcm9wcyA9IHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIG9jY3VwYXRpb246IHN0cmluZztcbiAgcXVvdGU6IHN0cmluZztcbiAgbW9kZTogVmlzdWFsVGhlbWU7XG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIHdvcmtwbGFjZSBvciBpbnN0aXR1dGlvblxuICAgKi9cbiAgY29tcGFueT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFuIGF2YXRhciBwb3J0cmFpdFxuICAgKi9cbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxvbmcgcXVvdGUgdG8gcmVwbGFjZSB0aGUgdGV4dCB3aXRoIGF0IFNNIHZpZXdwb3J0cyBhbmQgaGlnaGVyLlxuICAgKi9cbiAgbG9uZ1F1b3RlPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBUZXN0aW1vbmlhbDogUmVhY3QuRkM8VGVzdGltb25pYWxQcm9wcz4gPSAoe1xuICBmaXJzdE5hbWUsXG4gIGxhc3ROYW1lLFxuICBvY2N1cGF0aW9uLFxuICBxdW90ZSxcbiAgbW9kZSA9ICdsaWdodCcsXG4gIGNvbXBhbnksXG4gIGltYWdlVXJsLFxuICBsb25nUXVvdGUsXG4gIGhyZWYsXG4gIG9uQ2xpY2ssXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRlc3RpbW9uaWFsV3JhcHBlciBwb3NpdGlvbj1cInJlbGF0aXZlXCIgbW9kZT17bW9kZX0+XG4gICAgICA8U2hhZG93IG5hbWU9XCJjaGVja2VyRGVuc2VcIiBtb2RlPXttb2RlfSAvPlxuICAgICAgPEFuY2hvclxuICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICB2YXJpYW50PVwiaW50ZXJmYWNlXCJcbiAgICAgICAgZGlzcGxheT1cImJsb2NrXCJcbiAgICAgICAgaGVpZ2h0PVwiaW5oZXJpdFwiXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICA+XG4gICAgICAgIDxUZXN0aW1vbmlhbENhcmQ+XG4gICAgICAgICAgPEZsZXhCb3hcbiAgICAgICAgICAgIHB4PXt7IF86IDI0IH19XG4gICAgICAgICAgICBwdD17eyBfOiAzMiB9fVxuICAgICAgICAgICAgcGI9e3sgXzogNDggfX1cbiAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJyb3dcIlxuICAgICAgICAgICAgZmxleFdyYXA9XCJ3cmFwXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJzdGFydFwiXG4gICAgICAgICAgICB0ZXh0Q29sb3I9e21vZGUgPT09ICdkYXJrJyA/ICdiZWlnZScgOiAnbmF2eSd9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEZsZXhCb3ggZmxleFdyYXA9XCJ3cmFwXCIgZmxleEdyb3c9ezF9IGZsZXhCYXNpcz1cIjBcIj5cbiAgICAgICAgICAgICAge2ltYWdlVXJsICYmIChcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPVwiNzdweFwiIGhlaWdodD1cIjc3cHhcIiBtYj17MTZ9IG1yPXsxNn0+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyIGFsdD1cIlwiIHNyYz17aW1hZ2VVcmx9IG1vZGU9e21vZGV9IC8+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxCb3ggbWI9ezE2fSBtcj17MTZ9IG1pbldpZHRoPVwiOS41cmVtXCI+XG4gICAgICAgICAgICAgICAgPEJ5bGluZVxuICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lPXtmaXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICBvY2N1cGF0aW9uPXtvY2N1cGF0aW9ufVxuICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgIGxhc3ROYW1lPXtsYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDxCb3ggZmxleEdyb3c9ezk5OTl9IGZsZXhTaHJpbms9ezF9IGZsZXhCYXNpcz1cIjBcIiBtaW5XaWR0aD1cIjcwJVwiPlxuICAgICAgICAgICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8UXVvdGVJY29uXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDlweFwiXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI3NHB4XCJcbiAgICAgICAgICAgICAgICAgIHNyYz17bW9kZXNbbW9kZV0ucXVvdGVJY29ufVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPFF1b3RlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtsb25nUXVvdGUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBhcz1cInNwYW5cIiBkaXNwbGF5PXt7IF86ICdpbml0aWFsJywgc206ICdub25lJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtxdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IGFzPVwic3BhblwiIGRpc3BsYXk9e3sgXzogJ25vbmUnLCBzbTogJ2luaXRpYWwnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvbmdRdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBxdW90ZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1F1b3RlVGV4dD5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8L0ZsZXhCb3g+XG4gICAgICAgIDwvVGVzdGltb25pYWxDYXJkPlxuICAgICAgPC9BbmNob3I+XG4gICAgPC9UZXN0aW1vbmlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */");

var TestimonialWrapper = /*#__PURE__*/_styled(Box, {
  target: "e5lkuj62",
  label: "TestimonialWrapper"
})("height:100%;&:hover{", TestimonialCard, "{transform:scale(1.02);}}", TestimonialCard, "{align-content:center;height:100%;", function (_ref2) {
  var mode = _ref2.mode;
  return "\n      background-color: ".concat(modes[mode].cardBackground, ";\n      color: ").concat(modes[mode].textColor, ";\n    ");
}, " clip-path:inset(0 1rem 1rem 0);overflow-y:hidden;padding-right:1rem;padding-bottom:1rem;position:relative;transition:transform 0.3s ease-in-out;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UZXN0aW1vbmlhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEM2RCIsImZpbGUiOiIuLi8uLi9zcmMvVGVzdGltb25pYWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5jaG9yLFxuICBCb3gsXG4gIEZsZXhCb3gsXG4gIEdyaWRCb3gsXG4gIFBhdHRlcm4sXG4gIFZpc3VhbFRoZW1lLFxufSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRhcmtRdW90ZXMgZnJvbSAnLi4vYXNzZXRzL2RhcmtRdW90ZXMuc3ZnJztcbmltcG9ydCBsaWdodFF1b3RlcyBmcm9tICcuLi9hc3NldHMvbGlnaHRRdW90ZXMuc3ZnJztcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL0F2YXRhcic7XG5pbXBvcnQgeyBCeWxpbmUgfSBmcm9tICcuLi9CeWxpbmUnO1xuXG5jb25zdCBtb2RlcyA9IHtcbiAgZGFyazoge1xuICAgIGNhcmRCYWNrZ3JvdW5kOiBjb2xvcnMubmF2eSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5iZWlnZSxcbiAgICBxdW90ZUljb246IGRhcmtRdW90ZXMsXG4gIH0sXG4gIGxpZ2h0OiB7XG4gICAgY2FyZEJhY2tncm91bmQ6IGNvbG9ycy5iZWlnZSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5uYXZ5LFxuICAgIHF1b3RlSWNvbjogbGlnaHRRdW90ZXMsXG4gIH0sXG59O1xuXG5jb25zdCBTaGFkb3cgPSBzdHlsZWQoUGF0dGVybik8eyBtb2RlOiBWaXN1YWxUaGVtZSB9PmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxcmVtKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDFyZW0pO1xuICBjb2xvcjogJHsoeyBtb2RlIH0pID0+IG1vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbmA7XG5cbmNvbnN0IFRlc3RpbW9uaWFsQ2FyZCA9IHN0eWxlZChHcmlkQm94KSgpO1xuXG5jb25zdCBUZXN0aW1vbmlhbFdyYXBwZXIgPSBzdHlsZWQoQm94KTx7IG1vZGU6IFZpc3VhbFRoZW1lIH0+YFxuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgfVxuICB9XG5cbiAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgICR7KHsgbW9kZSB9KSA9PiBgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke21vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbiAgICAgIGNvbG9yOiAke21vZGVzW21vZGVdLnRleHRDb2xvcn07XG4gICAgYH1cbiAgICBjbGlwLXBhdGg6IGluc2V0KDAgMXJlbSAxcmVtIDApO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcbiAgfVxuYDtcblxuY29uc3QgUXVvdGVJY29uID0gc3R5bGVkLmltZ2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC0yLjVyZW07XG5gO1xuXG5jb25zdCBRdW90ZVRleHQgPSBzdHlsZWQucWBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBxdW90ZXM6IG5vbmU7XG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5mb250U2l6ZVsyNl19O1xuICBsaW5lLWhlaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuYDtcblxuZXhwb3J0IHR5cGUgVGVzdGltb25pYWxQcm9wcyA9IHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIG9jY3VwYXRpb246IHN0cmluZztcbiAgcXVvdGU6IHN0cmluZztcbiAgbW9kZTogVmlzdWFsVGhlbWU7XG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIHdvcmtwbGFjZSBvciBpbnN0aXR1dGlvblxuICAgKi9cbiAgY29tcGFueT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFuIGF2YXRhciBwb3J0cmFpdFxuICAgKi9cbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxvbmcgcXVvdGUgdG8gcmVwbGFjZSB0aGUgdGV4dCB3aXRoIGF0IFNNIHZpZXdwb3J0cyBhbmQgaGlnaGVyLlxuICAgKi9cbiAgbG9uZ1F1b3RlPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBUZXN0aW1vbmlhbDogUmVhY3QuRkM8VGVzdGltb25pYWxQcm9wcz4gPSAoe1xuICBmaXJzdE5hbWUsXG4gIGxhc3ROYW1lLFxuICBvY2N1cGF0aW9uLFxuICBxdW90ZSxcbiAgbW9kZSA9ICdsaWdodCcsXG4gIGNvbXBhbnksXG4gIGltYWdlVXJsLFxuICBsb25nUXVvdGUsXG4gIGhyZWYsXG4gIG9uQ2xpY2ssXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRlc3RpbW9uaWFsV3JhcHBlciBwb3NpdGlvbj1cInJlbGF0aXZlXCIgbW9kZT17bW9kZX0+XG4gICAgICA8U2hhZG93IG5hbWU9XCJjaGVja2VyRGVuc2VcIiBtb2RlPXttb2RlfSAvPlxuICAgICAgPEFuY2hvclxuICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICB2YXJpYW50PVwiaW50ZXJmYWNlXCJcbiAgICAgICAgZGlzcGxheT1cImJsb2NrXCJcbiAgICAgICAgaGVpZ2h0PVwiaW5oZXJpdFwiXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICA+XG4gICAgICAgIDxUZXN0aW1vbmlhbENhcmQ+XG4gICAgICAgICAgPEZsZXhCb3hcbiAgICAgICAgICAgIHB4PXt7IF86IDI0IH19XG4gICAgICAgICAgICBwdD17eyBfOiAzMiB9fVxuICAgICAgICAgICAgcGI9e3sgXzogNDggfX1cbiAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJyb3dcIlxuICAgICAgICAgICAgZmxleFdyYXA9XCJ3cmFwXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJzdGFydFwiXG4gICAgICAgICAgICB0ZXh0Q29sb3I9e21vZGUgPT09ICdkYXJrJyA/ICdiZWlnZScgOiAnbmF2eSd9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEZsZXhCb3ggZmxleFdyYXA9XCJ3cmFwXCIgZmxleEdyb3c9ezF9IGZsZXhCYXNpcz1cIjBcIj5cbiAgICAgICAgICAgICAge2ltYWdlVXJsICYmIChcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPVwiNzdweFwiIGhlaWdodD1cIjc3cHhcIiBtYj17MTZ9IG1yPXsxNn0+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyIGFsdD1cIlwiIHNyYz17aW1hZ2VVcmx9IG1vZGU9e21vZGV9IC8+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxCb3ggbWI9ezE2fSBtcj17MTZ9IG1pbldpZHRoPVwiOS41cmVtXCI+XG4gICAgICAgICAgICAgICAgPEJ5bGluZVxuICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lPXtmaXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICBvY2N1cGF0aW9uPXtvY2N1cGF0aW9ufVxuICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgIGxhc3ROYW1lPXtsYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDxCb3ggZmxleEdyb3c9ezk5OTl9IGZsZXhTaHJpbms9ezF9IGZsZXhCYXNpcz1cIjBcIiBtaW5XaWR0aD1cIjcwJVwiPlxuICAgICAgICAgICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8UXVvdGVJY29uXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDlweFwiXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI3NHB4XCJcbiAgICAgICAgICAgICAgICAgIHNyYz17bW9kZXNbbW9kZV0ucXVvdGVJY29ufVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPFF1b3RlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtsb25nUXVvdGUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBhcz1cInNwYW5cIiBkaXNwbGF5PXt7IF86ICdpbml0aWFsJywgc206ICdub25lJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtxdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IGFzPVwic3BhblwiIGRpc3BsYXk9e3sgXzogJ25vbmUnLCBzbTogJ2luaXRpYWwnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvbmdRdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBxdW90ZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1F1b3RlVGV4dD5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8L0ZsZXhCb3g+XG4gICAgICAgIDwvVGVzdGltb25pYWxDYXJkPlxuICAgICAgPC9BbmNob3I+XG4gICAgPC9UZXN0aW1vbmlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */"));

var QuoteIcon = _styled("img", {
  target: "e5lkuj61",
  label: "QuoteIcon"
})(process.env.NODE_ENV === "production" ? {
  name: "9cwtri",
  styles: "display:block;margin-bottom:-2.5rem"
} : {
  name: "9cwtri",
  styles: "display:block;margin-bottom:-2.5rem",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UZXN0aW1vbmlhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUU0QiIsImZpbGUiOiIuLi8uLi9zcmMvVGVzdGltb25pYWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5jaG9yLFxuICBCb3gsXG4gIEZsZXhCb3gsXG4gIEdyaWRCb3gsXG4gIFBhdHRlcm4sXG4gIFZpc3VhbFRoZW1lLFxufSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRhcmtRdW90ZXMgZnJvbSAnLi4vYXNzZXRzL2RhcmtRdW90ZXMuc3ZnJztcbmltcG9ydCBsaWdodFF1b3RlcyBmcm9tICcuLi9hc3NldHMvbGlnaHRRdW90ZXMuc3ZnJztcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL0F2YXRhcic7XG5pbXBvcnQgeyBCeWxpbmUgfSBmcm9tICcuLi9CeWxpbmUnO1xuXG5jb25zdCBtb2RlcyA9IHtcbiAgZGFyazoge1xuICAgIGNhcmRCYWNrZ3JvdW5kOiBjb2xvcnMubmF2eSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5iZWlnZSxcbiAgICBxdW90ZUljb246IGRhcmtRdW90ZXMsXG4gIH0sXG4gIGxpZ2h0OiB7XG4gICAgY2FyZEJhY2tncm91bmQ6IGNvbG9ycy5iZWlnZSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5uYXZ5LFxuICAgIHF1b3RlSWNvbjogbGlnaHRRdW90ZXMsXG4gIH0sXG59O1xuXG5jb25zdCBTaGFkb3cgPSBzdHlsZWQoUGF0dGVybik8eyBtb2RlOiBWaXN1YWxUaGVtZSB9PmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxcmVtKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDFyZW0pO1xuICBjb2xvcjogJHsoeyBtb2RlIH0pID0+IG1vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbmA7XG5cbmNvbnN0IFRlc3RpbW9uaWFsQ2FyZCA9IHN0eWxlZChHcmlkQm94KSgpO1xuXG5jb25zdCBUZXN0aW1vbmlhbFdyYXBwZXIgPSBzdHlsZWQoQm94KTx7IG1vZGU6IFZpc3VhbFRoZW1lIH0+YFxuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgfVxuICB9XG5cbiAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgICR7KHsgbW9kZSB9KSA9PiBgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke21vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbiAgICAgIGNvbG9yOiAke21vZGVzW21vZGVdLnRleHRDb2xvcn07XG4gICAgYH1cbiAgICBjbGlwLXBhdGg6IGluc2V0KDAgMXJlbSAxcmVtIDApO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcbiAgfVxuYDtcblxuY29uc3QgUXVvdGVJY29uID0gc3R5bGVkLmltZ2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC0yLjVyZW07XG5gO1xuXG5jb25zdCBRdW90ZVRleHQgPSBzdHlsZWQucWBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBxdW90ZXM6IG5vbmU7XG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5mb250U2l6ZVsyNl19O1xuICBsaW5lLWhlaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuYDtcblxuZXhwb3J0IHR5cGUgVGVzdGltb25pYWxQcm9wcyA9IHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIG9jY3VwYXRpb246IHN0cmluZztcbiAgcXVvdGU6IHN0cmluZztcbiAgbW9kZTogVmlzdWFsVGhlbWU7XG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIHdvcmtwbGFjZSBvciBpbnN0aXR1dGlvblxuICAgKi9cbiAgY29tcGFueT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFuIGF2YXRhciBwb3J0cmFpdFxuICAgKi9cbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxvbmcgcXVvdGUgdG8gcmVwbGFjZSB0aGUgdGV4dCB3aXRoIGF0IFNNIHZpZXdwb3J0cyBhbmQgaGlnaGVyLlxuICAgKi9cbiAgbG9uZ1F1b3RlPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBUZXN0aW1vbmlhbDogUmVhY3QuRkM8VGVzdGltb25pYWxQcm9wcz4gPSAoe1xuICBmaXJzdE5hbWUsXG4gIGxhc3ROYW1lLFxuICBvY2N1cGF0aW9uLFxuICBxdW90ZSxcbiAgbW9kZSA9ICdsaWdodCcsXG4gIGNvbXBhbnksXG4gIGltYWdlVXJsLFxuICBsb25nUXVvdGUsXG4gIGhyZWYsXG4gIG9uQ2xpY2ssXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRlc3RpbW9uaWFsV3JhcHBlciBwb3NpdGlvbj1cInJlbGF0aXZlXCIgbW9kZT17bW9kZX0+XG4gICAgICA8U2hhZG93IG5hbWU9XCJjaGVja2VyRGVuc2VcIiBtb2RlPXttb2RlfSAvPlxuICAgICAgPEFuY2hvclxuICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICB2YXJpYW50PVwiaW50ZXJmYWNlXCJcbiAgICAgICAgZGlzcGxheT1cImJsb2NrXCJcbiAgICAgICAgaGVpZ2h0PVwiaW5oZXJpdFwiXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICA+XG4gICAgICAgIDxUZXN0aW1vbmlhbENhcmQ+XG4gICAgICAgICAgPEZsZXhCb3hcbiAgICAgICAgICAgIHB4PXt7IF86IDI0IH19XG4gICAgICAgICAgICBwdD17eyBfOiAzMiB9fVxuICAgICAgICAgICAgcGI9e3sgXzogNDggfX1cbiAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJyb3dcIlxuICAgICAgICAgICAgZmxleFdyYXA9XCJ3cmFwXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJzdGFydFwiXG4gICAgICAgICAgICB0ZXh0Q29sb3I9e21vZGUgPT09ICdkYXJrJyA/ICdiZWlnZScgOiAnbmF2eSd9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEZsZXhCb3ggZmxleFdyYXA9XCJ3cmFwXCIgZmxleEdyb3c9ezF9IGZsZXhCYXNpcz1cIjBcIj5cbiAgICAgICAgICAgICAge2ltYWdlVXJsICYmIChcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPVwiNzdweFwiIGhlaWdodD1cIjc3cHhcIiBtYj17MTZ9IG1yPXsxNn0+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyIGFsdD1cIlwiIHNyYz17aW1hZ2VVcmx9IG1vZGU9e21vZGV9IC8+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxCb3ggbWI9ezE2fSBtcj17MTZ9IG1pbldpZHRoPVwiOS41cmVtXCI+XG4gICAgICAgICAgICAgICAgPEJ5bGluZVxuICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lPXtmaXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICBvY2N1cGF0aW9uPXtvY2N1cGF0aW9ufVxuICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgIGxhc3ROYW1lPXtsYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDxCb3ggZmxleEdyb3c9ezk5OTl9IGZsZXhTaHJpbms9ezF9IGZsZXhCYXNpcz1cIjBcIiBtaW5XaWR0aD1cIjcwJVwiPlxuICAgICAgICAgICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8UXVvdGVJY29uXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDlweFwiXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI3NHB4XCJcbiAgICAgICAgICAgICAgICAgIHNyYz17bW9kZXNbbW9kZV0ucXVvdGVJY29ufVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPFF1b3RlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtsb25nUXVvdGUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBhcz1cInNwYW5cIiBkaXNwbGF5PXt7IF86ICdpbml0aWFsJywgc206ICdub25lJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtxdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IGFzPVwic3BhblwiIGRpc3BsYXk9e3sgXzogJ25vbmUnLCBzbTogJ2luaXRpYWwnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvbmdRdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBxdW90ZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1F1b3RlVGV4dD5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8L0ZsZXhCb3g+XG4gICAgICAgIDwvVGVzdGltb25pYWxDYXJkPlxuICAgICAgPC9BbmNob3I+XG4gICAgPC9UZXN0aW1vbmlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var QuoteText = _styled("q", {
  target: "e5lkuj60",
  label: "QuoteText"
})("position:relative;quotes:none;font-size:", function (_ref3) {
  var theme = _ref3.theme;
  return theme.fontSize[26];
}, ";line-height:", function (_ref4) {
  var theme = _ref4.theme;
  return theme.lineHeight.base;
}, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UZXN0aW1vbmlhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0UwQiIsImZpbGUiOiIuLi8uLi9zcmMvVGVzdGltb25pYWwvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQW5jaG9yLFxuICBCb3gsXG4gIEZsZXhCb3gsXG4gIEdyaWRCb3gsXG4gIFBhdHRlcm4sXG4gIFZpc3VhbFRoZW1lLFxufSBmcm9tICdAY29kZWNhZGVteS9nYW11dCc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRhcmtRdW90ZXMgZnJvbSAnLi4vYXNzZXRzL2RhcmtRdW90ZXMuc3ZnJztcbmltcG9ydCBsaWdodFF1b3RlcyBmcm9tICcuLi9hc3NldHMvbGlnaHRRdW90ZXMuc3ZnJztcbmltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL0F2YXRhcic7XG5pbXBvcnQgeyBCeWxpbmUgfSBmcm9tICcuLi9CeWxpbmUnO1xuXG5jb25zdCBtb2RlcyA9IHtcbiAgZGFyazoge1xuICAgIGNhcmRCYWNrZ3JvdW5kOiBjb2xvcnMubmF2eSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5iZWlnZSxcbiAgICBxdW90ZUljb246IGRhcmtRdW90ZXMsXG4gIH0sXG4gIGxpZ2h0OiB7XG4gICAgY2FyZEJhY2tncm91bmQ6IGNvbG9ycy5iZWlnZSxcbiAgICB0ZXh0Q29sb3I6IGNvbG9ycy5uYXZ5LFxuICAgIHF1b3RlSWNvbjogbGlnaHRRdW90ZXMsXG4gIH0sXG59O1xuXG5jb25zdCBTaGFkb3cgPSBzdHlsZWQoUGF0dGVybik8eyBtb2RlOiBWaXN1YWxUaGVtZSB9PmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxcmVtKTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDFyZW0pO1xuICBjb2xvcjogJHsoeyBtb2RlIH0pID0+IG1vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbmA7XG5cbmNvbnN0IFRlc3RpbW9uaWFsQ2FyZCA9IHN0eWxlZChHcmlkQm94KSgpO1xuXG5jb25zdCBUZXN0aW1vbmlhbFdyYXBwZXIgPSBzdHlsZWQoQm94KTx7IG1vZGU6IFZpc3VhbFRoZW1lIH0+YFxuICBoZWlnaHQ6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7XG4gICAgfVxuICB9XG5cbiAgJHtUZXN0aW1vbmlhbENhcmR9IHtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgICR7KHsgbW9kZSB9KSA9PiBgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke21vZGVzW21vZGVdLmNhcmRCYWNrZ3JvdW5kfTtcbiAgICAgIGNvbG9yOiAke21vZGVzW21vZGVdLnRleHRDb2xvcn07XG4gICAgYH1cbiAgICBjbGlwLXBhdGg6IGluc2V0KDAgMXJlbSAxcmVtIDApO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxcmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcbiAgfVxuYDtcblxuY29uc3QgUXVvdGVJY29uID0gc3R5bGVkLmltZ2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC0yLjVyZW07XG5gO1xuXG5jb25zdCBRdW90ZVRleHQgPSBzdHlsZWQucWBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBxdW90ZXM6IG5vbmU7XG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5mb250U2l6ZVsyNl19O1xuICBsaW5lLWhlaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuYDtcblxuZXhwb3J0IHR5cGUgVGVzdGltb25pYWxQcm9wcyA9IHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIG9jY3VwYXRpb246IHN0cmluZztcbiAgcXVvdGU6IHN0cmluZztcbiAgbW9kZTogVmlzdWFsVGhlbWU7XG4gIC8qKlxuICAgKiBBc3NvY2lhdGVkIHdvcmtwbGFjZSBvciBpbnN0aXR1dGlvblxuICAgKi9cbiAgY29tcGFueT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFuIGF2YXRhciBwb3J0cmFpdFxuICAgKi9cbiAgaW1hZ2VVcmw/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxvbmcgcXVvdGUgdG8gcmVwbGFjZSB0aGUgdGV4dCB3aXRoIGF0IFNNIHZpZXdwb3J0cyBhbmQgaGlnaGVyLlxuICAgKi9cbiAgbG9uZ1F1b3RlPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBUZXN0aW1vbmlhbDogUmVhY3QuRkM8VGVzdGltb25pYWxQcm9wcz4gPSAoe1xuICBmaXJzdE5hbWUsXG4gIGxhc3ROYW1lLFxuICBvY2N1cGF0aW9uLFxuICBxdW90ZSxcbiAgbW9kZSA9ICdsaWdodCcsXG4gIGNvbXBhbnksXG4gIGltYWdlVXJsLFxuICBsb25nUXVvdGUsXG4gIGhyZWYsXG4gIG9uQ2xpY2ssXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRlc3RpbW9uaWFsV3JhcHBlciBwb3NpdGlvbj1cInJlbGF0aXZlXCIgbW9kZT17bW9kZX0+XG4gICAgICA8U2hhZG93IG5hbWU9XCJjaGVja2VyRGVuc2VcIiBtb2RlPXttb2RlfSAvPlxuICAgICAgPEFuY2hvclxuICAgICAgICBocmVmPXtocmVmfVxuICAgICAgICB2YXJpYW50PVwiaW50ZXJmYWNlXCJcbiAgICAgICAgZGlzcGxheT1cImJsb2NrXCJcbiAgICAgICAgaGVpZ2h0PVwiaW5oZXJpdFwiXG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICA+XG4gICAgICAgIDxUZXN0aW1vbmlhbENhcmQ+XG4gICAgICAgICAgPEZsZXhCb3hcbiAgICAgICAgICAgIHB4PXt7IF86IDI0IH19XG4gICAgICAgICAgICBwdD17eyBfOiAzMiB9fVxuICAgICAgICAgICAgcGI9e3sgXzogNDggfX1cbiAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJyb3dcIlxuICAgICAgICAgICAgZmxleFdyYXA9XCJ3cmFwXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJzdGFydFwiXG4gICAgICAgICAgICB0ZXh0Q29sb3I9e21vZGUgPT09ICdkYXJrJyA/ICdiZWlnZScgOiAnbmF2eSd9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEZsZXhCb3ggZmxleFdyYXA9XCJ3cmFwXCIgZmxleEdyb3c9ezF9IGZsZXhCYXNpcz1cIjBcIj5cbiAgICAgICAgICAgICAge2ltYWdlVXJsICYmIChcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPVwiNzdweFwiIGhlaWdodD1cIjc3cHhcIiBtYj17MTZ9IG1yPXsxNn0+XG4gICAgICAgICAgICAgICAgICA8QXZhdGFyIGFsdD1cIlwiIHNyYz17aW1hZ2VVcmx9IG1vZGU9e21vZGV9IC8+XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxCb3ggbWI9ezE2fSBtcj17MTZ9IG1pbldpZHRoPVwiOS41cmVtXCI+XG4gICAgICAgICAgICAgICAgPEJ5bGluZVxuICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lPXtmaXJzdE5hbWV9XG4gICAgICAgICAgICAgICAgICBvY2N1cGF0aW9uPXtvY2N1cGF0aW9ufVxuICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgIGxhc3ROYW1lPXtsYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgIDwvRmxleEJveD5cbiAgICAgICAgICAgIDxCb3ggZmxleEdyb3c9ezk5OTl9IGZsZXhTaHJpbms9ezF9IGZsZXhCYXNpcz1cIjBcIiBtaW5XaWR0aD1cIjcwJVwiPlxuICAgICAgICAgICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8UXVvdGVJY29uXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJcIlxuICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMDlweFwiXG4gICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI3NHB4XCJcbiAgICAgICAgICAgICAgICAgIHNyYz17bW9kZXNbbW9kZV0ucXVvdGVJY29ufVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPFF1b3RlVGV4dD5cbiAgICAgICAgICAgICAgICAgIHtsb25nUXVvdGUgPyAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgPEJveCBhcz1cInNwYW5cIiBkaXNwbGF5PXt7IF86ICdpbml0aWFsJywgc206ICdub25lJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtxdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICA8Qm94IGFzPVwic3BhblwiIGRpc3BsYXk9e3sgXzogJ25vbmUnLCBzbTogJ2luaXRpYWwnIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2xvbmdRdW90ZX1cbiAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBxdW90ZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1F1b3RlVGV4dD5cbiAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICA8L0ZsZXhCb3g+XG4gICAgICAgIDwvVGVzdGltb25pYWxDYXJkPlxuICAgICAgPC9BbmNob3I+XG4gICAgPC9UZXN0aW1vbmlhbFdyYXBwZXI+XG4gICk7XG59O1xuIl19 */"));

export var Testimonial = function Testimonial(_ref5) {
  var firstName = _ref5.firstName,
      lastName = _ref5.lastName,
      occupation = _ref5.occupation,
      quote = _ref5.quote,
      _ref5$mode = _ref5.mode,
      mode = _ref5$mode === void 0 ? 'light' : _ref5$mode,
      company = _ref5.company,
      imageUrl = _ref5.imageUrl,
      longQuote = _ref5.longQuote,
      href = _ref5.href,
      onClick = _ref5.onClick;
  return /*#__PURE__*/React.createElement(TestimonialWrapper, {
    position: "relative",
    mode: mode
  }, /*#__PURE__*/React.createElement(Shadow, {
    name: "checkerDense",
    mode: mode
  }), /*#__PURE__*/React.createElement(Anchor, {
    href: href,
    variant: "interface",
    display: "block",
    height: "inherit",
    onClick: onClick
  }, /*#__PURE__*/React.createElement(TestimonialCard, null, /*#__PURE__*/React.createElement(FlexBox, {
    px: {
      _: 24
    },
    pt: {
      _: 32
    },
    pb: {
      _: 48
    },
    flexDirection: "row",
    flexWrap: "wrap",
    alignItems: "start",
    textColor: mode === 'dark' ? 'beige' : 'navy'
  }, /*#__PURE__*/React.createElement(FlexBox, {
    flexWrap: "wrap",
    flexGrow: 1,
    flexBasis: "0"
  }, imageUrl && /*#__PURE__*/React.createElement(Box, {
    width: "77px",
    height: "77px",
    mb: 16,
    mr: 16
  }, /*#__PURE__*/React.createElement(Avatar, {
    alt: "",
    src: imageUrl,
    mode: mode
  })), /*#__PURE__*/React.createElement(Box, {
    mb: 16,
    mr: 16,
    minWidth: "9.5rem"
  }, /*#__PURE__*/React.createElement(Byline, {
    firstName: firstName,
    occupation: occupation,
    company: company,
    lastName: lastName
  }))), /*#__PURE__*/React.createElement(Box, {
    flexGrow: 9999,
    flexShrink: 1,
    flexBasis: "0",
    minWidth: "70%"
  }, /*#__PURE__*/React.createElement(Box, {
    position: "relative"
  }, /*#__PURE__*/React.createElement(QuoteIcon, {
    alt: "",
    width: "109px",
    height: "74px",
    src: modes[mode].quoteIcon
  }), /*#__PURE__*/React.createElement(QuoteText, null, longQuote ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    as: "span",
    display: {
      _: 'initial',
      sm: 'none'
    }
  }, quote), /*#__PURE__*/React.createElement(Box, {
    as: "span",
    display: {
      _: 'none',
      sm: 'initial'
    }
  }, longQuote)) : quote)))))));
};