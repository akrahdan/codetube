var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
import * as vars from '../vars/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    buttonRow: function (align) {
        return glamor.css(stylesheet['.psds-form-button-row'], stylesheet[".psds-form-button-row--align-" + align]);
    },
    button: function () { return glamor.css(stylesheet['.psds-form-button-row__button']); }
};
var ButtonRow = function (_a) {
    var _b = _a.align, align = _b === void 0 ? vars.aligns.left : _b, children = _a.children;
    return (React.createElement("div", __assign({}, styles.buttonRow(align)), React.Children.map(children, function (button) { return (React.createElement("div", __assign({}, styles.button()), button)); })));
};
ButtonRow.displayName = 'ButtonRow';
ButtonRow.aligns = vars.aligns;
export var aligns = vars.aligns;
export default ButtonRow;
//# sourceMappingURL=button-row.js.map