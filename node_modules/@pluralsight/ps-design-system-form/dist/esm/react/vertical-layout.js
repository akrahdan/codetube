var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    layout: function () { return glamor.css(stylesheet['.psds-form-vertical-layout']); },
    child: function () { return glamor.css(stylesheet['.psds-form-vertical-layout__child']); }
};
var VerticalLayout = function (_a) {
    var style = _a.style, props = __rest(_a, ["style"]);
    var children = React.Children.toArray(props.children).filter(function (child) {
        return React.isValidElement(child);
    });
    return (React.createElement("div", __assign({}, styles.layout()), children.map(function (child, i) { return (React.createElement("div", __assign({ key: i }, styles.child()), React.cloneElement(child, {
        style: __assign(__assign({}, style), { width: '100%', maxWidth: 'none' })
    }))); })));
};
VerticalLayout.displayName = 'VerticalLayout';
export default VerticalLayout;
//# sourceMappingURL=vertical-layout.js.map