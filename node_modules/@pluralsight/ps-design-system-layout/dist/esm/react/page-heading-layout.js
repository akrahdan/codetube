var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import glamorDefault, * as glamorExports from 'glamor';
import { Heading } from '@pluralsight/ps-design-system-text';
import React from 'react';
import { pageHeadingLayoutCSS as stylesheet } from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    actions: function () {
        var label = 'psds-page-heading-layout__actions';
        return glamor.compose(glamor.css(stylesheet["." + label]), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)']["." + label])));
    },
    heading: function () {
        var label = 'psds-page-heading-layout__heading';
        return glamor.compose(glamor.css(stylesheet["." + label]), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)']["." + label])));
    },
    layout: function () { return glamor.css(stylesheet['.psds-page-heading-layout']); }
};
var PageHeadingLayout = function (props) {
    var _a = props.actions, actions = _a === void 0 ? [] : _a, heading = props.heading, rest = __rest(props, ["actions", "heading"]);
    return (React.createElement("div", __assign({}, styles.layout(), rest),
        React.createElement("div", __assign({}, styles.heading()),
            React.createElement(Heading, { size: Heading.sizes.large }, heading),
            Array.isArray(actions) && actions.length > 0 && (React.createElement("div", __assign({}, styles.actions()), actions))),
        props.children));
};
export default PageHeadingLayout;
//# sourceMappingURL=page-heading-layout.js.map