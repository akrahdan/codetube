var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import { asideLayoutCSS as stylesheet } from '../css/index';
import { asideLayout as vars } from '../vars/index';
var glamor = glamorDefault || glamorExports;
var styleLayout = function (asidePosition) {
    var label = 'psds-aside-layout';
    var position = label + "--aside-position-" + asidePosition;
    return glamor.compose(glamor.css(stylesheet["." + label]), glamor.css(stylesheet["." + position]), glamor.media('(min-width: 769px)', glamor.compose(glamor.css(stylesheet['@media (min-width: 769px)']["." + label]), glamor.css(stylesheet['@media (min-width: 769px)']["." + position]))));
};
var AsideLayout = function (props) {
    var _a = props.asidePosition, asidePosition = _a === void 0 ? vars.asidePositions.first : _a, aside = props.aside, main = props.main, rest = __rest(props, ["asidePosition", "aside", "main"]);
    return (React.createElement("div", __assign({}, styleLayout(asidePosition), rest),
        React.cloneElement(aside, {
            _asidePosition: asidePosition
        }),
        main));
};
var styleAside = function (asidePosition) {
    var label = 'psds-aside-layout__aside';
    var position = label + "--aside-position-" + asidePosition;
    return glamor.compose(glamor.css(stylesheet["." + label]), glamor.css(stylesheet["." + position]), glamor.media('(min-width: 769px)', glamor.compose(glamor.css(stylesheet['@media (min-width: 769px)']["." + label]), glamor.css(stylesheet['@media (min-width: 769px)']["." + position]))));
};
var Aside = function (props) {
    var _a = props._asidePosition, asidePositionFromParent = _a === void 0 ? vars.asidePositions.first : _a, children = props.children, rest = __rest(props, ["_asidePosition", "children"]);
    return (React.createElement("div", __assign({}, styleAside(asidePositionFromParent), rest), children));
};
Aside.displayName = 'AsideLayout.Aside';
var styleMain = function () {
    var label = 'psds-aside-layout__main';
    return glamor.compose(glamor.css(stylesheet["." + label]), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)']["." + label])));
};
var Main = function (props) { return (React.createElement("div", __assign({}, styleMain(), props), props.children)); };
Main.displayName = 'AsideLayout.Main';
AsideLayout.displayName = 'AsideLayout';
AsideLayout.asidePositions = vars.asidePositions;
AsideLayout.Aside = Aside;
AsideLayout.Main = Main;
export var asidePositions = vars.asidePositions;
export default AsideLayout;
//# sourceMappingURL=aside-layout.js.map