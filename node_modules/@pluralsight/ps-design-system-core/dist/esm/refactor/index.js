var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import breakpoints from '../js/breakpoints';
import layers from '../js/layers';
import layout from '../js/layout';
import type from '../js/type';
import motion from '../js/motion';
import * as colors from '../js/colors';
var capitalizeFirstLetter = function (str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
};
export var cssVars = Object.entries(__assign({ breakpoints: breakpoints,
    layers: layers,
    layout: layout,
    type: type,
    motion: motion }, colors)).reduce(function (acc, _a) {
    var _b;
    var group = _a[0], obj = _a[1];
    var keys = {};
    Object.keys(obj).forEach(function (key) {
        keys[key] = "var(--ps" + capitalizeFirstLetter(group) + capitalizeFirstLetter(key) + ")";
    });
    return __assign(__assign({}, acc), (_b = {}, _b[group] = __assign({}, keys), _b));
}, {});
//# sourceMappingURL=index.js.map