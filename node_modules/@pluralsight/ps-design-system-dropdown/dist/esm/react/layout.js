var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    layout: function (disabled) {
        return glamor.css(stylesheet[".psds-dropdown"], disabled && stylesheet[".psds-dropdown--disabled"]);
    }
};
export var Layout = function (_a) {
    var button = _a.button, disabled = _a.disabled, input = _a.input, label = _a.label, menu = _a.menu, onKeyDown = _a.onKeyDown, subLabel = _a.subLabel, rest = __rest(_a, ["button", "disabled", "input", "label", "menu", "onKeyDown", "subLabel"]);
    return (React.createElement("div", __assign({}, styles.layout(disabled), { onKeyDown: onKeyDown }, rest),
        label,
        input,
        button,
        menu,
        subLabel));
};
Layout.displayName = 'Dropdown.Layout';
//# sourceMappingURL=layout.js.map