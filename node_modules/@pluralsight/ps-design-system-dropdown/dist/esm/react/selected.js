var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
import * as vars from '../vars/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    buttonSizer: function () { return glamor.css(stylesheet['.psds-dropdown__button-sizer']); },
    placeholder: function (_a) {
        var appearance = _a.appearance, selectedItem = _a.selectedItem, size = _a.size;
        var label = 'psds-dropdown__placeholder';
        var isSmall = size === vars.sizes.small;
        var placeholderColor = appearance === vars.appearances.subtle
            ? glamor.css(stylesheet[".psds-dropdown__field--appearance-" + vars.appearances.subtle + ".psds-dropdown__placeholder--color"])
            : glamor.css(stylesheet['.psds-dropdown__placeholder--color']);
        return glamor.compose(glamor.css(stylesheet["." + label]), isSmall && glamor.css(stylesheet["." + label + ".psds-dropdown--small"]), !selectedItem && placeholderColor);
    }
};
export var Selected = function (_a) {
    var appearance = _a.appearance, label = _a.label, placeholder = _a.placeholder, selectedItem = _a.selectedItem, size = _a.size;
    return (React.createElement(React.Fragment, null,
        React.createElement("span", __assign({ "aria-hidden": true }, styles.buttonSizer()), label || placeholder),
        React.createElement("span", __assign({}, styles.placeholder({ appearance: appearance, selectedItem: selectedItem, size: size })), (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label) || placeholder)));
};
Selected.displayName = 'Dropdown.Selected';
//# sourceMappingURL=selected.js.map