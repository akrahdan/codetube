var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { colorsBorder, colorsPink, layout } from '@pluralsight/ps-design-system-core';
import { PageHeadingLayout, PageWidthLayout } from '@pluralsight/ps-design-system-layout';
import { PlaceholderIcon } from '@pluralsight/ps-design-system-icon';
import NavBar from '@pluralsight/ps-design-system-navbar';
import NavBrand from '@pluralsight/ps-design-system-navbrand';
import NavItem from '@pluralsight/ps-design-system-navitem';
import NavUser from '@pluralsight/ps-design-system-navuser';
import * as Text from '@pluralsight/ps-design-system-text';
import VerticalTabs from '@pluralsight/ps-design-system-verticaltabs';
export var MockContent = function () {
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { style: { background: colorsPink[6] } },
            React.createElement(PageWidthLayout, null,
                React.createElement(PageHeadingLayout, { heading: React.createElement("h3", null, "Page title") }))),
        React.createElement(PageWidthLayout, null,
            React.createElement(Text.P, null, "Cupcake ipsum dolor sit amet. Sweet gummi bears drag\u00E9e. Pie drag\u00E9e cotton candy candy canes bear claw apple pie. Dessert apple pie caramels carrot cake bear claw sweet donut. Croissant chocolate bear claw jelly chocolate candy pie pudding caramels. Cake muffin candy liquorice liquorice tiramisu powder pie drag\u00E9e. Danish souffl\u00E9 sweet apple pie cupcake tart. Danish cookie oat cake tiramisu lemon drops pie apple pie cake cotton candy. Pudding brownie jujubes. Chocolate bar biscuit liquorice candy jelly-o tiramisu icing muffin sweet roll. Jelly candy canes chocolate drag\u00E9e. Danish biscuit sugar plum cake. Cotton candy souffl\u00E9 muffin gummi bears."),
            React.createElement(Text.P, null, "Sweet roll sweet roll cotton candy marshmallow lemon drops caramels sweet roll toffee. Bear claw powder ice cream topping wafer cake tootsie roll. Lemon drops pudding dessert toffee fruitcake toffee. Icing marzipan cake pastry biscuit liquorice chupa chups sesame snaps. Biscuit muffin donut. Marshmallow carrot cake icing icing drag\u00E9e jujubes lemon drops. Danish cheesecake sesame snaps. Sweet sugar plum fruitcake tootsie roll. Fruitcake jelly-o souffl\u00E9 muffin cheesecake pie apple pie jelly powder. Cake drag\u00E9e danish muffin drag\u00E9e souffl\u00E9 marzipan croissant danish. Souffl\u00E9 chupa chups cake biscuit icing pastry cake danish danish. Icing cotton candy oat cake chocolate macaroon tiramisu sweet drag\u00E9e cake. Ice cream carrot cake lemon drops. Jelly sweet wafer liquorice brownie sesame snaps halvah apple pie jelly-o."),
            React.createElement(Text.P, null, "Tootsie roll drag\u00E9e apple pie. Pie cake toffee caramels gummies chupa chups carrot cake chupa chups. Jelly-o fruitcake macaroon chocolate. Brownie lollipop sugar plum gummies marshmallow muffin bonbon carrot cake. Pudding powder lemon drops halvah. Icing cupcake pastry chupa chups danish sweet bear claw sugar plum. Chupa chups wafer donut lollipop. Sweet roll croissant cake chocolate cake croissant pastry toffee. Chocolate cake liquorice halvah pastry danish candy canes. Apple pie pastry topping sesame snaps cupcake liquorice icing chocolate bar brownie. Chocolate cake sesame snaps cake gummies cupcake pastry jujubes fruitcake. Muffin fruitcake souffl\u00E9 macaroon danish. Dessert chocolate marshmallow sesame snaps donut toffee ice cream sugar plum drag\u00E9e."),
            React.createElement(Text.P, null, "Marzipan lollipop jelly-o souffl\u00E9 macaroon tart danish tart dessert. Chupa chups lemon drops lemon drops jujubes drag\u00E9e dessert. Wafer chupa chups gummi bears sugar plum gummies. Powder topping apple pie danish sweet roll. Pudding toffee brownie. Tootsie roll lemon drops sweet macaroon jelly-o oat cake muffin chocolate. Wafer chocolate danish cookie cookie danish. Chocolate jelly-o gingerbread fruitcake croissant wafer lollipop bonbon macaroon. Carrot cake candy dessert. Brownie gummies topping sweet roll jelly sesame snaps croissant marshmallow caramels. Candy canes jelly-o jelly beans chupa chups tiramisu cupcake cake tart. Biscuit brownie chocolate bar danish candy canes donut liquorice. Muffin cake jelly beans muffin powder gingerbread toffee. Gingerbread topping toffee chupa chups sweet roll."),
            React.createElement(Text.P, null, "Jelly beans gingerbread dessert macaroon candy canes. Candy liquorice carrot cake chocolate bar pastry dessert caramels danish. Donut apple pie tart drag\u00E9e sesame snaps chocolate tootsie roll jelly-o sugar plum. Chocolate cake sesame snaps jelly beans. Gummies pudding gummies. Jelly-o topping biscuit cookie halvah pudding gingerbread toffee cake. Sesame snaps topping icing jelly cake donut macaroon candy canes jelly beans. Tiramisu pie pie. Cake gingerbread pastry topping jujubes apple pie pie. Jelly beans marshmallow chocolate cake chocolate cake biscuit danish dessert. Halvah biscuit macaroon. Sugar plum pie gummi bears gummies pastry."),
            React.createElement(Text.P, null, "Marzipan lollipop jelly-o souffl\u00E9 macaroon tart danish tart dessert. Chupa chups lemon drops lemon drops jujubes drag\u00E9e dessert. Wafer chupa chups gummi bears sugar plum gummies. Powder topping apple pie danish sweet roll. Pudding toffee brownie. Tootsie roll lemon drops sweet macaroon jelly-o oat cake muffin chocolate. Wafer chocolate danish cookie cookie danish. Chocolate jelly-o gingerbread fruitcake croissant wafer lollipop bonbon macaroon. Carrot cake candy dessert. Brownie gummies topping sweet roll jelly sesame snaps croissant marshmallow caramels. Candy canes jelly-o jelly beans chupa chups tiramisu cupcake cake tart. Biscuit brownie chocolate bar danish candy canes donut liquorice. Muffin cake jelly beans muffin powder gingerbread toffee. Gingerbread topping toffee chupa chups sweet roll."),
            React.createElement(Text.P, null, "Jelly beans gingerbread dessert macaroon candy canes. Candy liquorice carrot cake chocolate bar pastry dessert caramels danish. Donut apple pie tart drag\u00E9e sesame snaps chocolate tootsie roll jelly-o sugar plum. Chocolate cake sesame snaps jelly beans. Gummies pudding gummies. Jelly-o topping biscuit cookie halvah pudding gingerbread toffee cake. Sesame snaps topping icing jelly cake donut macaroon candy canes jelly beans. Tiramisu pie pie. Cake gingerbread pastry topping jujubes apple pie pie. Jelly beans marshmallow chocolate cake chocolate cake biscuit danish dessert. Halvah biscuit macaroon. Sugar plum pie gummi bears gummies pastry."))));
};
var defaultSections = [
    {
        header: {
            href: '#',
            icon: React.createElement(PlaceholderIcon, null),
            id: 'section-header',
            title: 'Section Header'
        },
        items: [
            {
                href: '#',
                icon: React.createElement(PlaceholderIcon, null),
                id: 'section-item__first',
                title: 'First Item',
                subItems: [
                    {
                        href: '#',
                        icon: React.createElement(PlaceholderIcon, null),
                        id: 'section-subitem__first',
                        title: 'First SubItem'
                    },
                    {
                        href: '#',
                        icon: React.createElement(PlaceholderIcon, null),
                        id: 'section-subitem__second',
                        title: 'Second SubItem'
                    }
                ]
            },
            {
                href: '#',
                icon: React.createElement(PlaceholderIcon, null),
                id: 'section-item__second',
                title: 'Second Item'
            }
        ]
    }
];
export var SideNav = function (props) {
    var children = props.children, _a = props.collapsed, collapsed = _a === void 0 ? false : _a, _b = props.sections, sections = _b === void 0 ? defaultSections : _b, rest = __rest(props, ["children", "collapsed", "sections"]);
    return (React.createElement("div", __assign({}, rest),
        sections.map(function (section, sectionKey) {
            var header = section.header, _a = section.items, items = _a === void 0 ? [] : _a;
            return (React.createElement(React.Fragment, { key: sectionKey },
                header && (React.createElement(SectionHeader, { collapsed: collapsed, title: header.title })),
                React.createElement(VerticalTabs, { forceCollapsed: collapsed, hideLabels: collapsed }, items.map(function (item) {
                    var _a = item.subItems, subItems = _a === void 0 ? [] : _a;
                    return (React.createElement(VerticalTabs.Group, { key: item.id },
                        React.createElement(VerticalTabs.Tier1, { header: React.createElement(VerticalTabs.Tier1.Header, { href: item.href, icon: item.icon }, item.title) }),
                        subItems.map(function (subItem) { return (React.createElement(VerticalTabs.Tier2, { key: subItem.id, header: React.createElement(VerticalTabs.Tier2.Header, { href: subItem.href }, subItem.title) })); })));
                })),
                React.createElement(SectionDivider, null)));
        }),
        children));
};
export var SectionHeader = function (props) {
    var _a = props.collapsed, collapsed = _a === void 0 ? false : _a, title = props.title, rest = __rest(props, ["collapsed", "title"]);
    return (React.createElement("div", __assign({ style: {
            margin: layout.spacingSmall + " 0 0",
            opacity: collapsed ? 0 : 1,
            padding: "0 " + layout.spacingLarge
        } }, rest),
        React.createElement("h2", { style: { margin: 0 } },
            React.createElement(Text.Label, { size: Text.Label.sizes.xSmall, color: Text.Label.colors.secondary, caps: true }, title))));
};
export var SectionDivider = function (props) {
    return (React.createElement("div", __assign({ style: { height: 1, borderBottom: "1px solid " + colorsBorder.lowOnDark } }, props)));
};
export var TopNav = function (props) {
    var _a = props.brand, brand = _a === void 0 ? React.createElement(SkillsBrand, null) : _a, children = props.children, _b = props.items, items = _b === void 0 ? [] : _b, onMobileMenuClick = props.onMobileMenuClick, rest = __rest(props, ["brand", "children", "items", "onMobileMenuClick"]);
    return (React.createElement("div", __assign({}, rest),
        React.createElement(NavBar, { brand: brand, items: React.createElement(React.Fragment, null,
                items.map(function (item) {
                    return (React.createElement("div", { key: item.id, style: {
                            marginRight: layout.spacingXXSmall,
                            display: 'inline-block'
                        } },
                        React.createElement(NavItem, { icon: item.icon }, item.title)));
                }),
                children), onMobileMenuClick: onMobileMenuClick, user: React.createElement(NavUser, { name: "Jake", meta: "Accenture" }) })));
};
export var SkillsBrand = function (props) {
    return React.createElement(NavBrand, __assign({}, props, { logo: React.createElement(SkillsLogo, null), wordmark: "SKILLS" }));
};
export var SkillsLogo = function () {
    return (React.createElement("svg", { "aria-hidden": true, viewBox: "0 0 32 32" },
        React.createElement("defs", null,
            React.createElement("linearGradient", { id: "skills-gradient", x1: "45.6377", y1: "47.4727", x2: "-32.2436", y2: "-35.2537", gradientUnits: "userSpaceOnUse" },
                React.createElement("stop", { offset: "0.03", stopColor: "#F05A28" }),
                React.createElement("stop", { offset: "0.93", stopColor: "#EB008B" }))),
        React.createElement("path", { d: "M0 0V32H32V0H0ZM9.4053 12.7438L15.088 16L9.4053 19.287V12.7438ZM9.4053 24.8503V21.6468L19.1842 16L9.4053 10.3532V7.17166L24.6955 16L9.4053 24.8503Z", fill: "url(#skills-gradient)" })));
};
//# sourceMappingURL=shared.js.map