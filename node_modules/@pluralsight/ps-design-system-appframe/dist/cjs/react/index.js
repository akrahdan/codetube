"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ps_design_system_button_1 = __importDefault(require("@pluralsight/ps-design-system-button"));
var ps_design_system_core_1 = require("@pluralsight/ps-design-system-core");
var ps_design_system_scrollable_1 = __importDefault(require("@pluralsight/ps-design-system-scrollable"));
var ps_design_system_theme_1 = __importStar(require("@pluralsight/ps-design-system-theme"));
var ps_design_system_util_1 = require("@pluralsight/ps-design-system-util");
var focus_within_1 = __importDefault(require("focus-within"));
var glamor_1 = __importStar(require("glamor")), glamorExports = glamor_1;
var react_1 = __importDefault(require("react"));
var index_1 = __importDefault(require("../css/index"));
var polyfill_element_closest_1 = __importDefault(require("../js/polyfill-element-closest"));
var use_body_scroll_lock_1 = __importDefault(require("./use-body-scroll-lock"));
var use_on_click_outside_1 = __importDefault(require("./use-on-click-outside"));
var use_on_escape_1 = __importDefault(require("./use-on-escape"));
var use_on_inner_focus_1 = __importDefault(require("./use-on-inner-focus"));
var vars = __importStar(require("../vars/index"));
var glamor = glamor_1.default || glamorExports;
if (ps_design_system_util_1.canUseDOM()) {
    polyfill_element_closest_1.default();
    focus_within_1.default(document);
}
var SKIP_TARGET_ID = 'ps-appframe--skip-target';
var TOP_NAV_ID = 'ps-appframe--topnav';
var styles = {
    appframe: function (themeName) {
        return glamor.compose(glamor.css(index_1.default['.psds-appframe']), glamor.css(index_1.default[".psds-appframe.psds-theme--" + themeName]));
    },
    skipBanner: function () { return glamor.css(index_1.default['.psds-appframe__skip-banner']); },
    container: function (variant) {
        return glamor.compose(glamor.css(index_1.default['.psds-appframe__container']), variant && glamor.css(index_1.default[".psds-appframe__container--" + variant]));
    },
    content: function () { return glamor.css(index_1.default['.psds-appframe__content']); },
    sidenav: function (variant) {
        return glamor.compose(glamor.css(index_1.default['.psds-appframe__sidenav']), variant && glamor.css(index_1.default[".psds-appframe__sidenav--" + variant]));
    },
    sidenavOverflowMask: function () {
        return glamor.css(index_1.default['.psds-appframe__sidenav__overflow-mask']);
    },
    sidenavInner: function () { return glamor.css(index_1.default['.psds-appframe__sidenav__inner']); },
    topnav: function () { return glamor.css(index_1.default['.psds-appframe__topnav']); }
};
var AppFrameContext = react_1.default.createContext({
    closeSidenav: function () { },
    openSidenav: function () { },
    sidenavOpen: undefined,
    sidenavVariant: vars.sidenavVariants.closed
});
var AppFrame = react_1.default.forwardRef(function (props, forwardedRef) {
    var children = props.children, onRequestSideNavClose = props.onRequestSideNavClose, onRequestSideNavOpen = props.onRequestSideNavOpen, sidenav = props.sidenav, initialSidenavOpen = props.sidenavOpen, topnav = props.topnav, rest = __rest(props, ["children", "onRequestSideNavClose", "onRequestSideNavOpen", "sidenav", "sidenavOpen", "topnav"]);
    var ref = react_1.default.useRef(null);
    react_1.default.useImperativeHandle(forwardedRef, function () { return ref.current; });
    var themeName = ps_design_system_theme_1.useTheme();
    var smallMedia = ps_design_system_util_1.useMatchMedia("(min-width: " + ps_design_system_core_1.breakpoints.small + ")");
    var largeMedia = ps_design_system_util_1.useMatchMedia("(min-width: " + ps_design_system_core_1.breakpoints.large + ")");
    var prevLargeMedia = ps_design_system_util_1.usePrevious(largeMedia);
    var defaultSidenavOpen = react_1.default.useMemo(function () {
        var controlled = typeof initialSidenavOpen !== 'undefined';
        return controlled ? initialSidenavOpen : largeMedia;
    }, [initialSidenavOpen, largeMedia]);
    var _a = react_1.default.useState(defaultSidenavOpen), sidenavOpen = _a[0], setSidenavOpen = _a[1];
    var closeSidenav = react_1.default.useCallback(function () {
        var controlled = typeof props.sidenavOpen !== 'undefined';
        if (controlled && ps_design_system_util_1.isFunction(onRequestSideNavClose))
            onRequestSideNavClose();
        else if (!controlled)
            setSidenavOpen(false);
    }, [props.sidenavOpen, onRequestSideNavClose]);
    var openSidenav = react_1.default.useCallback(function () {
        var controlled = typeof props.sidenavOpen !== 'undefined';
        if (controlled && ps_design_system_util_1.isFunction(onRequestSideNavOpen))
            onRequestSideNavOpen();
        else if (!controlled)
            setSidenavOpen(true);
    }, [props.sidenavOpen, onRequestSideNavOpen]);
    react_1.default.useEffect(function () {
        var enteringXLarge = prevLargeMedia !== largeMedia && largeMedia;
        if (enteringXLarge)
            openSidenav();
    }, [prevLargeMedia, largeMedia, openSidenav]);
    react_1.default.useEffect(function () {
        var controlled = typeof props.sidenavOpen !== 'undefined';
        var next = controlled ? props.sidenavOpen : defaultSidenavOpen;
        setSidenavOpen(next);
    }, [props.sidenavOpen, defaultSidenavOpen]);
    var sidenavVariant = react_1.default.useMemo(function () {
        var variants = vars.sidenavVariants;
        if (!sidenav)
            return variants.closed;
        if (sidenavOpen) {
            return largeMedia ? variants.open : variants.overlay;
        }
        else {
            return smallMedia ? variants.minimized : variants.closed;
        }
    }, [sidenav, sidenavOpen, smallMedia, largeMedia]);
    var skipTargetRef = react_1.default.useRef(null);
    var focusSkipTarget = react_1.default.useCallback(function () {
        if (!skipTargetRef.current)
            return;
        skipTargetRef.current.focus();
    }, []);
    var contextValue = {
        closeSidenav: closeSidenav,
        openSidenav: openSidenav,
        sidenavOpen: sidenavOpen,
        sidenavVariant: sidenavVariant
    };
    return (react_1.default.createElement(AppFrameContext.Provider, { value: contextValue },
        react_1.default.createElement("div", __assign({ ref: ref }, styles.appframe(themeName), rest),
            react_1.default.createElement(SkipBanner, { href: '#' + SKIP_TARGET_ID }),
            react_1.default.createElement(TopNav, { id: TOP_NAV_ID }, topnav),
            react_1.default.createElement(Container, null,
                sidenav && react_1.default.createElement(SideNav, null, sidenav),
                react_1.default.createElement("main", __assign({}, styles.content()),
                    react_1.default.createElement(SkipTarget, { id: SKIP_TARGET_ID, onClick: focusSkipTarget, ref: skipTargetRef }),
                    children)))));
});
AppFrame.displayName = 'AppFrame';
var SkipBanner = function (props) {
    return (react_1.default.createElement(ps_design_system_theme_1.default, { name: ps_design_system_theme_1.default.names.dark },
        react_1.default.createElement("div", __assign({}, styles.skipBanner(), props),
            react_1.default.createElement(ps_design_system_button_1.default, { appearance: ps_design_system_button_1.default.appearances.secondary, size: ps_design_system_button_1.default.sizes.small, tabIndex: 0 }, "skip to main content"))));
};
var SkipTarget = react_1.default.forwardRef(function (props, ref) {
    return react_1.default.createElement("a", __assign({ ref: ref, tabIndex: -1 }, props));
});
SkipTarget.displayName = 'SkipTarget';
var Container = function (props) {
    var context = react_1.default.useContext(AppFrameContext);
    return react_1.default.createElement("div", __assign({}, styles.container(context.sidenavVariant), props));
};
var SideNav = function (props) {
    var variants = vars.sidenavVariants;
    var children = props.children;
    var _a = react_1.default.useContext(AppFrameContext), closeSidenav = _a.closeSidenav, openSidenav = _a.openSidenav, sidenavVariant = _a.sidenavVariant;
    var hoverable = sidenavVariant === variants.minimized;
    var _b = react_1.default.useState(false), hovered = _b[0], setHovered = _b[1];
    var variant = hoverable && hovered ? variants.overlay : sidenavVariant;
    var visible = variant === variants.overlay || variant === variants.open;
    var ref = react_1.default.useRef(null);
    var overlayed = variant === variants.overlay;
    use_body_scroll_lock_1.default(ref, overlayed);
    var closeIfOverlayed = react_1.default.useCallback(function () {
        if (overlayed)
            closeSidenav();
    }, [overlayed, closeSidenav]);
    use_on_click_outside_1.default(ref, function (evt) {
        var target = evt.target;
        var inTopNav = target && !!target.closest("#" + TOP_NAV_ID);
        if (!inTopNav)
            closeIfOverlayed();
    });
    use_on_escape_1.default(closeIfOverlayed);
    use_on_inner_focus_1.default(ref, { onEnter: openSidenav, onLeave: closeIfOverlayed });
    return (react_1.default.createElement(ps_design_system_theme_1.default, { name: ps_design_system_theme_1.default.names.dark },
        react_1.default.createElement("div", __assign({ ref: ref }, styles.sidenav(variant), props, (hoverable && {
            onMouseEnter: function () { return setHovered(true); },
            onMouseLeave: function () { return setHovered(false); }
        })),
            react_1.default.createElement("div", __assign({}, styles.sidenavOverflowMask()),
                react_1.default.createElement(ps_design_system_scrollable_1.default, __assign({}, styles.sidenavInner()), typeof children === 'function' ? children({ visible: visible }) : children)))));
};
SideNav.variants = vars.sidenavVariants;
var TopNav = function (props) {
    var children = props.children;
    var _a = react_1.default.useContext(AppFrameContext), closeSidenav = _a.closeSidenav, openSidenav = _a.openSidenav, sidenavOpen = _a.sidenavOpen;
    var meta = { closeSidenav: closeSidenav, openSidenav: openSidenav, sidenavOpen: sidenavOpen };
    return (react_1.default.createElement(ps_design_system_theme_1.default, { name: ps_design_system_theme_1.default.names.dark },
        react_1.default.createElement("div", __assign({}, styles.topnav(), props), ps_design_system_util_1.isFunction(children)
            ? children(meta)
            : children)));
};
AppFrame.SideNav = SideNav;
AppFrame.SideNav.displayName = 'AppFrame.SideNav';
AppFrame.TopNav = TopNav;
AppFrame.TopNav.displayName = 'AppFrame.TopNav';
exports.default = AppFrame;
//# sourceMappingURL=index.js.map