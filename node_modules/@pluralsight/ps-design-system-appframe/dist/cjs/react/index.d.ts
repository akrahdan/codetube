import { RefForwardingComponent, ValueOf } from '@pluralsight/ps-design-system-util';
import React from 'react';
import * as vars from '../vars/index';
interface AppFrameContextValue {
    closeSidenav: () => void;
    openSidenav: () => void;
    sidenavOpen: boolean | undefined;
    sidenavVariant: ValueOf<typeof vars.sidenavVariants>;
}
declare type RenderProp<P extends Record<string, unknown>> = (props: P) => React.ReactNode;
interface AppFrameProps extends React.HTMLAttributes<HTMLDivElement> {
    onRequestSideNavClose?: () => void;
    onRequestSideNavOpen?: () => void;
    sidenav?: React.ReactNode | RenderProp<{
        visible: boolean;
    }>;
    sidenavOpen?: boolean;
    topnav?: React.ReactNode | RenderProp<Pick<AppFrameContextValue, 'closeSidenav' | 'openSidenav' | 'sidenavOpen'>>;
}
interface AppFrameStatics {
    SideNav: typeof SideNav;
    TopNav: typeof TopNav;
}
interface AppFrameComponent extends RefForwardingComponent<AppFrameProps, HTMLDivElement, AppFrameStatics> {
}
declare const AppFrame: AppFrameComponent;
interface SideNavProps extends React.HTMLAttributes<HTMLDivElement> {
    children: AppFrameProps['sidenav'];
}
interface SideNavStatics {
    variants: typeof vars.sidenavVariants;
}
declare const SideNav: React.FC<SideNavProps> & SideNavStatics;
interface TopNavProps extends React.HTMLAttributes<HTMLDivElement> {
    children: AppFrameProps['topnav'];
}
declare const TopNav: React.FC<TopNavProps>;
export default AppFrame;
