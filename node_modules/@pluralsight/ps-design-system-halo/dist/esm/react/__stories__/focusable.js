var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as core from '@pluralsight/ps-design-system-core';
import { useTheme } from '@pluralsight/ps-design-system-theme';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
var glamor = glamorDefault || glamorExports;
var stylesheet = {
    '.focusable': {
        background: core.colorsBackgroundDark[3],
        borderRadius: '2px',
        color: core.colorsTextIcon.highOnDark,
        cursor: 'pointer',
        fontSize: core.type.fontSize200,
        fontWeight: core.type.fontWeightDefault,
        lineHeight: core.type.lineHeightStandard,
        outline: 'none',
        padding: core.layout.spacingXSmall + " " + core.layout.spacingMedium,
        position: 'relative',
        textAlign: 'center',
        width: '100%'
    },
    '.focusable--theme-light': {
        background: core.colorsBackgroundLight[1],
        borderColor: core.colorsBorder.highOnLight,
        color: core.colorsTextIcon.highOnLight
    },
    '.focusable--shape-pill': {
        borderRadius: '1000px'
    }
};
var styles = {
    focusable: function (themeName, _a) {
        var shape = _a.shape;
        return glamor.css(stylesheet['.focusable'], stylesheet[".focusable--theme-" + themeName], stylesheet[".focusable--shape-" + shape]);
    }
};
var Focusable = function (props) {
    var themeName = useTheme();
    var shape = props.shape, _a = props.children, children = _a === void 0 ? 'focusable area' : _a;
    return (React.createElement("div", __assign({}, styles.focusable(themeName, { shape: shape }), { tabIndex: 0 }), children));
};
export default Focusable;
//# sourceMappingURL=focusable.js.map