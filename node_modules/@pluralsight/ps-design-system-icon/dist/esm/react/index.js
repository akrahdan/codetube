var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css';
import { colors, sizes } from '../vars';
var glamor = glamorDefault || glamorExports;
var style = {
    icon: function (props) {
        return glamor.css(stylesheet['.psds-icon'], stylesheet[".psds-icon--size-" + props.size], stylesheet[".psds-icon--color-" + props.color]);
    }
};
var Icon = React.forwardRef(function (props, ref) {
    var _a = props.size, size = _a === void 0 ? sizes.medium : _a, color = props.color, rest = __rest(props, ["size", "color"]);
    return React.createElement("div", __assign({}, style.icon({ color: color, size: size }), rest, { ref: ref }));
});
Icon.displayName = 'Icon';
Icon.colors = colors;
Icon.sizes = sizes;
export { colors, sizes };
export default Icon;
//# sourceMappingURL=index.js.map