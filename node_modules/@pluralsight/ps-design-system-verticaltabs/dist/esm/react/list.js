var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import Collapsible from '@pluralsight/ps-design-system-collapsible';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import { useForceCollapsed } from './context';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    list: function () { return glamor.css(stylesheet['.psds-verticaltabs__list']); },
    listCollapsible: function () {
        return glamor.css(stylesheet['.psds-verticaltabs__list--collapsible']);
    }
};
export var List = function (props) {
    var collapsed = props.collapsed, rest = __rest(props, ["collapsed"]);
    return React.createElement("ul", __assign({}, styles.list(), rest));
};
export var CollapsibleList = function (props) {
    var collapsed = props.collapsed, rest = __rest(props, ["collapsed"]);
    var forceCollapsed = useForceCollapsed();
    var _a = React.useState(!collapsed), open = _a[0], setOpen = _a[1];
    React.useEffect(function () {
        setOpen(!props.collapsed);
    }, [props.collapsed]);
    return (React.createElement(Collapsible, __assign({ isOpen: !forceCollapsed && open, tagName: "ul" }, rest, styles.list(), styles.listCollapsible())));
};
//# sourceMappingURL=list.js.map