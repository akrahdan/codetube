var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { useTheme } from '@pluralsight/ps-design-system-theme';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
import { appearances } from '../vars/index';
var glamor = glamorDefault || glamorExports;
var style = function (_a) {
    var appearance = _a.appearance, themeName = _a.themeName;
    return glamor.css(stylesheet[".psds-link"], appearance === appearances.default
        ? stylesheet[".psds-link--appearance-" + appearance + ".psds-theme--" + themeName]
        : stylesheet[".psds-link--appearance-" + appearance]);
};
var Link = React.forwardRef(function (props, forwardedRef) {
    var _a = props.appearance, appearance = _a === void 0 ? appearances.default : _a, _children = props.children, rest = __rest(props, ["appearance", "children"]);
    var ref = React.useRef();
    React.useImperativeHandle(forwardedRef, function () { return ref.current; });
    var themeName = useTheme();
    return React.cloneElement(React.Children.only(props.children), __assign(__assign({}, style({ appearance: appearance, themeName: themeName })), rest));
});
Link.appearances = appearances;
export { appearances };
export default Link;
//# sourceMappingURL=index.js.map