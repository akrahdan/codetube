"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withTheme = exports.useTheme = exports.ThemeContext = exports.names = exports.defaultName = void 0;
var hoist_non_react_statics_1 = __importDefault(require("hoist-non-react-statics"));
var react_1 = __importDefault(require("react"));
var index_1 = require("../vars/index");
Object.defineProperty(exports, "defaultName", { enumerable: true, get: function () { return index_1.defaultName; } });
Object.defineProperty(exports, "names", { enumerable: true, get: function () { return index_1.names; } });
exports.ThemeContext = react_1.default.createContext(index_1.defaultName);
var Theme = function (props) {
    var _a = props.name, name = _a === void 0 ? index_1.defaultName : _a;
    return (react_1.default.createElement(exports.ThemeContext.Provider, { value: name }, props.children));
};
Theme.names = index_1.names;
Theme.defaultName = index_1.defaultName;
exports.default = Theme;
function useTheme() {
    var themeName = react_1.default.useContext(exports.ThemeContext);
    return themeName;
}
exports.useTheme = useTheme;
function getDisplayName(Component) {
    if (typeof Component === 'string')
        return Component;
    if (!Component)
        return;
    return Component.displayName || Component.name || 'Component';
}
/**
 * @deprecated please use the useTheme hook to get theme information
 */
function withTheme(BaseComponent) {
    var name = getDisplayName(BaseComponent);
    var Forwarded = react_1.default.forwardRef(function (props, ref) {
        var themeName = useTheme();
        return react_1.default.createElement(BaseComponent, __assign({ ref: ref, themeName: themeName }, props));
    });
    Forwarded.displayName = "withTheme(" + name + ")";
    return hoist_non_react_statics_1.default(Forwarded, BaseComponent);
}
exports.withTheme = withTheme;
//# sourceMappingURL=index.js.map