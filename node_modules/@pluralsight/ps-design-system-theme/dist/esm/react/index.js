var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import hoistNonReactStatics from 'hoist-non-react-statics';
import React from 'react';
import { defaultName, names } from '../vars/index';
export { defaultName, names };
export var ThemeContext = React.createContext(defaultName);
var Theme = function (props) {
    var _a = props.name, name = _a === void 0 ? defaultName : _a;
    return (React.createElement(ThemeContext.Provider, { value: name }, props.children));
};
Theme.names = names;
Theme.defaultName = defaultName;
export default Theme;
export function useTheme() {
    var themeName = React.useContext(ThemeContext);
    return themeName;
}
function getDisplayName(Component) {
    if (typeof Component === 'string')
        return Component;
    if (!Component)
        return;
    return Component.displayName || Component.name || 'Component';
}
/**
 * @deprecated please use the useTheme hook to get theme information
 */
export function withTheme(BaseComponent) {
    var name = getDisplayName(BaseComponent);
    var Forwarded = React.forwardRef(function (props, ref) {
        var themeName = useTheme();
        return React.createElement(BaseComponent, __assign({ ref: ref, themeName: themeName }, props));
    });
    Forwarded.displayName = "withTheme(" + name + ")";
    return hoistNonReactStatics(Forwarded, BaseComponent);
}
//# sourceMappingURL=index.js.map