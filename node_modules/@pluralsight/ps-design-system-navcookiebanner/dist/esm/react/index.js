var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { CloseIcon } from '@pluralsight/ps-design-system-icon';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import { useCookies } from 'react-cookie';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var DISMISS_COOKIE_NAME = 'prism-cookienotify';
var DEFAULT_PRIVACY_UPDATED_DATE = new Date('2018-05-24T00:00:00');
var styles = {
    banner: function () {
        return glamor.compose(glamor.css(stylesheet['.psds-navcookiebanner']), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)']['.psds-navcookiebanner'])), glamor.media('print', glamor.css(stylesheet['@media print']['.psds-navcookiebanner'])));
    },
    message: function () { return glamor.css(stylesheet['.psds-navcookiebanner__message']); },
    dismiss: function () { return glamor.css(stylesheet['.psds-navcookiebanner__dismiss']); }
};
var NavCookieBanner = React.forwardRef(function (props, forwardedRef) {
    var cookieOptions = props.cookieOptions, message = props.message, _a = props.privacyUpdatedDate, privacyUpdatedDate = _a === void 0 ? DEFAULT_PRIVACY_UPDATED_DATE : _a, rest = __rest(props, ["cookieOptions", "message", "privacyUpdatedDate"]);
    var ref = React.useRef(null);
    React.useImperativeHandle(forwardedRef, function () { return ref.current; });
    var _b = useCookies([DISMISS_COOKIE_NAME]), cookies = _b[0], setCookie = _b[1];
    var cookieDateAccepted = parseCookie(cookies[DISMISS_COOKIE_NAME]);
    var dismissed = cookieDateAccepted && cookieDateAccepted > privacyUpdatedDate;
    if (dismissed)
        return null;
    function dismiss() {
        var oneYear = new Date();
        oneYear.setFullYear(oneYear.getFullYear() + 1);
        setCookie(DISMISS_COOKIE_NAME, Date.now(), __assign({ domain: '.pluralsight.com', expires: oneYear, secure: true, sameSite: 'strict' }, cookieOptions));
    }
    return (React.createElement("div", __assign({ ref: ref }, styles.banner(), rest),
        React.createElement("p", __assign({}, styles.message()), message || (React.createElement(React.Fragment, null,
            React.createElement("label", null, "Pluralsight uses cookies."),
            '  ',
            React.createElement("a", { href: "//www.pluralsight.com/privacy" }, "Learn more about your privacy")))),
        React.createElement("button", __assign({}, styles.dismiss(), { "aria-label": "close", onClick: dismiss }),
            React.createElement(CloseIcon, null))));
});
NavCookieBanner.displayName = 'NavCookieBanner';
export default NavCookieBanner;
function parseCookie(numberStr) {
    return numberStr ? new Date(parseInt(numberStr, 10)) : undefined;
}
//# sourceMappingURL=index.js.map