"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useResizeObserver = void 0;
var exenv_1 = __importDefault(require("exenv"));
var react_1 = __importDefault(require("react"));
var resize_observer_polyfill_1 = __importDefault(require("resize-observer-polyfill"));
var combine_fns_1 = require("./combine-fns");
var debounce_1 = require("./debounce");
var canUseDOM = exenv_1.default.canUseDOM;
function useResizeObserver(ref, onResize) {
    var _a = react_1.default.useState(0), width = _a[0], setWidth = _a[1];
    var _b = react_1.default.useState(0), height = _b[0], setHeight = _b[1];
    react_1.default.useEffect(function () {
        var el = ref.current;
        if (!el || !canUseDOM)
            return;
        var subscribed = true;
        var handleResize = combine_fns_1.combineFns(function (entries) {
            if (!subscribed)
                return;
            var contentRect = entries[0].contentRect;
            setWidth(contentRect.width);
            setHeight(contentRect.height);
        }, onResize);
        var debouncedResize = debounce_1.debounce(150, handleResize);
        var observer = new resize_observer_polyfill_1.default(debouncedResize);
        observer.observe(el);
        return function () {
            subscribed = false;
            observer.unobserve(el);
        };
    }, [onResize, ref]);
    return { width: width, height: height };
}
exports.useResizeObserver = useResizeObserver;
//# sourceMappingURL=use-resize-observer.js.map