import React from 'react';
declare type Callback = (evt: Event | MouseEvent | UIEvent) => void;
declare type EventHandler = <El extends HTMLElement>(el: El, cb: Callback) => () => void;
declare type EventHandlerHook = <El extends HTMLElement>(ref: React.MutableRefObject<El | null>, cb: Callback) => void;
export declare const onClickOutside: EventHandler;
export declare const useEvent: (eventHander: EventHandler) => EventHandlerHook;
export declare const useClickOutside: EventHandlerHook;
export declare const onResize: EventHandler;
export declare const useResize: EventHandlerHook;
export declare const onScrollOutside: EventHandler;
export declare const useScrollOutside: EventHandlerHook;
export declare const onGlobalEventsClose: EventHandler;
export declare const useCloseOnDocumentEvents: EventHandlerHook;
export {};
