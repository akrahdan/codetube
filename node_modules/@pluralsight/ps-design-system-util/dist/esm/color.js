var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export function transparentize(amount, hex) {
    return rgba(__assign(__assign({}, parseToRgb(hex)), { a: (100 - amount * 100) / 100 }));
}
function rgba(color) {
    return "rgba(" + color.r + "," + color.g + "," + color.b + "," + color.a + ")";
}
function parseToRgb(hex) {
    return {
        r: parseInt("" + hex[1] + hex[2], 16),
        g: parseInt("" + hex[3] + hex[4], 16),
        b: parseInt("" + hex[5] + hex[6], 16)
    };
}
//# sourceMappingURL=color.js.map