import exenv from 'exenv';
import React from 'react';
import ResizeObserver from 'resize-observer-polyfill';
import { combineFns } from './combine-fns';
import { debounce } from './debounce';
var canUseDOM = exenv.canUseDOM;
export function useResizeObserver(ref, onResize) {
    var _a = React.useState(0), width = _a[0], setWidth = _a[1];
    var _b = React.useState(0), height = _b[0], setHeight = _b[1];
    React.useEffect(function () {
        var el = ref.current;
        if (!el || !canUseDOM)
            return;
        var subscribed = true;
        var handleResize = combineFns(function (entries) {
            if (!subscribed)
                return;
            var contentRect = entries[0].contentRect;
            setWidth(contentRect.width);
            setHeight(contentRect.height);
        }, onResize);
        var debouncedResize = debounce(150, handleResize);
        var observer = new ResizeObserver(debouncedResize);
        observer.observe(el);
        return function () {
            subscribed = false;
            observer.unobserve(el);
        };
    }, [onResize, ref]);
    return { width: width, height: height };
}
//# sourceMappingURL=use-resize-observer.js.map