import React from 'react';
import exenv from 'exenv';
import { canUseDOM } from './can-use-dom';
import { useHasMounted } from './use-has-mounted';
var canUseEventListeners = exenv.canUseEventListeners;
var noopQueryList = {
    matches: false,
    media: ''
};
export function useMatchMedia(query) {
    var hasMounted = useHasMounted();
    var matcher = React.useCallback(function () { return (canUseDOM() ? window.matchMedia(query) : noopQueryList); }, [query]);
    var _a = React.useState(matcher), queryList = _a[0], setQueryList = _a[1];
    var matches = useMatches(queryList);
    React.useEffect(function () {
        if (!hasMounted)
            return;
        var nextQueryList = matcher();
        setQueryList(nextQueryList);
    }, [hasMounted, matcher]);
    return matches;
}
export function useMatches(queryList) {
    var _a = React.useState(queryList.matches), matches = _a[0], setMatches = _a[1];
    React.useEffect(function () {
        var updateMatches = function () {
            setMatches(queryList.matches);
        };
        if (canUseEventListeners)
            queryList.addListener(updateMatches);
        updateMatches();
        return function () {
            if (canUseEventListeners)
                queryList.removeListener(updateMatches);
        };
    }, [queryList]);
    return matches;
}
//# sourceMappingURL=use-match-media.js.map