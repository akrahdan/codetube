"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ps_design_system_halo_1 = __importDefault(require("@pluralsight/ps-design-system-halo"));
var glamor_1 = __importStar(require("glamor")), glamorExports = glamor_1;
var react_1 = __importDefault(require("react"));
var index_1 = __importDefault(require("../css/index"));
var glamor = glamor_1.default || glamorExports;
var styles = {
    logo: function (children) {
        return glamor.css(index_1.default['.psds-navbrand__logo'], children &&
            glamor.media('(min-width: 1200px)', index_1.default['@media (min-width: 1200px)']['.psds-navbrand__logo--wordmark']));
    },
    navBrand: function (clickable) {
        return glamor.css(index_1.default['.psds-navbrand'], clickable && index_1.default['.psds-navbrand--clickable']);
    },
    wordmark: function () {
        return glamor.css(index_1.default['.psds-navbrand__wordmark'], glamor.media('(min-width: 1200px)', index_1.default['@media (min-width: 1200px)']['.psds-navbrand__wordmark']));
    }
};
var NavBrand = react_1.default.forwardRef(function (props, forwardedRef) {
    var logo = props.logo, wordmark = props.wordmark, rest = __rest(props, ["logo", "wordmark"]);
    var ref = react_1.default.useRef(null);
    react_1.default.useImperativeHandle(forwardedRef, function () { return ref.current; });
    var isAnchor = 'href' in props;
    var isButton = !isAnchor && 'onClick' in props;
    var Wrapper = isAnchor ? 'a' : isButton ? 'button' : 'div';
    return (react_1.default.createElement(ps_design_system_halo_1.default, { inline: true, gapSize: ps_design_system_halo_1.default.gapSizes.small },
        react_1.default.createElement(Wrapper, __assign({}, styles.navBrand(Boolean(props.href || props.onClick)), { ref: ref }, rest),
            react_1.default.createElement(Logo, null, logo),
            react_1.default.createElement(Wordmark, null, wordmark))));
});
exports.default = NavBrand;
var Logo = function (props) { return (react_1.default.createElement("div", __assign({}, styles.logo(Boolean(props.children)), props))); };
Logo.displayName = 'NavBrand.Logo';
var Wordmark = function (props) { return react_1.default.createElement("div", __assign({}, styles.wordmark(), props)); };
Wordmark.displayName = 'NavBrand.Wordmark';
//# sourceMappingURL=index.js.map