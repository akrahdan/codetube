var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import Halo from '@pluralsight/ps-design-system-halo';
import { WarningIcon } from '@pluralsight/ps-design-system-icon';
import { useTheme } from '@pluralsight/ps-design-system-theme';
import { forwardRefWithStatics } from '@pluralsight/ps-design-system-util';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
import * as vars from '../vars/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    error: function () { return glamor.css(stylesheet['.psds-text-input__error']); },
    field: function (_a) {
        var appearance = _a.appearance, error = _a.error, fieldAfter = _a.fieldAfter, icon = _a.icon, iconAlign = _a.iconAlign, themeName = _a.themeName, size = _a.size;
        var small = size === vars.sizes.small;
        return glamor.css(stylesheet['.psds-text-input__field'], stylesheet[".psds-text-input__field--appearance-" + appearance], stylesheet[".psds-text-input__field.psds-theme--" + themeName], stylesheet[".psds-text-input__field--appearance-" + appearance + ".psds-theme--" + themeName], Boolean(fieldAfter) && stylesheet[".psds-text-input__field--w-after"], small && stylesheet['.psds-text-input__field.psds-text-input--small'], Boolean(icon) &&
            small &&
            stylesheet[".psds-text-input__field--icon-align-" + iconAlign + ".psds-text-input--small"], Boolean(icon) &&
            !small &&
            stylesheet[".psds-text-input__field--icon-align-" + iconAlign], error &&
            stylesheet[".psds-text-input__field--error.psds-theme--" + themeName]);
    },
    fieldContainer: function () {
        return glamor.css(stylesheet['.psds-text-input__field-container']);
    },
    fieldInput: function (appearance, themeName) {
        return glamor.css(stylesheet['.psds-text-input__field-input'], stylesheet[".psds-text-input__field-input--appearance-" + appearance], stylesheet[".psds-text-input__field-input.psds-theme--" + themeName]);
    },
    icon: function (_a) {
        var appearance = _a.appearance, icon = _a.icon, iconAlign = _a.iconAlign, themeName = _a.themeName;
        return glamor.css(stylesheet['.psds-text-input__icon'], Boolean(icon) &&
            stylesheet[".psds-text-input__icon--icon-align-" + iconAlign], stylesheet[".psds-text-input__icon--appearance-" + appearance], stylesheet[".psds-text-input__icon.psds-theme--" + themeName]);
    },
    textInput: function (disabled) {
        return glamor.css(stylesheet['.psds-text-input'], disabled && stylesheet['.psds-text-input--disabled']);
    },
    label: function (themeName) {
        return glamor.css(stylesheet['.psds-text-input__label'], stylesheet[".psds-text-input__label.psds-theme--" + themeName]);
    },
    subLabel: function (themeName) {
        return glamor.css(stylesheet['.psds-text-input__sub-label'], stylesheet[".psds-text-input__sub-label.psds-theme--" + themeName]);
    }
};
var TextInput = forwardRefWithStatics(function (_a, forwardedRef) {
    var _b = _a.appearance, appearance = _b === void 0 ? vars.appearances.default : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.error, error = _d === void 0 ? false : _d, _e = _a.iconAlign, iconAlign = _e === void 0 ? vars.iconAligns.left : _e, _f = _a.size, size = _f === void 0 ? vars.sizes.medium : _f, fieldAfter = _a.fieldAfter, icon = _a.icon, label = _a.label, subLabel = _a.subLabel, props = __rest(_a, ["appearance", "disabled", "error", "iconAlign", "size", "fieldAfter", "icon", "label", "subLabel"]);
    var themeName = useTheme();
    return (React.createElement("label", __assign({}, styles.textInput(disabled), { style: props.style, className: props.className }),
        label && React.createElement("div", __assign({}, styles.label(themeName)), label),
        React.createElement("div", __assign({}, styles.fieldContainer()),
            React.createElement(Halo, { error: error, gapSize: Halo.gapSizes.small },
                React.createElement("div", __assign({}, styles.field({
                    appearance: appearance,
                    error: error,
                    fieldAfter: fieldAfter,
                    icon: icon,
                    iconAlign: iconAlign,
                    themeName: themeName,
                    size: size
                })),
                    React.createElement("input", __assign({}, props, styles.fieldInput(appearance, themeName), { disabled: disabled, placeholder: props.placeholder, ref: forwardedRef })),
                    fieldAfter)),
            icon && (React.createElement("div", __assign({}, styles.icon({ appearance: appearance, icon: icon, iconAlign: iconAlign, themeName: themeName })), icon)),
            error && (React.createElement("div", __assign({}, styles.error()),
                React.createElement(WarningIcon, null)))),
        subLabel && React.createElement("div", __assign({}, styles.subLabel(themeName)), subLabel)));
});
TextInput.appearances = vars.appearances;
TextInput.iconAligns = vars.iconAligns;
TextInput.sizes = vars.sizes;
export default TextInput;
//# sourceMappingURL=index.js.map