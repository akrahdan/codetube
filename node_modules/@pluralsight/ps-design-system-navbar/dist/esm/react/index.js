var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { MenuIcon } from '@pluralsight/ps-design-system-icon';
import NavItem from '@pluralsight/ps-design-system-navitem';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    brand: function () { return glamor.css(stylesheet['.psds-navbar__brand']); },
    mobileMenu: function () { return glamor.css(stylesheet['.psds-navbar__mobile-menu']); },
    navbar: function () { return glamor.css(stylesheet['.psds-navbar']); },
    items: function () { return glamor.css(stylesheet['.psds-navbar__items']); },
    user: function () { return glamor.css(stylesheet['.psds-navbar__user']); },
    utility: function () { return glamor.css(stylesheet['.psds-navbar__utility']); }
};
var NavBar = React.forwardRef(function (props, forwardedRef) {
    var brand = props.brand, items = props.items, onMobileMenuClick = props.onMobileMenuClick, utility = props.utility, user = props.user, rest = __rest(props, ["brand", "items", "onMobileMenuClick", "utility", "user"]);
    var ref = React.useRef(null);
    React.useImperativeHandle(forwardedRef, function () { return ref.current; });
    return (React.createElement("div", __assign({ ref: ref }, styles.navbar(), rest),
        onMobileMenuClick && (React.createElement("div", __assign({}, styles.mobileMenu()),
            React.createElement(NavItem, { icon: React.createElement(MenuIcon, null), onClick: onMobileMenuClick }))),
        React.createElement("div", __assign({}, styles.brand()), brand),
        React.createElement("div", __assign({}, styles.items()), items),
        React.createElement("div", __assign({}, styles.utility()), utility),
        React.createElement("div", __assign({}, styles.user()), user)));
});
NavBar.displayName = 'NavBar';
export default NavBar;
//# sourceMappingURL=index.js.map