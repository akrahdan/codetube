var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { CaretDownIcon } from '@pluralsight/ps-design-system-icon';
import glamorDefault, * as glamorExports from 'glamor';
import React from 'react';
import Context from './context';
import { Bar, Button } from './common';
import stylesheet from '../css/index';
var glamor = glamorDefault || glamorExports;
var styles = {
    container: function () { return glamor.css(stylesheet['.psds-navitem__vert-container']); },
    caret: function () { return glamor.css(stylesheet['.psds-navitem__vert-caret']); },
    icon: function () { return glamor.css(stylesheet['.psds-navitem__vert-icon']); },
    label: function () { return glamor.css(stylesheet['.psds-navitem__vert-label']); },
    layout: function () { return glamor.css(stylesheet['.psds-navitem__vert-layout']); }
};
export var VertLayout = function (props) {
    var _a = React.useContext(Context), icon = _a.icon, menu = _a.menu;
    return (React.createElement(VertContainer, null,
        React.createElement(Button, null,
            React.createElement("span", __assign({}, styles.layout()),
                icon && React.createElement(VertIcon, null, icon),
                props.children && React.createElement(VertLabel, null, props.children),
                menu && React.createElement(VertCaret, null))),
        React.createElement(Bar, null)));
};
VertLayout.displayName = 'NavItem.VertLayout';
var VertContainer = function (props) {
    return React.createElement("span", __assign({}, styles.container(), props));
};
VertContainer.displayName = 'NavItem.VertContainer';
var VertCaret = function (props) {
    return (React.createElement("span", __assign({}, styles.caret(), props),
        React.createElement(CaretDownIcon, { size: CaretDownIcon.sizes.small })));
};
VertCaret.displayName = 'NavItem.VertCaret';
var VertIcon = function (props) {
    return React.createElement("span", __assign({}, styles.icon(), props));
};
VertIcon.displayName = 'NavItem.VertIcon';
var VertLabel = function (props) {
    return React.createElement("span", __assign({}, styles.label(), props));
};
VertLabel.displayName = 'NavItem.VertLabel';
//# sourceMappingURL=vert.js.map