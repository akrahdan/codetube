var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import Context, { initialValue } from './context';
import { HorzLayout } from './horz';
import { alignments } from '../vars/index';
import { VertLayout } from './vert';
var NavItem = React.forwardRef(function (props, forwardedRef) {
    var _a = props.alignment, alignment = _a === void 0 ? initialValue.alignment : _a, bar = props.bar, children = props.children, icon = props.icon, _b = props.menu, menu = _b === void 0 ? initialValue.menu : _b, _c = props.renderContainer, renderContainer = _c === void 0 ? initialValue.renderContainer : _c, _d = props.selected, selected = _d === void 0 ? initialValue.selected : _d, 
    // eslint-disable-next-line camelcase
    UNSAFE_stylesFor = props.UNSAFE_stylesFor, rest = __rest(props, ["alignment", "bar", "children", "icon", "menu", "renderContainer", "selected", "UNSAFE_stylesFor"]);
    var Layout = alignment === alignments.horizontal ? HorzLayout : VertLayout;
    var ctx = {
        alignment: alignment,
        bar: bar,
        icon: icon,
        menu: menu,
        ref: forwardedRef,
        selected: selected,
        renderContainer: renderContainer,
        UNSAFE_stylesFor: UNSAFE_stylesFor,
        rest: rest
    };
    return (React.createElement(Context.Provider, { value: ctx },
        React.createElement(Layout, null, children)));
});
NavItem.displayName = 'NavItem';
NavItem.alignments = alignments;
export default NavItem;
//# sourceMappingURL=index.js.map