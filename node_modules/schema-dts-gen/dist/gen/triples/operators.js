"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asTopicArray = void 0;
const operators_1 = require("rxjs/operators");
const wellKnown_1 = require("./wellKnown");
function groupBySubject() {
    return observable => observable.pipe(operators_1.groupBy(triple => triple.Subject.toString()), operators_1.mergeMap(group => group.pipe(operators_1.toArray(), operators_1.map(array => ({
        Subject: array[0].Subject,
        values: array.map(({ Object, Predicate }) => ({
            Predicate,
            Object,
        })),
    })))));
}
function asTopic() {
    return operators_1.map(bySubject => ({
        Subject: bySubject.Subject,
        types: wellKnown_1.GetTypes(bySubject.Subject, bySubject.values),
        values: bySubject.values.filter(value => !wellKnown_1.IsType(value.Predicate)),
    }));
}
function asTopicArray() {
    return observable => observable.pipe(groupBySubject(), asTopic(), operators_1.toArray());
}
exports.asTopicArray = asTopicArray;
//# sourceMappingURL=operators.js.map