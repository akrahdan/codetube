/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ObjectPredicate, TObject, TPredicate, TSubject, TTypeName, TypedTopic } from './triple';
import { UrlNode } from './types';
/** Whether the context corresponds to rdf-schema. */
export declare function IsRdfSchema(value: UrlNode): boolean;
/** Whether the context corresponds to rdf-syntax. */
export declare function IsRdfSyntax(value: UrlNode): boolean;
/** Whether the context corresponds to schema.org. */
export declare function IsSchemaObject(value: UrlNode): boolean;
/**
 * If an ObjectPredicate represents a comment, returns the comment. Otherwise
 * returns null.
 */
export declare function GetComment(value: ObjectPredicate): {
    comment: string;
} | null;
/**
 * If an ObjectPredicate represents a subClass relation, returns the parent
 * class. Otherwise returns null.
 */
export declare function GetSubClassOf(value: ObjectPredicate): {
    subClassOf: TSubject;
} | null;
/** Returns true iff a node corresponds to http://schema.org/DataType */
export declare function IsDataType(t: TTypeName): boolean;
/** Returns true iff a Topic represents a DataType. */
export declare function IsWellKnown(topic: TypedTopic): boolean;
/** Returns true iff a Topic represents a named class. */
export declare function IsNamedClass(topic: TypedTopic): boolean;
/**
 * Returns true iff a Predicate corresponds to http://schema.org/domainIncludes
 */
export declare function IsDomainIncludes(value: TPredicate): boolean;
/**
 * Returns true iff a Predicate corresponds to http://schema.org/rangeIncludes
 */
export declare function IsRangeIncludes(value: TPredicate): boolean;
/**
 * Returns true iff a Predicate corresponds to http://schema.org/supersededBy.
 */
export declare function IsSupersededBy(value: TPredicate): boolean;
/**
 * Returns true iff a Predicate corresponds to
 * http://www.w3.org/1999/02/22-rdf-syntax-ns#type.
 */
export declare function IsType(predicate: TPredicate): boolean;
/** Returns iff an Object can be described as a Type Name. */
export declare function IsTypeName(value: TObject): value is TTypeName;
/**
 * If an ObjectPredicate corresponds to a
 * http://www.w3.org/1999/02/22-rdf-syntax-ns#type, returns a Type it describes.
 */
export declare function GetType(value: ObjectPredicate): TTypeName | null;
/**
 * Returns all Nodes described by a Topic's
 * http://www.w3.org/1999/02/22-rdf-syntax-ns#type predicates.
 */
export declare function GetTypes(key: TSubject, values: readonly ObjectPredicate[]): readonly TTypeName[];
/**
 * Returns true iff a Type corresponds to
 * http://www.w3.org/2000/01/rdf-schema#Class
 */
export declare function IsClassType(type: TTypeName): boolean;
/**
 * Returns true iff a Type corresponds to
 * http://www.w3.org/1999/02/22-rdf-syntax-ns#Property
 */
export declare function IsPropertyType(type: TTypeName): boolean;
/**
 * Returns true iff a Subject has a Type indicating it is an Enum value.
 *
 * Enum Values have, in addition to other Data or Class types, another object as
 * its "Type".
 */
export declare function HasEnumType(types: readonly TTypeName[]): boolean;
//# sourceMappingURL=wellKnown.d.ts.map