/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { TypeNode } from 'typescript';
import { ObjectPredicate, TSubject, TTypeName } from '../triples/triple';
import { ClassMap } from './class';
import { Context } from './context';
/**
 * Corresponds to a value that belongs to an Enumeration.
 */
export declare class EnumValue {
    readonly value: TSubject;
    readonly INSTANCE = "EnumValue";
    private comment?;
    constructor(value: TSubject, types: readonly TTypeName[], map: ClassMap);
    add(value: ObjectPredicate): boolean;
    toTypeLiteral(context: Context): TypeNode[];
}
//# sourceMappingURL=enum.d.ts.map