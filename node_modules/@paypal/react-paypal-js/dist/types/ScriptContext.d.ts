import React, { FunctionComponent } from "react";
import type { PayPalScriptOptions } from "@paypal/paypal-js/types/script-options";
export interface ReactPayPalScriptOptions extends PayPalScriptOptions {
    "data-react-paypal-script-id": string;
}
declare const SCRIPT_LOADING_STATE: {
    readonly INITIAL: "initial";
    readonly PENDING: "pending";
    readonly REJECTED: "rejected";
    readonly RESOLVED: "resolved";
};
declare type ScriptLoadingState = typeof SCRIPT_LOADING_STATE[keyof typeof SCRIPT_LOADING_STATE];
interface ScriptContextDerivedState {
    options: ReactPayPalScriptOptions;
    isInitial: boolean;
    isPending: boolean;
    isRejected: boolean;
    isResolved: boolean;
}
declare type ScriptReducerAction = {
    type: "setLoadingStatus";
    value: ScriptLoadingState;
} | {
    type: "resetOptions";
    value: PayPalScriptOptions | ReactPayPalScriptOptions;
};
declare type ScriptReducerDispatch = (action: ScriptReducerAction) => void;
declare function usePayPalScriptReducer(): [
    ScriptContextDerivedState,
    ScriptReducerDispatch
];
export interface ScriptProviderProps {
    options: PayPalScriptOptions;
    children?: React.ReactNode;
    deferLoading?: boolean;
}
declare const PayPalScriptProvider: FunctionComponent<ScriptProviderProps>;
export { PayPalScriptProvider, usePayPalScriptReducer };
