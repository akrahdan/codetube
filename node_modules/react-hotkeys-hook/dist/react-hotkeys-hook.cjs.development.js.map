{"version":3,"file":"react-hotkeys-hook.cjs.development.js","sources":["../src/useIsHotkeyPressed.ts","../src/useHotkeys.ts"],"sourcesContent":["import hotkeys from 'hotkeys-js';\n\nexport function useIsHotkeyPressed() {\n  return hotkeys.isPressed;\n}","import hotkeys, { HotkeysEvent, KeyHandler } from 'hotkeys-js';\nimport React, { useCallback, useEffect, useRef } from 'react';\n\ntype AvailableTags = 'INPUT' | 'TEXTAREA' | 'SELECT';\n\nexport type Options = {\n  filter?: typeof hotkeys.filter;\n  enableOnTags?: AvailableTags[];\n  splitKey?: string;\n  scope?: string;\n  keyup?: boolean;\n  keydown?: boolean;\n};\n\nexport function useHotkeys<T extends Element>(keys: string, callback: KeyHandler, options?: Options): React.MutableRefObject<T | null>;\nexport function useHotkeys<T extends Element>(keys: string, callback: KeyHandler, deps?: any[]): React.MutableRefObject<T | null>;\nexport function useHotkeys<T extends Element>(keys: string, callback: KeyHandler, options?: Options, deps?: any[]): React.MutableRefObject<T | null>;\nexport function useHotkeys<T extends Element>(keys: string, callback: KeyHandler, options?: any[] | Options, deps?: any[]): React.MutableRefObject<T | null> {\n  if (options instanceof Array) {\n    deps = options;\n    options = undefined;\n  }\n\n  const { enableOnTags, filter, keyup, keydown } = options || {};\n  const ref = useRef<T | null>(null);\n\n  const memoisedCallback = useCallback((keyboardEvent: KeyboardEvent, hotkeysEvent: HotkeysEvent) => {\n    if (ref.current === null || document.activeElement === ref.current) {\n      callback(keyboardEvent, hotkeysEvent);\n      return true;\n    }\n\n    return false;\n  }, deps ? [ref, ...deps] : [ref]);\n\n  useEffect(() => {\n    if (options && (options as Options).enableOnTags) {\n      hotkeys.filter = ({ target, srcElement }) => {\n        // @ts-ignore\n        const targetTagName = (target && target.tagName) || (srcElement && srcElement.tagName);\n\n        return Boolean(targetTagName && enableOnTags && enableOnTags.includes(targetTagName as AvailableTags));\n      };\n    }\n\n    if (filter) hotkeys.filter = filter;\n\n    if (keyup && keydown !== true) {\n      (options as Options).keydown = false;\n    }\n\n    hotkeys(keys, (options as Options) || {}, memoisedCallback);\n\n    return () => hotkeys.unbind(keys, memoisedCallback);\n  }, [memoisedCallback, options, enableOnTags, filter, keys]);\n\n  return ref;\n}"],"names":["useIsHotkeyPressed","hotkeys","isPressed","useHotkeys","keys","callback","options","deps","Array","undefined","enableOnTags","filter","keyup","keydown","ref","useRef","memoisedCallback","useCallback","keyboardEvent","hotkeysEvent","current","document","activeElement","useEffect","target","srcElement","targetTagName","tagName","Boolean","includes","unbind"],"mappings":";;;;;;;SAEgBA;AACd,SAAOC,OAAO,CAACC,SAAf;AACD;;SCaeC,WAA8BC,MAAcC,UAAsBC,SAA2BC;AAC3G,MAAID,OAAO,YAAYE,KAAvB,EAA8B;AAC5BD,IAAAA,IAAI,GAAGD,OAAP;AACAA,IAAAA,OAAO,GAAGG,SAAV;AACD;;aAEgDH,OAAO,IAAI;MAApDI,oBAAAA;MAAcC,cAAAA;MAAQC,aAAAA;MAAOC,eAAAA;;AACrC,MAAMC,GAAG,GAAGC,YAAM,CAAW,IAAX,CAAlB;AAEA,MAAMC,gBAAgB,GAAGC,iBAAW,CAAC,UAACC,aAAD,EAA+BC,YAA/B;AACnC,QAAIL,GAAG,CAACM,OAAJ,KAAgB,IAAhB,IAAwBC,QAAQ,CAACC,aAAT,KAA2BR,GAAG,CAACM,OAA3D,EAAoE;AAClEf,MAAAA,QAAQ,CAACa,aAAD,EAAgBC,YAAhB,CAAR;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAPmC,EAOjCZ,IAAI,IAAIO,GAAJ,SAAYP,IAAZ,IAAoB,CAACO,GAAD,CAPS,CAApC;AASAS,EAAAA,eAAS,CAAC;AACR,QAAIjB,OAAO,IAAKA,OAAmB,CAACI,YAApC,EAAkD;AAChDT,MAAAA,OAAO,CAACU,MAAR,GAAiB;YAAGa,eAAAA;YAAQC,mBAAAA;AAC1B;AACA,YAAMC,aAAa,GAAIF,MAAM,IAAIA,MAAM,CAACG,OAAlB,IAA+BF,UAAU,IAAIA,UAAU,CAACE,OAA9E;AAEA,eAAOC,OAAO,CAACF,aAAa,IAAIhB,YAAjB,IAAiCA,YAAY,CAACmB,QAAb,CAAsBH,aAAtB,CAAlC,CAAd;AACD,OALD;AAMD;;AAED,QAAIf,MAAJ,EAAYV,OAAO,CAACU,MAAR,GAAiBA,MAAjB;;AAEZ,QAAIC,KAAK,IAAIC,OAAO,KAAK,IAAzB,EAA+B;AAC5BP,MAAAA,OAAmB,CAACO,OAApB,GAA8B,KAA9B;AACF;;AAEDZ,IAAAA,OAAO,CAACG,IAAD,EAAQE,OAAmB,IAAI,EAA/B,EAAmCU,gBAAnC,CAAP;AAEA,WAAO;AAAA,aAAMf,OAAO,CAAC6B,MAAR,CAAe1B,IAAf,EAAqBY,gBAArB,CAAN;AAAA,KAAP;AACD,GAnBQ,EAmBN,CAACA,gBAAD,EAAmBV,OAAnB,EAA4BI,YAA5B,EAA0CC,MAA1C,EAAkDP,IAAlD,CAnBM,CAAT;AAqBA,SAAOU,GAAP;AACD;;;;;"}