{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport useFocusManager from './use-focus-manager';\nvar FocusManager = React.forwardRef(function (_a, _ref) {\n  var _b = _a.autofocus,\n      autofocus = _b === void 0 ? true : _b,\n      _c = _a.returnFocus,\n      returnFocus = _c === void 0 ? true : _c,\n      _d = _a.trapped,\n      trapped = _d === void 0 ? true : _d,\n      rest = __rest(_a, [\"autofocus\", \"returnFocus\", \"trapped\"]);\n\n  var ref = React.useRef(null); // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n  React.useImperativeHandle(_ref, function () {\n    return ref.current;\n  });\n  useFocusManager(ref, {\n    autofocus: autofocus,\n    returnFocus: returnFocus,\n    trapped: trapped\n  });\n  return React.createElement(\"div\", __assign({\n    ref: ref\n  }, rest));\n});\nexport default FocusManager;","map":{"version":3,"sources":["../../../src/react/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAP,MAA4B,qBAA5B;AASA,IAAM,YAAY,GAAG,KAAK,CAAC,UAAN,CACnB,UAAC,EAAD,EAAoE,IAApE,EAAwE;AAArE,MAAA,EAAA,GAAA,EAAA,CAAA,SAAA;AAAA,MAAA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAhB;AAAA,MAAkB,EAAA,GAAA,EAAA,CAAA,WAAlB;AAAA,MAAkB,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAApC;AAAA,MAAsC,EAAA,GAAA,EAAA,CAAA,OAAtC;AAAA,MAAsC,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAApD;AAAA,MAAyD,IAAI,GAAA,MAAA,CAAA,EAAA,EAA/D,CAAA,WAAA,EAAA,aAAA,EAAA,SAAA,CAA+D,CAA7D;;AACD,MAAM,GAAG,GAAG,KAAK,CAAC,MAAN,CAA6B,IAA7B,CAAZ,CADsE,CAEtE;;AACA,EAAA,KAAK,CAAC,mBAAN,CAA0B,IAA1B,EAAgC,YAAA;AAAM,WAAA,GAAG,CAAH,OAAA;AAA6B,GAAnE;AAEA,EAAA,eAAe,CAAC,GAAD,EAAM;AACnB,IAAA,SAAS,EAAE,SADQ;AAEnB,IAAA,WAAW,EAAE,WAFM;AAGnB,IAAA,OAAO,EAAE;AAHU,GAAN,CAAf;AAMA,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,GAAG,EAAE;AAAV,GAAA,EAAmB,IAAnB,CAAA,CAAP;AACD,CAbkB,CAArB;AAgBA,eAAe,YAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport useFocusManager from './use-focus-manager';\nvar FocusManager = React.forwardRef(function (_a, _ref) {\n    var _b = _a.autofocus, autofocus = _b === void 0 ? true : _b, _c = _a.returnFocus, returnFocus = _c === void 0 ? true : _c, _d = _a.trapped, trapped = _d === void 0 ? true : _d, rest = __rest(_a, [\"autofocus\", \"returnFocus\", \"trapped\"]);\n    var ref = React.useRef(null);\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    React.useImperativeHandle(_ref, function () { return ref.current; });\n    useFocusManager(ref, {\n        autofocus: autofocus,\n        returnFocus: returnFocus,\n        trapped: trapped\n    });\n    return React.createElement(\"div\", __assign({ ref: ref }, rest));\n});\nexport default FocusManager;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}