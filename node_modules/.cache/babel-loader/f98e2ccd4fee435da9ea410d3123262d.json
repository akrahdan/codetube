{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/FocusTrap/index.tsx\";\nimport React from 'react';\nimport { FocusOn } from 'react-focus-on';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst focusOnStyles = {\n  /**\n   * Prevent the focus-on wrapper from interfering with parent layout\n   */\n  display: 'contents'\n};\nexport const FocusTrap = ({\n  className,\n  children,\n  onClickOutside,\n  onEscapeKey,\n  active = true,\n  allowPageInteraction = false,\n  focusOnProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(FocusOn, {\n    enabled: active,\n    onClickOutside: onClickOutside,\n    onEscapeKey: onEscapeKey,\n    style: focusOnStyles,\n    className: className,\n    scrollLock: !allowPageInteraction,\n    noIsolation: allowPageInteraction,\n    \"data-testid\": \"focus-trap\",\n    ...focusOnProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = FocusTrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusTrap\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/FocusTrap/index.tsx"],"names":["React","FocusOn","focusOnStyles","display","FocusTrap","className","children","onClickOutside","onEscapeKey","active","allowPageInteraction","focusOnProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAGA,MAAMC,aAAa,GAAG;AACpB;AACF;AACA;AACEC,EAAAA,OAAO,EAAE;AAJW,CAAtB;AAkCA,OAAO,MAAMC,SAAmC,GAAG,CAAC;AAClDC,EAAAA,SADkD;AAElDC,EAAAA,QAFkD;AAGlDC,EAAAA,cAHkD;AAIlDC,EAAAA,WAJkD;AAKlDC,EAAAA,MAAM,GAAG,IALyC;AAMlDC,EAAAA,oBAAoB,GAAG,KAN2B;AAOlDC,EAAAA;AAPkD,CAAD,KAQ7C;AACJ,sBACE,QAAC,OAAD;AACE,IAAA,OAAO,EAAEF,MADX;AAEE,IAAA,cAAc,EAAEF,cAFlB;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,KAAK,EAAEN,aAJT;AAKE,IAAA,SAAS,EAAEG,SALb;AAME,IAAA,UAAU,EAAE,CAACK,oBANf;AAOE,IAAA,WAAW,EAAEA,oBAPf;AAQE,mBAAY,YARd;AAAA,OASMC,YATN;AAAA,cAWGL;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBM;KAAMF,S","sourcesContent":["import React from 'react';\nimport { FocusOn } from 'react-focus-on';\nimport { ReactFocusOnProps } from 'react-focus-on/dist/es5/types';\n\nconst focusOnStyles = {\n  /**\n   * Prevent the focus-on wrapper from interfering with parent layout\n   */\n  display: 'contents',\n};\n\nexport type FocusTrapProps = {\n  className?: string;\n  /**\n   * Called when the FocusTrap requests to be closed via the escape key\n   * Overrides default onRequestClose if defined\n   */\n  onEscapeKey?: ReactFocusOnProps['onEscapeKey'];\n  /**\n   * Called when the FocusTrap requests to be closed via clicking outside of the FocusTrap children\n   * Overrides default onRequestClose if defined\n   */\n  onClickOutside?: ReactFocusOnProps['onClickOutside'];\n  /**\n   * Whether the focus trap is active\n   */\n  active?: boolean;\n  /**\n   * Allow page scrolling and click events outside of the focus trap\n   * This is useful for dropdowns and popovers, where the page should still be interactive\n   */\n  allowPageInteraction?: boolean;\n  /**\n   * Passthrough for react-focus-on library props\n   */\n  focusOnProps?: ReactFocusOnProps;\n};\n\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  className,\n  children,\n  onClickOutside,\n  onEscapeKey,\n  active = true,\n  allowPageInteraction = false,\n  focusOnProps,\n}) => {\n  return (\n    <FocusOn\n      enabled={active}\n      onClickOutside={onClickOutside}\n      onEscapeKey={onEscapeKey}\n      style={focusOnStyles}\n      className={className}\n      scrollLock={!allowPageInteraction}\n      noIsolation={allowPageInteraction}\n      data-testid=\"focus-trap\"\n      {...focusOnProps}\n    >\n      {children}\n    </FocusOn>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}