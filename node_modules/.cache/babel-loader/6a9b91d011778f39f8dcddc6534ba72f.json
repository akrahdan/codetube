{"ast":null,"code":"import _classCallCheck from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import classNames from'classnames';import React,{Component}from'react';import{connect}from'react-redux';// import * as actions from '../../actions'\nimport css from'./control-bar.module.scss';import{toggleFullscreen as _toggleFullscreen}from'state/player/playerSlice';import icons from'../icons';import{FullscreenState}from'../constants';import ControlBarButton from'./control-bar-button/control-bar-button';import Tooltip from'../tooltip/tooltip';import{jsx as _jsx}from\"react/jsx-runtime\";export var FullscreenButton=/*#__PURE__*/function(_Component){_inherits(FullscreenButton,_Component);var _super=_createSuper(FullscreenButton);function FullscreenButton(){_classCallCheck(this,FullscreenButton);return _super.apply(this,arguments);}_createClass(FullscreenButton,[{key:\"render\",value:function render(){var FullscreenIcon=icons.FullscreenIcon,FullscreenExitIcon=icons.FullscreenExitIcon;var _this$props=this.props,fullscreenState=_this$props.fullscreenState,toggleFullscreen=_this$props.toggleFullscreen;var button=fullscreenState===FullscreenState.NORMAL?/*#__PURE__*/_jsx(FullscreenIcon,{className:classNames(css.fullscreen)}):/*#__PURE__*/_jsx(FullscreenExitIcon,{className:classNames(css.fullscreenexit)});return/*#__PURE__*/_jsx(Tooltip,{text:\"Fullscreen (f)\",isFarRight:true,children:/*#__PURE__*/_jsx(ControlBarButton,{onAction:toggleFullscreen,children:button})});}}]);return FullscreenButton;}(Component);export default connect(function(state){return{fullscreenState:state.player.fullscreenState};},function(dispatch){return{toggleFullscreen:function toggleFullscreen(){return dispatch(_toggleFullscreen());}};})(FullscreenButton);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/fullscreen-button.js"],"names":["classNames","React","Component","connect","css","toggleFullscreen","icons","FullscreenState","ControlBarButton","Tooltip","FullscreenButton","FullscreenIcon","FullscreenExitIcon","props","fullscreenState","button","NORMAL","fullscreen","fullscreenexit","state","player","dispatch"],"mappings":"4oBAAA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA;AACA,MAAOC,CAAAA,GAAP,KAAgB,2BAAhB,CACA,OAASC,gBAAgB,GAAhBA,CAAAA,iBAAT,KAAiC,0BAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,eAAT,KAAgC,cAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yCAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,2CAEA,UAAaC,CAAAA,gBAAb,+QACE,iBAAS,IACCC,CAAAA,cADD,CACwCL,KADxC,CACCK,cADD,CACiBC,kBADjB,CACwCN,KADxC,CACiBM,kBADjB,iBAEuC,KAAKC,KAF5C,CAECC,eAFD,aAECA,eAFD,CAEkBT,gBAFlB,aAEkBA,gBAFlB,CAIP,GAAMU,CAAAA,MAAM,CACVD,eAAe,GAAKP,eAAe,CAACS,MAApC,cACE,KAAC,cAAD,EAAgB,SAAS,CAAEhB,UAAU,CAACI,GAAG,CAACa,UAAL,CAArC,EADF,cAGE,KAAC,kBAAD,EAAoB,SAAS,CAAEjB,UAAU,CAACI,GAAG,CAACc,cAAL,CAAzC,EAJJ,CAOA,mBACE,KAAC,OAAD,EAAS,IAAI,CAAC,gBAAd,CAA+B,UAAU,KAAzC,uBACE,KAAC,gBAAD,EAAkB,QAAQ,CAAEb,gBAA5B,UAA+CU,MAA/C,EADF,EADF,CAKD,CAjBH,8BAAsCb,SAAtC,EAoBA,cAAeC,CAAAA,OAAO,CACpB,SAAAgB,KAAK,QAAK,CAAEL,eAAe,CAAEK,KAAK,CAACC,MAAN,CAAaN,eAAhC,CAAL,EADe,CAEpB,SAAAO,QAAQ,QAAK,CAAEhB,gBAAgB,CAAE,kCAAMgB,CAAAA,QAAQ,CAAChB,iBAAgB,EAAjB,CAAd,EAApB,CAAL,EAFY,CAAP,CAGbK,gBAHa,CAAf","sourcesContent":["import classNames from 'classnames'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// import * as actions from '../../actions'\nimport css from './control-bar.module.scss'\nimport { toggleFullscreen } from 'state/player/playerSlice'\nimport icons from '../icons'\nimport { FullscreenState } from '../constants'\nimport ControlBarButton from './control-bar-button/control-bar-button'\nimport Tooltip from '../tooltip/tooltip'\n\nexport class FullscreenButton extends Component {\n  render() {\n    const { FullscreenIcon, FullscreenExitIcon } = icons\n    const { fullscreenState, toggleFullscreen } = this.props\n\n    const button =\n      fullscreenState === FullscreenState.NORMAL ? (\n        <FullscreenIcon className={classNames(css.fullscreen)} />\n      ) : (\n        <FullscreenExitIcon className={classNames(css.fullscreenexit)} />\n      )\n\n    return (\n      <Tooltip text=\"Fullscreen (f)\" isFarRight>\n        <ControlBarButton onAction={toggleFullscreen}>{button}</ControlBarButton>\n      </Tooltip>\n    )\n  }\n}\n\nexport default connect(\n  state => ({ fullscreenState: state.player.fullscreenState }),\n  dispatch => ({ toggleFullscreen: () => dispatch(toggleFullscreen())})\n)(FullscreenButton)\n"]},"metadata":{},"sourceType":"module"}