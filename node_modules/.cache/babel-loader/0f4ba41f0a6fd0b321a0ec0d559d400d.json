{"ast":null,"code":"import { styledOptions, system, variant } from '@codecademy/gamut-styles';\nimport { variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { ButtonBase, ButtonSelectors } from '../ButtonBase/ButtonBase';\nconst anchorVariants = variant({\n  base: {\n    display: 'inline-block',\n    bg: 'transparent',\n    boxShadow: 'none',\n    border: 'none',\n    p: 0,\n    fontSize: 'inherit',\n    position: 'relative',\n    textColor: 'primary',\n    whiteSpace: 'nowrap',\n    [ButtonSelectors.OUTLINE]: {\n      content: \"''\",\n      position: 'absolute',\n      inset: -4,\n      borderRadius: '4px',\n      border: 2,\n      borderColor: 'primary',\n      opacity: 0,\n      zIndex: 0\n    },\n    [ButtonSelectors.HOVER]: {\n      textDecoration: 'none',\n      cursor: 'pointer'\n    },\n    [ButtonSelectors.DISABLED]: {\n      cursor: 'not-allowed',\n      textDecoration: 'none',\n      color: 'text-disabled'\n    },\n    [ButtonSelectors.OUTLINE_FOCUS_VISIBLE]: {\n      opacity: 1\n    }\n  },\n  variants: {\n    standard: {\n      textColor: 'primary',\n      [ButtonSelectors.HOVER]: {\n        textDecoration: 'underline'\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        textColor: 'text'\n      }\n    },\n    inline: {\n      display: 'inline',\n      whiteSpace: 'initial',\n      textDecoration: 'underline',\n      [ButtonSelectors.OUTLINE]: {\n        display: 'none'\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        outline: 'currentColor auto 4px',\n        textDecoration: 'underline'\n      }\n    },\n    interface: {\n      textColor: 'text',\n      whiteSpace: 'initial'\n    }\n  }\n});\nconst anchorProps = variance.compose(system.layout, system.typography, system.space);\nexport const AnchorBase = styled('a', styledOptions())(anchorVariants, anchorProps);\nexport const Anchor = AnchorBase.withComponent(ButtonBase);\n_c = Anchor;\nAnchor.defaultProps = {\n  variant: 'inline'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Anchor\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Anchor/index.tsx"],"names":["styledOptions","system","variant","variance","styled","ButtonBase","ButtonSelectors","anchorVariants","base","display","bg","boxShadow","border","p","fontSize","position","textColor","whiteSpace","OUTLINE","content","inset","borderRadius","borderColor","opacity","zIndex","HOVER","textDecoration","cursor","DISABLED","color","OUTLINE_FOCUS_VISIBLE","variants","standard","FOCUS_VISIBLE","inline","outline","interface","anchorProps","compose","layout","typography","space","AnchorBase","Anchor","withComponent","defaultProps"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,OAAhC,QAA+C,0BAA/C;AACA,SAAqBC,QAArB,QAAqC,sBAArC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,0BAA5C;AAQA,MAAMC,cAAc,GAAGL,OAAO,CAAC;AAC7BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,EAAE,EAAE,aAFA;AAGJC,IAAAA,SAAS,EAAE,MAHP;AAIJC,IAAAA,MAAM,EAAE,MAJJ;AAKJC,IAAAA,CAAC,EAAE,CALC;AAMJC,IAAAA,QAAQ,EAAE,SANN;AAOJC,IAAAA,QAAQ,EAAE,UAPN;AAQJC,IAAAA,SAAS,EAAE,SARP;AASJC,IAAAA,UAAU,EAAE,QATR;AAUJ,KAACX,eAAe,CAACY,OAAjB,GAA2B;AACzBC,MAAAA,OAAO,EAAE,IADgB;AAEzBJ,MAAAA,QAAQ,EAAE,UAFe;AAGzBK,MAAAA,KAAK,EAAE,CAAC,CAHiB;AAIzBC,MAAAA,YAAY,EAAE,KAJW;AAKzBT,MAAAA,MAAM,EAAE,CALiB;AAMzBU,MAAAA,WAAW,EAAE,SANY;AAOzBC,MAAAA,OAAO,EAAE,CAPgB;AAQzBC,MAAAA,MAAM,EAAE;AARiB,KAVvB;AAoBJ,KAAClB,eAAe,CAACmB,KAAjB,GAAyB;AACvBC,MAAAA,cAAc,EAAE,MADO;AAEvBC,MAAAA,MAAM,EAAE;AAFe,KApBrB;AAwBJ,KAACrB,eAAe,CAACsB,QAAjB,GAA4B;AAC1BD,MAAAA,MAAM,EAAE,aADkB;AAE1BD,MAAAA,cAAc,EAAE,MAFU;AAG1BG,MAAAA,KAAK,EAAE;AAHmB,KAxBxB;AA6BJ,KAACvB,eAAe,CAACwB,qBAAjB,GAAyC;AACvCP,MAAAA,OAAO,EAAE;AAD8B;AA7BrC,GADuB;AAkC7BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRhB,MAAAA,SAAS,EAAE,SADH;AAER,OAACV,eAAe,CAACmB,KAAjB,GAAyB;AACvBC,QAAAA,cAAc,EAAE;AADO,OAFjB;AAKR,OAACpB,eAAe,CAAC2B,aAAjB,GAAiC;AAC/BjB,QAAAA,SAAS,EAAE;AADoB;AALzB,KADF;AAURkB,IAAAA,MAAM,EAAE;AACNzB,MAAAA,OAAO,EAAE,QADH;AAENQ,MAAAA,UAAU,EAAE,SAFN;AAGNS,MAAAA,cAAc,EAAE,WAHV;AAIN,OAACpB,eAAe,CAACY,OAAjB,GAA2B;AACzBT,QAAAA,OAAO,EAAE;AADgB,OAJrB;AAON,OAACH,eAAe,CAAC2B,aAAjB,GAAiC;AAC/BE,QAAAA,OAAO,EAAE,uBADsB;AAE/BT,QAAAA,cAAc,EAAE;AAFe;AAP3B,KAVA;AAsBRU,IAAAA,SAAS,EAAE;AACTpB,MAAAA,SAAS,EAAE,MADF;AAETC,MAAAA,UAAU,EAAE;AAFH;AAtBH;AAlCmB,CAAD,CAA9B;AA+DA,MAAMoB,WAAW,GAAGlC,QAAQ,CAACmC,OAAT,CAClBrC,MAAM,CAACsC,MADW,EAElBtC,MAAM,CAACuC,UAFW,EAGlBvC,MAAM,CAACwC,KAHW,CAApB;AAMA,OAAO,MAAMC,UAAU,GAAGtC,MAAM,CAAC,GAAD,EAAMJ,aAAa,EAAnB,CAAN,CACxBO,cADwB,EAExB8B,WAFwB,CAAnB;AAKP,OAAO,MAAMM,MAAM,GAAGD,UAAU,CAACE,aAAX,CAAyBvC,UAAzB,CAAf;KAAMsC,M;AAEbA,MAAM,CAACE,YAAP,GAAsB;AACpB3C,EAAAA,OAAO,EAAE;AADW,CAAtB","sourcesContent":["import { styledOptions, system, variant } from '@codecademy/gamut-styles';\nimport { StyleProps, variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { HTMLProps } from 'react';\n\nimport { ButtonBase, ButtonSelectors } from '../ButtonBase/ButtonBase';\n\nexport interface AnchorProps\n  extends StyleProps<typeof anchorProps>,\n    StyleProps<typeof anchorVariants> {\n  onClick?: HTMLProps<HTMLAnchorElement>['onClick'];\n}\n\nconst anchorVariants = variant({\n  base: {\n    display: 'inline-block',\n    bg: 'transparent',\n    boxShadow: 'none',\n    border: 'none',\n    p: 0,\n    fontSize: 'inherit',\n    position: 'relative',\n    textColor: 'primary',\n    whiteSpace: 'nowrap',\n    [ButtonSelectors.OUTLINE]: {\n      content: \"''\",\n      position: 'absolute',\n      inset: -4,\n      borderRadius: '4px',\n      border: 2,\n      borderColor: 'primary',\n      opacity: 0,\n      zIndex: 0,\n    },\n    [ButtonSelectors.HOVER]: {\n      textDecoration: 'none',\n      cursor: 'pointer',\n    },\n    [ButtonSelectors.DISABLED]: {\n      cursor: 'not-allowed',\n      textDecoration: 'none',\n      color: 'text-disabled',\n    },\n    [ButtonSelectors.OUTLINE_FOCUS_VISIBLE]: {\n      opacity: 1,\n    },\n  },\n  variants: {\n    standard: {\n      textColor: 'primary',\n      [ButtonSelectors.HOVER]: {\n        textDecoration: 'underline',\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        textColor: 'text',\n      },\n    },\n    inline: {\n      display: 'inline',\n      whiteSpace: 'initial',\n      textDecoration: 'underline',\n      [ButtonSelectors.OUTLINE]: {\n        display: 'none',\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        outline: 'currentColor auto 4px',\n        textDecoration: 'underline',\n      },\n    },\n    interface: {\n      textColor: 'text',\n      whiteSpace: 'initial',\n    },\n  },\n});\n\nconst anchorProps = variance.compose(\n  system.layout,\n  system.typography,\n  system.space\n);\n\nexport const AnchorBase = styled('a', styledOptions<'a'>())<AnchorProps>(\n  anchorVariants,\n  anchorProps\n);\n\nexport const Anchor = AnchorBase.withComponent(ButtonBase);\n\nAnchor.defaultProps = {\n  variant: 'inline',\n};\n"]},"metadata":{},"sourceType":"module"}