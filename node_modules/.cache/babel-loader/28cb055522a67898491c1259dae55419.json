{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeaderMobile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { AppBarSection, Box, ContentContainer, FlexBox, Overlay } from '@codecademy/gamut';\nimport { CloseIcon, MenuIcon } from '@codecademy/gamut-icons';\nimport { breakpoints } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport { mapItemToElement, StyledAppBar } from '../AppHeader';\nimport { focusStyles, hoverStyles } from '../AppHeader/AppHeaderElements/SharedStyles';\nimport { AppHeaderMainMenuMobile } from '../AppHeaderMobile/AppHeaderMainMenuMobile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IconButton = styled.button`\n  background-color: transparent;\n  border: transparent;\n  color: ${({\n  theme\n}) => theme.colors.navy};\n  line-height: 0.5rem;\n  ${hoverStyles}\n  ${focusStyles}\n`;\n_c = IconButton;\nconst StyledOverlay = styled(Overlay)`\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  opacity: 1;\n  background-color: white;\n  position: fixed;\n  left: 0;\n  top: 0;\n  overflow-x: hidden;\n\n  @media only screen and (min-width: ${breakpoints.md}) {\n    display: none;\n  }\n`;\n_c2 = StyledOverlay;\nexport const AppHeaderMobile = ({\n  action,\n  items,\n  onSearch,\n  redirectParam\n}) => {\n  _s();\n\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const openMobileMenu = () => {\n    setMobileMenuOpen(true);\n  };\n\n  const mapItemsToElement = items => {\n    return items.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n      ml: index === 0 ? 0 : 4,\n      mr: index === items.length - 1 ? 0 : 4,\n      children: mapItemToElement(action, item, redirectParam)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!mobileMenuOpen &&\n    /*#__PURE__*/\n    // need this bc AppBar has a hardcoded z-Index of 15\n    _jsxDEV(StyledAppBar, {\n      children: [/*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"left\",\n        children: mapItemsToElement(items.left)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"right\",\n        children: [mapItemsToElement(items.right), /*#__PURE__*/_jsxDEV(FlexBox, {\n          ml: 24,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            type: \"button\",\n            \"data-testid\": \"header-mobile-menu\",\n            \"aria-label\": \"open navigation menu\",\n            onClick: () => {\n              openMobileMenu();\n            },\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              height: 20,\n              width: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledOverlay, {\n      clickOutsideCloses: true,\n      escapeCloses: true,\n      isOpen: mobileMenuOpen,\n      onRequestClose: () => setMobileMenuOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"header-mobile-menu-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(StyledAppBar, {\n          children: [/*#__PURE__*/_jsxDEV(AppBarSection, {\n            position: \"left\",\n            children: mapItemsToElement(items.left)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AppBarSection, {\n            position: \"right\",\n            children: /*#__PURE__*/_jsxDEV(FlexBox, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                type: \"button\",\n                \"aria-label\": \"close menu\",\n                onClick: () => {\n                  setMobileMenuOpen(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  width: 20,\n                  height: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n          children: /*#__PURE__*/_jsxDEV(AppHeaderMainMenuMobile, {\n            action: action,\n            items: items.mainMenu,\n            onSearch: onSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppHeaderMobile, \"d7gXMF6mPDUhHBNUSEb8mLK4AII=\");\n\n_c3 = AppHeaderMobile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconButton\");\n$RefreshReg$(_c2, \"StyledOverlay\");\n$RefreshReg$(_c3, \"AppHeaderMobile\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeaderMobile/index.tsx"],"names":["AppBarSection","Box","ContentContainer","FlexBox","Overlay","CloseIcon","MenuIcon","breakpoints","styled","React","useState","mapItemToElement","StyledAppBar","focusStyles","hoverStyles","AppHeaderMainMenuMobile","IconButton","button","theme","colors","navy","StyledOverlay","md","AppHeaderMobile","action","items","onSearch","redirectParam","mobileMenuOpen","setMobileMenuOpen","openMobileMenu","mapItemsToElement","map","item","index","length","id","left","right","mainMenu"],"mappings":"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","sourcesContent":["import {\n  AppBarSection,\n  Box,\n  ContentContainer,\n  FlexBox,\n  Overlay,\n} from '@codecademy/gamut';\nimport { CloseIcon, MenuIcon } from '@codecademy/gamut-icons';\nimport { breakpoints } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\n\nimport { mapItemToElement, StyledAppBar } from '../AppHeader';\nimport {\n  focusStyles,\n  hoverStyles,\n} from '../AppHeader/AppHeaderElements/SharedStyles';\nimport {\n  AppHeaderClickHandler,\n  AppHeaderItem,\n} from '../AppHeader/AppHeaderElements/types';\nimport { FormattedMobileAppHeaderItems } from '../AppHeader/types';\nimport { AppHeaderMainMenuMobile } from '../AppHeaderMobile/AppHeaderMainMenuMobile';\n\nexport type AppHeaderMobileProps = {\n  action: AppHeaderClickHandler;\n  items: FormattedMobileAppHeaderItems;\n  redirectParam?: string;\n  onSearch: (query: string) => void;\n};\n\nconst IconButton = styled.button`\n  background-color: transparent;\n  border: transparent;\n  color: ${({ theme }) => theme.colors.navy};\n  line-height: 0.5rem;\n  ${hoverStyles}\n  ${focusStyles}\n`;\n\nconst StyledOverlay = styled(Overlay)`\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  opacity: 1;\n  background-color: white;\n  position: fixed;\n  left: 0;\n  top: 0;\n  overflow-x: hidden;\n\n  @media only screen and (min-width: ${breakpoints.md}) {\n    display: none;\n  }\n`;\n\nexport const AppHeaderMobile: React.FC<AppHeaderMobileProps> = ({\n  action,\n  items,\n  onSearch,\n  redirectParam,\n}) => {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState<boolean>(false);\n\n  const openMobileMenu = () => {\n    setMobileMenuOpen(true);\n  };\n\n  const mapItemsToElement = <T extends AppHeaderItem[]>(items: T) => {\n    return items.map((item, index) => (\n      <Box\n        key={item.id}\n        ml={index === 0 ? 0 : 4}\n        mr={index === items.length - 1 ? 0 : 4}\n      >\n        {mapItemToElement(action, item, redirectParam)}\n      </Box>\n    ));\n  };\n\n  return (\n    <>\n      {!mobileMenuOpen && ( // need this bc AppBar has a hardcoded z-Index of 15\n        <StyledAppBar>\n          <AppBarSection position=\"left\">\n            {mapItemsToElement(items.left)}\n          </AppBarSection>\n          <AppBarSection position=\"right\">\n            {mapItemsToElement(items.right)}\n\n            <FlexBox ml={24}>\n              <IconButton\n                type=\"button\"\n                data-testid=\"header-mobile-menu\"\n                aria-label=\"open navigation menu\"\n                onClick={() => {\n                  openMobileMenu();\n                }}\n              >\n                <MenuIcon height={20} width={20} />\n              </IconButton>\n            </FlexBox>\n          </AppBarSection>\n        </StyledAppBar>\n      )}\n      <StyledOverlay\n        clickOutsideCloses\n        escapeCloses\n        isOpen={mobileMenuOpen}\n        onRequestClose={() => setMobileMenuOpen(false)}\n      >\n        <div data-testid=\"header-mobile-menu-dropdown\">\n          <StyledAppBar>\n            <AppBarSection position=\"left\">\n              {mapItemsToElement(items.left)}\n            </AppBarSection>\n            <AppBarSection position=\"right\">\n              <FlexBox>\n                <IconButton\n                  type=\"button\"\n                  aria-label=\"close menu\"\n                  onClick={() => {\n                    setMobileMenuOpen(false);\n                  }}\n                >\n                  <CloseIcon width={20} height={20} />\n                </IconButton>\n              </FlexBox>\n            </AppBarSection>\n          </StyledAppBar>\n          <ContentContainer>\n            <AppHeaderMainMenuMobile\n              action={action}\n              items={items.mainMenu}\n              onSearch={onSearch}\n            />\n          </ContentContainer>\n        </div>\n      </StyledOverlay>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}