{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport { NOT_FOUND, ADD_ROUTES } from '../index';\nimport isServer from '../pure-utils/isServer';\nimport { nestHistory } from '../pure-utils/nestAction';\nexport default (function (initialState, routesMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n    routesMap = state.routesMap || routesMap;\n    var route = routesMap[action.type];\n\n    if (action.type === NOT_FOUND || route && !action.error && (typeof route === 'string' || route.path) && (action.meta.location.current.pathname !== state.pathname || action.meta.location.current.search !== state.search || action.meta.location.kind === 'load')) {\n      var _query = action.meta.location.current.query;\n      var _search = action.meta.location.current.search;\n      return _extends({\n        pathname: action.meta.location.current.pathname,\n        type: action.type,\n        payload: _extends({}, action.payload)\n      }, _query && {\n        query: _query,\n        search: _search\n      }, {\n        prev: action.meta.location.prev,\n        kind: action.meta.location.kind,\n        history: action.meta.location.history,\n        hasSSR: state.hasSSR,\n        routesMap: routesMap\n      });\n    } else if (route && !action.error && (typeof route === 'string' || route.path) && action.meta.location.current.pathname === state.pathname && action.meta.location.current.search === state.search && action.meta.location.kind !== state.kind) {\n      return _extends({}, state, {\n        kind: action.meta.location.kind\n      });\n    } else if (action.type === ADD_ROUTES) {\n      return _extends({}, state, {\n        routesMap: _extends({}, state.routesMap, action.payload.routes)\n      });\n    }\n\n    return state;\n  };\n});\nexport var getInitialState = function getInitialState(currentPathname, meta, type, payload, routesMap, history) {\n  return _extends({\n    search: currentPathname.split('?')[1],\n    pathname: currentPathname.split('?')[0],\n    type: type,\n    payload: payload\n  }, meta, {\n    prev: {\n      pathname: '',\n      type: '',\n      payload: {}\n    },\n    kind: undefined,\n    history: nestHistory(history),\n    hasSSR: isServer() ? true : undefined,\n    // client uses initial server `hasSSR` state setup here\n    routesMap: routesMap\n  });\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/redux-first-router/dist/es/reducer/createLocationReducer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","NOT_FOUND","ADD_ROUTES","isServer","nestHistory","initialState","routesMap","state","undefined","action","route","type","error","path","meta","location","current","pathname","search","kind","_query","query","_search","payload","prev","history","hasSSR","routes","getInitialState","currentPathname","split"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,SAAT,EAAoBC,UAApB,QAAsC,UAAtC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAGA,gBAAgB,UAAUC,YAAV,EAAwBC,SAAxB,EAAmC;AACjD,SAAO,YAAY;AACjB,QAAIC,KAAK,GAAGb,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBc,SAAzC,GAAqDd,SAAS,CAAC,CAAD,CAA9D,GAAoEW,YAAhF;AACA,QAAII,MAAM,GAAGf,SAAS,CAAC,CAAD,CAAtB;AAEAY,IAAAA,SAAS,GAAGC,KAAK,CAACD,SAAN,IAAmBA,SAA/B;AACA,QAAII,KAAK,GAAGJ,SAAS,CAACG,MAAM,CAACE,IAAR,CAArB;;AAEA,QAAIF,MAAM,CAACE,IAAP,KAAgBV,SAAhB,IAA6BS,KAAK,IAAI,CAACD,MAAM,CAACG,KAAjB,KAA2B,OAAOF,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACG,IAA9D,MAAwEJ,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BC,QAA7B,KAA0CV,KAAK,CAACU,QAAhD,IAA4DR,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BE,MAA7B,KAAwCX,KAAK,CAACW,MAA1G,IAAoHT,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBI,IAArB,KAA8B,MAA1N,CAAjC,EAAoQ;AAClQ,UAAIC,MAAM,GAAGX,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BK,KAA1C;AACA,UAAIC,OAAO,GAAGb,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BE,MAA3C;AAEA,aAAO7B,QAAQ,CAAC;AACd4B,QAAAA,QAAQ,EAAER,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BC,QADzB;AAEdN,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFC;AAGdY,QAAAA,OAAO,EAAElC,QAAQ,CAAC,EAAD,EAAKoB,MAAM,CAACc,OAAZ;AAHH,OAAD,EAIZH,MAAM,IAAI;AAAEC,QAAAA,KAAK,EAAED,MAAT;AAAiBF,QAAAA,MAAM,EAAEI;AAAzB,OAJE,EAIkC;AAC/CE,QAAAA,IAAI,EAAEf,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBS,IADoB;AAE/CL,QAAAA,IAAI,EAAEV,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBI,IAFoB;AAG/CM,QAAAA,OAAO,EAAEhB,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBU,OAHiB;AAI/CC,QAAAA,MAAM,EAAEnB,KAAK,CAACmB,MAJiC;AAK/CpB,QAAAA,SAAS,EAAEA;AALoC,OAJlC,CAAf;AAWD,KAfD,MAeO,IAAII,KAAK,IAAI,CAACD,MAAM,CAACG,KAAjB,KAA2B,OAAOF,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACG,IAA9D,KAAuEJ,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BC,QAA7B,KAA0CV,KAAK,CAACU,QAAvH,IAAmIR,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBC,OAArB,CAA6BE,MAA7B,KAAwCX,KAAK,CAACW,MAAjL,IAA2LT,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBI,IAArB,KAA8BZ,KAAK,CAACY,IAAnO,EAAyO;AAC9O,aAAO9B,QAAQ,CAAC,EAAD,EAAKkB,KAAL,EAAY;AACzBY,QAAAA,IAAI,EAAEV,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBI;AADF,OAAZ,CAAf;AAGD,KAJM,MAIA,IAAIV,MAAM,CAACE,IAAP,KAAgBT,UAApB,EAAgC;AACrC,aAAOb,QAAQ,CAAC,EAAD,EAAKkB,KAAL,EAAY;AACzBD,QAAAA,SAAS,EAAEjB,QAAQ,CAAC,EAAD,EAAKkB,KAAK,CAACD,SAAX,EAAsBG,MAAM,CAACc,OAAP,CAAeI,MAArC;AADM,OAAZ,CAAf;AAGD;;AAED,WAAOpB,KAAP;AACD,GAjCD;AAkCD,CAnCD;AAqCA,OAAO,IAAIqB,eAAe,GAAG,SAASA,eAAT,CAAyBC,eAAzB,EAA0Cf,IAA1C,EAAgDH,IAAhD,EAAsDY,OAAtD,EAA+DjB,SAA/D,EAA0EmB,OAA1E,EAAmF;AAC9G,SAAOpC,QAAQ,CAAC;AACd6B,IAAAA,MAAM,EAAEW,eAAe,CAACC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CADM;AAEdb,IAAAA,QAAQ,EAAEY,eAAe,CAACC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAFI;AAGdnB,IAAAA,IAAI,EAAEA,IAHQ;AAIdY,IAAAA,OAAO,EAAEA;AAJK,GAAD,EAKZT,IALY,EAKN;AACPU,IAAAA,IAAI,EAAE;AACJP,MAAAA,QAAQ,EAAE,EADN;AAEJN,MAAAA,IAAI,EAAE,EAFF;AAGJY,MAAAA,OAAO,EAAE;AAHL,KADC;AAMPJ,IAAAA,IAAI,EAAEX,SANC;AAOPiB,IAAAA,OAAO,EAAErB,WAAW,CAACqB,OAAD,CAPb;AAQPC,IAAAA,MAAM,EAAEvB,QAAQ,KAAK,IAAL,GAAYK,SARrB;AAQgC;AACvCF,IAAAA,SAAS,EAAEA;AATJ,GALM,CAAf;AAgBD,CAjBM","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { NOT_FOUND, ADD_ROUTES } from '../index';\nimport isServer from '../pure-utils/isServer';\nimport { nestHistory } from '../pure-utils/nestAction';\n\n\nexport default (function (initialState, routesMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    routesMap = state.routesMap || routesMap;\n    var route = routesMap[action.type];\n\n    if (action.type === NOT_FOUND || route && !action.error && (typeof route === 'string' || route.path) && (action.meta.location.current.pathname !== state.pathname || action.meta.location.current.search !== state.search || action.meta.location.kind === 'load')) {\n      var _query = action.meta.location.current.query;\n      var _search = action.meta.location.current.search;\n\n      return _extends({\n        pathname: action.meta.location.current.pathname,\n        type: action.type,\n        payload: _extends({}, action.payload)\n      }, _query && { query: _query, search: _search }, {\n        prev: action.meta.location.prev,\n        kind: action.meta.location.kind,\n        history: action.meta.location.history,\n        hasSSR: state.hasSSR,\n        routesMap: routesMap\n      });\n    } else if (route && !action.error && (typeof route === 'string' || route.path) && action.meta.location.current.pathname === state.pathname && action.meta.location.current.search === state.search && action.meta.location.kind !== state.kind) {\n      return _extends({}, state, {\n        kind: action.meta.location.kind\n      });\n    } else if (action.type === ADD_ROUTES) {\n      return _extends({}, state, {\n        routesMap: _extends({}, state.routesMap, action.payload.routes)\n      });\n    }\n\n    return state;\n  };\n});\n\nexport var getInitialState = function getInitialState(currentPathname, meta, type, payload, routesMap, history) {\n  return _extends({\n    search: currentPathname.split('?')[1],\n    pathname: currentPathname.split('?')[0],\n    type: type,\n    payload: payload\n  }, meta, {\n    prev: {\n      pathname: '',\n      type: '',\n      payload: {}\n    },\n    kind: undefined,\n    history: nestHistory(history),\n    hasSSR: isServer() ? true : undefined, // client uses initial server `hasSSR` state setup here\n    routesMap: routesMap\n  });\n};"]},"metadata":{},"sourceType":"module"}