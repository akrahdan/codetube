{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _system$css;import{fontSmoothPixel,modeColorProps,styledOptions,system,transitionConcat}from'@codecademy/gamut-styles';import{variance}from'@codecademy/variance';import styled from'@emotion/styled';import{ButtonBase,ButtonSelectors}from'../ButtonBase/ButtonBase';export var config=styledOptions(['size']);export var buttonProps=variance.compose(system.layout,system.positioning,system.space,system.border);export var templateVariants=function templateVariants(variants,template){var variantConfig={};variants.forEach(function(key){variantConfig[key]=template(key);});return system.variant({defaultVariant:variants[0],variants:variantConfig});};export var buttonVariants=['primary','secondary','danger'];export var buttonStyles=system.css((_system$css={position:'relative',fontWeight:'title',whiteSpace:'nowrap',display:'inline-flex',justifyContent:'center',alignItems:'center',border:2,borderRadius:'4px',borderColor:'transparent',transition:transitionConcat(['border-color','color','background-color','box-shadow'],'fast','ease-in')},_defineProperty(_system$css,ButtonSelectors.DISABLED,{cursor:'not-allowed',userSelect:'none'}),_defineProperty(_system$css,ButtonSelectors.OUTLINE,{content:'\"\"',transition:transitionConcat(['opacity'],'fast'),position:'absolute',borderRadius:'6px',border:2,inset:-5,opacity:0,zIndex:0}),_defineProperty(_system$css,ButtonSelectors.OUTLINE_FOCUS_VISIBLE,{opacity:1}),_system$css));export var createButtonComponent=function createButtonComponent(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return styled(ButtonBase).apply(void 0,[fontSmoothPixel,modeColorProps,buttonStyles].concat(args,[buttonProps]));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Button/shared.ts"],"names":["fontSmoothPixel","modeColorProps","styledOptions","system","transitionConcat","variance","styled","ButtonBase","ButtonSelectors","config","buttonProps","compose","layout","positioning","space","border","templateVariants","variants","template","variantConfig","forEach","key","variant","defaultVariant","buttonVariants","buttonStyles","css","position","fontWeight","whiteSpace","display","justifyContent","alignItems","borderRadius","borderColor","transition","DISABLED","cursor","userSelect","OUTLINE","content","inset","opacity","zIndex","OUTLINE_FOCUS_VISIBLE","createButtonComponent","args"],"mappings":"8KAAA,OAEEA,eAFF,CAGEC,cAHF,CAIEC,aAJF,CAKEC,MALF,CAMEC,gBANF,KAOO,0BAPP,CAQA,OAIEC,QAJF,KAKO,sBALP,CAMA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAGA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,0BAA5C,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAGP,aAAa,CAAmB,CAAC,MAAD,CAAnB,CAA5B,CAEP,MAAO,IAAMQ,CAAAA,WAAW,CAAGL,QAAQ,CAACM,OAAT,CACzBR,MAAM,CAACS,MADkB,CAEzBT,MAAM,CAACU,WAFkB,CAGzBV,MAAM,CAACW,KAHkB,CAIzBX,MAAM,CAACY,MAJkB,CAApB,CAOP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAC9BC,QAD8B,CAE9BC,QAF8B,CAG3B,CACH,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CACAF,QAAQ,CAACG,OAAT,CAAiB,SAACC,GAAD,CAAkB,CACjCF,aAAa,CAACE,GAAD,CAAb,CAAqBH,QAAQ,CAACG,GAAD,CAA7B,CACD,CAFD,EAGA,MAAOlB,CAAAA,MAAM,CAACmB,OAAP,CAAe,CACpBC,cAAc,CAAEN,QAAQ,CAAC,CAAD,CADJ,CAEpBA,QAAQ,CAAEE,aAFU,CAAf,CAAP,CAID,CAZM,CAcP,MAAO,IAAMK,CAAAA,cAAc,CAAG,CAAC,SAAD,CAAY,WAAZ,CAAyB,QAAzB,CAAvB,CAEP,MAAO,IAAMC,CAAAA,YAAY,CAAGtB,MAAM,CAACuB,GAAP,eAC1BC,QAAQ,CAAE,UADgB,CAE1BC,UAAU,CAAE,OAFc,CAG1BC,UAAU,CAAE,QAHc,CAI1BC,OAAO,CAAE,aAJiB,CAK1BC,cAAc,CAAE,QALU,CAM1BC,UAAU,CAAE,QANc,CAO1BjB,MAAM,CAAE,CAPkB,CAQ1BkB,YAAY,CAAE,KARY,CAS1BC,WAAW,CAAE,aATa,CAU1BC,UAAU,CAAE/B,gBAAgB,CAC1B,CAAC,cAAD,CAAiB,OAAjB,CAA0B,kBAA1B,CAA8C,YAA9C,CAD0B,CAE1B,MAF0B,CAG1B,SAH0B,CAVF,8BAezBI,eAAe,CAAC4B,QAfS,CAeE,CAC1BC,MAAM,CAAE,aADkB,CAE1BC,UAAU,CAAE,MAFc,CAfF,8BAmBzB9B,eAAe,CAAC+B,OAnBS,CAmBC,CACzBC,OAAO,CAAE,IADgB,CAEzBL,UAAU,CAAE/B,gBAAgB,CAAC,CAAC,SAAD,CAAD,CAAc,MAAd,CAFH,CAGzBuB,QAAQ,CAAE,UAHe,CAIzBM,YAAY,CAAE,KAJW,CAKzBlB,MAAM,CAAE,CALiB,CAMzB0B,KAAK,CAAE,CAAC,CANiB,CAOzBC,OAAO,CAAE,CAPgB,CAQzBC,MAAM,CAAE,CARiB,CAnBD,8BA6BzBnC,eAAe,CAACoC,qBA7BS,CA6Be,CACvCF,OAAO,CAAE,CAD8B,CA7Bf,eAArB,CA4CP,MAAO,IAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,iCAChCC,IADgC,0CAChCA,IADgC,8BAGnCxC,CAAAA,MAAM,CAACC,UAAD,CAAN,eACEP,eADF,CAEEC,cAFF,CAGEwB,YAHF,SAIKqB,IAJL,EAKEpC,WALF,GAHmC,EAA9B","sourcesContent":["import {\n  ColorModes,\n  fontSmoothPixel,\n  modeColorProps,\n  styledOptions,\n  system,\n  transitionConcat,\n} from '@codecademy/gamut-styles';\nimport {\n  CSSObject,\n  StyleProps,\n  ThemeProps,\n  variance,\n} from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { ComponentProps, HTMLProps } from 'react';\n\nimport { ButtonBase, ButtonSelectors } from '../ButtonBase/ButtonBase';\n\nexport const config = styledOptions<'button', 'size'>(['size']);\n\nexport const buttonProps = variance.compose(\n  system.layout,\n  system.positioning,\n  system.space,\n  system.border\n);\n\nexport const templateVariants = <Variant extends string, Styles>(\n  variants: ReadonlyArray<Variant>,\n  template: (colors: Variant) => Styles\n) => {\n  const variantConfig = {} as Record<Variant, ReturnType<typeof template>>;\n  variants.forEach((key: Variant) => {\n    variantConfig[key] = template(key);\n  });\n  return system.variant({\n    defaultVariant: variants[0],\n    variants: variantConfig,\n  });\n};\n\nexport const buttonVariants = ['primary', 'secondary', 'danger'] as const;\n\nexport const buttonStyles = system.css({\n  position: 'relative',\n  fontWeight: 'title',\n  whiteSpace: 'nowrap',\n  display: 'inline-flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  border: 2,\n  borderRadius: '4px',\n  borderColor: 'transparent',\n  transition: transitionConcat(\n    ['border-color', 'color', 'background-color', 'box-shadow'],\n    'fast',\n    'ease-in'\n  ),\n  [ButtonSelectors.DISABLED]: {\n    cursor: 'not-allowed',\n    userSelect: 'none',\n  },\n  [ButtonSelectors.OUTLINE]: {\n    content: '\"\"',\n    transition: transitionConcat(['opacity'], 'fast'),\n    position: 'absolute',\n    borderRadius: '6px',\n    border: 2,\n    inset: -5,\n    opacity: 0,\n    zIndex: 0,\n  },\n  [ButtonSelectors.OUTLINE_FOCUS_VISIBLE]: {\n    opacity: 1,\n  },\n});\n\nexport interface ButtonProps\n  extends ComponentProps<typeof ButtonBase>,\n    StyleProps<typeof buttonProps> {\n  onClick?: HTMLProps<HTMLButtonElement>['onClick'];\n  variant?: typeof buttonVariants[number];\n  size?: 'normal' | 'small';\n  as?: never;\n  mode?: ColorModes;\n}\n\nexport const createButtonComponent = <P>(\n  ...args: (<T extends ThemeProps>(props: T) => CSSObject)[]\n) =>\n  styled(ButtonBase)<ButtonProps & P>(\n    fontSmoothPixel,\n    modeColorProps,\n    buttonStyles,\n    ...args,\n    buttonProps\n  );\n"]},"metadata":{},"sourceType":"module"}