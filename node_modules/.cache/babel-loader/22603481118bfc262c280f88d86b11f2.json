{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/contentItem/lectureItem/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useAppDispatch } from \"store/hooks\";\nimport { useHistory } from \"react-router\";\nimport { setCurrentUrl, setSubtitle, setClipId } from \"state/player/playerSlice\";\nimport { useTrackViewsMutation, useUpdateVideoViewsMutation } from \"services/courses\";\nimport { usePlayer } from \"store/usePlayer\";\nimport classNames from \"classnames\";\nimport styles from \"./style.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LectureItem = ({\n  lecture,\n  isCurrent,\n  handleCurrent,\n  complete,\n  handleActive\n}) => {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [trackViews] = useTrackViewsMutation();\n  const [updateVideoViews] = useUpdateVideoViewsMutation();\n  const {\n    data: viewsQuery\n  } = useFetchV;\n  const dispatch = useAppDispatch();\n  const {\n    push\n  } = useHistory();\n  const {\n    player\n  } = usePlayer();\n  useEffect(() => {\n    if (lecture) {\n      const minutes = Math.floor(lecture.duration / 60);\n      const seconds = Math.round(lecture.duration - minutes * 60);\n      setMinutes(minutes);\n      setSeconds(seconds);\n      dispatch(setSubtitle(lecture.title));\n    }\n  }, [lecture]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      var _lecture$video;\n\n      handleCurrent();\n      dispatch(setCurrentUrl(lecture.video_url));\n      trackViews({\n        id: lecture.id\n      });\n      handleActive();\n      push({\n        search: \"?\" + new URLSearchParams({\n          clipid: lecture.video.key\n        })\n      });\n      dispatch(setSubtitle(lecture.title));\n      dispatch(setClipId((_lecture$video = lecture.video) === null || _lecture$video === void 0 ? void 0 : _lecture$video.key));\n    },\n    className: classNames(styles.lectureItemContainer, {\n      [styles.isCurrent]: isCurrent\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.iconContainer,\n      children: complete && !isCurrent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.iconPosition,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          \"aria-label\": \"completed\",\n          className: styles.svgIcon,\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2.6 12.3l-1.4 1.4a1 1 0 000 1.5l6.1 6.2c.4.4 1 .4 1.4 0L23 6.9c.4-.4.4-1 0-1.4L21.6 4A1 1 0 0020 4l-12 12.3-4-4a1 1 0 00-1.5 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(styles.iconPosition, {\n          [styles.isCurrent]: isCurrent\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          \"aria-label\": \"selected\",\n          className: styles.svgIcon,\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M6.23 20.7L19.77 12 6.23 3.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.lectureItemDisplay,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.lectureItemH3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.textCenter,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Introduction\",\n            children: lecture.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.lectureDuration,\n        children: [minutes, \"m \", seconds, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LectureItem, \"vvdavGRafXK+Sdrq79oqSouGL0Q=\", false, function () {\n  return [useTrackViewsMutation, useUpdateVideoViewsMutation, useAppDispatch, useHistory, usePlayer];\n});\n\n_c = LectureItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LectureItem\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/contentItem/lectureItem/index.tsx"],"names":["React","useEffect","useState","useAppDispatch","useHistory","setCurrentUrl","setSubtitle","setClipId","useTrackViewsMutation","useUpdateVideoViewsMutation","usePlayer","classNames","styles","LectureItem","lecture","isCurrent","handleCurrent","complete","handleActive","seconds","setSeconds","minutes","setMinutes","trackViews","updateVideoViews","data","viewsQuery","useFetchV","dispatch","push","player","Math","floor","duration","round","title","video_url","id","search","URLSearchParams","clipid","video","key","lectureItemContainer","iconContainer","iconPosition","svgIcon","lectureItemDisplay","lectureItemH3","textCenter","lectureDuration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAppDispatch } from \"store/hooks\";\nimport { useHistory } from \"react-router\";\nimport { setCurrentUrl, setCurrentUrlIndex, setSubtitle, setClipId, setTime } from \"state/player/playerSlice\";\nimport { useTrackViewsMutation, useFetchVideoViewsQuery, useUpdateVideoViewsMutation } from \"services/courses\";\n\nimport { usePlayer } from \"store/usePlayer\";\nimport classNames from \"classnames\";\nimport { Lecture } from \"services/courses\";\nimport styles from \"./style.module.scss\";\n\ntype LectureProps = {\n  lecture: Lecture,\n  isCurrent: boolean,\n  handleCurrent: () => void,\n  complete: boolean\n  handleActive: () => void\n}\nexport const LectureItem: React.FC<LectureProps> = ({ lecture, isCurrent, handleCurrent, complete, handleActive }) => {\n\n  const [seconds, setSeconds] = useState(0)\n  const [minutes, setMinutes] = useState(0)\n  const [trackViews] = useTrackViewsMutation()\n  const [ updateVideoViews ] = useUpdateVideoViewsMutation()\n  const { data: viewsQuery } = useFetchV\n  const dispatch = useAppDispatch()\n  const { push } = useHistory()\n  const { player } = usePlayer()\n\n  useEffect(() => {\n    if (lecture) {\n      const minutes = Math.floor(lecture.duration / 60)\n      const seconds = Math.round(lecture.duration - minutes * 60)\n      setMinutes(minutes)\n      setSeconds(seconds)\n      dispatch(setSubtitle(lecture.title))\n    }\n\n  }, [lecture])\n\n \n\n  return (\n    <button onClick={() => {\n      handleCurrent();\n      dispatch(setCurrentUrl(lecture.video_url))\n      trackViews({\n        id: lecture.id\n      })\n      handleActive()\n      push({\n        search: \"?\" + new URLSearchParams({ clipid: lecture.video.key })\n      })\n      dispatch(setSubtitle(lecture.title))\n      dispatch(setClipId(lecture.video?.key))\n\n    }} className={classNames(styles.lectureItemContainer, {\n      [styles.isCurrent]: isCurrent\n    })}>\n      <div className={styles.iconContainer}>\n        {\n          (complete && !isCurrent) ? (<div className={styles.iconPosition}>\n            <svg aria-label=\"completed\" className={styles.svgIcon}\n              xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path d=\"M2.6 12.3l-1.4 1.4a1 1 0 000 1.5l6.1 6.2c.4.4 1 .4 1.4 0L23 6.9c.4-.4.4-1 0-1.4L21.6 4A1 1 0 0020 4l-12 12.3-4-4a1 1 0 00-1.5 0z\" />\n            </svg>\n          </div>) : (<div className={classNames(styles.iconPosition, {\n            [styles.isCurrent]: isCurrent\n          })}>\n            <svg\n              aria-label=\"selected\"\n              className={styles.svgIcon}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M6.23 20.7L19.77 12 6.23 3.3\" />\n            </svg>\n          </div>)\n        }\n\n      </div>\n      <div className={styles.lectureItemDisplay}>\n        <h3 className={styles.lectureItemH3}>\n          <div className={styles.textCenter}>\n            <span title=\"Introduction\">{lecture.title}</span>\n          </div>\n        </h3>\n        <div className={styles.lectureDuration}>{minutes}m {seconds}s</div>\n      </div>\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}