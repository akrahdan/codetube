{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from 'services/courses';\nconst initialState = {\n  currentPath: '/instructor/courses',\n  profile: null\n};\nexport const instructorSlice = createSlice({\n  name: 'instructor',\n  initialState: initialState,\n  reducers: {\n    setCurrentPath: (state, action) => {\n      state.currentPath = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.editInstructorInfo.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.profile = payload;\n    }).addMatcher(coursesApi.endpoints.fetchInstructorInfo.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.profile = payload;\n    });\n  }\n});\nexport const {\n  setCurrentPath\n} = instructorSlice.actions;\nexport default instructorSlice.reducer;\nexport const selectCurrentPath = state => state.instructor.currentPath;\nexport const selectInstructor = state => state.instructor.profile;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/instructor/instructorSplice.ts"],"names":["createSlice","coursesApi","initialState","currentPath","profile","instructorSlice","name","reducers","setCurrentPath","state","action","payload","extraReducers","builder","addMatcher","endpoints","editInstructorInfo","matchFulfilled","fetchInstructorInfo","actions","reducer","selectCurrentPath","instructor","selectInstructor"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAQA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,WAAW,EAAE,qBAAf;AAAsCC,EAAAA,OAAO,EAAE;AAA/C,CAArB;AACA,OAAO,MAAMC,eAAe,GAAGL,WAAW,CAAC;AACvCM,EAAAA,IAAI,EAAE,YADiC;AAEvCJ,EAAAA,YAAY,EAAEA,YAFyB;AAGvCK,EAAAA,QAAQ,EAAE;AACPC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AACtDD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH;AAHM,GAH6B;AAQvCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACJC,UADH,CAEIb,UAAU,CAACc,SAAX,CAAqBC,kBAArB,CAAwCC,cAF5C,EAGI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACL,OAAN,GAAgBO,OAAhB;AACD,KALL,EAMIG,UANJ,CAOIb,UAAU,CAACc,SAAX,CAAqBG,mBAArB,CAAyCD,cAP7C,EAQI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACL,OAAN,GAAgBO,OAAhB;AACD,KAVL;AAaD;AAtBoC,CAAD,CAAnC;AA0BP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAqBH,eAAe,CAACc,OAA3C;AAEP,eAAed,eAAe,CAACe,OAA/B;AAEA,OAAO,MAAMC,iBAAiB,GAAIZ,KAAD,IAAsBA,KAAK,CAACa,UAAN,CAAiBnB,WAAjE;AACP,OAAO,MAAMoB,gBAAgB,GAAKd,KAAF,IAAuBA,KAAK,CAACa,UAAN,CAAiBlB,OAAjE","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"store\";\nimport { coursesApi } from 'services/courses'\nimport type { InstructorResponse } from 'services/courses'\ninterface DashboardState {\n  currentPath: string,\n  profile: InstructorResponse\n}\n\n\nconst initialState = { currentPath: '/instructor/courses', profile: null}\nexport const instructorSlice = createSlice({\n    name: 'instructor',\n    initialState: initialState as DashboardState,\n    reducers: {\n       setCurrentPath: (state, action: PayloadAction<string>) => {\n           state.currentPath = action.payload\n       }\n    },\n    extraReducers: (builder) => {\n        builder\n          .addMatcher(\n            coursesApi.endpoints.editInstructorInfo.matchFulfilled,\n            (state, { payload }) => {\n              state.profile = payload;\n            }\n          ).addMatcher(\n            coursesApi.endpoints.fetchInstructorInfo.matchFulfilled,\n            (state, { payload }) => {\n              state.profile = payload;\n            }\n          );\n          \n      },\n\n})\n\nexport const { setCurrentPath } = instructorSlice.actions\n\nexport default instructorSlice.reducer\n\nexport const selectCurrentPath = (state: RootState) => state.instructor.currentPath\nexport const selectInstructor = ( state: RootState) => state.instructor.profile"]},"metadata":{},"sourceType":"module"}