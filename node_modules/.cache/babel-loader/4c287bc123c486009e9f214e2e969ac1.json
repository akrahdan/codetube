{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{fontSmoothPixel,lineHeight,pxRem,timing,variant}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var arrowHeight=\"1rem\";var containerOffsetVertical=\"0.75rem\";var TooltipWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-flex;\\n\"])));var TargetContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  border: 0;\\n  background: none;\\n  padding: 0;\\n\"])));var ToolTipContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  \",\"\\n  display: flex;\\n  opacity: 0;\\n  transition: opacity \",\";\\n  transition-delay: \",\";\\n  position: absolute;\\n  max-width: \",\";\\n  visibility: hidden;\\n  width: 70vw;\\n  z-index: 1;\\n\\n  &::after {\\n    content: '';\\n    display: block;\\n    height: \",\";\\n    position: absolute;\\n    transform: rotate(45deg);\\n    width: \",\";\\n  }\\n\\n  &::after {\\n    border-style: solid;\\n\\n    \",\"\\n  }\\n\\n  \",\":hover + &,\\n  \",\":focus-within + &,\\n  &:hover {\\n    opacity: 1;\\n    visibility: visible;\\n  }\\n\\n  \",\"\\n\\n  \",\"\\n\\n\",\"\\n\\n  \",\"\\n\\n  \",\"\\n\"])),fontSmoothPixel,timing.fast,timing.fast,function(_ref){var alignment=_ref.alignment;return alignment.includes('center')?'8rem':'16rem';},arrowHeight,arrowHeight,variant({prop:'mode',variants:{dark:{backgroundColor:'black',borderColor:'white'},light:{backgroundColor:'white',borderColor:'black'}}}),TargetContainer,TargetContainer,function(_ref2){var alignment=_ref2.alignment;return alignment.includes('top')&&\"\\n      bottom: 100%;\\n      padding-bottom: \".concat(containerOffsetVertical,\";\\n\\n      &::after {\\n        border-bottom-right-radius: 4px;\\n        border-width: 0 1px 1px 0;\\n        bottom: 0.25rem;\\n      }\\n    \");},function(_ref3){var alignment=_ref3.alignment;return alignment.includes('bottom')&&\"\\n      top: 100%;\\n      padding-top: \".concat(containerOffsetVertical,\";\\n\\n      &::after {\\n        border-top-left-radius: 4px;\\n        border-width: 1px 0 0 1px;\\n        top: 0.25rem;\\n      }\\n    \");},function(_ref4){var alignment=_ref4.alignment;return alignment.includes('center')&&\"\\n      left: calc(50% - 4rem);\\n\\n      &::after {\\n        left: calc(50% - 0.5rem);\\n      }\\n    \";},function(_ref5){var alignment=_ref5.alignment;return alignment.includes('left')&&\"\\n      justify-content: flex-end;\\n\\n      &::after {\\n        right: 1.5rem;\\n      }\\n\\n      left: calc(50% - 14rem)\\n    \";},function(_ref6){var alignment=_ref6.alignment;return alignment.includes('right')&&\"\\n      &::after {\\n        left: 1.5rem;\\n      }\\n\\n      left: calc(50% - 2rem);\\n    \";});var ToolTipBody=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  border: 1px solid;\\n  border-radius: 3px;\\n  display: inline-block;\\n  font-size: \",\";\\n  line-height: \",\";\\n  \",\"\\n  min-width: 4rem;\\n\\n  \",\"\\n\"])),pxRem(14),lineHeight.base,function(_ref7){var alignment=_ref7.alignment;return alignment.includes('center')?\"\\n      margin: auto;\\n      padding: 0.5rem;\\n      text-align: center;\\n    \":\"\\n      padding: 1rem;\\n    \";},variant({prop:'mode',variants:{dark:{bg:'black',borderColor:'beige',textColor:'beige'},light:{bg:'white',borderColor:'black',textColor:'black'}}}));export var ToolTip=function ToolTip(_ref8){var _ref8$alignment=_ref8.alignment,alignment=_ref8$alignment===void 0?'top-right':_ref8$alignment,children=_ref8.children,className=_ref8.className,containerClassName=_ref8.containerClassName,focusable=_ref8.focusable,id=_ref8.id,_ref8$mode=_ref8.mode,mode=_ref8$mode===void 0?'light':_ref8$mode,target=_ref8.target;return/*#__PURE__*/_jsxs(TooltipWrapper,{className:containerClassName,children:[/*#__PURE__*/_jsx(TargetContainer,{\"aria-labelledby\":id,onKeyDown:function onKeyDown(event){if(event.key==='Escape'){event.target.blur();}}// ToolTips sometimes contain actual <button>s, which cannot be a child of a button.\n// This element still needs tab focus so we must use the `tabIndex=0` hack.\n// eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n,tabIndex:focusable?0:undefined,children:target}),/*#__PURE__*/_jsx(ToolTipContainer,{alignment:alignment,className:className,id:id,role:\"tooltip\",mode:mode,\"aria-live\":\"polite\",children:/*#__PURE__*/_jsx(ToolTipBody,{alignment:alignment,mode:mode,children:children})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/ToolTip/index.tsx"],"names":["fontSmoothPixel","lineHeight","pxRem","timing","variant","styled","React","arrowHeight","containerOffsetVertical","TooltipWrapper","div","TargetContainer","ToolTipContainer","fast","alignment","includes","prop","variants","dark","backgroundColor","borderColor","light","ToolTipBody","base","bg","textColor","ToolTip","children","className","containerClassName","focusable","id","mode","target","event","key","blur","undefined"],"mappings":"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","sourcesContent":["import {\n  ColorModes,\n  fontSmoothPixel,\n  lineHeight,\n  pxRem,\n  timing,\n  variant,\n} from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { ReactNode } from 'react';\n\nexport type ToolTipAlignment =\n  | 'bottom-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'top-center'\n  | 'top-left'\n  | 'top-right';\n\nconst arrowHeight = `1rem`;\nconst containerOffsetVertical = `0.75rem`;\n\nconst TooltipWrapper = styled.div`\n  position: relative;\n  display: inline-flex;\n`;\n\nconst TargetContainer = styled.div`\n  cursor: pointer;\n  border: 0;\n  background: none;\n  padding: 0;\n`;\n\ntype ToolTipContainerProps = {\n  alignment: ToolTipAlignment;\n  mode: ColorModes;\n};\n\nconst ToolTipContainer = styled.div<ToolTipContainerProps>`\n  ${fontSmoothPixel}\n  display: flex;\n  opacity: 0;\n  transition: opacity ${timing.fast};\n  transition-delay: ${timing.fast};\n  position: absolute;\n  max-width: ${({ alignment }) =>\n    alignment.includes('center') ? '8rem' : '16rem'};\n  visibility: hidden;\n  width: 70vw;\n  z-index: 1;\n\n  &::after {\n    content: '';\n    display: block;\n    height: ${arrowHeight};\n    position: absolute;\n    transform: rotate(45deg);\n    width: ${arrowHeight};\n  }\n\n  &::after {\n    border-style: solid;\n\n    ${variant({\n      prop: 'mode',\n      variants: {\n        dark: { backgroundColor: 'black', borderColor: 'white' },\n        light: { backgroundColor: 'white', borderColor: 'black' },\n      },\n    })}\n  }\n\n  ${TargetContainer}:hover + &,\n  ${TargetContainer}:focus-within + &,\n  &:hover {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  ${({ alignment }) =>\n    alignment.includes('top') &&\n    `\n      bottom: 100%;\n      padding-bottom: ${containerOffsetVertical};\n\n      &::after {\n        border-bottom-right-radius: 4px;\n        border-width: 0 1px 1px 0;\n        bottom: 0.25rem;\n      }\n    `}\n\n  ${({ alignment }) =>\n    alignment.includes('bottom') &&\n    `\n      top: 100%;\n      padding-top: ${containerOffsetVertical};\n\n      &::after {\n        border-top-left-radius: 4px;\n        border-width: 1px 0 0 1px;\n        top: 0.25rem;\n      }\n    `}\n\n${({ alignment }) =>\n    alignment.includes('center') &&\n    `\n      left: calc(50% - 4rem);\n\n      &::after {\n        left: calc(50% - 0.5rem);\n      }\n    `}\n\n  ${({ alignment }) =>\n    alignment.includes('left') &&\n    `\n      justify-content: flex-end;\n\n      &::after {\n        right: 1.5rem;\n      }\n\n      left: calc(50% - 14rem)\n    `}\n\n  ${({ alignment }) =>\n    alignment.includes('right') &&\n    `\n      &::after {\n        left: 1.5rem;\n      }\n\n      left: calc(50% - 2rem);\n    `}\n`;\n\nconst ToolTipBody = styled.div<ToolTipContainerProps>`\n  border: 1px solid;\n  border-radius: 3px;\n  display: inline-block;\n  font-size: ${pxRem(14)};\n  line-height: ${lineHeight.base};\n  ${({ alignment }) =>\n    alignment.includes('center')\n      ? `\n      margin: auto;\n      padding: 0.5rem;\n      text-align: center;\n    `\n      : `\n      padding: 1rem;\n    `}\n  min-width: 4rem;\n\n  ${variant({\n    prop: 'mode',\n    variants: {\n      dark: {\n        bg: 'black',\n        borderColor: 'beige',\n        textColor: 'beige',\n      },\n      light: {\n        bg: 'white',\n        borderColor: 'black',\n        textColor: 'black',\n      },\n    },\n  })}\n`;\n\nexport type ToolTipProps = {\n  /**\n   * How to align the tooltip relative to the target.\n   */\n  alignment?: ToolTipAlignment;\n\n  children?: ReactNode;\n\n  /**\n   * Class name for the hidden-by-default contents.\n   *\n   * @remarks\n   * This is an inner element, not the outermost positioning element.\n   * That element is styled with `containerClassName`.\n   */\n  className?: string;\n\n  /**\n   * Class name for the outermost positioning element.\n   */\n  containerClassName?: string;\n\n  /**\n   * Whether to manually add a tabIndex of 0 to the target container, for tooltips without focusable children.\n   */\n  focusable?: boolean;\n\n  id: string;\n  mode?: ColorModes;\n  target?: ReactNode;\n};\n\nexport const ToolTip: React.FC<ToolTipProps> = ({\n  alignment = 'top-right',\n  children,\n  className,\n  containerClassName,\n  focusable,\n  id,\n  mode = 'light',\n  target,\n}) => {\n  return (\n    <TooltipWrapper className={containerClassName}>\n      <TargetContainer\n        aria-labelledby={id}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            (event.target as HTMLElement).blur();\n          }\n        }}\n        // ToolTips sometimes contain actual <button>s, which cannot be a child of a button.\n        // This element still needs tab focus so we must use the `tabIndex=0` hack.\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n        tabIndex={focusable ? 0 : undefined}\n      >\n        {target}\n      </TargetContainer>\n      <ToolTipContainer\n        alignment={alignment}\n        className={className}\n        id={id}\n        role=\"tooltip\"\n        mode={mode}\n        aria-live=\"polite\"\n      >\n        <ToolTipBody alignment={alignment} mode={mode}>\n          {children}\n        </ToolTipBody>\n      </ToolTipContainer>\n    </TooltipWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}