{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Markdown/index.tsx\";\nimport cx from 'classnames';\nimport HtmlToReact from 'html-to-react';\nimport marked from 'marked';\nimport React, { PureComponent } from 'react';\nimport sanitizeMarkdown from 'sanitize-markdown';\nimport { omitProps } from '../utils/omitProps';\nimport { createCodeBlockOverride, createTagOverride, standardOverrides } from './libs/overrides';\nimport { Iframe } from './libs/overrides/Iframe';\nimport { MarkdownAnchor } from './libs/overrides/MarkdownAnchor';\nimport { Table } from './libs/overrides/Table';\nimport { createPreprocessingInstructions } from './libs/preprocessing';\nimport { defaultSanitizationConfig } from './libs/sanitizationConfig';\nimport styles from './styles/index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst htmlToReactParser = new HtmlToReact.Parser({\n  xmlMode: true\n});\nconst preprocessingInstructions = createPreprocessingInstructions(styles);\n\nconst isValidNode = () => true;\n\nexport class Markdown extends PureComponent {\n  render() {\n    const {\n      spacing = 'tight',\n      text = '',\n      className,\n      overrides: userOverrides = {},\n      skipDefaultOverrides = {},\n      inline = false,\n      headerIds,\n      onAnchorClick\n    } = this.props;\n    if (!text) return null;\n    const spacingStyles = styles[`spacing-${spacing}`];\n    const classes = cx(spacingStyles, className);\n    const Wrapper = inline ? 'span' : 'div';\n    const overrides = Object.keys(userOverrides).map(tagName => {\n      if (tagName === 'CodeBlock') {\n        return createCodeBlockOverride(tagName, userOverrides[tagName]);\n      }\n\n      return createTagOverride(tagName, userOverrides[tagName]);\n    });\n    const processingInstructions = [!skipDefaultOverrides.iframe && createTagOverride('iframe', {\n      component: Iframe\n    }), !skipDefaultOverrides.a && createTagOverride('a', {\n      component: MarkdownAnchor,\n      processNode: (node, props) => {\n        // Note: this processNode override is necessary because wrapping this component\n        // in an anonymous functional component as with the Table below causes react rendering\n        // to crash with some chrome translation features.\n        // See https://codecademy.atlassian.net/browse/WEB-1214\n        return /*#__PURE__*/_jsxDEV(MarkdownAnchor, {\n          onClick: onAnchorClick,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      }\n    }), !skipDefaultOverrides.table && createTagOverride('table', {\n      component: props => /*#__PURE__*/_jsxDEV(Table, {\n        maxHeight: spacing === 'tight' ? 180 : 500,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this),\n      allowedAttributes: ['style']\n    }), ...overrides, ...standardOverrides].filter(Boolean);\n    const markedOptions = {\n      smartypants: true,\n      headerIds,\n      headerPrefix: 'heading-'\n    }; // Render markdown to html\n\n    const rawHtml = inline ? marked.inlineLexer(text, [], markedOptions) : marked(text, markedOptions);\n    const sanitizationConfig = { ...defaultSanitizationConfig,\n      allowedTags: [...defaultSanitizationConfig.allowedTags, ...Object.keys(userOverrides).map(tagName => tagName.toLowerCase())],\n      allowedAttributes: { ...defaultSanitizationConfig.allowedAttributes,\n        ...Object.keys(userOverrides).reduce((acc, tagName) => {\n          return { ...acc,\n            [tagName.toLowerCase()]: (userOverrides[tagName].allowedAttributes || []).map(attr => attr.toLowerCase())\n          };\n        }, {})\n      }\n    };\n    const html = sanitizeMarkdown(rawHtml, sanitizationConfig); // Render html to a react tree\n\n    const react = htmlToReactParser.parseWithInstructions(html, isValidNode, processingInstructions, preprocessingInstructions);\n    return /*#__PURE__*/_jsxDEV(Wrapper, { ...omitProps(Object.keys(this.props), this.props),\n      className: classes,\n      children: react\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Markdown/index.tsx"],"names":["cx","HtmlToReact","marked","React","PureComponent","sanitizeMarkdown","omitProps","createCodeBlockOverride","createTagOverride","standardOverrides","Iframe","MarkdownAnchor","Table","createPreprocessingInstructions","defaultSanitizationConfig","styles","htmlToReactParser","Parser","xmlMode","preprocessingInstructions","isValidNode","Markdown","render","spacing","text","className","overrides","userOverrides","skipDefaultOverrides","inline","headerIds","onAnchorClick","props","spacingStyles","classes","Wrapper","Object","keys","map","tagName","processingInstructions","iframe","component","a","processNode","node","table","allowedAttributes","filter","Boolean","markedOptions","smartypants","headerPrefix","rawHtml","inlineLexer","sanitizationConfig","allowedTags","toLowerCase","reduce","acc","attr","html","react","parseWithInstructions"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport HtmlToReact from 'html-to-react';\nimport marked from 'marked';\nimport React, { PureComponent } from 'react';\nimport sanitizeMarkdown from 'sanitize-markdown';\n\nimport { omitProps } from '../utils/omitProps';\nimport {\n  createCodeBlockOverride,\n  createTagOverride,\n  ManyOverrideSettings,\n  standardOverrides,\n} from './libs/overrides';\nimport { Iframe } from './libs/overrides/Iframe';\nimport {\n  MarkdownAnchor,\n  MarkdownAnchorProps,\n} from './libs/overrides/MarkdownAnchor';\nimport { Table, TableProps } from './libs/overrides/Table';\nimport { createPreprocessingInstructions } from './libs/preprocessing';\nimport { defaultSanitizationConfig } from './libs/sanitizationConfig';\nimport styles from './styles/index.module.scss';\n\nconst htmlToReactParser = new HtmlToReact.Parser({\n  xmlMode: true,\n});\n\nconst preprocessingInstructions = createPreprocessingInstructions(styles);\n\nconst isValidNode = () => true;\n\nexport type SkipDefaultOverridesSettings = {\n  a?: boolean;\n  iframe?: boolean;\n  table?: boolean;\n};\n\nexport type MarkdownProps = {\n  className?: string;\n  inline?: boolean;\n  overrides?: ManyOverrideSettings;\n  skipDefaultOverrides?: SkipDefaultOverridesSettings;\n  /**\n   * Enables generated header ids for H1-6 tags\n   * Can generate duplicate IDs if used on separate markdown components on the same page\n   */\n  headerIds?: boolean;\n  spacing?: 'loose' | 'tight' | 'none';\n  text?: string;\n  /**\n   * Callback when a markdown anchor tag is clicked\n   */\n  onAnchorClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nexport class Markdown extends PureComponent<MarkdownProps> {\n  render() {\n    const {\n      spacing = 'tight',\n      text = '',\n      className,\n      overrides: userOverrides = {},\n      skipDefaultOverrides = {},\n      inline = false,\n      headerIds,\n      onAnchorClick,\n    } = this.props;\n\n    if (!text) return null;\n\n    const spacingStyles = styles[`spacing-${spacing}`];\n    const classes = cx(spacingStyles, className);\n\n    const Wrapper = inline ? 'span' : 'div';\n\n    const overrides = Object.keys(userOverrides).map((tagName) => {\n      if (tagName === 'CodeBlock') {\n        return createCodeBlockOverride(tagName, userOverrides[tagName]);\n      }\n      return createTagOverride(tagName, userOverrides[tagName]);\n    });\n\n    const processingInstructions = [\n      !skipDefaultOverrides.iframe &&\n        createTagOverride('iframe', {\n          component: Iframe,\n        }),\n      !skipDefaultOverrides.a &&\n        createTagOverride('a', {\n          component: MarkdownAnchor,\n          processNode: (node, props) => {\n            // Note: this processNode override is necessary because wrapping this component\n            // in an anonymous functional component as with the Table below causes react rendering\n            // to crash with some chrome translation features.\n            // See https://codecademy.atlassian.net/browse/WEB-1214\n            return (\n              <MarkdownAnchor\n                onClick={onAnchorClick}\n                {...(props as MarkdownAnchorProps)}\n              />\n            );\n          },\n        }),\n      !skipDefaultOverrides.table &&\n        createTagOverride('table', {\n          component: (props: TableProps) => (\n            <Table maxHeight={spacing === 'tight' ? 180 : 500} {...props} />\n          ),\n          allowedAttributes: ['style'],\n        }),\n      ...overrides,\n      ...standardOverrides,\n    ].filter(Boolean);\n\n    const markedOptions = {\n      smartypants: true,\n      headerIds,\n      headerPrefix: 'heading-',\n    };\n\n    // Render markdown to html\n    const rawHtml = inline\n      ? marked.inlineLexer(text, [], markedOptions)\n      : marked(text, markedOptions);\n\n    const sanitizationConfig = {\n      ...defaultSanitizationConfig,\n      allowedTags: [\n        ...defaultSanitizationConfig.allowedTags,\n        ...Object.keys(userOverrides).map((tagName) => tagName.toLowerCase()),\n      ],\n      allowedAttributes: {\n        ...defaultSanitizationConfig.allowedAttributes,\n        ...Object.keys(userOverrides).reduce((acc, tagName) => {\n          return {\n            ...acc,\n            [tagName.toLowerCase()]: (\n              userOverrides[tagName].allowedAttributes || []\n            ).map((attr) => attr.toLowerCase()),\n          };\n        }, {}),\n      },\n    };\n\n    const html = sanitizeMarkdown(rawHtml, sanitizationConfig);\n\n    // Render html to a react tree\n    const react = htmlToReactParser.parseWithInstructions(\n      html,\n      isValidNode,\n      processingInstructions,\n      preprocessingInstructions\n    );\n\n    return (\n      <Wrapper\n        {...omitProps(Object.keys(this.props), this.props)}\n        className={classes}\n      >\n        {react}\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}