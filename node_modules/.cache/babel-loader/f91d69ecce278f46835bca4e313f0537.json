{"ast":null,"code":"import{system}from'@codecademy/gamut-styles';import{variance}from'@codecademy/variance';export var boxProps=variance.compose(system.space,system.border,system.layout,system.color,system.shadow,system.positioning,system.background,system.typography,system.flex,system.grid);export var sharedStates=system.states({fit:{width:1,height:1},'no-select':{WebkitTouchCallout:'none',userSelect:'none'}});export var flexStates=system.states({inline:{display:'inline-flex'},wrap:{flexWrap:'wrap'},center:{justifyContent:'center',alignItems:'center'},row:{flexDirection:'row'},column:{flexDirection:'column'}});export var gridStates=system.states({center:{justifyContent:'center',alignItems:'center'},fitContent:{gridTemplate:'minmax(0, 1fr) / minmax(0, 1fr)'}});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Box/props.ts"],"names":["system","variance","boxProps","compose","space","border","layout","color","shadow","positioning","background","typography","flex","grid","sharedStates","states","fit","width","height","WebkitTouchCallout","userSelect","flexStates","inline","display","wrap","flexWrap","center","justifyContent","alignItems","row","flexDirection","column","gridStates","fitContent","gridTemplate"],"mappings":"AAAA,OAASA,MAAT,KAAuB,0BAAvB,CACA,OAAqBC,QAArB,KAAqC,sBAArC,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAGD,QAAQ,CAACE,OAAT,CACtBH,MAAM,CAACI,KADe,CAEtBJ,MAAM,CAACK,MAFe,CAGtBL,MAAM,CAACM,MAHe,CAItBN,MAAM,CAACO,KAJe,CAKtBP,MAAM,CAACQ,MALe,CAMtBR,MAAM,CAACS,WANe,CAOtBT,MAAM,CAACU,UAPe,CAQtBV,MAAM,CAACW,UARe,CAStBX,MAAM,CAACY,IATe,CAUtBZ,MAAM,CAACa,IAVe,CAAjB,CAaP,MAAO,IAAMC,CAAAA,YAAY,CAAGd,MAAM,CAACe,MAAP,CAAc,CACxCC,GAAG,CAAE,CACHC,KAAK,CAAE,CADJ,CAEHC,MAAM,CAAE,CAFL,CADmC,CAKxC,YAAa,CACXC,kBAAkB,CAAE,MADT,CAEXC,UAAU,CAAE,MAFD,CAL2B,CAAd,CAArB,CAWP,MAAO,IAAMC,CAAAA,UAAU,CAAGrB,MAAM,CAACe,MAAP,CAAc,CACtCO,MAAM,CAAE,CACNC,OAAO,CAAE,aADH,CAD8B,CAItCC,IAAI,CAAE,CACJC,QAAQ,CAAE,MADN,CAJgC,CAOtCC,MAAM,CAAE,CACNC,cAAc,CAAE,QADV,CAENC,UAAU,CAAE,QAFN,CAP8B,CAWtCC,GAAG,CAAE,CACHC,aAAa,CAAE,KADZ,CAXiC,CActCC,MAAM,CAAE,CACND,aAAa,CAAE,QADT,CAd8B,CAAd,CAAnB,CAmBP,MAAO,IAAME,CAAAA,UAAU,CAAGhC,MAAM,CAACe,MAAP,CAAc,CACtCW,MAAM,CAAE,CACNC,cAAc,CAAE,QADV,CAENC,UAAU,CAAE,QAFN,CAD8B,CAKtCK,UAAU,CAAE,CACVC,YAAY,CAAE,iCADJ,CAL0B,CAAd,CAAnB","sourcesContent":["import { system } from '@codecademy/gamut-styles';\nimport { StyleProps, variance } from '@codecademy/variance';\n\nexport const boxProps = variance.compose(\n  system.space,\n  system.border,\n  system.layout,\n  system.color,\n  system.shadow,\n  system.positioning,\n  system.background,\n  system.typography,\n  system.flex,\n  system.grid\n);\n\nexport const sharedStates = system.states({\n  fit: {\n    width: 1,\n    height: 1,\n  },\n  'no-select': {\n    WebkitTouchCallout: 'none',\n    userSelect: 'none',\n  },\n});\n\nexport const flexStates = system.states({\n  inline: {\n    display: 'inline-flex',\n  },\n  wrap: {\n    flexWrap: 'wrap',\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n});\n\nexport const gridStates = system.states({\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  fitContent: {\n    gridTemplate: 'minmax(0, 1fr) / minmax(0, 1fr)',\n  },\n});\n\nexport interface BoxProps\n  extends StyleProps<typeof boxProps>,\n    StyleProps<typeof sharedStates> {}\n\nexport interface FlexBoxProps extends BoxProps, StyleProps<typeof flexStates> {}\nexport interface GridBoxProps extends BoxProps, StyleProps<typeof gridStates> {}\n"]},"metadata":{},"sourceType":"module"}