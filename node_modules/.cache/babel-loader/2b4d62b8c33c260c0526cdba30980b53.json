{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/LoadingScreen/index.tsx\";\nimport { deprecatedColors, platformColors } from '@codecademy/gamut-styles';\nimport cx from 'classnames';\nimport React, { Component } from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LOADING_COLORS = [deprecatedColors.purple[200], platformColors.purple[200], platformColors.purple[300], platformColors.purple[400], platformColors.purple[500], deprecatedColors.blue[300]];\nexport class LoadingScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.background = /*#__PURE__*/React.createRef();\n\n    this.tryFadeOutBackground = () => {\n      if (!this.background.current) {\n        setTimeout(this.tryFadeOutBackground);\n        return;\n      }\n\n      this.background.current.style.transition = 'opacity 0.8s';\n      this.background.current.style.opacity = '0';\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.hiddenObject && this.background.current) {\n      this.background.current.style.opacity = '0';\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.hiddenObject && !prevProps.hiddenObject) {\n      window.requestAnimationFrame(this.tryFadeOutBackground);\n    }\n  }\n\n  render() {\n    const {\n      loadingColor,\n      stretchToFit,\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(styles.loadingScreen, stretchToFit && styles.stretchToFit, className),\n      style: {\n        backgroundColor: loadingColor || LOADING_COLORS[0]\n      },\n      ref: this.background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/LoadingScreen/index.tsx"],"names":["deprecatedColors","platformColors","cx","React","Component","styles","LOADING_COLORS","purple","blue","LoadingScreen","background","createRef","tryFadeOutBackground","current","setTimeout","style","transition","opacity","componentDidMount","props","hiddenObject","componentDidUpdate","prevProps","window","requestAnimationFrame","render","loadingColor","stretchToFit","className","loadingScreen","backgroundColor"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAC5BN,gBAAgB,CAACO,MAAjB,CAAwB,GAAxB,CAD4B,EAE5BN,cAAc,CAACM,MAAf,CAAsB,GAAtB,CAF4B,EAG5BN,cAAc,CAACM,MAAf,CAAsB,GAAtB,CAH4B,EAI5BN,cAAc,CAACM,MAAf,CAAsB,GAAtB,CAJ4B,EAK5BN,cAAc,CAACM,MAAf,CAAsB,GAAtB,CAL4B,EAM5BP,gBAAgB,CAACQ,IAAjB,CAAsB,GAAtB,CAN4B,CAAvB;AAgBP,OAAO,MAAMC,aAAN,SAA4BL,SAA5B,CAA0D;AAAA;AAAA;AAAA,SAC/DM,UAD+D,gBAClDP,KAAK,CAACQ,SAAN,EADkD;;AAAA,SAe/DC,oBAf+D,GAexC,MAAM;AAC3B,UAAI,CAAC,KAAKF,UAAL,CAAgBG,OAArB,EAA8B;AAC5BC,QAAAA,UAAU,CAAC,KAAKF,oBAAN,CAAV;AACA;AACD;;AAED,WAAKF,UAAL,CAAgBG,OAAhB,CAAwBE,KAAxB,CAA8BC,UAA9B,GAA2C,cAA3C;AACA,WAAKN,UAAL,CAAgBG,OAAhB,CAAwBE,KAAxB,CAA8BE,OAA9B,GAAwC,GAAxC;AACD,KAvB8D;AAAA;;AAG/DC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,YAAX,IAA2B,KAAKV,UAAL,CAAgBG,OAA/C,EAAwD;AACtD,WAAKH,UAAL,CAAgBG,OAAhB,CAAwBE,KAAxB,CAA8BE,OAA9B,GAAwC,GAAxC;AACD;AACF;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAgC;AAChD,QAAI,KAAKH,KAAL,CAAWC,YAAX,IAA2B,CAACE,SAAS,CAACF,YAA1C,EAAwD;AACtDG,MAAAA,MAAM,CAACC,qBAAP,CAA6B,KAAKZ,oBAAlC;AACD;AACF;;AAYDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,YAAhB;AAA8BC,MAAAA;AAA9B,QAA4C,KAAKT,KAAvD;AACA,wBACE;AACE,MAAA,SAAS,EAAEjB,EAAE,CACXG,MAAM,CAACwB,aADI,EAEXF,YAAY,IAAItB,MAAM,CAACsB,YAFZ,EAGXC,SAHW,CADf;AAME,MAAA,KAAK,EAAE;AACLE,QAAAA,eAAe,EAAEJ,YAAY,IAAIpB,cAAc,CAAC,CAAD;AAD1C,OANT;AASE,MAAA,GAAG,EAAE,KAAKI;AATZ;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAxC8D","sourcesContent":["import { deprecatedColors, platformColors } from '@codecademy/gamut-styles';\nimport cx from 'classnames';\nimport React, { Component } from 'react';\n\nimport styles from './styles.module.scss';\n\nexport const LOADING_COLORS = [\n  deprecatedColors.purple[200],\n  platformColors.purple[200],\n  platformColors.purple[300],\n  platformColors.purple[400],\n  platformColors.purple[500],\n  deprecatedColors.blue[300],\n];\n\nexport type LoadingScreenProps = {\n  loadingColor?: string;\n  hiddenObject?: object | string | null;\n  stretchToFit?: boolean;\n  className?: string;\n};\n\nexport class LoadingScreen extends Component<LoadingScreenProps> {\n  background = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    if (this.props.hiddenObject && this.background.current) {\n      this.background.current.style.opacity = '0';\n    }\n  }\n\n  componentDidUpdate(prevProps: LoadingScreenProps) {\n    if (this.props.hiddenObject && !prevProps.hiddenObject) {\n      window.requestAnimationFrame(this.tryFadeOutBackground);\n    }\n  }\n\n  tryFadeOutBackground = () => {\n    if (!this.background.current) {\n      setTimeout(this.tryFadeOutBackground);\n      return;\n    }\n\n    this.background.current.style.transition = 'opacity 0.8s';\n    this.background.current.style.opacity = '0';\n  };\n\n  render() {\n    const { loadingColor, stretchToFit, className } = this.props;\n    return (\n      <div\n        className={cx(\n          styles.loadingScreen,\n          stretchToFit && styles.stretchToFit,\n          className\n        )}\n        style={{\n          backgroundColor: loadingColor || LOADING_COLORS[0],\n        }}\n        ref={this.background}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}