{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/CourseCard/index.tsx\";\nimport { Box, CardShell } from '@codecademy/gamut';\nimport { ProLogo } from '../gamut-overrides';\nimport cx from 'classnames';\nimport React from 'react';\nimport { CardDescription, CardTag, CardTagList, CardTitle } from 'components/CardElements';\nimport { LOADING_COLORS, LoadingScreen } from 'components/LoadingScreen';\nimport { TrackLink } from 'components/TrackLink';\nimport parse from 'html-react-parser';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CourseCard = ({\n  index,\n  project,\n  onClick,\n  hoverShadow,\n  className,\n  trackingData\n}) => {\n  const {\n    title,\n    tags = [],\n    id,\n    cover_image: img,\n    description\n  } = project;\n  const loadingColor = LOADING_COLORS[index % LOADING_COLORS.length];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(LoadingScreen, {\n      hiddenObject: title,\n      stretchToFit: true,\n      loadingColor: loadingColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrackLink, {\n      href: '/',\n      to: \"/\",\n      target: '',\n      asButton: true,\n      className: styles.trackLink,\n      onClick: onClick,\n      data: { ...trackingData,\n        distinct_id: id\n      },\n      children: /*#__PURE__*/_jsxDEV(CardShell, {\n        variant: hoverShadow ? 'hoverable' : 'flat',\n        className: cx(styles.card, className),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          style: {\n            backgroundImage: `url(${img})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 16,\n          height: \"11.5rem\",\n          overflow: \"hidden\",\n          children: [/*#__PURE__*/_jsxDEV(ProLogo, {\n            variant: \"course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: styles.title,\n            as: \"h2\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n            className: styles.description,\n            truncateLine: 2,\n            children: parse(description)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardTagList, {\n            children: tags.map(t => /*#__PURE__*/_jsxDEV(CardTag, {\n              children: t\n            }, t, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = CourseCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseCard\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/CourseCard/index.tsx"],"names":["Box","CardShell","ProLogo","cx","React","CardDescription","CardTag","CardTagList","CardTitle","LOADING_COLORS","LoadingScreen","TrackLink","parse","styles","CourseCard","index","project","onClick","hoverShadow","className","trackingData","title","tags","id","cover_image","img","description","loadingColor","length","container","trackLink","distinct_id","card","backgroundImage","map","t"],"mappings":"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","sourcesContent":["import { Box, CardShell } from '@codecademy/gamut';\nimport { ProLogo } from '../gamut-overrides';\nimport { UserClickData } from '@codecademy/tracking';\nimport cx from 'classnames';\nimport React from 'react';\n\nimport {\n  CardDescription,\n  CardTag,\n  CardTagList,\n  CardTitle,\n} from 'components/CardElements';\nimport { LOADING_COLORS, LoadingScreen } from 'components/LoadingScreen';\nimport { TrackLink } from 'components/TrackLink';\nimport parse from 'html-react-parser'\n\nimport styles from './styles.module.scss';\nimport { Course } from 'services/projects';\nimport { CourseResponse } from 'services/courses';\n\nexport type ProjectCardProps = {\n  className?: string;\n  hoverShadow?: boolean;\n  index: number;\n  onClick?: React.MouseEventHandler;\n  project: CoursePlayerResponse;\n  trackingData: UserClickData;\n};\n\nexport const CourseCard: React.FC<ProjectCardProps> = ({\n  index,\n  project,\n  onClick,\n  hoverShadow,\n  className,\n  trackingData,\n}) => {\n  const {\n    title,\n    tags = [],\n    id,\n    cover_image: img,\n    description,\n \n  } = project;\n\n  const loadingColor = LOADING_COLORS[index % LOADING_COLORS.length];\n\n  return (\n    <div className={styles.container}>\n      <LoadingScreen\n        hiddenObject={title}\n        stretchToFit\n        loadingColor={loadingColor}\n      />\n      <TrackLink\n        href={'/'}\n        to={\"/\"}\n        target={''}\n        asButton\n        className={styles.trackLink}\n        onClick={onClick}\n        data={{ ...trackingData, distinct_id: id }}\n      >\n        <CardShell\n          variant={hoverShadow ? 'hoverable' : 'flat'}\n          className={cx(styles.card, className)}\n        >\n          <div\n            className={styles.img}\n            style={{ backgroundImage: `url(${img})` }}\n          />\n          <Box p={16} height=\"11.5rem\" overflow=\"hidden\">\n            {<ProLogo variant=\"course\" />}\n            <CardTitle className={styles.title} as=\"h2\">\n              {title}\n            </CardTitle>\n            <CardDescription className={styles.description} truncateLine={2}>\n              {parse(description)}\n            </CardDescription>\n            <CardTagList>\n              {tags.map((t) => (\n                <CardTag key={t}>{t}</CardTag>\n              ))}\n            </CardTagList>\n          </Box>\n        </CardShell>\n      </TrackLink>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}