{"ast":null,"code":"import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/dist/query/react\";import algoliasearch from\"algoliasearch/lite\";import cookie from\"react-cookies\";var searchClient=algoliasearch(process.env.REACT_APP_ALGOLIA_APP_ID,process.env.REACT_APP_ALGOLIA_SEARCH_KEY);export var autoSearch=function autoSearch(query){searchClient.initIndex(\"tags_index\").search(query).then(function(_ref){var hits=_ref.hits;return console.log(\"Hits: \",hits);}).catch(function(err){return console.log(\"Error: \",err);});};export var coursesApi=createApi({reducerPath:\"courseApi\",baseQuery:fetchBaseQuery({baseUrl:\"/\",prepareHeaders:function prepareHeaders(headers,_ref2){var getState=_ref2.getState;var csrfToken=cookie.load(\"csrftoken\");if(csrfToken){headers.set(\"X-CSRFToken\",csrfToken);}var token=getState().auth.token||localStorage.getItem(\"token\");if(token){headers.set(\"Authorization\",\"Token \".concat(token));}headers.set(\"Content-Type\",\"application/json\");return headers;}}),tagTypes:[\"Review\"],endpoints:function endpoints(build){return{fetchCourse:build.query({query:function query(id){return{url:\"/api/instructor/courses/\".concat(id),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPlayerCourse:build.query({query:function query(id){return{url:\"/api/courses/\".concat(id),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchCourseDetail:build.query({query:function query(slug){return{url:\"/api/course/\".concat(slug),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),trackViews:build.mutation({query:function query(_ref3){var id=_ref3.id,body=_objectWithoutProperties(_ref3,[\"id\"]);return{url:\"/api/courses/lecture/\".concat(id,\"/views/\"),method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),fetchViews:build.query({query:function query(){return{url:\"/api/courses/lecture/views/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchVideoViews:build.query({query:function query(id){return{url:\"/api/analytics/\".concat(id,\"/\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),updateVideoViews:build.mutation({query:function query(_ref4){var id=_ref4.id,body=_objectWithoutProperties(_ref4,[\"id\"]);return{url:\"/api/analytics/\".concat(id,\"/edit/\"),method:\"PUT\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),fetchCourseViews:build.query({query:function query(){return{url:\"/api/analytics/views/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchInstructorCourses:build.query({query:function query(id){return{url:\"/api/instructor/courses/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),editInstructorInfo:build.mutation({query:function query(body){return{url:\"/api/instructor/edit-info/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),fetchInstructorInfo:build.query({query:function query(){return{url:\"/api/instructor/profile/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchCategories:build.query({query:function query(){return{url:\"/api/categories\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchCourseLevel:build.query({query:function query(){return{url:\"/api/courses/level\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricingTier:build.query({query:function query(){return{url:\"/api/courses/pricing/tier/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricingCurrency:build.query({query:function query(){return{url:\"/api/courses/pricing/currency/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricing:build.query({query:function query(id){return{url:\"/api/courses/\".concat(id,\"/pricing/\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchSections:build.query({query:function query(pk){return{url:\"/api/courses/\".concat(pk,\"/sections\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),searchTags:build.query({query:function query(q){return{url:\"/api/courses/search?q=\".concat(q),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),createCourse:build.mutation({query:function query(body){return{url:\"/api/courses/create/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),updateCourse:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api/courses/\".concat(id,\"/edit/\"),method:\"PUT\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),uploadLectureVideo:build.mutation({query:function query(body){return{url:\"/api/courses/lecture/video_upload/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),createSection:build.mutation({query:function query(body){return{url:\"/api/courses/section/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createGoal:build.mutation({query:function query(body){return{url:\"/api/courses/goal/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createPricing:build.mutation({query:function query(body){return{url:\"/api/courses/pricing/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),updatePricing:build.mutation({query:function query(body){var course=body.course,rest=_objectWithoutProperties(body,[\"course\"]);return{url:\"/api//courses/\".concat(course,\"/pricing/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),createExperience:build.mutation({query:function query(body){return{url:\"/api/courses/experience/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createRequirement:build.mutation({query:function query(body){return{url:\"/api/courses/requirement/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),editRequirement:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api//courses/requirements/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),editExperience:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api//courses/experience/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),editGoal:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api/courses/goals/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),submitReview:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api/courses/\".concat(id,\"/review/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchExperience:build.query({query:function query(pk){return{url:\"/api/courses/\".concat(pk,\"/experience\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchGoals:build.query({query:function query(pk){return{url:\"/api/courses/\".concat(pk,\"/goals\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchRequirements:build.query({query:function query(pk){return{url:\"/api/courses/\".concat(pk,\"/requirements\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),deleteExperience:build.mutation({query:function query(id){return{url:\"/api/courses/experience/\".concat(id,\"/\"),method:\"DELETE\"};}}),deleteGoal:build.mutation({query:function query(id){return{url:\"/api/courses/goals/\".concat(id,\"/\"),method:\"DELETE\"};}}),deleteRequirement:build.mutation({query:function query(id){return{url:\"/api/courses/requirements/\".concat(id,\"/\"),method:\"DELETE\"};}}),editSection:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api/courses/sections/\".concat(id,\"/\"),body:body,method:\"PUT\"};}}),deleteSection:build.mutation({query:function query(id){return{url:\"/api/courses/sections/\".concat(id,\"/\"),method:\"DELETE\"};}}),createLecture:build.mutation({query:function query(body){return{url:\"/api/courses/lecture/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchLectures:build.query({query:function query(pk){return{url:\"/api/courses/section/\".concat(pk,\"/lectures\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchResources:build.query({query:function query(pk){return{url:\"/api/courses/\".concat(pk,\"/resources/\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),createResource:build.mutation({query:function query(data){var course=data.course,body=_objectWithoutProperties(data,[\"course\"]);return{url:\"/api/courses/\".concat(course,\"/resources/\"),method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),editLecture:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/api/courses/section/lectures/\".concat(id,\"/\"),body:body,method:\"PUT\"};}}),deleteLecture:build.mutation({query:function query(id){return{url:\"/api/courses/section/lectures/\".concat(id,\"/\"),method:\"DELETE\"};}})};}});var useCreateCourseMutation=coursesApi.useCreateCourseMutation,useCreateLectureMutation=coursesApi.useCreateLectureMutation,useCreateSectionMutation=coursesApi.useCreateSectionMutation,useFetchCourseQuery=coursesApi.useFetchCourseQuery,useFetchCategoriesQuery=coursesApi.useFetchCategoriesQuery,useFetchCourseLevelQuery=coursesApi.useFetchCourseLevelQuery,useSearchTagsQuery=coursesApi.useSearchTagsQuery,useUploadLectureVideoMutation=coursesApi.useUploadLectureVideoMutation,useFetchSectionsQuery=coursesApi.useFetchSectionsQuery,useDeleteSectionMutation=coursesApi.useDeleteSectionMutation,useEditSectionMutation=coursesApi.useEditSectionMutation,useDeleteLectureMutation=coursesApi.useDeleteLectureMutation,useEditLectureMutation=coursesApi.useEditLectureMutation,useFetchLecturesQuery=coursesApi.useFetchLecturesQuery,useFetchResourcesQuery=coursesApi.useFetchResourcesQuery,useCreateResourceMutation=coursesApi.useCreateResourceMutation,useUpdateCourseMutation=coursesApi.useUpdateCourseMutation,useCreateExperienceMutation=coursesApi.useCreateExperienceMutation,useCreateGoalMutation=coursesApi.useCreateGoalMutation,useCreateRequirementMutation=coursesApi.useCreateRequirementMutation,useEditExperienceMutation=coursesApi.useEditExperienceMutation,useEditGoalMutation=coursesApi.useEditGoalMutation,useEditRequirementMutation=coursesApi.useEditRequirementMutation,useFetchExperienceQuery=coursesApi.useFetchExperienceQuery,useFetchGoalsQuery=coursesApi.useFetchGoalsQuery,useFetchRequirementsQuery=coursesApi.useFetchRequirementsQuery,useDeleteExperienceMutation=coursesApi.useDeleteExperienceMutation,useDeleteGoalMutation=coursesApi.useDeleteGoalMutation,useDeleteRequirementMutation=coursesApi.useDeleteRequirementMutation,useFetchPricingCurrencyQuery=coursesApi.useFetchPricingCurrencyQuery,useFetchPricingTierQuery=coursesApi.useFetchPricingTierQuery,useCreatePricingMutation=coursesApi.useCreatePricingMutation,useFetchPricingQuery=coursesApi.useFetchPricingQuery,useSubmitReviewMutation=coursesApi.useSubmitReviewMutation,useFetchInstructorCoursesQuery=coursesApi.useFetchInstructorCoursesQuery,useEditInstructorInfoMutation=coursesApi.useEditInstructorInfoMutation,useFetchInstructorInfoQuery=coursesApi.useFetchInstructorInfoQuery,useFetchPlayerCourseQuery=coursesApi.useFetchPlayerCourseQuery,useTrackViewsMutation=coursesApi.useTrackViewsMutation,useFetchViewsQuery=coursesApi.useFetchViewsQuery,useFetchVideoViewsQuery=coursesApi.useFetchVideoViewsQuery,useUpdateVideoViewsMutation=coursesApi.useUpdateVideoViewsMutation,useFetchCourseViewsQuery=coursesApi.useFetchCourseViewsQuery,useFetchCourseDetailQuery=coursesApi.useFetchCourseDetailQuery,useUpdatePricingMutation=coursesApi.useUpdatePricingMutation;export{useCreateCourseMutation,useCreateLectureMutation,useCreateSectionMutation,useFetchCourseQuery,useFetchCategoriesQuery,useFetchCourseLevelQuery,useSearchTagsQuery,useUploadLectureVideoMutation,useFetchSectionsQuery,useDeleteSectionMutation,useEditSectionMutation,useDeleteLectureMutation,useEditLectureMutation,useFetchLecturesQuery,useFetchResourcesQuery,useCreateResourceMutation,useUpdateCourseMutation,useCreateExperienceMutation,useCreateGoalMutation,useCreateRequirementMutation,useEditExperienceMutation,useEditGoalMutation,useEditRequirementMutation,useFetchExperienceQuery,useFetchGoalsQuery,useFetchRequirementsQuery,useDeleteExperienceMutation,useDeleteGoalMutation,useDeleteRequirementMutation,useFetchPricingCurrencyQuery,useFetchPricingTierQuery,useCreatePricingMutation,useFetchPricingQuery,useSubmitReviewMutation,useFetchInstructorCoursesQuery,useEditInstructorInfoMutation,useFetchInstructorInfoQuery,useFetchPlayerCourseQuery,useTrackViewsMutation,useFetchViewsQuery,useFetchVideoViewsQuery,useUpdateVideoViewsMutation,useFetchCourseViewsQuery,useFetchCourseDetailQuery,useUpdatePricingMutation};var updateVideoViews=coursesApi.endpoints.updateVideoViews;export{updateVideoViews};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/services/courses.ts"],"names":["createApi","fetchBaseQuery","algoliasearch","cookie","searchClient","process","env","REACT_APP_ALGOLIA_APP_ID","REACT_APP_ALGOLIA_SEARCH_KEY","autoSearch","query","initIndex","search","then","hits","console","log","catch","err","coursesApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","csrfToken","load","set","token","auth","localStorage","getItem","tagTypes","endpoints","build","fetchCourse","id","url","method","responseHandler","response","json","fetchPlayerCourse","fetchCourseDetail","slug","trackViews","mutation","body","fetchViews","fetchVideoViews","updateVideoViews","fetchCourseViews","fetchInstructorCourses","editInstructorInfo","fetchInstructorInfo","fetchCategories","fetchCourseLevel","fetchPricingTier","fetchPricingCurrency","fetchPricing","fetchSections","pk","searchTags","q","createCourse","updateCourse","data","uploadLectureVideo","createSection","createGoal","createPricing","updatePricing","course","rest","createExperience","createRequirement","editRequirement","editExperience","editGoal","submitReview","fetchExperience","fetchGoals","fetchRequirements","deleteExperience","deleteGoal","deleteRequirement","editSection","deleteSection","createLecture","fetchLectures","fetchResources","createResource","editLecture","deleteLecture","useCreateCourseMutation","useCreateLectureMutation","useCreateSectionMutation","useFetchCourseQuery","useFetchCategoriesQuery","useFetchCourseLevelQuery","useSearchTagsQuery","useUploadLectureVideoMutation","useFetchSectionsQuery","useDeleteSectionMutation","useEditSectionMutation","useDeleteLectureMutation","useEditLectureMutation","useFetchLecturesQuery","useFetchResourcesQuery","useCreateResourceMutation","useUpdateCourseMutation","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchGoalsQuery","useFetchRequirementsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","useFetchPricingCurrencyQuery","useFetchPricingTierQuery","useCreatePricingMutation","useFetchPricingQuery","useSubmitReviewMutation","useFetchInstructorCoursesQuery","useEditInstructorInfoMutation","useFetchInstructorInfoQuery","useFetchPlayerCourseQuery","useTrackViewsMutation","useFetchViewsQuery","useFetchVideoViewsQuery","useUpdateVideoViewsMutation","useFetchCourseViewsQuery","useFetchCourseDetailQuery","useUpdatePricingMutation"],"mappings":"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","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport algoliasearch from \"algoliasearch/lite\";\n\nimport { RootState } from \"store\";\nimport cookie from \"react-cookies\";\nimport { DateTime } from \"schema-dts\";\n\nconst searchClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_SEARCH_KEY\n);\n\nexport interface CourseResponse {\n  title: string;\n  id: number;\n  category: number;\n  description: string;\n  cover_image: string;\n  video_url: string;\n  headline: string;\n  level: string;\n  tags: string[];\n\n  subcategory: number;\n  price: number;\n  state: string;\n}\n\nexport interface CoursePlayerResponse {\n  title: string;\n  id: number;\n  category: CategoryResponse;\n  description: string;\n  cover_image: string;\n  slug: string;\n  video_url: string;\n  headline: string;\n  level: string;\n  sections: Section[];\n  tags: string[];\n  url: string;\n  instructor: InstructorResponse;\n  subcategory: number;\n  goals: Goal[];\n  experiences: Experience[];\n  requirements: Requirement[];\n  price: number;\n  state: string;\n}\n\nexport interface Instructor {\n  id: string;\n  headline: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  description: string;\n  avatar: string;\n}\n\nexport interface InstructorResponse {\n  id: string;\n  headline: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  courses: CourseResponse[];\n  avatar: string;\n  user: User;\n  description: string;\n}\n\nexport interface User {\n  email: string;\n  username: string;\n  first_name: string;\n  last_name: string;\n}\n\nexport interface MediaRequest {\n  course: number;\n  name: string;\n  filetype: string;\n  key: string;\n  size: number;\n}\n\nexport interface MediaResponse {\n  course: number;\n  name: string;\n  filetype: string;\n  key: string;\n  id: number;\n  url?: string;\n  size: number;\n  timestamp: string;\n}\n\nexport interface SearchResponse {\n  title: string;\n  tags: string[];\n}\n\nexport interface CourseRequest {\n  id: number;\n  title: string;\n  category: number;\n  description: string;\n  cover_image: string;\n  video_url: string;\n  level: string;\n  tags: string[];\n  headline: string;\n  subcategory: number;\n  price: number;\n}\n\nexport interface Section {\n  title: string;\n  id: number;\n  course: number;\n  duration: number;\n  instructor: number;\n  description: string;\n  order: number;\n  resources: number[];\n  lectures?: Lecture[];\n}\n\nexport interface Experience {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface Goal {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface Requirement {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface SectionRequest {\n  title: string;\n  id: number;\n  course: number;\n  description?: string;\n  position: string;\n  neighbor: number;\n}\n\nexport interface LectureRequest {\n  title: string;\n  id: number;\n  video: number;\n  video_url: string;\n  section: number;\n  resources: number[];\n  description?: string;\n  position: string;\n  neighbor: number;\n}\n\nexport interface Options {\n  name: string;\n  display: string;\n}\n\nexport interface Pricing {\n  amount: string;\n  currency: string;\n  course: number;\n}\n\nexport interface Lecture {\n  title: string;\n  id: number;\n  position: string;\n  neighbor: number;\n  duration: number;\n  description: string;\n  video: MediaResponse;\n  resources: number[];\n  instructor: number;\n  section: number;\n  video_url: string;\n  order: number;\n}\n\nexport interface Review {\n  id: number;\n  state: string;\n}\n\nexport interface Views {\n  id: number;\n}\n\nexport interface ViewsResponse {\n  object_id: number;\n}\n\nexport interface VideoAnalytics {\n  id: number;\n  thumbnail: string;\n  lecture: number;\n  progress: number;\n  updated: string;\n  complete: boolean;\n}\n\nexport interface CategoryResponse {\n  title: string;\n  parent: CategoryResponse;\n  id: number;\n  children: CategoryResponse[];\n}\n\nexport const autoSearch = (query: string) => {\n  searchClient\n    .initIndex(\"tags_index\")\n    .search(query)\n    .then(({ hits }) => console.log(\"Hits: \", hits))\n    .catch((err) => console.log(\"Error: \", err));\n};\n\nexport const coursesApi = createApi({\n  reducerPath: \"courseApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/\",\n    prepareHeaders: (headers, { getState }) => {\n      const csrfToken = cookie.load(\"csrftoken\");\n\n      if (csrfToken) {\n        headers.set(\"X-CSRFToken\", csrfToken);\n      }\n      const token =\n        (getState() as RootState).auth.token || localStorage.getItem(\"token\");\n      if (token) {\n        headers.set(\"Authorization\", `Token ${token}`);\n      }\n\n      headers.set(\"Content-Type\", \"application/json\");\n\n      return headers;\n    },\n  }),\n  tagTypes: [\"Review\"],\n  endpoints: (build) => ({\n    fetchCourse: build.query<CourseResponse, number>({\n      query: (id) => ({\n        url: `/api/instructor/courses/${id}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n   \n\n    fetchPlayerCourse: build.query<CoursePlayerResponse, number>({\n      query: (id) => ({\n        url: `/api/courses/${id}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    fetchCourseDetail: build.query<CoursePlayerResponse, string>({\n      query: (slug) => ({\n        url: `/api/course/${slug}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    trackViews: build.mutation<ViewsResponse[], Views>({\n      query: ({ id, ...body }) => ({\n        url: `/api/courses/lecture/${id}/views/`,\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchViews: build.query<ViewsResponse[], void>({\n      query: () => ({\n        url: `/api/courses/lecture/views/`,\n        method: \"GET\",\n\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchVideoViews: build.query<VideoAnalytics[], Partial<number>>({\n      query: (id) => ({\n        url: `/api/analytics/${id}/`,\n        method: \"GET\",\n\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    updateVideoViews: build.mutation<VideoAnalytics, Partial<VideoAnalytics>>({\n      query: ({ id, ...body }) => ({\n        url: `/api/analytics/${id}/edit/`,\n        method: \"PUT\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchCourseViews: build.query<VideoAnalytics[], void>({\n      query: () => ({\n        url: `/api/analytics/views/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchInstructorCourses: build.query<CoursePlayerResponse[], void>({\n      query: (id) => ({\n        url: `/api/instructor/courses/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    editInstructorInfo: build.mutation<InstructorResponse, Partial<Instructor>>(\n      {\n        query: (body) => ({\n          url: `/api/instructor/edit-info/`,\n          method: \"POST\",\n          body,\n          responseHandler: (response) => response.json(),\n        }),\n      }\n    ),\n\n    fetchInstructorInfo: build.query<InstructorResponse, void>({\n      query: () => ({\n        url: `/api/instructor/profile/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchCategories: build.query<CategoryResponse[], void>({\n      query: () => ({\n        url: \"/api/categories\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchCourseLevel: build.query<Options[], void>({\n      query: () => ({\n        url: \"/api/courses/level\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricingTier: build.query<Options[], void>({\n      query: () => ({\n        url: \"/api/courses/pricing/tier/\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricingCurrency: build.query<Options[], void>({\n      query: () => ({\n        url: \"/api/courses/pricing/currency/\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricing: build.query<Pricing, number>({\n      query: (id) => ({\n        url: `/api/courses/${id}/pricing/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchSections: build.query<Section[], number>({\n      query: (pk) => ({\n        url: `/api/courses/${pk}/sections`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    searchTags: build.query<SearchResponse[], string>({\n      query: (q) => ({\n        url: `/api/courses/search?q=${q}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    createCourse: build.mutation<CourseResponse, Partial<CourseRequest>>({\n      query: (body) => ({\n        url: \"/api/courses/create/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    updateCourse: build.mutation<CourseResponse, Partial<CourseRequest>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api/courses/${id}/edit/`,\n          method: \"PUT\",\n          body,\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    uploadLectureVideo: build.mutation<MediaResponse, Partial<MediaRequest>>({\n      query: (body) => ({\n        url: \"/api/courses/lecture/video_upload/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    createSection: build.mutation<Section[], Partial<SectionRequest>>({\n      query: (body) => ({\n        url: \"/api/courses/section/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createGoal: build.mutation<Goal[], Partial<Goal>>({\n      query: (body) => ({\n        url: \"/api/courses/goal/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createPricing: build.mutation<Pricing, Partial<Pricing>>({\n      query: (body) => ({\n        url: \"/api/courses/pricing/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    updatePricing: build.mutation<Pricing, Partial<Pricing>>({\n      query: (body) => {\n        const {course, ...rest } = body\n        return {\n          url: `/api//courses/${course}/pricing/`,\n          body,\n          method: \"PUT\",\n          responseHandler: (response) => response.json(),\n        };\n      }\n    }),\n\n    createExperience: build.mutation<Experience[], Partial<Experience>>({\n      query: (body) => ({\n        url: \"/api/courses/experience/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createRequirement: build.mutation<Requirement[], Partial<Requirement>>({\n      query: (body) => ({\n        url: \"/api/courses/requirement/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    editRequirement: build.mutation<Requirement, Partial<Requirement>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api//courses/requirements/${id}/`,\n          body,\n          method: \"PUT\",\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    editExperience: build.mutation<Experience, Partial<Experience>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api//courses/experience/${id}/`,\n          body,\n          method: \"PUT\",\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    editGoal: build.mutation<Goal, Partial<Goal>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api/courses/goals/${id}/`,\n          body,\n          method: \"PUT\",\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    submitReview: build.mutation<Review, Partial<Review>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api/courses/${id}/review/`,\n          body,\n          method: \"PUT\",\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    fetchExperience: build.query<Experience[], number>({\n      query: (pk) => ({\n        url: `/api/courses/${pk}/experience`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchGoals: build.query<Goal[], number>({\n      query: (pk) => ({\n        url: `/api/courses/${pk}/goals`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchRequirements: build.query<Requirement[], number>({\n      query: (pk) => ({\n        url: `/api/courses/${pk}/requirements`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    deleteExperience: build.mutation<Experience, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/api/courses/experience/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    deleteGoal: build.mutation<Goal, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/api/courses/goals/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    deleteRequirement: build.mutation<Requirement, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/api/courses/requirements/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    editSection: build.mutation<Section, Partial<SectionRequest>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api/courses/sections/${id}/`,\n          body,\n          method: \"PUT\",\n        };\n      },\n    }),\n\n    deleteSection: build.mutation<Section, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/api/courses/sections/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    createLecture: build.mutation<Lecture[], Partial<Lecture>>({\n      query: (body) => ({\n        url: \"/api/courses/lecture/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    fetchLectures: build.query<Lecture[], number>({\n      query: (pk) => ({\n        url: `/api/courses/section/${pk}/lectures`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchResources: build.query<MediaResponse[], number>({\n      query: (pk) => ({\n        url: `/api/courses/${pk}/resources/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createResource: build.mutation<MediaResponse[], MediaRequest>({\n      query: (data) => {\n        const { course, ...body } = data;\n        return {\n          url: `/api/courses/${course}/resources/`,\n          method: \"POST\",\n          body,\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    editLecture: build.mutation<Lecture, Partial<LectureRequest>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/api/courses/section/lectures/${id}/`,\n          body,\n          method: \"PUT\",\n        };\n      },\n    }),\n\n    deleteLecture: build.mutation<Lecture, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/api/courses/section/lectures/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n  }),\n});\n\nexport const {\n  useCreateCourseMutation,\n  useCreateLectureMutation,\n  useCreateSectionMutation,\n  useFetchCourseQuery,\n  useFetchCategoriesQuery,\n  useFetchCourseLevelQuery,\n  useSearchTagsQuery,\n  useUploadLectureVideoMutation,\n  useFetchSectionsQuery,\n  useDeleteSectionMutation,\n  useEditSectionMutation,\n  useDeleteLectureMutation,\n  useEditLectureMutation,\n  useFetchLecturesQuery,\n  useFetchResourcesQuery,\n  useCreateResourceMutation,\n  useUpdateCourseMutation,\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchGoalsQuery,\n  useFetchRequirementsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  useFetchPricingCurrencyQuery,\n  useFetchPricingTierQuery,\n  useCreatePricingMutation,\n  useFetchPricingQuery,\n  useSubmitReviewMutation,\n  useFetchInstructorCoursesQuery,\n  useEditInstructorInfoMutation,\n  useFetchInstructorInfoQuery,\n  useFetchPlayerCourseQuery,\n  useTrackViewsMutation,\n  useFetchViewsQuery,\n  useFetchVideoViewsQuery,\n  useUpdateVideoViewsMutation,\n  useFetchCourseViewsQuery,\n  useFetchCourseDetailQuery,\n  useUpdatePricingMutation,\n} = coursesApi;\n\nexport const { updateVideoViews } = coursesApi.endpoints;\n"]},"metadata":{},"sourceType":"module"}