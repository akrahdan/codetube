{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/**\n * Takes a prop/style configuration and templates the classes\n * to match the styleMaps classes returning a concatenated classname string\n */export var generateResponsiveClassnames=function generateResponsiveClassnames(config,styleMap){var styleList=[];Object.entries(config).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),propName=_ref2[0],propValue=_ref2[1];switch(typeof propValue){case'number':case'string':{var mappedClass=styleMap[\"\".concat(propName,\"_\").concat(propValue,\"__xs\")];if(mappedClass){styleList.push(mappedClass);}}case'object':{if(propValue!==null){Object.entries(propValue).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),mediaSize=_ref4[0],mediaPropValue=_ref4[1];var mappedClass=styleMap[\"\".concat(propName,\"_\").concat(mediaPropValue,\"__\").concat(mediaSize)];if(mappedClass){styleList.push(mappedClass);}});}}default:}});return styleList;};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/utils/generateResponsiveClassnames.ts"],"names":["generateResponsiveClassnames","config","styleMap","styleList","Object","entries","forEach","propName","propValue","mappedClass","push","mediaSize","mediaPropValue"],"mappings":"uKAAA;AACA;AACA;AACA,GAOA,MAAO,IAAMA,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAC1CC,MAD0C,CAI1CC,QAJ0C,CAK7B,CACb,GAAMC,CAAAA,SAAmB,CAAG,EAA5B,CAEAC,MAAM,CAACC,OAAP,CAAeJ,MAAf,EAAuBK,OAAvB,CAA+B,cAA2B,kCAAzBC,QAAyB,UAAfC,SAAe,UACxD,OAAQ,MAAOA,CAAAA,SAAf,EACE,IAAK,QAAL,CACA,IAAK,QAAL,CAAe,CACb,GAAMC,CAAAA,WAAW,CAAGP,QAAQ,WAAIK,QAAJ,aAAgBC,SAAhB,SAA5B,CACA,GAAIC,WAAJ,CAAiB,CACfN,SAAS,CAACO,IAAV,CAAeD,WAAf,EACD,CACF,CACD,IAAK,QAAL,CAAe,CACb,GAAID,SAAS,GAAK,IAAlB,CAAwB,CACtBJ,MAAM,CAACC,OAAP,CAAeG,SAAf,EAA0BF,OAA1B,CAAkC,eAAiC,mCAA/BK,SAA+B,UAApBC,cAAoB,UACjE,GAAMH,CAAAA,WAAW,CACfP,QAAQ,WAAIK,QAAJ,aAAgBK,cAAhB,cAAmCD,SAAnC,EADV,CAEA,GAAIF,WAAJ,CAAiB,CACfN,SAAS,CAACO,IAAV,CAAeD,WAAf,EACD,CACF,CAND,EAOD,CACF,CACD,QAnBF,CAqBD,CAtBD,EAuBA,MAAON,CAAAA,SAAP,CACD,CAhCM","sourcesContent":["/**\n * Takes a prop/style configuration and templates the classes\n * to match the styleMaps classes returning a concatenated classname string\n */\n\nimport {\n  OptionalResponsiveProperty,\n  ResponsiveProperty,\n} from '../typings/responsive-properties';\n\nexport const generateResponsiveClassnames = (\n  config:\n    | ResponsiveProperty<Record<string, unknown>>\n    | OptionalResponsiveProperty<Record<string, unknown>>,\n  styleMap: Record<string, string>\n): string[] => {\n  const styleList: string[] = [];\n\n  Object.entries(config).forEach(([propName, propValue]) => {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string': {\n        const mappedClass = styleMap[`${propName}_${propValue}__xs`];\n        if (mappedClass) {\n          styleList.push(mappedClass);\n        }\n      }\n      case 'object': {\n        if (propValue !== null) {\n          Object.entries(propValue).forEach(([mediaSize, mediaPropValue]) => {\n            const mappedClass =\n              styleMap[`${propName}_${mediaPropValue}__${mediaSize}`];\n            if (mappedClass) {\n              styleList.push(mappedClass);\n            }\n          });\n        }\n      }\n      default:\n    }\n  });\n  return styleList;\n};\n"]},"metadata":{},"sourceType":"module"}