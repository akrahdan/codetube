{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Dashboard/Communication/index.js\",\n    _s = $RefreshSig$();\n\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { routesMeta } from \"portal/routes\";\nimport { selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Communication = () => {\n  _s();\n\n  const locationType = useAppSelector(selectLocationType);\n  const {\n    scene: Scene\n  } = getRouteMetaForLocation(routesMeta, locationType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"responsive_container app--responsive_container__secondary_nav_bar--active--2j202\",\n    children: /*#__PURE__*/_jsxDEV(Scene, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Communication, \"9CwGn37EEBRo5hE0YPWS9tmdQm4=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = Communication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Communication\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Dashboard/Communication/index.js"],"names":["getRouteMetaForLocation","routesMeta","selectLocationType","useAppSelector","Communication","locationType","scene","Scene"],"mappings":";;;AAAA,SAASA,uBAAT,QAAwC,uBAAxC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAMC,YAAY,GAAGF,cAAc,CAACD,kBAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA,KAAK,EAAEC;AAAT,MAAsBP,uBAAuB,CAACC,UAAD,EAAaI,YAAb,CAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,kFAAf;AAAA,2BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARM;;GAAMD,a;UACYD,c;;;KADZC,a","sourcesContent":["import { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { routesMeta } from \"portal/routes\";\nimport { selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\n\nexport const Communication = () => {\n    const locationType = useAppSelector(selectLocationType);\n    const { scene: Scene}   =   getRouteMetaForLocation(routesMeta, locationType)\n    return (\n        <div className=\"responsive_container app--responsive_container__secondary_nav_bar--active--2j202\">\n            <Scene />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}