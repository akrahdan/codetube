{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/PathCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { capitalize } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { CurriculumCard } from 'components/CurriculumCard';\n// import { trackUserImpression } from '~/libs/eventTracking';\nimport { pathPagePath } from 'libs/urlHelpers'; // import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PathCard = ({\n  path,\n  project,\n  trackingData,\n  useReduxRouter,\n  isFullSize,\n  dataTestId,\n  headingLevel,\n  onClick\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (trackingData.page_name === 'article') {\n      const {\n        page_name,\n        slug,\n        target\n      } = trackingData; // trackUserImpression({ page_name, slug: slug!, target });\n    }\n  }, [trackingData]); // const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\n\n  const pathHref = pathPagePath(project.slug);\n  const linkProps = {\n    href: pathHref,\n    trackingData,\n    onClick,\n    ...(useReduxRouter && {\n      routeTo: pathHref\n    })\n  };\n  console.log(\"URL: \"); // const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n  // const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n  // const progressState = userCompletedContainerIds?.[path.id]\n  //   ? 'completed'\n  //   : userEnrolledPathIds?.includes(path.id)\n  //   ? 'inProgress'\n  //   : undefined;\n\n  const progressState = 'inProgress';\n  const difficulty = project.difficulty === 'Intermediate' ? 1 : 0;\n  const scope = 'lesson';\n  const scopeCount = 28;\n  return /*#__PURE__*/_jsxDEV(CurriculumCard, {\n    image: project.url,\n    text: `${capitalize(project.goal)} Path`,\n    showProLogo: true,\n    title: project.title,\n    tag: \"React\",\n    tagColor: 'green',\n    difficulty: 1,\n    scope: scope,\n    scopeCount: scopeCount,\n    linkProps: linkProps,\n    progressState: progressState,\n    isFullSize: true,\n    dataTestId: dataTestId || `path-card-${project.slug}`,\n    headingLevel: headingLevel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PathCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PathCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathCard\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/PathCard/index.tsx"],"names":["capitalize","React","useEffect","CurriculumCard","pathPagePath","PathCard","path","project","trackingData","useReduxRouter","isFullSize","dataTestId","headingLevel","onClick","page_name","slug","target","pathHref","linkProps","href","routeTo","console","log","progressState","difficulty","scope","scopeCount","url","goal","title"],"mappings":";;;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,cAAT,QAA+B,2BAA/B;AAGA;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAChDC,EAAAA,IADgD;AAEhDC,EAAAA,OAFgD;AAGhDC,EAAAA,YAHgD;AAIhDC,EAAAA,cAJgD;AAKhDC,EAAAA,UALgD;AAMhDC,EAAAA,UANgD;AAOhDC,EAAAA,YAPgD;AAQhDC,EAAAA;AARgD,CAAD,KAS3C;AAAA;;AACJX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACM,SAAb,KAA2B,SAA/B,EAA0C;AACxC,YAAM;AAAEA,QAAAA,SAAF;AAAaC,QAAAA,IAAb;AAAmBC,QAAAA;AAAnB,UAA8BR,YAApC,CADwC,CAExC;AACD;AACF,GALQ,EAKN,CAACA,YAAD,CALM,CAAT,CADI,CAQJ;;AAEA,QAAMS,QAAQ,GAAGb,YAAY,CAACG,OAAO,CAACQ,IAAT,CAA7B;AACA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAEF,QADU;AAEhBT,IAAAA,YAFgB;AAGhBK,IAAAA,OAHgB;AAIhB,QAAIJ,cAAc,IAAI;AAAEW,MAAAA,OAAO,EAAEH;AAAX,KAAtB;AAJgB,GAAlB;AAMAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAjBI,CAkBJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,aAAa,GAAG,YAAtB;AAEA,QAAMC,UAAU,GAAGjB,OAAO,CAACiB,UAAR,KAAuB,cAAvB,GAAwC,CAAxC,GAA4C,CAA/D;AACA,QAAMC,KAAK,GAAG,QAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEnB,OAAO,CAACoB,GADjB;AAEE,IAAA,IAAI,EAAG,GAAE3B,UAAU,CAACO,OAAO,CAACqB,IAAT,CAAe,OAFpC;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,KAAK,EAAErB,OAAO,CAACsB,KAJjB;AAKE,IAAA,GAAG,EAAE,OALP;AAME,IAAA,QAAQ,EAAE,OANZ;AAOE,IAAA,UAAU,EAAE,CAPd;AAQE,IAAA,KAAK,EAAEJ,KART;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,SAAS,EAAER,SAVb;AAWE,IAAA,aAAa,EAAEK,aAXjB;AAYE,IAAA,UAAU,EAAE,IAZd;AAaE,IAAA,UAAU,EAAEZ,UAAU,IAAK,aAAYJ,OAAO,CAACQ,IAAK,EAbtD;AAcE,IAAA,YAAY,EAAEH;AAdhB;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3DM;;GAAMP,Q;;KAAAA,Q","sourcesContent":["import { HeadingTags } from '@codecademy/gamut';\nimport { UserClickData } from '@codecademy/tracking';\nimport { capitalize } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { CurriculumCard } from 'components/CurriculumCard';\nimport type { ProjectEntityResponse } from 'services/projects';\nimport { PathCardAssetPath } from 'libs/contentAssetPaths';\n// import { trackUserImpression } from '~/libs/eventTracking';\nimport { pathPagePath } from 'libs/urlHelpers';\n// import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\nimport { Path } from 'typings/path';\n\nexport type PathCardProps = {\n  path?: Pick<\n    Path,\n    | 'id'\n    | 'slug'\n    | 'title'\n    | 'goal'\n    | 'difficulty'\n    | 'category_ids'\n    | 'content_item_type_counts'\n  >;\n  project: ProjectEntityResponse;\n  trackingData: UserClickData;\n  useReduxRouter?: boolean;\n  isFullSize?: boolean;\n  dataTestId?: string;\n  headingLevel?: HeadingTags;\n  onClick?: () => void;\n};\n\nexport const PathCard: React.FC<PathCardProps> = ({\n  path,\n  project,\n  trackingData,\n  useReduxRouter,\n  isFullSize,\n  dataTestId,\n  headingLevel,\n  onClick,\n}) => {\n  useEffect(() => {\n    if (trackingData.page_name === 'article') {\n      const { page_name, slug, target } = trackingData;\n      // trackUserImpression({ page_name, slug: slug!, target });\n    }\n  }, [trackingData]);\n\n  // const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\n\n  const pathHref = pathPagePath(project.slug);\n  const linkProps = {\n    href: pathHref,\n    trackingData,\n    onClick,\n    ...(useReduxRouter && { routeTo: pathHref }),\n  };\n  console.log(\"URL: \")\n  // const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n  // const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n  // const progressState = userCompletedContainerIds?.[path.id]\n  //   ? 'completed'\n  //   : userEnrolledPathIds?.includes(path.id)\n  //   ? 'inProgress'\n  //   : undefined;\n\n  const progressState = 'inProgress'\n\n  const difficulty = project.difficulty === 'Intermediate' ? 1 : 0;\n  const scope = 'lesson';\n  const scopeCount = 28;\n\n  return (\n    <CurriculumCard\n      image={project.url}\n      text={`${capitalize(project.goal)} Path`}\n      showProLogo\n      title={project.title}\n      tag={\"React\"}\n      tagColor={'green'}\n      difficulty={1}\n      scope={scope}\n      scopeCount={scopeCount}\n      linkProps={linkProps}\n      progressState={progressState}\n      isFullSize={true}\n      dataTestId={dataTestId || `path-card-${project.slug}`}\n      headingLevel={headingLevel}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}