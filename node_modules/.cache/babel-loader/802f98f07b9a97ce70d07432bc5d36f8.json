{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Video/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { PlayIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport styles from './styles/index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OverlayPlayButton = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(PlayIcon, {\n      className: styles.hoverButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n/**\n * @remarks ReactPlayer has optional key 'wrapper' that we require for the onReady callback\n */\n\n\n_c = OverlayPlayButton;\nexport const Video = ({\n  videoUrl,\n  videoTitle,\n  placeholderImage,\n  autoplay,\n  controls,\n  loop,\n  muted,\n  className,\n  onReady,\n  onPlay\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(styles.videoWrapper, loading && styles.loading, className),\n    children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      url: videoUrl,\n      light: placeholderImage,\n      title: videoTitle,\n      playing: autoplay,\n      className: styles.iframe,\n      controls: controls === undefined ? true : controls,\n      loop: loop,\n      muted: muted,\n      playIcon: /*#__PURE__*/_jsxDEV(OverlayPlayButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this),\n      onReady: player => {\n        onReady === null || onReady === void 0 ? void 0 : onReady(player);\n        setLoading(false);\n      },\n      onPlay: onPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");\n\n_c2 = Video;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OverlayPlayButton\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Video/index.tsx"],"names":["PlayIcon","cx","React","useState","ReactPlayer","styles","OverlayPlayButton","overlay","hoverButton","Video","videoUrl","videoTitle","placeholderImage","autoplay","controls","loop","muted","className","onReady","onPlay","loading","setLoading","videoWrapper","iframe","undefined","player"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,sBACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACE,OAAvB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEF,MAAM,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;AAQA;AACA;AACA;;;KAVMF,iB;AA2BN,OAAO,MAAMG,KAA2B,GAAG,CAAC;AAC1CC,EAAAA,QAD0C;AAE1CC,EAAAA,UAF0C;AAG1CC,EAAAA,gBAH0C;AAI1CC,EAAAA,QAJ0C;AAK1CC,EAAAA,QAL0C;AAM1CC,EAAAA,IAN0C;AAO1CC,EAAAA,KAP0C;AAQ1CC,EAAAA,SAR0C;AAS1CC,EAAAA,OAT0C;AAU1CC,EAAAA;AAV0C,CAAD,KAWrC;AAAA;;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,sBACE;AACE,IAAA,SAAS,EAAEF,EAAE,CAACI,MAAM,CAACiB,YAAR,EAAsBF,OAAO,IAAIf,MAAM,CAACe,OAAxC,EAAiDH,SAAjD,CADf;AAAA,2BAGE,QAAC,WAAD;AACE,MAAA,GAAG,EAAEP,QADP;AAEE,MAAA,KAAK,EAAEE,gBAFT;AAGE,MAAA,KAAK,EAAED,UAHT;AAIE,MAAA,OAAO,EAAEE,QAJX;AAKE,MAAA,SAAS,EAAER,MAAM,CAACkB,MALpB;AAME,MAAA,QAAQ,EAAET,QAAQ,KAAKU,SAAb,GAAyB,IAAzB,GAAgCV,QAN5C;AAOE,MAAA,IAAI,EAAEC,IAPR;AAQE,MAAA,KAAK,EAAEC,KART;AASE,MAAA,QAAQ,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cATZ;AAUE,MAAA,OAAO,EAAGS,MAAD,IAAoC;AAC3CP,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGO,MAAH,CAAP;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAbH;AAcE,MAAA,MAAM,EAAEF;AAdV;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAnCM;;GAAMV,K;;MAAAA,K","sourcesContent":["import { PlayIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\n\nimport styles from './styles/index.module.scss';\n\nconst OverlayPlayButton = () => {\n  return (\n    <div className={styles.overlay}>\n      <PlayIcon className={styles.hoverButton} />\n    </div>\n  );\n};\n\n/**\n * @remarks ReactPlayer has optional key 'wrapper' that we require for the onReady callback\n */\n\nexport type ReactPlayerWithWrapper = ReactPlayer & { wrapper: HTMLElement };\n\nexport type VideoProps = {\n  videoUrl: string;\n  videoTitle?: string;\n  placeholderImage?: string | boolean;\n  autoplay?: boolean;\n  controls?: boolean;\n  loop?: boolean;\n  muted?: boolean;\n  className?: string;\n  onReady?: (player: ReactPlayerWithWrapper) => void;\n  onPlay?: () => void;\n};\n\nexport const Video: React.FC<VideoProps> = ({\n  videoUrl,\n  videoTitle,\n  placeholderImage,\n  autoplay,\n  controls,\n  loop,\n  muted,\n  className,\n  onReady,\n  onPlay,\n}) => {\n  const [loading, setLoading] = useState(true);\n  return (\n    <div\n      className={cx(styles.videoWrapper, loading && styles.loading, className)}\n    >\n      <ReactPlayer\n        url={videoUrl}\n        light={placeholderImage}\n        title={videoTitle}\n        playing={autoplay}\n        className={styles.iframe}\n        controls={controls === undefined ? true : controls}\n        loop={loop}\n        muted={muted}\n        playIcon={<OverlayPlayButton />}\n        onReady={(player: ReactPlayerWithWrapper) => {\n          onReady?.(player);\n          setLoading(false);\n        }}\n        onPlay={onPlay}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}