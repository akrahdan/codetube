{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/description.js\";\nimport React from 'react';\nimport Form from '@pluralsight/ps-design-system-form';\nimport Button from '@pluralsight/ps-design-system-button';\nimport Banner from '@pluralsight/ps-design-system-banner';\nimport Dropdown from '@pluralsight/ps-design-system-dropdown';\nimport { Heading } from '@pluralsight/ps-design-system-text';\nimport TextInput from '@pluralsight/ps-design-system-textinput';\nimport TextArea from '@pluralsight/ps-design-system-textarea';\nimport Radio from '@pluralsight/ps-design-system-radio';\nimport Switch from '@pluralsight/ps-design-system-switch';\nimport { capitalize } from '@pluralsight/ps-design-system-util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst validate = state => {\n  const rules = {\n    name: {\n      rule: /.+/,\n      message: 'Required'\n    },\n    level: {\n      rule: /beginner|intermediate|advanced/,\n      message: 'Select a valid option'\n    },\n    slides: {\n      rule: /false|true/,\n      message: 'Turn on or off'\n    },\n    demo: {\n      rule: /false|true/,\n      message: 'Select a demo option'\n    },\n    assessment: {\n      rule: /false|true/,\n      message: 'Select an assessment option'\n    },\n    desc: {\n      rule: /.+/,\n      message: 'Required'\n    },\n    publish: {\n      rule: /^\\d{2}\\/\\d{2}\\/\\d{4}$/,\n      message: 'Required'\n    }\n  };\n  return Object.keys(rules).reduce((errors, ruleName) => {\n    if (rules[ruleName].rule.test(state[ruleName])) {\n      delete errors[ruleName];\n    } else {\n      errors[ruleName] = rules[ruleName].message;\n    }\n\n    return errors;\n  }, { ...state.errors\n  });\n};\n\nconst initialState = {\n  errors: {},\n  isSubmitting: false,\n  isSubmitted: false,\n  name: '',\n  level: null,\n  slides: false,\n  slidestech: null,\n  demo: false,\n  assessment: false,\n  desc: '',\n  publish: undefined\n};\n\nclass CourseDescription extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const errors = validate(this.state);\n    const hasErrors = Object.keys(errors).length > 0;\n    this.setState({\n      errors\n    });\n\n    if (!hasErrors) {\n      this.setState({\n        isSubmitting: true\n      }, _ => {\n        setTimeout(_ => this.setState({\n          isSubmitting: false,\n          isSubmitted: true\n        }, _ => setTimeout(_ => this.reset(), 800)), 1500);\n      });\n    }\n  }\n\n  reset(evt) {\n    this.setState(initialState);\n  }\n\n  render() {\n    const {\n      state\n    } = this;\n\n    const errorMsg = name => state.errors[name];\n\n    const isError = name => !!errorMsg(name);\n\n    const hasErrors = Object.keys(state.errors).length > 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [state.isSubmitted && /*#__PURE__*/_jsxDEV(Banner, {\n        color: Banner.colors.green,\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0'\n        },\n        children: \"Course created!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), hasErrors && /*#__PURE__*/_jsxDEV(Banner, {\n        color: Banner.colors.red,\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0'\n        },\n        children: \"Failed: Sample course form has errors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.VerticalLayout, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            error: isError('name'),\n            onChange: this.handleChange,\n            name: \"name\",\n            label: \"Course name\",\n            placeholder: \"Title\",\n            subLabel: errorMsg('name') || 'Use Title Case',\n            value: state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            error: isError('level'),\n            label: \"Course difficulty level\",\n            placeholder: \"Choose one\",\n            subLabel: errorMsg('level'),\n            menu: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: ['beginner', 'intermediate', 'advanced'].map(level => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                name: \"level\",\n                onClick: _ => this.setState({\n                  level\n                }),\n                children: capitalize(level)\n              }, level, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this))\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            error: isError('slides'),\n            checked: state.slides,\n            name: \"slides\",\n            onClick: checked => this.setState({\n              slides: checked\n            }),\n            children: \"Has slides?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n            error: isError('slidestech'),\n            disabled: !state.slides,\n            name: \"slidestech\",\n            onSelect: (_, slidestech) => this.setState({\n              slidestech\n            }),\n            value: state.slidestech,\n            children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"key\",\n              label: \"Keynote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n              value: \"pptx\",\n              label: \"Powerpoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            error: isError('desc'),\n            label: \"Description\",\n            subLabel: errorMsg('desc'),\n            placeholder: \"What is your course about?\",\n            onChange: this.handleChange,\n            name: \"desc\",\n            value: state.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.ButtonRow, {\n            c: true,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              loading: state.isSubmitting,\n              onClick: this.handleSubmit,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              appearance: Button.appearances.secondary,\n              onClick: evt => evt.preventDefault(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CourseDescription;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/description.js"],"names":["React","Form","Button","Banner","Dropdown","Heading","TextInput","TextArea","Radio","Switch","capitalize","validate","state","rules","name","rule","message","level","slides","demo","assessment","desc","publish","Object","keys","reduce","errors","ruleName","test","initialState","isSubmitting","isSubmitted","slidestech","undefined","CourseDescription","Component","constructor","handleSubmit","bind","handleChange","reset","evt","value","target","setState","preventDefault","hasErrors","length","_","setTimeout","render","errorMsg","isError","position","colors","green","top","left","red","map","checked","appearances","secondary"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Form from '@pluralsight/ps-design-system-form'\nimport Button from '@pluralsight/ps-design-system-button'\nimport Banner from '@pluralsight/ps-design-system-banner'\nimport Dropdown from '@pluralsight/ps-design-system-dropdown'\nimport { Heading } from '@pluralsight/ps-design-system-text'\nimport TextInput from '@pluralsight/ps-design-system-textinput'\nimport TextArea from '@pluralsight/ps-design-system-textarea'\nimport Radio from '@pluralsight/ps-design-system-radio'\nimport Switch from '@pluralsight/ps-design-system-switch'\nimport { capitalize } from '@pluralsight/ps-design-system-util'\n\nconst validate = state => {\n  const rules = {\n    name: { rule: /.+/, message: 'Required' },\n    level: {\n      rule: /beginner|intermediate|advanced/,\n      message: 'Select a valid option'\n    },\n    slides: {\n      rule: /false|true/,\n      message: 'Turn on or off'\n    },\n    demo: {\n      rule: /false|true/,\n      message: 'Select a demo option'\n    },\n    assessment: {\n      rule: /false|true/,\n      message: 'Select an assessment option'\n    },\n    desc: { rule: /.+/, message: 'Required' },\n    publish: { rule: /^\\d{2}\\/\\d{2}\\/\\d{4}$/, message: 'Required' }\n  }\n  return Object.keys(rules).reduce(\n    (errors, ruleName) => {\n      if (rules[ruleName].rule.test(state[ruleName])) {\n        delete errors[ruleName]\n      } else {\n        errors[ruleName] = rules[ruleName].message\n      }\n      return errors\n    },\n    { ...state.errors }\n  )\n}\n\nconst initialState = {\n  errors: {},\n  isSubmitting: false,\n  isSubmitted: false,\n  name: '',\n  level: null,\n  slides: false,\n  slidestech: null,\n  demo: false,\n  assessment: false,\n  desc: '',\n  publish: undefined\n}\n\nclass CourseDescription extends React.Component {\n  constructor() {\n    super()\n    this.state = initialState\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  handleChange(evt) {\n    const { name, value } = evt.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault()\n\n    const errors = validate(this.state)\n    const hasErrors = Object.keys(errors).length > 0\n\n    this.setState({ errors })\n\n    if (!hasErrors) {\n      this.setState({ isSubmitting: true }, _ => {\n        setTimeout(\n          _ =>\n            this.setState({ isSubmitting: false, isSubmitted: true }, _ =>\n              setTimeout(_ => this.reset(), 800)\n            ),\n          1500\n        )\n      })\n    }\n  }\n\n  reset(evt) {\n    this.setState(initialState)\n  }\n\n  render() {\n    const { state } = this\n    const errorMsg = name => state.errors[name]\n    const isError = name => !!errorMsg(name)\n    const hasErrors = Object.keys(state.errors).length > 0\n    return (\n      <div style={{ position: 'relative' }}>\n        {state.isSubmitted && (\n          <Banner\n            color={Banner.colors.green}\n            style={{ position: 'absolute', top: '0', left: '0' }}\n          >\n            Course created!\n          </Banner>\n        )}\n        {hasErrors && (\n          <Banner\n            color={Banner.colors.red}\n            style={{ position: 'absolute', top: '0', left: '0' }}\n          >\n            Failed: Sample course form has errors\n          </Banner>\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <Form.VerticalLayout>\n            <Heading>\n              \n            </Heading>\n            <TextInput\n              error={isError('name')}\n              onChange={this.handleChange}\n              name=\"name\"\n              label=\"Course name\"\n              placeholder=\"Title\"\n              subLabel={errorMsg('name') || 'Use Title Case'}\n              value={state.name}\n            />\n            <Dropdown\n              error={isError('level')}\n              label=\"Course difficulty level\"\n              placeholder=\"Choose one\"\n              subLabel={errorMsg('level')}\n              menu={\n                <>\n                  {['beginner', 'intermediate', 'advanced'].map(level => (\n                    <Dropdown.Item\n                      name=\"level\"\n                      key={level}\n                      onClick={_ => this.setState({ level })}\n                    >\n                      {capitalize(level)}\n                    </Dropdown.Item>\n                  ))}\n                </>\n              }\n            />\n           \n            <Switch\n              error={isError('slides')}\n              checked={state.slides}\n              name=\"slides\"\n              onClick={checked => this.setState({ slides: checked })}\n            >\n              Has slides?\n            </Switch>\n            <Form.Divider />\n            <Radio.Group\n              error={isError('slidestech')}\n              disabled={!state.slides}\n              name=\"slidestech\"\n              onSelect={(_, slidestech) => this.setState({ slidestech })}\n              value={state.slidestech}\n            >\n              <Radio.Button value=\"key\" label=\"Keynote\" />\n              <Radio.Button value=\"pptx\" label=\"Powerpoint\" />\n            </Radio.Group>\n            <Form.Divider />\n           \n            <TextArea\n              error={isError('desc')}\n              label=\"Description\"\n              subLabel={errorMsg('desc')}\n              placeholder=\"What is your course about?\"\n              onChange={this.handleChange}\n              name=\"desc\"\n              value={state.desc}\n            />\n            <Form.ButtonRow c>\n              <Button loading={state.isSubmitting} onClick={this.handleSubmit}>\n                Save\n              </Button>\n              <Button\n                appearance={Button.appearances.secondary}\n                onClick={evt => evt.preventDefault()}\n              >\n                Cancel\n              </Button>\n            </Form.ButtonRow>\n          </Form.VerticalLayout>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default CourseDescription"]},"metadata":{},"sourceType":"module"}