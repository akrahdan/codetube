{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";import cookie from\"react-cookies\";export var authApi=createApi({baseQuery:fetchBaseQuery({baseUrl:\"/\",prepareHeaders:function prepareHeaders(headers,_ref){var getState=_ref.getState;var csrfToken=cookie.load(\"csrftoken\");if(csrfToken){headers.set(\"X-CSRFToken\",csrfToken);}var token=getState().auth.token||localStorage.getItem('token');if(token){headers.set(\"Authorization\",\"Token \".concat(token));}headers.set(\"Content-Type\",\"application/json\");return headers;}}),tagTypes:[\"LoginRequest\",\"SignupRequest\",\"Logout\",\"User\",\"UserResponse\"],endpoints:function endpoints(build){return{login:build.mutation({query:function query(body){return{url:\"auth/login/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),signup:build.mutation({query:function query(body){return{url:\"auth/signup/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),logout:build.mutation({query:function query(body){return{url:\"rest-auth/logout/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),facebookLogin:build.mutation({query:function query(){return{url:\"auth/facebook/\",method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),googleLogin:build.mutation({query:function query(){return{url:\"auth/google/\",method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),googleLoginUrl:build.mutation({query:function query(){return{url:\"auth/google/url\",method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),facebookLoginUrl:build.mutation({query:function query(){return{url:\"auth/facebook/url\",method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),getCurrentUser:build.query({query:function query(){return{url:\"rest-auth/user/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}})};}});var getCurrentUser=authApi.endpoints.getCurrentUser;export{getCurrentUser};var useLoginMutation=authApi.useLoginMutation,useSignupMutation=authApi.useSignupMutation,useLogoutMutation=authApi.useLogoutMutation,useGetCurrentUserQuery=authApi.useGetCurrentUserQuery,useFacebookLoginMutation=authApi.useFacebookLoginMutation,useGoogleLoginMutation=authApi.useGoogleLoginMutation,useFacebookLoginUrlMutation=authApi.useFacebookLoginUrlMutation,useGoogleLoginUrlMutation=authApi.useGoogleLoginUrlMutation;export{useLoginMutation,useSignupMutation,useLogoutMutation,useGetCurrentUserQuery,useFacebookLoginMutation,useGoogleLoginMutation,useFacebookLoginUrlMutation,useGoogleLoginUrlMutation};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/services/auth.ts"],"names":["createApi","fetchBaseQuery","cookie","authApi","baseQuery","baseUrl","prepareHeaders","headers","getState","csrfToken","load","set","token","auth","localStorage","getItem","tagTypes","endpoints","build","login","mutation","query","body","url","method","responseHandler","response","json","signup","logout","facebookLogin","googleLogin","googleLoginUrl","facebookLoginUrl","getCurrentUser","useLoginMutation","useSignupMutation","useLogoutMutation","useGetCurrentUserQuery","useFacebookLoginMutation","useGoogleLoginMutation","useFacebookLoginUrlMutation","useGoogleLoginUrlMutation"],"mappings":"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","sourcesContent":["\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { head } from \"lodash\";\nimport cookie from \"react-cookies\";\nimport { RootState } from \"store\";\nimport internal from \"stream\";\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n  csrfmiddlewaretoken:string;\n}\n\nexport interface SignupRequest {\n  email: string;\n  username: string;\n  password1: string;\n  password2: string;\n  csrfmiddlewaretoken:string;\n}\n\nexport interface Token {\n  key: string;\n}\n\nexport interface User {\n  pk:number;\n  email: string;\n  username:string;\n  first_name:string;\n  last_name:string;\n  \n}\n\nexport interface UserResponse {\n  user: User,\n  token: string\n}\n\nexport interface Logout {\n \n  csrfmiddlewaretoken:string;\n}\n\nexport interface LogoutResponse {\n  detail: string;\n}\n\nexport const authApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/\",\n    prepareHeaders: (headers, { getState }) => {\n      const csrfToken = cookie.load(\"csrftoken\");\n      \n      \n      if (csrfToken) {\n        headers.set(\"X-CSRFToken\", csrfToken);\n        \n      }\n      const token = (getState() as RootState).auth.token || localStorage.getItem('token');\n      if(token) {\n        headers.set(\"Authorization\", `Token ${token}`)\n      }\n      \n      headers.set(\"Content-Type\", \"application/json\");\n\n      return headers;\n    },\n  }),\n  tagTypes: [\"LoginRequest\", \"SignupRequest\", \"Logout\", \"User\", \"UserResponse\"],\n  endpoints: (build) => ({\n    login: build.mutation<UserResponse, Partial<LoginRequest>>({\n      query: (body) => ({\n        url: \"auth/login/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    signup: build.mutation<UserResponse, Partial<SignupRequest>>({\n      query: (body) => ({\n        url: \"auth/signup/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    logout: build.mutation<LogoutResponse, Partial<Logout>>({\n      query: (body) => ({\n        url: \"rest-auth/logout/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    facebookLogin: build.mutation<User, void>({\n      query: () => ({\n        url: \"auth/facebook/\",\n        method: \"POST\",\n       \n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    googleLogin: build.mutation<User, void>({\n      query: () => ({\n        url: \"auth/google/\",\n        method: \"POST\",\n       \n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    googleLoginUrl: build.mutation<User, void>({\n      query: () => ({\n        url: \"auth/google/url\",\n        method: \"POST\",\n       \n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    facebookLoginUrl: build.mutation<User, void>({\n      query: () => ({\n        url: \"auth/facebook/url\",\n        method: \"POST\",\n       \n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    getCurrentUser: build.query<User, void>({\n      query: () => ({\n        url: \"rest-auth/user/\",\n        method: \"GET\",\n       \n        responseHandler: (response) => response.json(),\n      }),\n    }),\n  }),\n});\n\nexport const { getCurrentUser } = authApi.endpoints;\n\nexport const { useLoginMutation, useSignupMutation, useLogoutMutation, useGetCurrentUserQuery, \n  useFacebookLoginMutation, useGoogleLoginMutation, useFacebookLoginUrlMutation, useGoogleLoginUrlMutation  } = authApi;\n"]},"metadata":{},"sourceType":"module"}