{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from 'services/courses';\nconst initialState = {\n  course: null,\n  saveProps: {\n    submit: false,\n    locationPath: null\n  },\n  pricing\n};\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState,\n  reducers: {\n    saveCourse: (state, action) => {\n      state.saveProps = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.updateCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.fetchResources.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    }).addMatcher(coursesApi.endpoints.createResource.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    });\n    ;\n    ;\n  }\n});\nexport const {\n  saveCourse\n} = courseSlice.actions;\nexport default courseSlice.reducer;\nexport const selectCourse = state => state.course.course;\nexport const selectResources = state => state.course.resources;\nexport const selectSave = state => state.course.saveProps;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/course/courseSplice.ts"],"names":["createSlice","coursesApi","initialState","course","saveProps","submit","locationPath","pricing","courseSlice","name","reducers","saveCourse","state","action","payload","extraReducers","builder","addMatcher","endpoints","createCourse","matchFulfilled","updateCourse","fetchResources","resources","createResource","actions","reducer","selectCourse","selectResources","selectSave"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAAwBC,UAAxB,QAAiE,kBAAjE;AAYA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAC9CC,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,YAAY,EAAE;AAFgC,GAA3B;AAGlBC,EAAAA;AAHkB,CAArB;AAIA,MAAMC,WAAW,GAAGR,WAAW,CAAC;AAC9BS,EAAAA,IAAI,EAAE,QADwB;AAE9BP,EAAAA,YAAY,EAAEA,YAFgB;AAG9BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA+C;AACzDD,MAAAA,KAAK,CAACR,SAAN,GAAkBS,MAAM,CAACC,OAAzB;AACD;AAHO,GAHoB;AAS9BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIhB,UAAU,CAACiB,SAAX,CAAqBC,YAArB,CAAkCC,cAFtC,EAGI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACvBF,MAAAA,KAAK,CAACT,MAAN,GAAeW,OAAf;AAEA,KANL,EAOIG,UAPJ,CAQIhB,UAAU,CAACiB,SAAX,CAAqBG,YAArB,CAAkCD,cARtC,EASI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACT,MAAN,GAAeW,OAAf;AACD,KAXL,EAYIG,UAZJ,CAaIhB,UAAU,CAACiB,SAAX,CAAqBI,cAArB,CAAoCF,cAbxC,EAcI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACW,SAAN,GAAkBT,OAAlB;AAED,KAjBL,EAkBIG,UAlBJ,CAmBIhB,UAAU,CAACiB,SAAX,CAAqBM,cAArB,CAAoCJ,cAnBxC,EAoBI,CAACR,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACW,SAAN,GAAkBT,OAAlB;AAED,KAvBL;AAwBI;AAAC;AACN;AAnC6B,CAAD,CAA/B;AAsCA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAgBH,WAAW,CAACiB,OAAlC;AAEP,eAAejB,WAAW,CAACkB,OAA3B;AAEA,OAAO,MAAMC,YAAY,GAAIf,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaA,MAAxD;AACP,OAAO,MAAMyB,eAAe,GAAIhB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaoB,SAA3D;AACP,OAAO,MAAMM,UAAU,GAAIjB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaC,SAAtD","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport {CourseResponse, coursesApi, MediaResponse, Pricing} from 'services/courses'\n\ninterface submitProps {\n  submit: boolean\n  locationPath: string\n}\ntype CourseState = {\n  course: CourseResponse | null,\n  resources: MediaResponse[] | [],\n  saveProps: submitProps | null,\n  pricing: Pricing | null\n};\nconst initialState = { course: null, saveProps: {\n  submit: false,\n  locationPath: null\n}, pricing };\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState as CourseState,\n  reducers: {\n    saveCourse: (state, action: PayloadAction<submitProps>) => {\n      state.saveProps = action.payload\n    }\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createCourse.matchFulfilled,\n        (state, { payload }) => {\n         state.course = payload\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.updateCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.course = payload\n        }\n      ).addMatcher(\n        coursesApi.endpoints.fetchResources.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.createResource.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      );;;\n  },\n});\n\nexport const { saveCourse} = courseSlice.actions\n\nexport default courseSlice.reducer;\n\nexport const selectCourse = (state: RootState) => state.course.course;\nexport const selectResources = (state: RootState) => state.course.resources;\nexport const selectSave = (state: RootState) => state.course.saveProps;\n"]},"metadata":{},"sourceType":"module"}