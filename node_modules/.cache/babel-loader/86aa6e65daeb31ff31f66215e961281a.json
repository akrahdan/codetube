{"ast":null,"code":"import React from \"react\";\nconst modalRoot = document.getElementById('modal-root');\nexport class SignupModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/portal/scenes/Modal/SignupModal.js"],"names":["React","modalRoot","document","getElementById","SignupModal","Component","constructor","props","el","createElement","componentDidMount","appendChild","componentWillUnmount","removeChild","render","ReactDOM","createPortal","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;AAEA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,EAAL,GAAUN,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAV;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,IAAAA,SAAS,CAACU,WAAV,CAAsB,KAAKH,EAA3B;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBX,IAAAA,SAAS,CAACY,WAAV,CAAsB,KAAKL,EAA3B;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WAAOC,QAAQ,CAACC,YAAT,CACL,KAAKT,KAAL,CAAWU,QADN,EAEL,KAAKT,EAFA,CAAP;AAID;;AA3B8C","sourcesContent":["import React from \"react\";\nconst modalRoot = document.getElementById('modal-root');\n\nexport class SignupModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}