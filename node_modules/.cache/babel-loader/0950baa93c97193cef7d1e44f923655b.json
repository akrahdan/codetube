{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Editor/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport isHotkey from 'is-hotkey';\nimport { Editable, withReact, useSlate, Slate } from 'slate-react';\nimport { jsx } from 'slate-hyperscript';\nimport { Editor, Text, ListType, Transforms, createEditor, Element as SlateElement } from 'slate';\nimport { withHistory } from 'slate-history';\nimport escapeHtml from 'escape-html';\nimport { Button, Icon, Toolbar } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code'\n};\nconst LIST_TYPES = ['numbered-list', 'bulleted-list'];\nexport const RTEditor = ({\n  handleChange,\n  editorValue\n}) => {\n  _s();\n\n  const html = editorValue ? new DOMParser().parseFromString(editorValue, 'text/html') : '';\n  const initEditValue = deserialize(html.body) || initialValue;\n  const [value, setValue] = useState(initEditValue);\n  const renderElement = useCallback(props => /*#__PURE__*/_jsxDEV(Element, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 46\n  }, this), []);\n  const renderLeaf = useCallback(props => /*#__PURE__*/_jsxDEV(Leaf, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 43\n  }, this), []);\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  return /*#__PURE__*/_jsxDEV(Slate, {\n    editor: editor,\n    value: value,\n    onChange: value => {\n      setValue(value);\n      const result = value.map(serialize).join('\\n');\n      handleChange(result);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      className: \"rt-menu-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rt-menu-bar fx-lt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(MarkButton, {\n            className: \"cfi cfi-bold\",\n            format: \"bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MarkButton, {\n            className: \"cfi cfi-italic\",\n            format: \"italic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockButton, {\n            format: \"numbered-list\",\n            className: \"cfi cfi-list-ol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockButton, {\n            format: \"bulleted-list\",\n            className: \"cfi cfi-list-ul\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rt-editor rt-editor--empty rt-editor--wysiwyg-mode \",\n      children: /*#__PURE__*/_jsxDEV(Editable, {\n        className: \"ProseMirror\",\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"Insert description here\",\n        spellCheck: true,\n        autoFocus: true,\n        onKeyDown: event => {\n          for (const hotkey in HOTKEYS) {\n            if (isHotkey(hotkey, event)) {\n              event.preventDefault();\n              const mark = HOTKEYS[hotkey];\n              toggleMark(editor, mark);\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RTEditor, \"JUroV+uK5l4qlBFqVzh9WQsJRg0=\");\n\n_c = RTEditor;\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(!Editor.isEditor(n) && SlateElement.isElement(n) && n.type),\n    split: true\n  });\n  const newProperties = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format\n  };\n  Transforms.setNodes(editor, newProperties);\n\n  if (!isActive && isList) {\n    const block = {\n      type: format,\n      children: []\n    };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format\n  });\n  return !!match;\n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst deleteBackward = (...args) => {\n  deleteBackward(...args);\n  const match = Editor.above(editor, {\n    match: n => unwrapTypes.includes(n.type)\n  });\n\n  if (match) {\n    // quick fix for list item\n    Transforms.setNodes(editor, {\n      type: ListType.LIST_ITEM\n    });\n  }\n};\n\nconst Element = ({\n  attributes,\n  children,\n  element\n}) => {\n  switch (element.type) {\n    case 'bulleted-list':\n      return /*#__PURE__*/_jsxDEV(\"ul\", { ...attributes,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 14\n      }, this);\n\n    case 'list-item':\n      return /*#__PURE__*/_jsxDEV(\"li\", { ...attributes,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }, this);\n\n    case 'numbered-list':\n      return /*#__PURE__*/_jsxDEV(\"ol\", { ...attributes,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", { ...attributes,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 14\n      }, this);\n  }\n};\n\n_c2 = Element;\n\nconst Leaf = ({\n  attributes,\n  children,\n  leaf\n}) => {\n  if (leaf.bold) {\n    children = /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (leaf.code) {\n    children = /*#__PURE__*/_jsxDEV(\"code\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (leaf.italic) {\n    children = /*#__PURE__*/_jsxDEV(\"em\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (leaf.underline) {\n    children = /*#__PURE__*/_jsxDEV(\"u\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", { ...attributes,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Leaf;\n\nconst BlockButton = ({\n  format,\n  className\n}) => {\n  _s2();\n\n  const editor = useSlate();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: \"btn btn-link\",\n    active: isBlockActive(editor, format),\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleBlock(editor, format);\n    },\n    children: /*#__PURE__*/_jsxDEV(Icon, {\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BlockButton, \"YMFVEh3YGumTkrWAgpqmxHJ20Oc=\", false, function () {\n  return [useSlate];\n});\n\n_c4 = BlockButton;\n\nconst MarkButton = ({\n  format,\n  className\n}) => {\n  _s3();\n\n  const editor = useSlate();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: \"btn btn-link\",\n    active: isMarkActive(editor, format),\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, format);\n    },\n    children: /*#__PURE__*/_jsxDEV(Icon, {\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MarkButton, \"YMFVEh3YGumTkrWAgpqmxHJ20Oc=\", false, function () {\n  return [useSlate];\n});\n\n_c5 = MarkButton;\nconst initialValue = [{\n  type: 'paragraph',\n  children: [{\n    text: ''\n  }]\n}];\n\nconst serialize = node => {\n  if (Text.isText(node)) {\n    let string = escapeHtml(node.text);\n\n    if (node.bold) {\n      string = `<strong>${string}</strong>`;\n    }\n\n    if (node.italic) {\n      string = `<em>${string}</em>`;\n    }\n\n    return string;\n  }\n\n  const children = node.children.map(n => serialize(n)).join('');\n\n  switch (node.type) {\n    case 'quote':\n      return `<blockquote><p>${children}</p></blockquote>`;\n\n    case 'paragraph':\n      return `<p>${children}</p>`;\n\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`;\n\n    case 'list-item':\n      return `<li>${children}</li>`;\n\n    case 'numbered-list':\n      return `<ol>${children}</ol>`;\n\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`;\n\n    default:\n      return children;\n  }\n};\n\nconst deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent;\n  } else if (el.nodeType !== 1) {\n    return null;\n  }\n\n  let children = Array.from(el.childNodes).map(deserialize);\n\n  if (children.length === 0) {\n    children = [{\n      text: ''\n    }];\n  }\n\n  switch (el.nodeName) {\n    case 'BODY':\n      return jsx('fragment', {}, children);\n\n    case 'BR':\n      return '\\n';\n\n    case 'BLOCKQUOTE':\n      return jsx('element', {\n        type: 'quote'\n      }, children);\n\n    case 'P':\n      return jsx('element', {\n        type: 'paragraph'\n      }, children);\n\n    case 'UL':\n      return jsx('element', {\n        type: 'bulleted-list'\n      }, children);\n\n    case 'OL':\n      return jsx('element', {\n        type: 'numbered-list'\n      }, children);\n\n    case 'LI':\n      return jsx('element', {\n        type: 'list-item'\n      }, children);\n\n    case 'A':\n      return jsx('element', {\n        type: 'link',\n        url: el.getAttribute('href')\n      }, children);\n\n    default:\n      return el.textContent;\n  }\n};\n\nexport default RTEditor;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"RTEditor\");\n$RefreshReg$(_c2, \"Element\");\n$RefreshReg$(_c3, \"Leaf\");\n$RefreshReg$(_c4, \"BlockButton\");\n$RefreshReg$(_c5, \"MarkButton\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Editor/index.tsx"],"names":["React","useCallback","useMemo","useState","isHotkey","Editable","withReact","useSlate","Slate","jsx","Editor","Text","ListType","Transforms","createEditor","Element","SlateElement","withHistory","escapeHtml","Button","Icon","Toolbar","HOTKEYS","LIST_TYPES","RTEditor","handleChange","editorValue","html","DOMParser","parseFromString","initEditValue","deserialize","body","initialValue","value","setValue","renderElement","props","renderLeaf","editor","result","map","serialize","join","event","hotkey","preventDefault","mark","toggleMark","toggleBlock","format","isActive","isBlockActive","isList","includes","unwrapNodes","match","n","isEditor","isElement","type","split","newProperties","setNodes","block","children","wrapNodes","isMarkActive","removeMark","addMark","nodes","marks","deleteBackward","args","above","unwrapTypes","LIST_ITEM","attributes","element","Leaf","leaf","bold","code","italic","underline","BlockButton","className","MarkButton","text","node","isText","string","url","el","nodeType","textContent","Array","from","childNodes","length","nodeName","getAttribute"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport isHotkey from 'is-hotkey'\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { jsx } from 'slate-hyperscript'\nimport {\n  Editor,\n  Text,\n  ListType,\n  Transforms,\n  createEditor,\n  Descendant,\n  Node,\n  Element as SlateElement,\n} from 'slate'\nimport { withHistory } from 'slate-history'\nimport escapeHtml from 'escape-html'\nimport { Button, Icon, Toolbar } from './components'\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline',\n  'mod+`': 'code',\n}\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nexport const RTEditor = ({ handleChange, editorValue }) => {\n  const html = editorValue ? new DOMParser().parseFromString(editorValue, 'text/html') : ''\n  const initEditValue = deserialize(html.body) || initialValue\n  const [value, setValue] = useState<Descendant[]>(initEditValue)\n  const renderElement = useCallback(props => <Element {...props} />, [])\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\n  \n  return (\n    <Slate editor={editor} value={value} onChange={value => {\n      setValue(value)\n      const result = value.map(serialize).join('\\n')\n      handleChange(result)\n    }}>\n      <Toolbar className=\"rt-menu-bar-container\">\n        <div className=\"rt-menu-bar fx-lt\">\n          <div className='btn-group'>\n            <MarkButton className=\"cfi cfi-bold\" format=\"bold\" />\n            <MarkButton className=\"cfi cfi-italic\" format=\"italic\" />\n            <BlockButton format=\"numbered-list\" className=\"cfi cfi-list-ol\" />\n            <BlockButton format=\"bulleted-list\" className=\"cfi cfi-list-ul\" />\n          </div>\n          <div className=\"fx\"></div>\n          <div className=\"btn-group\"></div>\n        </div>\n\n      </Toolbar>\n      <div className=\"rt-editor rt-editor--empty rt-editor--wysiwyg-mode \">\n        <Editable\n\n          className=\"ProseMirror\"\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Insert description here\"\n          spellCheck\n          autoFocus\n          onKeyDown={event => {\n            for (const hotkey in HOTKEYS) {\n              if (isHotkey(hotkey, event as any)) {\n                event.preventDefault()\n                const mark = HOTKEYS[hotkey]\n                toggleMark(editor, mark)\n              }\n            }\n          }}\n        />\n      </div>\n\n    </Slate>\n  )\n}\n\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format)\n  const isList = LIST_TYPES.includes(format)\n\n  Transforms.unwrapNodes(editor, {\n    match: n =>\n      LIST_TYPES.includes(\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\n      ),\n    split: true,\n  })\n  const newProperties: Partial<SlateElement> = {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n  }\n  Transforms.setNodes(editor, newProperties)\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] }\n    Transforms.wrapNodes(editor, block)\n  }\n}\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format)\n\n  if (isActive) {\n    Editor.removeMark(editor, format)\n  } else {\n    Editor.addMark(editor, format, true)\n  }\n}\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n =>\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n  })\n\n  return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor)\n  return marks ? marks[format] === true : false\n}\n\nconst deleteBackward = (...args) => {\n  deleteBackward(...args); \n\n  const match = Editor.above(editor, {\n    match: n => unwrapTypes.includes(n.type),\n  });\n\n  if (match) {\n    // quick fix for list item\n    Transforms.setNodes(editor, { type: ListType.LIST_ITEM });\n  }\n};\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\nconst BlockButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className='btn btn-link'\n      active={isBlockActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleBlock(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst MarkButton = ({ format, className }) => {\n  const editor = useSlate()\n  return (\n    <Button\n      className=\"btn btn-link\"\n      active={isMarkActive(editor, format)}\n      onMouseDown={event => {\n        event.preventDefault()\n        toggleMark(editor, format)\n      }}\n    >\n      <Icon className={className}></Icon>\n    </Button>\n  )\n}\n\nconst initialValue: Descendant[] = [\n  {\n    type: 'paragraph',\n    children: [\n      { text: '' },\n\n\n    ],\n  },\n\n]\n\n\nconst serialize = (node) => {\n  if (Text.isText(node)) {\n    let string = escapeHtml(node.text)\n    if (node.bold) {\n      string = `<strong>${string}</strong>`\n    }\n    if (node.italic) {\n      string = `<em>${string}</em>`\n    }\n    return string\n  }\n\n  const children = node.children.map(n => serialize(n)).join('')\n\n  switch (node.type) {\n    case 'quote':\n      return `<blockquote><p>${children}</p></blockquote>`\n    case 'paragraph':\n      return `<p>${children}</p>`\n    case 'bulleted-list':\n      return `<ul>${children}</ul>`\n    case 'list-item':\n      return `<li>${children}</li>`\n    case 'numbered-list':\n      return `<ol>${children}</ol>`\n\n    case 'link':\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\n    default:\n      return children\n  }\n}\n\nconst deserialize = el => {\n  if (el.nodeType === 3) {\n    return el.textContent\n  } else if (el.nodeType !== 1) {\n    return null\n  }\n\n  let children = Array.from(el.childNodes).map(deserialize)\n\n  if (children.length === 0) {\n    children = [{ text: '' }]\n  }\n\n  switch (el.nodeName) {\n    case 'BODY':\n      return jsx('fragment', {}, children)\n    case 'BR':\n      return '\\n'\n    case 'BLOCKQUOTE':\n      return jsx('element', { type: 'quote' }, children)\n    case 'P':\n      return jsx('element', { type: 'paragraph' }, children)\n    case 'UL':\n      return jsx('element', { type: 'bulleted-list' }, children)\n    case 'OL':\n      return jsx('element', { type: 'numbered-list' }, children)\n    case 'LI':\n      return jsx('element', { type: 'list-item' }, children)\n    case 'A':\n      return jsx(\n        'element',\n        { type: 'link', url: el.getAttribute('href') },\n        children\n      )\n    default:\n      return el.textContent\n  }\n}\n\nexport default RTEditor"]},"metadata":{},"sourceType":"module"}