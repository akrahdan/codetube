{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\nimport { canUseDOM } from '@pluralsight/ps-design-system-util';\nimport React from 'react';\nvar FOCUSABLE_SELECTORS = ['[contenteditable]:not([contenteditable=\"false\"])', '[tabindex]', 'a[href]', 'audio[controls]', 'button', 'iframe', 'input', 'select', 'textarea', 'video[controls]'];\nexport default function useFocusManager(ref, _a) {\n  var autofocus = _a.autofocus,\n      returnFocus = _a.returnFocus,\n      trapped = _a.trapped;\n  var prevActiveElRef = React.useRef(null);\n  React.useEffect(function () {\n    // @ts-ignore: read-only prop\n    prevActiveElRef.current = document.activeElement;\n  }, []);\n\n  var _b = React.useState(null),\n      node = _b[0],\n      setNode = _b[1];\n\n  React.useEffect(function () {\n    setNode(ref.current);\n  }, [ref]);\n\n  var _c = React.useState([]),\n      focusableNodes = _c[0],\n      setFocusableEls = _c[1];\n\n  var firstNode = React.useMemo(function () {\n    return focusableNodes[0];\n  }, [focusableNodes]);\n  var lastNode = React.useMemo(function () {\n    return focusableNodes[focusableNodes.length - 1];\n  }, [focusableNodes]);\n  React.useEffect(function () {\n    if (focusableNodes.length === 0) ref.current.setAttribute('tabindex', '0');else ref.current.removeAttribute('tabindex');\n  }, [focusableNodes, ref]);\n  React.useEffect(function () {\n    var observer;\n\n    if (canUseDOM() && node instanceof Node) {\n      observer = new MutationObserver(function (mutationList) {\n        mutationList.forEach(function (mutation) {\n          if (mutation.type === 'childList') {\n            var nextEls_1 = getFocusableChildNodes(node);\n            setFocusableEls(nextEls_1);\n          }\n        });\n      });\n      observer.observe(node, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    var nextEls = getFocusableChildNodes(node);\n    setFocusableEls(nextEls);\n    return function () {\n      observer === null || observer === void 0 ? void 0 : observer.disconnect();\n    };\n  }, [node]);\n  React.useEffect(function () {\n    if (!autofocus) return;\n    var toFocus = firstNode || ref.current;\n    toFocus.focus();\n  }, [firstNode, autofocus, ref]);\n  var handleKeyDown = React.useCallback(function (evt) {\n    if (!isTab(evt)) return;\n    var curActive = document.activeElement;\n    var reverse = withShift(evt);\n\n    if (curActive === firstNode && reverse) {\n      lastNode.focus();\n      evt.preventDefault();\n      evt.stopPropagation();\n    } else if (curActive === lastNode && !reverse) {\n      firstNode.focus();\n      evt.preventDefault();\n      evt.stopPropagation();\n    }\n  }, [firstNode, lastNode]);\n  React.useEffect(function bind() {\n    if (!trapped) return;\n    window.addEventListener('keydown', handleKeyDown);\n    return function unbind() {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown, autofocus, returnFocus, trapped]);\n  React.useEffect(function () {\n    if (!returnFocus) return;\n    return function returnFocusWhenUnmounted() {\n      if (prevActiveElRef.current) prevActiveElRef.current.focus();\n    };\n  }, [returnFocus]);\n}\n\nfunction hasNegativeTabIndex(el) {\n  return el.getAttribute('tabindex') && Number(el.getAttribute('tabindex')) < 0;\n}\n\nfunction withShift(evt) {\n  return evt.shiftKey;\n}\n\nfunction isTab(evt) {\n  return evt.key === 'Tab';\n}\n\nfunction getFocusableChildNodes(el) {\n  if (!el) return [];\n  var selectAll = FOCUSABLE_SELECTORS.join(',');\n  var nodelist = el.querySelectorAll(selectAll);\n  return Array.from(nodelist || []).filter(function (node) {\n    return !hasNegativeTabIndex(node);\n  });\n}","map":{"version":3,"sources":["../../../src/react/use-focus-manager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\nimport { canUseDOM } from '@pluralsight/ps-design-system-util';\nimport React from 'react';\nvar FOCUSABLE_SELECTORS = [\n    '[contenteditable]:not([contenteditable=\"false\"])',\n    '[tabindex]',\n    'a[href]',\n    'audio[controls]',\n    'button',\n    'iframe',\n    'input',\n    'select',\n    'textarea',\n    'video[controls]'\n];\nexport default function useFocusManager(ref, _a) {\n    var autofocus = _a.autofocus, returnFocus = _a.returnFocus, trapped = _a.trapped;\n    var prevActiveElRef = React.useRef(null);\n    React.useEffect(function () {\n        // @ts-ignore: read-only prop\n        prevActiveElRef.current = document.activeElement;\n    }, []);\n    var _b = React.useState(null), node = _b[0], setNode = _b[1];\n    React.useEffect(function () {\n        setNode(ref.current);\n    }, [ref]);\n    var _c = React.useState([]), focusableNodes = _c[0], setFocusableEls = _c[1];\n    var firstNode = React.useMemo(function () { return focusableNodes[0]; }, [focusableNodes]);\n    var lastNode = React.useMemo(function () { return focusableNodes[focusableNodes.length - 1]; }, [focusableNodes]);\n    React.useEffect(function () {\n        if (focusableNodes.length === 0)\n            ref.current.setAttribute('tabindex', '0');\n        else\n            ref.current.removeAttribute('tabindex');\n    }, [focusableNodes, ref]);\n    React.useEffect(function () {\n        var observer;\n        if (canUseDOM() && node instanceof Node) {\n            observer = new MutationObserver(function (mutationList) {\n                mutationList.forEach(function (mutation) {\n                    if (mutation.type === 'childList') {\n                        var nextEls_1 = getFocusableChildNodes(node);\n                        setFocusableEls(nextEls_1);\n                    }\n                });\n            });\n            observer.observe(node, { childList: true, subtree: true });\n        }\n        var nextEls = getFocusableChildNodes(node);\n        setFocusableEls(nextEls);\n        return function () {\n            observer === null || observer === void 0 ? void 0 : observer.disconnect();\n        };\n    }, [node]);\n    React.useEffect(function () {\n        if (!autofocus)\n            return;\n        var toFocus = firstNode || ref.current;\n        toFocus.focus();\n    }, [firstNode, autofocus, ref]);\n    var handleKeyDown = React.useCallback(function (evt) {\n        if (!isTab(evt))\n            return;\n        var curActive = document.activeElement;\n        var reverse = withShift(evt);\n        if (curActive === firstNode && reverse) {\n            lastNode.focus();\n            evt.preventDefault();\n            evt.stopPropagation();\n        }\n        else if (curActive === lastNode && !reverse) {\n            firstNode.focus();\n            evt.preventDefault();\n            evt.stopPropagation();\n        }\n    }, [firstNode, lastNode]);\n    React.useEffect(function bind() {\n        if (!trapped)\n            return;\n        window.addEventListener('keydown', handleKeyDown);\n        return function unbind() {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown, autofocus, returnFocus, trapped]);\n    React.useEffect(function () {\n        if (!returnFocus)\n            return;\n        return function returnFocusWhenUnmounted() {\n            if (prevActiveElRef.current)\n                prevActiveElRef.current.focus();\n        };\n    }, [returnFocus]);\n}\nfunction hasNegativeTabIndex(el) {\n    return el.getAttribute('tabindex') && Number(el.getAttribute('tabindex')) < 0;\n}\nfunction withShift(evt) {\n    return evt.shiftKey;\n}\nfunction isTab(evt) {\n    return evt.key === 'Tab';\n}\nfunction getFocusableChildNodes(el) {\n    if (!el)\n        return [];\n    var selectAll = FOCUSABLE_SELECTORS.join(',');\n    var nodelist = el.querySelectorAll(selectAll);\n    return Array.from(nodelist || []).filter(function (node) { return !hasNegativeTabIndex(node); });\n}\n//# sourceMappingURL=use-focus-manager.js.map"]},"metadata":{},"sourceType":"module"}