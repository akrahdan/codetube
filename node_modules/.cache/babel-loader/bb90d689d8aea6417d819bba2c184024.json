{"ast":null,"code":"export function calculateAspectRatioWidth(height){return Math.ceil(16/9*height);}export function calculateAspectRatioHeight(width){return Math.ceil(width/16*9);}export function calculateAspectRatio(_ref){var width=_ref.width,height=_ref.height;var size={height:height,width:width};if(height>=width){size.height=calculateAspectRatioHeight(width);size.width=width;}else{size.height=height;size.width=calculateAspectRatioWidth(height);// Calculated width will overflow the container, calculate again\nif(size.width>width){size.width=width;size.height=calculateAspectRatioHeight(size.width);}}return size;}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/utilities/aspect-ratio.js"],"names":["calculateAspectRatioWidth","height","Math","ceil","calculateAspectRatioHeight","width","calculateAspectRatio","size"],"mappings":"AAAA,MAAO,SAASA,CAAAA,yBAAT,CAAmCC,MAAnC,CAA2C,CAC9C,MAAOC,CAAAA,IAAI,CAACC,IAAL,CAAU,GAAK,CAAL,CAASF,MAAnB,CAAP,CACD,CAED,MAAO,SAASG,CAAAA,0BAAT,CAAoCC,KAApC,CAA2C,CAChD,MAAOH,CAAAA,IAAI,CAACC,IAAL,CAAUE,KAAK,CAAG,EAAR,CAAa,CAAvB,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,oBAAT,MAAiD,IAAjBD,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVJ,MAAU,MAAVA,MAAU,CACtD,GAAIM,CAAAA,IAAI,CAAG,CAAEN,MAAM,CAANA,MAAF,CAAUI,KAAK,CAALA,KAAV,CAAX,CAEA,GAAIJ,MAAM,EAAII,KAAd,CAAqB,CACnBE,IAAI,CAACN,MAAL,CAAcG,0BAA0B,CAACC,KAAD,CAAxC,CACAE,IAAI,CAACF,KAAL,CAAaA,KAAb,CACD,CAHD,IAGO,CACLE,IAAI,CAACN,MAAL,CAAcA,MAAd,CACAM,IAAI,CAACF,KAAL,CAAaL,yBAAyB,CAACC,MAAD,CAAtC,CAEA;AACA,GAAIM,IAAI,CAACF,KAAL,CAAaA,KAAjB,CAAwB,CACtBE,IAAI,CAACF,KAAL,CAAaA,KAAb,CACAE,IAAI,CAACN,MAAL,CAAcG,0BAA0B,CAACG,IAAI,CAACF,KAAN,CAAxC,CACD,CACF,CAED,MAAOE,CAAAA,IAAP,CACD","sourcesContent":["export function calculateAspectRatioWidth(height) {\n    return Math.ceil(16 / 9 * height)\n  }\n  \n  export function calculateAspectRatioHeight(width) {\n    return Math.ceil(width / 16 * 9)\n  }\n  \n  export function calculateAspectRatio({ width, height }) {\n    let size = { height, width }\n  \n    if (height >= width) {\n      size.height = calculateAspectRatioHeight(width)\n      size.width = width\n    } else {\n      size.height = height\n      size.width = calculateAspectRatioWidth(height)\n  \n      // Calculated width will overflow the container, calculate again\n      if (size.width > width) {\n        size.width = width\n        size.height = calculateAspectRatioHeight(size.width)\n      }\n    }\n  \n    return size\n  }\n  "]},"metadata":{},"sourceType":"module"}