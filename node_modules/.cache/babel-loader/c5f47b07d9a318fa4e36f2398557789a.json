{"ast":null,"code":"import React,{useCallback}from'react';import{BodyPortal}from'../BodyPortal';import{FlexBox}from'../Box';import{FocusTrap}from'../FocusTrap';import{jsx as _jsx}from\"react/jsx-runtime\";export var Overlay=function Overlay(_ref){var className=_ref.className,children=_ref.children,_ref$inline=_ref.inline,inline=_ref$inline===void 0?false:_ref$inline,_ref$clickOutsideClos=_ref.clickOutsideCloses,clickOutsideCloses=_ref$clickOutsideClos===void 0?true:_ref$clickOutsideClos,_ref$escapeCloses=_ref.escapeCloses,escapeCloses=_ref$escapeCloses===void 0?true:_ref$escapeCloses,onRequestClose=_ref.onRequestClose,isOpen=_ref.isOpen;var handleOutsideClick=useCallback(function(){clickOutsideCloses&&onRequestClose();},[clickOutsideCloses,onRequestClose]);var handleEscapeKey=useCallback(function(){escapeCloses&&onRequestClose();},[escapeCloses,onRequestClose]);if(!isOpen)return null;var content=/*#__PURE__*/_jsx(FlexBox,{\"data-testid\":\"overlay-content-container\",position:inline?'absolute':'fixed',justifyContent:\"center\",alignItems:\"center\",inset:0,className:className,children:/*#__PURE__*/_jsx(FocusTrap,{active:!inline,onClickOutside:handleOutsideClick,onEscapeKey:handleEscapeKey,children:children})});if(inline)return content;return/*#__PURE__*/_jsx(BodyPortal,{children:content});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Overlay/index.tsx"],"names":["React","useCallback","BodyPortal","FlexBox","FocusTrap","Overlay","className","children","inline","clickOutsideCloses","escapeCloses","onRequestClose","isOpen","handleOutsideClick","handleEscapeKey","content"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CAEA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,OAASC,SAAT,KAA0B,cAA1B,C,2CA0BA,MAAO,IAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAQzC,IAPJC,CAAAA,SAOI,MAPJA,SAOI,CANJC,QAMI,MANJA,QAMI,kBALJC,MAKI,CALJA,MAKI,sBALK,KAKL,wCAJJC,kBAII,CAJJA,kBAII,gCAJiB,IAIjB,8CAHJC,YAGI,CAHJA,YAGI,4BAHW,IAGX,mBAFJC,cAEI,MAFJA,cAEI,CADJC,MACI,MADJA,MACI,CACJ,GAAMC,CAAAA,kBAAkB,CAAGZ,WAAW,CAAC,UAAM,CAC3CQ,kBAAkB,EAAIE,cAAc,EAApC,CACD,CAFqC,CAEnC,CAACF,kBAAD,CAAqBE,cAArB,CAFmC,CAAtC,CAIA,GAAMG,CAAAA,eAAe,CAAGb,WAAW,CAAC,UAAM,CACxCS,YAAY,EAAIC,cAAc,EAA9B,CACD,CAFkC,CAEhC,CAACD,YAAD,CAAeC,cAAf,CAFgC,CAAnC,CAIA,GAAI,CAACC,MAAL,CAAa,MAAO,KAAP,CAEb,GAAMG,CAAAA,OAAO,cACX,KAAC,OAAD,EACE,cAAY,2BADd,CAEE,QAAQ,CAAEP,MAAM,CAAG,UAAH,CAAgB,OAFlC,CAGE,cAAc,CAAC,QAHjB,CAIE,UAAU,CAAC,QAJb,CAKE,KAAK,CAAE,CALT,CAME,SAAS,CAAEF,SANb,uBAQE,KAAC,SAAD,EACE,MAAM,CAAE,CAACE,MADX,CAEE,cAAc,CAAEK,kBAFlB,CAGE,WAAW,CAAEC,eAHf,UAKGP,QALH,EARF,EADF,CAmBA,GAAIC,MAAJ,CAAY,MAAOO,CAAAA,OAAP,CAEZ,mBAAO,KAAC,UAAD,WAAaA,OAAb,EAAP,CACD,CAzCM","sourcesContent":["import React, { useCallback } from 'react';\n\nimport { BodyPortal } from '../BodyPortal';\nimport { FlexBox } from '../Box';\nimport { FocusTrap } from '../FocusTrap';\n\nexport type OverlayProps = {\n  children: React.ReactElement<any>;\n  className?: string;\n  /**\n   * Whether clicking on the screen outside of the container should close the Overlay.\n   */\n  clickOutsideCloses?: boolean;\n  /**\n   * Whether clicking the escape key should close the Overlay.\n   */\n  escapeCloses?: boolean;\n  /**\n   * Called when the Overlay requests to be closed,\n   * this could be due to clicking outside of the overlay, or by clicking the escape key.\n   */\n  onRequestClose: () => void;\n  /**\n   * Whether the overlay is rendered.\n   */\n  isOpen?: boolean;\n  /** Whether the overlay renders inline to its container or creates a portal to the end of the body */\n  inline?: boolean;\n};\n\nexport const Overlay: React.FC<OverlayProps> = ({\n  className,\n  children,\n  inline = false,\n  clickOutsideCloses = true,\n  escapeCloses = true,\n  onRequestClose,\n  isOpen,\n}) => {\n  const handleOutsideClick = useCallback(() => {\n    clickOutsideCloses && onRequestClose();\n  }, [clickOutsideCloses, onRequestClose]);\n\n  const handleEscapeKey = useCallback(() => {\n    escapeCloses && onRequestClose();\n  }, [escapeCloses, onRequestClose]);\n\n  if (!isOpen) return null;\n\n  const content = (\n    <FlexBox\n      data-testid=\"overlay-content-container\"\n      position={inline ? 'absolute' : 'fixed'}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      inset={0}\n      className={className}\n    >\n      <FocusTrap\n        active={!inline}\n        onClickOutside={handleOutsideClick}\n        onEscapeKey={handleEscapeKey}\n      >\n        {children}\n      </FocusTrap>\n    </FlexBox>\n  );\n\n  if (inline) return content;\n\n  return <BodyPortal>{content}</BodyPortal>;\n};\n"]},"metadata":{},"sourceType":"module"}