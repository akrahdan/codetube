{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React from 'react';\nimport { defaultName, names } from '../vars/index';\nexport { defaultName, names };\nexport var ThemeContext = React.createContext(defaultName);\n\nvar Theme = function Theme(props) {\n  var _a = props.name,\n      name = _a === void 0 ? defaultName : _a;\n  return React.createElement(ThemeContext.Provider, {\n    value: name\n  }, props.children);\n};\n\nTheme.names = names;\nTheme.defaultName = defaultName;\nexport default Theme;\nexport function useTheme() {\n  var themeName = React.useContext(ThemeContext);\n  return themeName;\n}\n\nfunction getDisplayName(Component) {\n  if (typeof Component === 'string') return Component;\n  if (!Component) return;\n  return Component.displayName || Component.name || 'Component';\n}\n/**\n * @deprecated please use the useTheme hook to get theme information\n */\n\n\nexport function withTheme(BaseComponent) {\n  var name = getDisplayName(BaseComponent);\n  var Forwarded = React.forwardRef(function (props, ref) {\n    var themeName = useTheme();\n    return React.createElement(BaseComponent, __assign({\n      ref: ref,\n      themeName: themeName\n    }, props));\n  });\n  Forwarded.displayName = \"withTheme(\" + name + \")\";\n  return hoistNonReactStatics(Forwarded, BaseComponent);\n}","map":{"version":3,"sources":["../../../src/react/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,WAAT,EAAsB,KAAtB,QAAmC,eAAnC;AACA,SAAS,WAAT,EAAsB,KAAtB;AAGA,OAAO,IAAM,YAAY,GAAG,KAAK,CAAC,aAAN,CAAoC,WAApC,CAArB;;AAMP,IAAM,KAAK,GAAmB,SAAxB,KAAwB,CAAA,KAAA,EAAK;AACzB,MAAA,EAAA,GAAuB,KAAK,CAAV,IAAlB;AAAA,MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,WAAH,GAAc,EAAlB;AAER,SACE,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAtB,EAAqC,KAAK,CAAC,QAA3C,CADF;AAGD,CAND;;AAQA,KAAK,CAAC,KAAN,GAAc,KAAd;AACA,KAAK,CAAC,WAAN,GAAoB,WAApB;AAEA,eAAe,KAAf;AAEA,OAAM,SAAU,QAAV,GAAkB;AACtB,MAAM,SAAS,GAAG,KAAK,CAAC,UAAN,CAAiB,YAAjB,CAAlB;AACA,SAAO,SAAP;AACD;;AAED,SAAS,cAAT,CAA2B,SAA3B,EAA4D;AAC1D,MAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC,OAAO,SAAP;AACnC,MAAI,CAAC,SAAL,EAAgB;AAEhB,SAAO,SAAS,CAAC,WAAV,IAAyB,SAAS,CAAC,IAAnC,IAA2C,WAAlD;AACD;AAED;;AAEG;;;AACH,OAAM,SAAU,SAAV,CACJ,aADI,EACiC;AAErC,MAAM,IAAI,GAAG,cAAc,CAAC,aAAD,CAA3B;AAEA,MAAM,SAAS,GAAG,KAAK,CAAC,UAAN,CAAuB,UAAC,KAAD,EAAQ,GAAR,EAAW;AAClD,QAAM,SAAS,GAAG,QAAQ,EAA1B;AAEA,WAAO,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,QAAA,CAAA;AAAC,MAAA,GAAG,EAAE,GAAN;AAAW,MAAA,SAAS,EAAE;AAAtB,KAAA,EAAsC,KAAtC,CAAd,CAAP;AACD,GAJiB,CAAlB;AAMA,EAAA,SAAS,CAAC,WAAV,GAAwB,eAAa,IAAb,GAAiB,GAAzC;AAEA,SAAO,oBAAoB,CAAC,SAAD,EAAY,aAAZ,CAA3B;AACD","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React from 'react';\nimport { defaultName, names } from '../vars/index';\nexport { defaultName, names };\nexport var ThemeContext = React.createContext(defaultName);\nvar Theme = function (props) {\n    var _a = props.name, name = _a === void 0 ? defaultName : _a;\n    return (React.createElement(ThemeContext.Provider, { value: name }, props.children));\n};\nTheme.names = names;\nTheme.defaultName = defaultName;\nexport default Theme;\nexport function useTheme() {\n    var themeName = React.useContext(ThemeContext);\n    return themeName;\n}\nfunction getDisplayName(Component) {\n    if (typeof Component === 'string')\n        return Component;\n    if (!Component)\n        return;\n    return Component.displayName || Component.name || 'Component';\n}\n/**\n * @deprecated please use the useTheme hook to get theme information\n */\nexport function withTheme(BaseComponent) {\n    var name = getDisplayName(BaseComponent);\n    var Forwarded = React.forwardRef(function (props, ref) {\n        var themeName = useTheme();\n        return React.createElement(BaseComponent, __assign({ ref: ref, themeName: themeName }, props));\n    });\n    Forwarded.displayName = \"withTheme(\" + name + \")\";\n    return hoistNonReactStatics(Forwarded, BaseComponent);\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}