{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/FlexBox/Container.tsx\";\nimport cx from 'classnames';\nimport { isNumber, omit } from 'lodash';\nimport React from 'react';\nimport styles from './styles/index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst internalProps = ['flex', 'inline', 'grow', 'shrink', 'row', 'column', 'wrap', 'nowrap', 'center', 'reverse', 'fit', 'align', 'justify', 'alignSelf'];\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * See [FlexBox](https://gamut.codecademy.com/storybook/?path=/docs/layouts-box-flexbox--flex-box) for similiar functionality\n *\n * ```\n * import { FlexBox } from '@corecademy/gamut';\n *\n * <FlexBox alignItems=\"center\" justifyContent=\"center\" />\n * ```\n */\nexport const Container = props => {\n  const classes = cx(props.className, {\n    [styles.flex]: props.flex && !props.inline,\n    [styles.inline]: props.flex && props.inline,\n    [styles.fld]: isNumber(props.grow) || isNumber(props.shrink),\n    [styles[`flg-${props.grow}`]]: isNumber(props.grow),\n    [styles[`fls-${props.shrink}`]]: isNumber(props.shrink),\n    [styles.row]: props.row,\n    [styles.col]: props.column,\n    [styles.wrap]: props.wrap,\n    [styles.nowrap]: props.nowrap,\n    [styles.rev]: props.reverse,\n    [styles.fit]: props.fit,\n    [styles['align-center']]: props.center && !props.align,\n    [styles['justify-center']]: props.center && !props.justify,\n    [styles[`align-${props.align}`]]: !!props.align,\n    [styles[`justify-${props.justify}`]]: !!props.justify,\n    [styles[`aself-${props.alignSelf}`]]: !!props.alignSelf\n  });\n  const propsToTransfer = omit(props, internalProps);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...propsToTransfer,\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_c = Container;\nContainer.defaultProps = {\n  flex: true,\n  inline: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/FlexBox/Container.tsx"],"names":["cx","isNumber","omit","React","styles","internalProps","Container","props","classes","className","flex","inline","fld","grow","shrink","row","col","column","wrap","nowrap","rev","reverse","fit","center","align","justify","alignSelf","propsToTransfer","children","defaultProps"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,QAA/B;AACA,OAAOC,KAAP,MAAiD,OAAjD;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,aAAa,GAAG,CACpB,MADoB,EAEpB,QAFoB,EAGpB,MAHoB,EAIpB,QAJoB,EAKpB,KALoB,EAMpB,QANoB,EAOpB,MAPoB,EAQpB,QARoB,EASpB,QAToB,EAUpB,SAVoB,EAWpB,KAXoB,EAYpB,OAZoB,EAapB,SAboB,EAcpB,WAdoB,CAAtB;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,SAAmC,GAAIC,KAAD,IAAW;AAC5D,QAAMC,OAAO,GAAGR,EAAE,CAACO,KAAK,CAACE,SAAP,EAAkB;AAClC,KAACL,MAAM,CAACM,IAAR,GAAeH,KAAK,CAACG,IAAN,IAAc,CAACH,KAAK,CAACI,MADF;AAElC,KAACP,MAAM,CAACO,MAAR,GAAiBJ,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACI,MAFH;AAGlC,KAACP,MAAM,CAACQ,GAAR,GAAcX,QAAQ,CAACM,KAAK,CAACM,IAAP,CAAR,IAAwBZ,QAAQ,CAACM,KAAK,CAACO,MAAP,CAHZ;AAIlC,KAACV,MAAM,CAAE,OAAMG,KAAK,CAACM,IAAK,EAAnB,CAAP,GAA+BZ,QAAQ,CAACM,KAAK,CAACM,IAAP,CAJL;AAKlC,KAACT,MAAM,CAAE,OAAMG,KAAK,CAACO,MAAO,EAArB,CAAP,GAAiCb,QAAQ,CAACM,KAAK,CAACO,MAAP,CALP;AAMlC,KAACV,MAAM,CAACW,GAAR,GAAcR,KAAK,CAACQ,GANc;AAOlC,KAACX,MAAM,CAACY,GAAR,GAAcT,KAAK,CAACU,MAPc;AAQlC,KAACb,MAAM,CAACc,IAAR,GAAeX,KAAK,CAACW,IARa;AASlC,KAACd,MAAM,CAACe,MAAR,GAAiBZ,KAAK,CAACY,MATW;AAUlC,KAACf,MAAM,CAACgB,GAAR,GAAcb,KAAK,CAACc,OAVc;AAWlC,KAACjB,MAAM,CAACkB,GAAR,GAAcf,KAAK,CAACe,GAXc;AAYlC,KAAClB,MAAM,CAAC,cAAD,CAAP,GAA0BG,KAAK,CAACgB,MAAN,IAAgB,CAAChB,KAAK,CAACiB,KAZf;AAalC,KAACpB,MAAM,CAAC,gBAAD,CAAP,GAA4BG,KAAK,CAACgB,MAAN,IAAgB,CAAChB,KAAK,CAACkB,OAbjB;AAclC,KAACrB,MAAM,CAAE,SAAQG,KAAK,CAACiB,KAAM,EAAtB,CAAP,GAAkC,CAAC,CAACjB,KAAK,CAACiB,KAdR;AAelC,KAACpB,MAAM,CAAE,WAAUG,KAAK,CAACkB,OAAQ,EAA1B,CAAP,GAAsC,CAAC,CAAClB,KAAK,CAACkB,OAfZ;AAgBlC,KAACrB,MAAM,CAAE,SAAQG,KAAK,CAACmB,SAAU,EAA1B,CAAP,GAAsC,CAAC,CAACnB,KAAK,CAACmB;AAhBZ,GAAlB,CAAlB;AAmBA,QAAMC,eAAe,GAAGzB,IAAI,CAACK,KAAD,EAAQF,aAAR,CAA5B;AAEA,sBACE,oBAASsB,eAAT;AAA0B,IAAA,SAAS,EAAEnB,OAArC;AAAA,cACGD,KAAK,CAACqB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;KAAMtB,S;AA6BbA,SAAS,CAACuB,YAAV,GAAyB;AACvBnB,EAAAA,IAAI,EAAE,IADiB;AAEvBC,EAAAA,MAAM,EAAE;AAFe,CAAzB","sourcesContent":["import cx from 'classnames';\nimport { isNumber, omit } from 'lodash';\nimport React, { HTMLAttributes, ReactNode } from 'react';\n\nimport styles from './styles/index.module.scss';\n\nconst internalProps = [\n  'flex',\n  'inline',\n  'grow',\n  'shrink',\n  'row',\n  'column',\n  'wrap',\n  'nowrap',\n  'center',\n  'reverse',\n  'fit',\n  'align',\n  'justify',\n  'alignSelf',\n];\n\ntype ContainerPosition =\n  | 'start'\n  | 'end'\n  | 'center'\n  | 'baseline'\n  | 'stretch'\n  | 'spaceAround'\n  | 'spaceBetween';\n\nexport interface ContainerProps extends HTMLAttributes<HTMLDivElement> {\n  /** Flex alignment for container content */\n  align?: ContainerPosition;\n  /** Custom flex alignment for the container relative to its parent */\n  alignSelf?: ContainerPosition;\n  /**\n   * Justifies and aligns content to the center of the container\n   * (cannot be used with: `justify` or `align`)\n   * */\n  center?: boolean;\n  children?: ReactNode | ReactNode[];\n  className?: string;\n  /** Enables flex direction column */\n  column?: boolean;\n  /** Fits the container to the dimensions of its parent element */\n  fit?: boolean;\n  /** Enables flex behavior for the container */\n  flex?: boolean;\n  /** Custom flex grow specification relative to its parent */\n  grow?: number;\n  /** Enables inline-flex behavior for the container */\n  inline?: boolean;\n  /** Flex justification for container content */\n  justify?: ContainerPosition;\n  /** Disable flex wrapping for container content\n   * (cannot be used with: `wrap`)\n   * */\n  nowrap?: boolean;\n  /** Reverses flex direction from the default of either `row` or `column` containers.  */\n  reverse?: boolean;\n  /** Enables flex direction row */\n  row?: boolean;\n  /** Custom flex shrink specification for the container relative to its parent */\n  shrink?: number;\n  /** Enable flex wrapping for container content\n   *  (cannot be used with: `nowrap`)\n   * */\n  wrap?: boolean;\n}\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * See [FlexBox](https://gamut.codecademy.com/storybook/?path=/docs/layouts-box-flexbox--flex-box) for similiar functionality\n *\n * ```\n * import { FlexBox } from '@corecademy/gamut';\n *\n * <FlexBox alignItems=\"center\" justifyContent=\"center\" />\n * ```\n */\n\nexport const Container: React.FC<ContainerProps> = (props) => {\n  const classes = cx(props.className, {\n    [styles.flex]: props.flex && !props.inline,\n    [styles.inline]: props.flex && props.inline,\n    [styles.fld]: isNumber(props.grow) || isNumber(props.shrink),\n    [styles[`flg-${props.grow}`]]: isNumber(props.grow),\n    [styles[`fls-${props.shrink}`]]: isNumber(props.shrink),\n    [styles.row]: props.row,\n    [styles.col]: props.column,\n    [styles.wrap]: props.wrap,\n    [styles.nowrap]: props.nowrap,\n    [styles.rev]: props.reverse,\n    [styles.fit]: props.fit,\n    [styles['align-center']]: props.center && !props.align,\n    [styles['justify-center']]: props.center && !props.justify,\n    [styles[`align-${props.align}`]]: !!props.align,\n    [styles[`justify-${props.justify}`]]: !!props.justify,\n    [styles[`aself-${props.alignSelf}`]]: !!props.alignSelf,\n  });\n\n  const propsToTransfer = omit(props, internalProps);\n\n  return (\n    <div {...propsToTransfer} className={classes}>\n      {props.children}\n    </div>\n  );\n};\n\nContainer.defaultProps = {\n  flex: true,\n  inline: false,\n};\n"]},"metadata":{},"sourceType":"module"}