{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nimport { compilePath } from 'rudy-match-path';\nimport { stripBasename } from 'rudy-history/PathUtils';\nimport { NOT_FOUND, getOptions } from '../index';\nimport objectValues from './objectValues';\nexport default (function (pathname, routesMap, serializer) {\n  var basename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getOptions().basename;\n  var strict = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : getOptions().strict;\n  var parts = pathname.split('?');\n  var search = parts[1];\n  var query = search && serializer && serializer.parse(search);\n  var routes = objectValues(routesMap);\n  var routeTypes = Object.keys(routesMap);\n  pathname = basename ? stripBasename(parts[0], basename) : parts[0];\n  var i = 0;\n  var match = void 0;\n  var keys = void 0;\n\n  while (!match && i < routes.length) {\n    var regPath = typeof routes[i] === 'string' ? routes[i] : routes[i].path; // route may be an object containing a route or a route string itself\n\n    if (!regPath) {\n      i++;\n      continue;\n    }\n\n    var _compilePath = compilePath(regPath, {\n      strict: strict\n    }),\n        re = _compilePath.re,\n        k = _compilePath.keys;\n\n    match = re.exec(pathname);\n    keys = k;\n    i++;\n  }\n\n  if (match) {\n    i--;\n    var capitalizedWords = _typeof(routes[i]) === 'object' && routes[i].capitalizedWords;\n    var coerceNumbers = _typeof(routes[i]) === 'object' && routes[i].coerceNumbers;\n    var fromPath = routes[i] && typeof routes[i].fromPath === 'function' && routes[i].fromPath;\n    var userMeta = _typeof(routes[i]) === 'object' && routes[i].meta;\n    var type = routeTypes[i];\n    var payload = (keys || []).reduce(function (payload, key, index) {\n      var val = match && match[index + 1]; // item at index 0 is the overall match, whereas those after correspond to the key's index\n\n      if (typeof val === 'string') {\n        if (fromPath) {\n          val = fromPath && fromPath(val, key.name);\n        } else if (coerceNumbers && isNumber(val)) {\n          val = parseFloat(val);\n        } else if (capitalizedWords) {\n          val = val.replace(/-/g, ' ').replace(/\\b\\w/g, function (l) {\n            return l.toUpperCase();\n          }); // 'my-category' -> 'My Category'\n        }\n      }\n\n      payload[key.name] = val;\n      return payload;\n    }, {});\n\n    var _meta = _extends({}, userMeta ? {\n      meta: userMeta\n    } : {}, query ? {\n      query: query\n    } : {});\n\n    return {\n      type: type,\n      payload: payload,\n      meta: _meta\n    };\n  } // This will basically will only end up being called if the developer is manually calling history.push().\n  // Or, if visitors visit an invalid URL, the developer can use the NOT_FOUND type to show a not-found page to\n\n\n  var meta = _extends({\n    notFoundPath: pathname\n  }, query ? {\n    query: query\n  } : {});\n\n  return {\n    type: NOT_FOUND,\n    payload: {},\n    meta: meta\n  };\n});\n\nvar isNumber = function isNumber(val) {\n  return /^\\d+$/.test(val);\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/redux-first-router/dist/es/pure-utils/pathToAction.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","compilePath","stripBasename","NOT_FOUND","getOptions","objectValues","pathname","routesMap","serializer","basename","undefined","strict","parts","split","search","query","parse","routes","routeTypes","keys","match","regPath","path","_compilePath","re","k","exec","capitalizedWords","coerceNumbers","fromPath","userMeta","meta","type","payload","reduce","index","val","name","isNumber","parseFloat","replace","l","toUpperCase","_meta","notFoundPath","test"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport { compilePath } from 'rudy-match-path';\nimport { stripBasename } from 'rudy-history/PathUtils';\nimport { NOT_FOUND, getOptions } from '../index';\nimport objectValues from './objectValues';\n\nexport default (function (pathname, routesMap, serializer) {\n  var basename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getOptions().basename;\n  var strict = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : getOptions().strict;\n\n  var parts = pathname.split('?');\n  var search = parts[1];\n  var query = search && serializer && serializer.parse(search);\n  var routes = objectValues(routesMap);\n  var routeTypes = Object.keys(routesMap);\n\n  pathname = basename ? stripBasename(parts[0], basename) : parts[0];\n\n  var i = 0;\n  var match = void 0;\n  var keys = void 0;\n\n  while (!match && i < routes.length) {\n    var regPath = typeof routes[i] === 'string' ? routes[i] : routes[i].path; // route may be an object containing a route or a route string itself\n\n    if (!regPath) {\n      i++;\n      continue;\n    }\n\n    var _compilePath = compilePath(regPath, { strict: strict }),\n        re = _compilePath.re,\n        k = _compilePath.keys;\n\n    match = re.exec(pathname);\n    keys = k;\n    i++;\n  }\n\n  if (match) {\n    i--;\n\n    var capitalizedWords = _typeof(routes[i]) === 'object' && routes[i].capitalizedWords;\n\n    var coerceNumbers = _typeof(routes[i]) === 'object' && routes[i].coerceNumbers;\n\n    var fromPath = routes[i] && typeof routes[i].fromPath === 'function' && routes[i].fromPath;\n\n    var userMeta = _typeof(routes[i]) === 'object' && routes[i].meta;\n\n    var type = routeTypes[i];\n\n    var payload = (keys || []).reduce(function (payload, key, index) {\n      var val = match && match[index + 1]; // item at index 0 is the overall match, whereas those after correspond to the key's index\n\n      if (typeof val === 'string') {\n        if (fromPath) {\n          val = fromPath && fromPath(val, key.name);\n        } else if (coerceNumbers && isNumber(val)) {\n          val = parseFloat(val);\n        } else if (capitalizedWords) {\n          val = val.replace(/-/g, ' ').replace(/\\b\\w/g, function (l) {\n            return l.toUpperCase();\n          }); // 'my-category' -> 'My Category'\n        }\n      }\n\n      payload[key.name] = val;\n      return payload;\n    }, {});\n\n    var _meta = _extends({}, userMeta ? { meta: userMeta } : {}, query ? { query: query } : {});\n    return { type: type, payload: payload, meta: _meta };\n  }\n\n  // This will basically will only end up being called if the developer is manually calling history.push().\n  // Or, if visitors visit an invalid URL, the developer can use the NOT_FOUND type to show a not-found page to\n  var meta = _extends({ notFoundPath: pathname }, query ? { query: query } : {});\n  return { type: NOT_FOUND, payload: {}, meta: meta };\n});\n\nvar isNumber = function isNumber(val) {\n  return (/^\\d+$/.test(val)\n  );\n};"]},"metadata":{},"sourceType":"module"}