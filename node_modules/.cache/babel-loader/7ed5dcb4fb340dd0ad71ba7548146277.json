{"ast":null,"code":"import React from'react';import{Input}from'../../../Form';import{jsx as _jsx}from\"react/jsx-runtime\";export var GridFormFileInput=function GridFormFileInput(_ref){var className=_ref.className,error=_ref.error,field=_ref.field,register=_ref.register,showRequired=_ref.showRequired;return/*#__PURE__*/_jsx(Input,{className:className,disabled:field.disabled,error:error,htmlFor:field.name,name:field.name,onChange:function onChange(event){var _field$onUpdate;return(_field$onUpdate=field.onUpdate)===null||_field$onUpdate===void 0?void 0:_field$onUpdate.call(field,event.target.files);},ref:register(field.validation),type:\"file\",id:field.id,\"aria-invalid\":error,\"aria-required\":showRequired});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormFileInput/index.tsx"],"names":["React","Input","GridFormFileInput","className","error","field","register","showRequired","disabled","name","event","onUpdate","target","files","validation","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,KAAT,KAAsB,eAAtB,C,2CAWA,MAAO,IAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAM7D,IALJC,CAAAA,SAKI,MALJA,SAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,YACI,MADJA,YACI,CACJ,mBACE,KAAC,KAAD,EACE,SAAS,CAAEJ,SADb,CAEE,QAAQ,CAAEE,KAAK,CAACG,QAFlB,CAGE,KAAK,CAAEJ,KAHT,CAIE,OAAO,CAAEC,KAAK,CAACI,IAJjB,CAKE,IAAI,CAAEJ,KAAK,CAACI,IALd,CAME,QAAQ,CAAE,kBAACC,KAAD,6CAAWL,KAAK,CAACM,QAAjB,0CAAW,qBAAAN,KAAK,CAAYK,KAAK,CAACE,MAAN,CAAaC,KAAzB,CAAhB,EANZ,CAOE,GAAG,CAAEP,QAAQ,CAACD,KAAK,CAACS,UAAP,CAPf,CAQE,IAAI,CAAC,MARP,CASE,EAAE,CAAET,KAAK,CAACU,EATZ,CAUE,eAAcX,KAVhB,CAWE,gBAAeG,YAXjB,EADF,CAeD,CAtBM","sourcesContent":["import React from 'react';\nimport { UseFormMethods } from 'react-hook-form';\n\nimport { Input } from '../../../Form';\nimport { GridFormFileField } from '../../types';\n\nexport type GridFormFileInputProps = {\n  className?: string;\n  error?: boolean;\n  showRequired?: boolean;\n  field: Omit<GridFormFileField, 'label'>;\n  register: UseFormMethods['register'];\n};\n\nexport const GridFormFileInput: React.FC<GridFormFileInputProps> = ({\n  className,\n  error,\n  field,\n  register,\n  showRequired,\n}) => {\n  return (\n    <Input\n      className={className}\n      disabled={field.disabled}\n      error={error}\n      htmlFor={field.name}\n      name={field.name}\n      onChange={(event) => field.onUpdate?.(event.target.files!)}\n      ref={register(field.validation)}\n      type=\"file\"\n      id={field.id}\n      aria-invalid={error}\n      aria-required={showRequired}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}