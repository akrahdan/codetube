{"ast":null,"code":"import _classCallCheck from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{isNumber}from'lodash';import React,{Component}from'react';import{TabList}from'../TabList';import{TabPanel}from'../TabPanel';import{jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */export var Tabs=/*#__PURE__*/function(_Component){_inherits(Tabs,_Component);var _super=_createSuper(Tabs);function Tabs(){var _this;_classCallCheck(this,Tabs);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeTabIndex:_this.props.defaultActiveTabIndex||0};_this.idPrefix=Math.random().toString().replace('.','');_this.createBaseId=function(index){return\"\".concat(_this.idPrefix,\"-\").concat(index);};_this.isControlled=function(){return isNumber(_this.props.activeTabIndex);};_this.updateTabIndexState=function(index){_this.setState({activeTabIndex:index});};return _this;}_createClass(Tabs,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var stateIndexChanged=this.state.activeTabIndex!==prevState.activeTabIndex;if(stateIndexChanged&&this.props.onChange){this.props.onChange(this.state.activeTabIndex);}}},{key:\"render\",value:function render(){var _this2=this;var activeTabIndex=this.isControlled()?this.props.activeTabIndex:this.state.activeTabIndex;var onChange=this.isControlled()?this.props.onChange:this.updateTabIndexState;if(!onChange){throw new Error('Tabs component is controlled but no tab change callback (onChange) was provided');}var childrenArray=React.Children.toArray(this.props.children);var clonedTabPanels=childrenArray.filter(function(c){return c.type===TabPanel;});if(activeTabIndex>=clonedTabPanels.length){activeTabIndex=clonedTabPanels.length-1;}var tabListChild=childrenArray.find(function(c){return c.type===TabList;});var clonedTabList=/*#__PURE__*/React.cloneElement(tabListChild,{activeTabIndex:activeTabIndex,onChange:onChange,createBaseId:this.createBaseId});clonedTabPanels=clonedTabPanels.map(function(panel,index){return/*#__PURE__*/React.cloneElement(panel,{active:index===activeTabIndex,renderAllPanels:_this2.props.renderAllPanels,id:\"\".concat(_this2.createBaseId(index),\"-panel\"),key:_this2.createBaseId(index)});});return/*#__PURE__*/_jsxs(\"div\",{className:this.props.className,children:[clonedTabList,clonedTabPanels]});}}]);return Tabs;}(Component);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Tabs/Tabs/index.tsx"],"names":["isNumber","React","Component","TabList","TabPanel","Tabs","state","activeTabIndex","props","defaultActiveTabIndex","idPrefix","Math","random","toString","replace","createBaseId","index","isControlled","updateTabIndexState","setState","prevProps","prevState","stateIndexChanged","onChange","Error","childrenArray","Children","toArray","children","clonedTabPanels","filter","c","type","length","tabListChild","find","clonedTabList","cloneElement","map","panel","active","renderAllPanels","id","key","className"],"mappings":"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","sourcesContent":["import { isNumber } from 'lodash';\nimport React, { Component, ReactElement } from 'react';\n\nimport { TabList } from '../TabList';\nimport { TabPanel } from '../TabPanel';\n\nexport interface TabsProps {\n  /**\n   * Changes this to a controlled component by only forcing this index to be active.\n   */\n  activeTabIndex?: number;\n\n  children: ReactElement<any, any>[];\n\n  className?: string;\n\n  /**\n   * Index to start the active tab on, if not provided by `activeTabIndex`.\n   */\n  defaultActiveTabIndex?: number;\n\n  /**\n   * Callback for when a tab index is requested to be active.\n   *\n   * @param activeTabIndex  New active tab index.\n   */\n  onChange?: (activeTabIndex: number) => void;\n\n  renderAllPanels?: boolean;\n}\n\nexport interface TabsState {\n  activeTabIndex: number;\n}\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\nexport class Tabs extends Component<TabsProps> {\n  state: TabsState = {\n    activeTabIndex: this.props.defaultActiveTabIndex || 0,\n  };\n\n  componentDidUpdate(prevProps: TabsProps, prevState: TabsState) {\n    const stateIndexChanged =\n      this.state.activeTabIndex !== prevState.activeTabIndex;\n    if (stateIndexChanged && this.props.onChange) {\n      this.props.onChange(this.state.activeTabIndex);\n    }\n  }\n\n  idPrefix = Math.random().toString().replace('.', '');\n\n  createBaseId = (index: number) => `${this.idPrefix}-${index}`;\n\n  isControlled = () => isNumber(this.props.activeTabIndex);\n\n  updateTabIndexState = (index: number) => {\n    this.setState({ activeTabIndex: index });\n  };\n\n  render() {\n    let activeTabIndex = this.isControlled()\n      ? this.props.activeTabIndex\n      : this.state.activeTabIndex;\n\n    const onChange = this.isControlled()\n      ? this.props.onChange\n      : this.updateTabIndexState;\n\n    if (!onChange) {\n      throw new Error(\n        'Tabs component is controlled but no tab change callback (onChange) was provided'\n      );\n    }\n\n    const childrenArray = React.Children.toArray(\n      this.props.children\n    ) as ReactElement[];\n    let clonedTabPanels = childrenArray.filter((c) => c.type === TabPanel);\n\n    if (activeTabIndex! >= clonedTabPanels.length) {\n      activeTabIndex = clonedTabPanels.length - 1;\n    }\n\n    const tabListChild = childrenArray.find((c) => c.type === TabList)!;\n    const clonedTabList = React.cloneElement(tabListChild, {\n      activeTabIndex,\n      onChange,\n      createBaseId: this.createBaseId,\n    });\n\n    clonedTabPanels = clonedTabPanels.map((panel, index) =>\n      React.cloneElement(panel, {\n        active: index === activeTabIndex,\n        renderAllPanels: this.props.renderAllPanels,\n        id: `${this.createBaseId(index)}-panel`,\n        key: this.createBaseId(index),\n      })\n    );\n\n    return (\n      <div className={this.props.className}>\n        {clonedTabList}\n        {clonedTabPanels}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}