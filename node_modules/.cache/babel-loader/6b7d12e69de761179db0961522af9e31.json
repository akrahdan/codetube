{"ast":null,"code":"import { pxRem, theme } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nexport const colorStates = {\n  base: {\n    color: theme.colors.navy,\n    placeholder: theme.colors['gray-900'],\n    backgroundColor: theme.colors.white,\n    borderColor: theme.colors['gray-600']\n  },\n  hover: {\n    borderColor: theme.colors.hyper\n  },\n  disabled: {\n    color: theme.colors['gray-900'],\n    backgroundColor: theme.colors['gray-100'],\n    borderColor: theme.colors['gray-900']\n  },\n  error: {\n    color: theme.colors.red,\n    borderColor: theme.colors.red\n  },\n  valid: {\n    color: theme.colors.green\n  },\n  activated: {\n    borderColor: theme.colors.navy\n  },\n  dropdown: {\n    focused: {\n      backgroundColor: theme.colors['gray-100']\n    },\n    selected: {\n      backgroundColor: theme.colors['gray-300']\n    }\n  }\n}; // these are split for now because ReactRecurly demands separate styles for focus.\n\nexport const formFieldFocusStyles = css`\n  border-color: ${colorStates.hover.borderColor};\n  box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n`;\nconst formFieldDisabledStyles = css`\n  background-color: ${colorStates.disabled.backgroundColor};\n  border-color: ${colorStates.disabled.borderColor};\n  color: ${colorStates.disabled.color};\n  font-style: italic;\n  cursor: not-allowed;\n  &:hover {\n    border-color: ${colorStates.disabled.borderColor};\n  }\n`;\nexport const conditionalBorderStyles = ({\n  error,\n  activated,\n  isFocused,\n  isDisabled\n}) => {\n  if (isDisabled) {\n    return formFieldDisabledStyles;\n  }\n\n  if (error && isFocused) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (error) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (isFocused) {\n    return css`\n      border-color: ${colorStates.hover.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n    `;\n  }\n\n  if (activated) {\n    return css`\n      border-color: ${colorStates.activated.borderColor};\n    `;\n  }\n};\n\nconst transitionConcatenator = (arrayOfProperties, transition) => {\n  const cssString = `${arrayOfProperties.join(` ${transition},`)} ${transition}`;\n  return css`\n    transition: ${cssString};\n  `;\n};\n\nexport const formBaseStyles = css`\n  color: ${colorStates.base.color};\n  font-weight: normal;\n  font-size: ${theme.fontSize[16]};\n`;\nexport const formBaseComponentStyles = css`\n  ${formBaseStyles}\n  width: 100%;\n  outline: none;\n  background-color: ${colorStates.base.backgroundColor};\n  min-width: auto;\n`;\nexport const formDropdownStyles = error => css`\n  ${formBaseComponentStyles}\n  position: absolute;\n  margin-top: -2px;\n  border: 1px solid ${colorStates.activated.borderColor};\n  border-top: 1px solid\n    ${error ? colorStates.error.borderColor : colorStates.hover.borderColor};\n  z-index: 2;\n`;\nexport const formBaseFieldStyles = css`\n  ${formBaseComponentStyles}\n  ${transitionConcatenator(['border-color', 'box-shadow'], '0.2s ease-in-out')}\n  border: 1px solid ${colorStates.base.borderColor};\n  border-radius: 2px;\n\n  &:hover {\n    border-color: ${colorStates.hover.borderColor};\n  }\n\n  &::placeholder {\n    color: ${colorStates.base.placeholder};\n    font-style: italic;\n  }\n\n  &:disabled,\n  [disabled] {\n    ${formFieldDisabledStyles};\n    opacity: 1;\n  }\n`; // ReactRecurly needs to apply padding in a very particular way\n\nexport const formFieldPaddingStyles = css`\n  padding: ${pxRem(11)} ${theme.spacing[8]};\n`;\nexport const formFieldStyles = css`\n  ${formBaseFieldStyles}\n  &:focus {\n    ${formFieldFocusStyles}\n  }\n  ${formFieldPaddingStyles}\n`;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Form/styles/shared.tsx"],"names":["pxRem","theme","css","colorStates","base","color","colors","navy","placeholder","backgroundColor","white","borderColor","hover","hyper","disabled","error","red","valid","green","activated","dropdown","focused","selected","formFieldFocusStyles","formFieldDisabledStyles","conditionalBorderStyles","isFocused","isDisabled","transitionConcatenator","arrayOfProperties","transition","cssString","join","formBaseStyles","fontSize","formBaseComponentStyles","formDropdownStyles","formBaseFieldStyles","formFieldPaddingStyles","spacing","formFieldStyles"],"mappings":"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","sourcesContent":["import { pxRem, theme } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport { StandardPropertiesHyphen } from 'csstype';\n\nimport { conditionalStyleProps } from './shared-system-props';\n\nexport const colorStates = {\n  base: {\n    color: theme.colors.navy,\n    placeholder: theme.colors['gray-900'],\n    backgroundColor: theme.colors.white,\n    borderColor: theme.colors['gray-600'],\n  },\n  hover: { borderColor: theme.colors.hyper },\n  disabled: {\n    color: theme.colors['gray-900'],\n    backgroundColor: theme.colors['gray-100'],\n    borderColor: theme.colors['gray-900'],\n  },\n  error: { color: theme.colors.red, borderColor: theme.colors.red },\n  valid: { color: theme.colors.green },\n  activated: { borderColor: theme.colors.navy },\n  dropdown: {\n    focused: { backgroundColor: theme.colors['gray-100'] },\n    selected: { backgroundColor: theme.colors['gray-300'] },\n  },\n};\n\n// these are split for now because ReactRecurly demands separate styles for focus.\nexport const formFieldFocusStyles = css`\n  border-color: ${colorStates.hover.borderColor};\n  box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n`;\n\nconst formFieldDisabledStyles = css`\n  background-color: ${colorStates.disabled.backgroundColor};\n  border-color: ${colorStates.disabled.borderColor};\n  color: ${colorStates.disabled.color};\n  font-style: italic;\n  cursor: not-allowed;\n  &:hover {\n    border-color: ${colorStates.disabled.borderColor};\n  }\n`;\n\nexport const conditionalBorderStyles = ({\n  error,\n  activated,\n  isFocused,\n  isDisabled,\n}: conditionalStyleProps) => {\n  if (isDisabled) {\n    return formFieldDisabledStyles;\n  }\n\n  if (error && isFocused) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (error) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (isFocused) {\n    return css`\n      border-color: ${colorStates.hover.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n    `;\n  }\n\n  if (activated) {\n    return css`\n      border-color: ${colorStates.activated.borderColor};\n    `;\n  }\n};\n\nconst transitionConcatenator = (\n  arrayOfProperties: Array<keyof StandardPropertiesHyphen>,\n  transition: string\n) => {\n  const cssString = `${arrayOfProperties.join(\n    ` ${transition},`\n  )} ${transition}`;\n\n  return css`\n    transition: ${cssString};\n  `;\n};\n\nexport const formBaseStyles = css`\n  color: ${colorStates.base.color};\n  font-weight: normal;\n  font-size: ${theme.fontSize[16]};\n`;\n\nexport const formBaseComponentStyles = css`\n  ${formBaseStyles}\n  width: 100%;\n  outline: none;\n  background-color: ${colorStates.base.backgroundColor};\n  min-width: auto;\n`;\n\nexport const formDropdownStyles = (error: boolean) => css`\n  ${formBaseComponentStyles}\n  position: absolute;\n  margin-top: -2px;\n  border: 1px solid ${colorStates.activated.borderColor};\n  border-top: 1px solid\n    ${error ? colorStates.error.borderColor : colorStates.hover.borderColor};\n  z-index: 2;\n`;\n\nexport const formBaseFieldStyles = css`\n  ${formBaseComponentStyles}\n  ${transitionConcatenator(['border-color', 'box-shadow'], '0.2s ease-in-out')}\n  border: 1px solid ${colorStates.base.borderColor};\n  border-radius: 2px;\n\n  &:hover {\n    border-color: ${colorStates.hover.borderColor};\n  }\n\n  &::placeholder {\n    color: ${colorStates.base.placeholder};\n    font-style: italic;\n  }\n\n  &:disabled,\n  [disabled] {\n    ${formFieldDisabledStyles};\n    opacity: 1;\n  }\n`;\n\n// ReactRecurly needs to apply padding in a very particular way\nexport const formFieldPaddingStyles = css`\n  padding: ${pxRem(11)} ${theme.spacing[8]};\n`;\n\nexport const formFieldStyles = css`\n  ${formBaseFieldStyles}\n  &:focus {\n    ${formFieldFocusStyles}\n  }\n  ${formFieldPaddingStyles}\n`;\n"]},"metadata":{},"sourceType":"module"}