{"ast":null,"code":"import{pxRem,styledOptions,system,theme}from'@codecademy/gamut-styles';import{variance}from'@codecademy/variance';import styled from'@emotion/styled';import{pick}from'lodash';var columns=12;var gutters=pick(theme.spacing,[8,16,24,32,48]);/** This prevents grid blowout by ensuring that column gaps never exceed the size of their container */var gutterGuard=function gutterGuard(gap,property){if(property==='columnGap'){return{gridColumnGap:gap,columnGap:\"min(calc(100% / \".concat(columns-1,\"), \").concat(gap,\")\")};}return gap;};var grid=variance.create({gap:{property:'gap',properties:['rowGap','columnGap'],scale:gutters,transform:gutterGuard},rowGap:{property:'rowGap',scale:gutters},columnGap:{property:'columnGap',scale:gutters,transform:gutterGuard},rowHeight:{property:'gridAutoRows',transform:function transform(height){return\"minmax(\".concat(pxRem(height),\", 1fr)\");}}});var gridProps=variance.compose(system.space,grid);export var LayoutGrid=styled('div',styledOptions(grid.propNames))(system.css({display:'grid',width:'100%',gridTemplateColumns:\"repeat(\".concat(columns,\", minmax(0, 1fr))\")}),gridProps);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Layout/LayoutGrid.tsx"],"names":["pxRem","styledOptions","system","theme","variance","styled","pick","columns","gutters","spacing","gutterGuard","gap","property","gridColumnGap","columnGap","grid","create","properties","scale","transform","rowGap","rowHeight","height","gridProps","compose","space","LayoutGrid","propNames","css","display","width","gridTemplateColumns"],"mappings":"AAAA,OAASA,KAAT,CAAgBC,aAAhB,CAA+BC,MAA/B,CAAuCC,KAAvC,KAAoD,0BAApD,CACA,OAAqBC,QAArB,KAAqC,sBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,IAAT,KAAqB,QAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CAEA,GAAMC,CAAAA,OAAO,CAAGF,IAAI,CAACH,KAAK,CAACM,OAAP,CAAgB,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,EAAZ,CAAgB,EAAhB,CAAhB,CAApB,CAEA,uGACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,GAAD,CAAcC,QAAd,CAAmC,CACrD,GAAIA,QAAQ,GAAK,WAAjB,CAA8B,CAC5B,MAAO,CACLC,aAAa,CAAEF,GADV,CAELG,SAAS,2BAAqBP,OAAO,CAAG,CAA/B,eAAsCI,GAAtC,KAFJ,CAAP,CAID,CACD,MAAOA,CAAAA,GAAP,CACD,CARD,CAUA,GAAMI,CAAAA,IAAI,CAAGX,QAAQ,CAACY,MAAT,CAAgB,CAC3BL,GAAG,CAAE,CACHC,QAAQ,CAAE,KADP,CAEHK,UAAU,CAAE,CAAC,QAAD,CAAW,WAAX,CAFT,CAGHC,KAAK,CAAEV,OAHJ,CAIHW,SAAS,CAAET,WAJR,CADsB,CAO3BU,MAAM,CAAE,CAAER,QAAQ,CAAE,QAAZ,CAAsBM,KAAK,CAAEV,OAA7B,CAPmB,CAQ3BM,SAAS,CAAE,CACTF,QAAQ,CAAE,WADD,CAETM,KAAK,CAAEV,OAFE,CAGTW,SAAS,CAAET,WAHF,CARgB,CAa3BW,SAAS,CAAE,CACTT,QAAQ,CAAE,cADD,CAETO,SAAS,CAAE,mBAACG,MAAD,yBAA8BtB,KAAK,CAACsB,MAAD,CAAnC,YAFF,CAbgB,CAAhB,CAAb,CAmBA,GAAMC,CAAAA,SAAS,CAAGnB,QAAQ,CAACoB,OAAT,CAAiBtB,MAAM,CAACuB,KAAxB,CAA+BV,IAA/B,CAAlB,CAIA,MAAO,IAAMW,CAAAA,UAAU,CAAGrB,MAAM,CAC9B,KAD8B,CAE9BJ,aAAa,CAACc,IAAI,CAACY,SAAN,CAFiB,CAAN,CAIxBzB,MAAM,CAAC0B,GAAP,CAAW,CACTC,OAAO,CAAE,MADA,CAETC,KAAK,CAAE,MAFE,CAGTC,mBAAmB,kBAAYxB,OAAZ,qBAHV,CAAX,CAJwB,CASxBgB,SATwB,CAAnB","sourcesContent":["import { pxRem, styledOptions, system, theme } from '@codecademy/gamut-styles';\nimport { StyleProps, variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { pick } from 'lodash';\n\nconst columns = 12;\n\nconst gutters = pick(theme.spacing, [8, 16, 24, 32, 48]);\n\n/** This prevents grid blowout by ensuring that column gaps never exceed the size of their container */\nconst gutterGuard = (gap: string, property: string) => {\n  if (property === 'columnGap') {\n    return {\n      gridColumnGap: gap,\n      columnGap: `min(calc(100% / ${columns - 1}), ${gap})`,\n    };\n  }\n  return gap;\n};\n\nconst grid = variance.create({\n  gap: {\n    property: 'gap',\n    properties: ['rowGap', 'columnGap'],\n    scale: gutters,\n    transform: gutterGuard,\n  },\n  rowGap: { property: 'rowGap', scale: gutters },\n  columnGap: {\n    property: 'columnGap',\n    scale: gutters,\n    transform: gutterGuard,\n  },\n  rowHeight: {\n    property: 'gridAutoRows',\n    transform: (height: string) => `minmax(${pxRem(height)}, 1fr)`,\n  },\n});\n\nconst gridProps = variance.compose(system.space, grid);\n\nexport interface LayoutGridProps extends StyleProps<typeof gridProps> {}\n\nexport const LayoutGrid = styled(\n  'div',\n  styledOptions(grid.propNames)\n)<LayoutGridProps>(\n  system.css({\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`,\n  }),\n  gridProps\n);\n"]},"metadata":{},"sourceType":"module"}