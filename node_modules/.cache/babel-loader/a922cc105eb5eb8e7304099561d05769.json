{"ast":null,"code":"'use strict';\n\nvar she = require('./she');\n\nvar lowercase = require('./lowercase');\n\nvar attributes = require('./attributes');\n\nvar elements = require('./elements');\n\nvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\nvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\nvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\nvar rtag = /^</;\nvar rtagend = /^<\\s*\\//;\n\nfunction createStack() {\n  var stack = [];\n\n  stack.lastItem = function lastItem() {\n    return stack[stack.length - 1];\n  };\n\n  return stack;\n}\n\nfunction parser(html, handler) {\n  var stack = createStack();\n  var last = html;\n  var chars;\n\n  while (html) {\n    parsePart();\n  }\n\n  parseEndTag(); // clean up any remaining tags\n\n  function parsePart() {\n    chars = true;\n    parseTag();\n    var same = html === last;\n    last = html;\n\n    if (same) {\n      // discard, because it's invalid\n      html = '';\n    }\n  }\n\n  function parseTag() {\n    if (html.substr(0, 4) === '<!--') {\n      // comments\n      parseComment();\n    } else if (rtagend.test(html)) {\n      parseEdge(rend, parseEndTag);\n    } else if (rtag.test(html)) {\n      parseEdge(rstart, parseStartTag);\n    }\n\n    parseTagDecode();\n  }\n\n  function parseEdge(regex, parser) {\n    var match = html.match(regex);\n\n    if (match) {\n      html = html.substring(match[0].length);\n      match[0].replace(regex, parser);\n      chars = false;\n    }\n  }\n\n  function parseComment() {\n    var index = html.indexOf('-->');\n\n    if (index >= 0) {\n      if (handler.comment) {\n        handler.comment(html.substring(4, index));\n      }\n\n      html = html.substring(index + 3);\n      chars = false;\n    }\n  }\n\n  function parseTagDecode() {\n    if (!chars) {\n      return;\n    }\n\n    var text;\n    var index = html.indexOf('<');\n\n    if (index >= 0) {\n      text = html.substring(0, index);\n      html = html.substring(index);\n    } else {\n      text = html;\n      html = '';\n    }\n\n    if (handler.chars) {\n      handler.chars(text);\n    }\n  }\n\n  function parseStartTag(tag, tagName, rest, unary) {\n    var attrs = {};\n    var low = lowercase(tagName);\n    var u = elements.voids[low] || !!unary;\n    rest.replace(rattrs, attrReplacer);\n\n    if (!u) {\n      stack.push(low);\n    }\n\n    if (handler.start) {\n      handler.start(low, attrs, u);\n    }\n\n    function attrReplacer(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n      if (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n        attrs[name] = void 0; // attribute is like <button disabled></button>\n      } else {\n        attrs[name] = she.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n      }\n    }\n  }\n\n  function parseEndTag(tag, tagName) {\n    var i;\n    var pos = 0;\n    var low = lowercase(tagName);\n\n    if (low) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos] === low) {\n          break; // find the closest opened tag of the same type\n        }\n      }\n    }\n\n    if (pos >= 0) {\n      for (i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) {\n          // close all the open elements, up the stack\n          handler.end(stack[i]);\n        }\n      }\n\n      stack.length = pos;\n    }\n  }\n}\n\nmodule.exports = parser;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/sanitize-markdown/parser.js"],"names":["she","require","lowercase","attributes","elements","rstart","rend","rattrs","rtag","rtagend","createStack","stack","lastItem","length","parser","html","handler","last","chars","parsePart","parseEndTag","parseTag","same","substr","parseComment","test","parseEdge","parseStartTag","parseTagDecode","regex","match","substring","replace","index","indexOf","comment","text","tag","tagName","rest","unary","attrs","low","u","voids","attrReplacer","push","start","name","doubleQuotedValue","singleQuotedValue","unquotedValue","decode","i","pos","end","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAII,MAAM,GAAG,4FAAb;AACA,IAAIC,IAAI,GAAG,2BAAX;AACA,IAAIC,MAAM,GAAG,yEAAb;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,OAAO,GAAG,SAAd;;AAEA,SAASC,WAAT,GAAwB;AACtB,MAAIC,KAAK,GAAG,EAAZ;;AACAA,EAAAA,KAAK,CAACC,QAAN,GAAiB,SAASA,QAAT,GAAqB;AACpC,WAAOD,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAZ;AACD,GAFD;;AAGA,SAAOF,KAAP;AACD;;AAED,SAASG,MAAT,CAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;AAC9B,MAAIL,KAAK,GAAGD,WAAW,EAAvB;AACA,MAAIO,IAAI,GAAGF,IAAX;AACA,MAAIG,KAAJ;;AAEA,SAAOH,IAAP,EAAa;AACXI,IAAAA,SAAS;AACV;;AACDC,EAAAA,WAAW,GARmB,CAQf;;AAEf,WAASD,SAAT,GAAsB;AACpBD,IAAAA,KAAK,GAAG,IAAR;AACAG,IAAAA,QAAQ;AAER,QAAIC,IAAI,GAAGP,IAAI,KAAKE,IAApB;AACAA,IAAAA,IAAI,GAAGF,IAAP;;AAEA,QAAIO,IAAJ,EAAU;AAAE;AACVP,MAAAA,IAAI,GAAG,EAAP;AACD;AACF;;AAED,WAASM,QAAT,GAAqB;AACnB,QAAIN,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,MAA1B,EAAkC;AAAE;AAClCC,MAAAA,YAAY;AACb,KAFD,MAEO,IAAIf,OAAO,CAACgB,IAAR,CAAaV,IAAb,CAAJ,EAAwB;AAC7BW,MAAAA,SAAS,CAACpB,IAAD,EAAOc,WAAP,CAAT;AACD,KAFM,MAEA,IAAIZ,IAAI,CAACiB,IAAL,CAAUV,IAAV,CAAJ,EAAqB;AAC1BW,MAAAA,SAAS,CAACrB,MAAD,EAASsB,aAAT,CAAT;AACD;;AACDC,IAAAA,cAAc;AACf;;AAED,WAASF,SAAT,CAAoBG,KAApB,EAA2Bf,MAA3B,EAAmC;AACjC,QAAIgB,KAAK,GAAGf,IAAI,CAACe,KAAL,CAAWD,KAAX,CAAZ;;AACA,QAAIC,KAAJ,EAAW;AACTf,MAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAL,CAAeD,KAAK,CAAC,CAAD,CAAL,CAASjB,MAAxB,CAAP;AACAiB,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiBH,KAAjB,EAAwBf,MAAxB;AACAI,MAAAA,KAAK,GAAG,KAAR;AACD;AACF;;AAED,WAASM,YAAT,GAAyB;AACvB,QAAIS,KAAK,GAAGlB,IAAI,CAACmB,OAAL,CAAa,KAAb,CAAZ;;AACA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACd,UAAIjB,OAAO,CAACmB,OAAZ,EAAqB;AACnBnB,QAAAA,OAAO,CAACmB,OAAR,CAAgBpB,IAAI,CAACgB,SAAL,CAAe,CAAf,EAAkBE,KAAlB,CAAhB;AACD;;AACDlB,MAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAL,CAAeE,KAAK,GAAG,CAAvB,CAAP;AACAf,MAAAA,KAAK,GAAG,KAAR;AACD;AACF;;AAED,WAASU,cAAT,GAA2B;AACzB,QAAI,CAACV,KAAL,EAAY;AACV;AACD;;AACD,QAAIkB,IAAJ;AACA,QAAIH,KAAK,GAAGlB,IAAI,CAACmB,OAAL,CAAa,GAAb,CAAZ;;AACA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACdG,MAAAA,IAAI,GAAGrB,IAAI,CAACgB,SAAL,CAAe,CAAf,EAAkBE,KAAlB,CAAP;AACAlB,MAAAA,IAAI,GAAGA,IAAI,CAACgB,SAAL,CAAeE,KAAf,CAAP;AACD,KAHD,MAGO;AACLG,MAAAA,IAAI,GAAGrB,IAAP;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAIC,OAAO,CAACE,KAAZ,EAAmB;AACjBF,MAAAA,OAAO,CAACE,KAAR,CAAckB,IAAd;AACD;AACF;;AAED,WAAST,aAAT,CAAwBU,GAAxB,EAA6BC,OAA7B,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmD;AACjD,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,GAAG,GAAGxC,SAAS,CAACoC,OAAD,CAAnB;AACA,QAAIK,CAAC,GAAGvC,QAAQ,CAACwC,KAAT,CAAeF,GAAf,KAAuB,CAAC,CAACF,KAAjC;AAEAD,IAAAA,IAAI,CAACP,OAAL,CAAazB,MAAb,EAAqBsC,YAArB;;AAEA,QAAI,CAACF,CAAL,EAAQ;AACNhC,MAAAA,KAAK,CAACmC,IAAN,CAAWJ,GAAX;AACD;;AACD,QAAI1B,OAAO,CAAC+B,KAAZ,EAAmB;AACjB/B,MAAAA,OAAO,CAAC+B,KAAR,CAAcL,GAAd,EAAmBD,KAAnB,EAA0BE,CAA1B;AACD;;AAED,aAASE,YAAT,CAAuBf,KAAvB,EAA8BkB,IAA9B,EAAoCC,iBAApC,EAAuDC,iBAAvD,EAA0EC,aAA1E,EAAyF;AACvF,UAAIF,iBAAiB,KAAK,KAAK,CAA3B,IAAgCC,iBAAiB,KAAK,KAAK,CAA3D,IAAgEC,aAAa,KAAK,KAAK,CAA3F,EAA8F;AAC5FV,QAAAA,KAAK,CAACO,IAAD,CAAL,GAAc,KAAK,CAAnB,CAD4F,CACtE;AACvB,OAFD,MAEO;AACLP,QAAAA,KAAK,CAACO,IAAD,CAAL,GAAchD,GAAG,CAACoD,MAAJ,CAAWH,iBAAiB,IAAIC,iBAArB,IAA0CC,aAA1C,IAA2D,EAAtE,CAAd;AACD;AACF;AACF;;AAED,WAAS/B,WAAT,CAAsBiB,GAAtB,EAA2BC,OAA3B,EAAoC;AAClC,QAAIe,CAAJ;AACA,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIZ,GAAG,GAAGxC,SAAS,CAACoC,OAAD,CAAnB;;AACA,QAAII,GAAJ,EAAS;AACP,WAAKY,GAAG,GAAG3C,KAAK,CAACE,MAAN,GAAe,CAA1B,EAA6ByC,GAAG,IAAI,CAApC,EAAuCA,GAAG,EAA1C,EAA8C;AAC5C,YAAI3C,KAAK,CAAC2C,GAAD,CAAL,KAAeZ,GAAnB,EAAwB;AACtB,gBADsB,CACf;AACR;AACF;AACF;;AACD,QAAIY,GAAG,IAAI,CAAX,EAAc;AACZ,WAAKD,CAAC,GAAG1C,KAAK,CAACE,MAAN,GAAe,CAAxB,EAA2BwC,CAAC,IAAIC,GAAhC,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAIrC,OAAO,CAACuC,GAAZ,EAAiB;AAAE;AACjBvC,UAAAA,OAAO,CAACuC,GAAR,CAAY5C,KAAK,CAAC0C,CAAD,CAAjB;AACD;AACF;;AACD1C,MAAAA,KAAK,CAACE,MAAN,GAAeyC,GAAf;AACD;AACF;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiB3C,MAAjB","sourcesContent":["'use strict';\r\n\r\nvar she = require('./she');\r\nvar lowercase = require('./lowercase');\r\nvar attributes = require('./attributes');\r\nvar elements = require('./elements');\r\nvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\r\nvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\r\nvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\r\nvar rtag = /^</;\r\nvar rtagend = /^<\\s*\\//;\r\n\r\nfunction createStack () {\r\n  var stack = [];\r\n  stack.lastItem = function lastItem () {\r\n    return stack[stack.length - 1];\r\n  };\r\n  return stack;\r\n}\r\n\r\nfunction parser (html, handler) {\r\n  var stack = createStack();\r\n  var last = html;\r\n  var chars;\r\n\r\n  while (html) {\r\n    parsePart();\r\n  }\r\n  parseEndTag(); // clean up any remaining tags\r\n\r\n  function parsePart () {\r\n    chars = true;\r\n    parseTag();\r\n\r\n    var same = html === last;\r\n    last = html;\r\n\r\n    if (same) { // discard, because it's invalid\r\n      html = '';\r\n    }\r\n  }\r\n\r\n  function parseTag () {\r\n    if (html.substr(0, 4) === '<!--') { // comments\r\n      parseComment();\r\n    } else if (rtagend.test(html)) {\r\n      parseEdge(rend, parseEndTag);\r\n    } else if (rtag.test(html)) {\r\n      parseEdge(rstart, parseStartTag);\r\n    }\r\n    parseTagDecode();\r\n  }\r\n\r\n  function parseEdge (regex, parser) {\r\n    var match = html.match(regex);\r\n    if (match) {\r\n      html = html.substring(match[0].length);\r\n      match[0].replace(regex, parser);\r\n      chars = false;\r\n    }\r\n  }\r\n\r\n  function parseComment () {\r\n    var index = html.indexOf('-->');\r\n    if (index >= 0) {\r\n      if (handler.comment) {\r\n        handler.comment(html.substring(4, index));\r\n      }\r\n      html = html.substring(index + 3);\r\n      chars = false;\r\n    }\r\n  }\r\n\r\n  function parseTagDecode () {\r\n    if (!chars) {\r\n      return;\r\n    }\r\n    var text;\r\n    var index = html.indexOf('<');\r\n    if (index >= 0) {\r\n      text = html.substring(0, index);\r\n      html = html.substring(index);\r\n    } else {\r\n      text = html;\r\n      html = '';\r\n    }\r\n    if (handler.chars) {\r\n      handler.chars(text);\r\n    }\r\n  }\r\n\r\n  function parseStartTag (tag, tagName, rest, unary) {\r\n    var attrs = {};\r\n    var low = lowercase(tagName);\r\n    var u = elements.voids[low] || !!unary;\r\n\r\n    rest.replace(rattrs, attrReplacer);\r\n\r\n    if (!u) {\r\n      stack.push(low);\r\n    }\r\n    if (handler.start) {\r\n      handler.start(low, attrs, u);\r\n    }\r\n\r\n    function attrReplacer (match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\r\n      if (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\r\n        attrs[name] = void 0; // attribute is like <button disabled></button>\r\n      } else {\r\n        attrs[name] = she.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\r\n      }\r\n    }\r\n  }\r\n\r\n  function parseEndTag (tag, tagName) {\r\n    var i;\r\n    var pos = 0;\r\n    var low = lowercase(tagName);\r\n    if (low) {\r\n      for (pos = stack.length - 1; pos >= 0; pos--) {\r\n        if (stack[pos] === low) {\r\n          break; // find the closest opened tag of the same type\r\n        }\r\n      }\r\n    }\r\n    if (pos >= 0) {\r\n      for (i = stack.length - 1; i >= pos; i--) {\r\n        if (handler.end) { // close all the open elements, up the stack\r\n          handler.end(stack[i]);\r\n        }\r\n      }\r\n      stack.length = pos;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = parser;\r\n"]},"metadata":{},"sourceType":"script"}