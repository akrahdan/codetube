{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport glamorDefault, * as glamorExports from 'glamor';\nimport React from 'react';\nimport stylesheet from '../css/index';\nimport * as vars from '../vars/index';\nvar glamor = glamorDefault || glamorExports;\nvar styles = {\n  buttonSizer: function () {\n    return glamor.css(stylesheet['.psds-dropdown__button-sizer']);\n  },\n  placeholder: function (_a) {\n    var appearance = _a.appearance,\n        selectedItem = _a.selectedItem,\n        size = _a.size;\n    var label = 'psds-dropdown__placeholder';\n    var isSmall = size === vars.sizes.small;\n    var placeholderColor = appearance === vars.appearances.subtle ? glamor.css(stylesheet[\".psds-dropdown__field--appearance-\" + vars.appearances.subtle + \".psds-dropdown__placeholder--color\"]) : glamor.css(stylesheet['.psds-dropdown__placeholder--color']);\n    return glamor.compose(glamor.css(stylesheet[\".\" + label]), isSmall && glamor.css(stylesheet[\".\" + label + \".psds-dropdown--small\"]), !selectedItem && placeholderColor);\n  }\n};\nexport var Selected = function (_a) {\n  var appearance = _a.appearance,\n      label = _a.label,\n      placeholder = _a.placeholder,\n      selectedItem = _a.selectedItem,\n      size = _a.size;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", __assign({\n    \"aria-hidden\": true\n  }, styles.buttonSizer()), label || placeholder), React.createElement(\"span\", __assign({}, styles.placeholder({\n    appearance: appearance,\n    selectedItem: selectedItem,\n    size: size\n  })), (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label) || placeholder));\n};\nSelected.displayName = 'Dropdown.Selected';","map":{"version":3,"sources":["../../../src/react/selected.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,OAAO,aAAP,EAAsB,KAAK,aAA3B,MAA8C,QAA9C;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,UAAP,MAAuB,cAAvB;AAEA,OAAO,KAAK,IAAZ,MAAsB,eAAtB;AAEA,IAAM,MAAM,GAAG,aAAa,IAAI,aAAhC;AAEA,IAAM,MAAM,GAAG;AACb,EAAA,WAAW,EAAE,YAAA;AAAM,WAAA,MAAM,CAAC,GAAP,CAAW,UAAU,CAArB,8BAAqB,CAArB,CAAA;AAAsD,GAD5D;AAEb,EAAA,WAAW,EAAE,UAAC,EAAD,EAIyD;QAHpE,UAAU,GAAA,EAAA,CAAA,U;QACV,YAAY,GAAA,EAAA,CAAA,Y;QACZ,IAAI,GAAA,EAAA,CAAA,I;AAEJ,QAAM,KAAK,GAAG,4BAAd;AACA,QAAM,OAAO,GAAG,IAAI,KAAK,IAAI,CAAC,KAAL,CAAW,KAApC;AACA,QAAM,gBAAgB,GACpB,UAAU,KAAK,IAAI,CAAC,WAAL,CAAiB,MAAhC,GACI,MAAM,CAAC,GAAP,CACE,UAAU,CACR,uCAAqC,IAAI,CAAC,WAAL,CAAiB,MAAtD,GAA4D,oCADpD,CADZ,CADJ,GAMI,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,oCAAD,CAArB,CAPN;AAQA,WAAO,MAAM,CAAC,OAAP,CACL,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,MAAI,KAAL,CAArB,CADK,EAEL,OAAO,IAAI,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,MAAI,KAAJ,GAAS,uBAAV,CAArB,CAFN,EAGL,CAAC,YAAD,IAAiB,gBAHZ,CAAP;AAKD;AAtBY,CAAf;AAiCA,OAAO,IAAM,QAAQ,GAAoC,UAAC,EAAD,EAMxD;MALC,UAAU,GAAA,EAAA,CAAA,U;MACV,KAAK,GAAA,EAAA,CAAA,K;MACL,WAAW,GAAA,EAAA,CAAA,W;MACX,YAAY,GAAA,EAAA,CAAA,Y;MACZ,IAAI,GAAA,EAAA,CAAA,I;AAEJ,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAA,mBAAA;AAAA,GAAA,EAAsB,MAAM,CAAC,WAAP,EAAtB,CAAA,EACG,KAAK,IAAI,WADZ,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAU,MAAM,CAAC,WAAP,CAAmB;AAAE,IAAA,UAAU,EAAA,UAAZ;AAAc,IAAA,YAAY,EAAA,YAA1B;AAA4B,IAAA,IAAI,EAAA;AAAhC,GAAnB,CAAV,CAAA,EACG,CAAA,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAE,KAAd,KAAuB,WAD1B,CAJF,CADF;AAUD,CAjBM;AAmBP,QAAQ,CAAC,WAAT,GAAuB,mBAAvB","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport glamorDefault, * as glamorExports from 'glamor';\nimport React from 'react';\nimport stylesheet from '../css/index';\nimport * as vars from '../vars/index';\nvar glamor = glamorDefault || glamorExports;\nvar styles = {\n    buttonSizer: function () { return glamor.css(stylesheet['.psds-dropdown__button-sizer']); },\n    placeholder: function (_a) {\n        var appearance = _a.appearance, selectedItem = _a.selectedItem, size = _a.size;\n        var label = 'psds-dropdown__placeholder';\n        var isSmall = size === vars.sizes.small;\n        var placeholderColor = appearance === vars.appearances.subtle\n            ? glamor.css(stylesheet[\".psds-dropdown__field--appearance-\" + vars.appearances.subtle + \".psds-dropdown__placeholder--color\"])\n            : glamor.css(stylesheet['.psds-dropdown__placeholder--color']);\n        return glamor.compose(glamor.css(stylesheet[\".\" + label]), isSmall && glamor.css(stylesheet[\".\" + label + \".psds-dropdown--small\"]), !selectedItem && placeholderColor);\n    }\n};\nexport var Selected = function (_a) {\n    var appearance = _a.appearance, label = _a.label, placeholder = _a.placeholder, selectedItem = _a.selectedItem, size = _a.size;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", __assign({ \"aria-hidden\": true }, styles.buttonSizer()), label || placeholder),\n        React.createElement(\"span\", __assign({}, styles.placeholder({ appearance: appearance, selectedItem: selectedItem, size: size })), (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label) || placeholder)));\n};\nSelected.displayName = 'Dropdown.Selected';\n//# sourceMappingURL=selected.js.map"]},"metadata":{},"sourceType":"module"}