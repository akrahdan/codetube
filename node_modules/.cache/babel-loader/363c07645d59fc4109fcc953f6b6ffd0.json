{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport isPropValid from '@emotion/is-prop-valid';\nimport { all as allProps } from './config';\nvar allPropnames = ['mode', 'variant'].concat(_toConsumableArray(Object.keys(allProps)));\n/**\n * Emotion will not attempt to forward all system props - so this pre filters all possible exceptions to search agains\n * props like `color` and `width`.\n */\n\nvar validPropnames = allPropnames.filter(isPropValid);\nexport function createStyledOptions() {\n  var additional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; // Cache possible valid prop names to prevent searching a larger list.\n\n  var additionalExclusions = additional.filter(isPropValid);\n  return {\n    shouldForwardProp: function shouldForwardProp(prop) {\n      return isPropValid(prop) && !validPropnames.includes(prop) && !additionalExclusions.includes(prop);\n    }\n  };\n}\n/**\n * @description\n * This object can be passed to the second argument of `styled('div', styledOptions)` or be called as a function to filter additional prop names\n * If you are extending a component that already has filtered props - you do not need to provide additional guards if  you are not passing additional props\n * @example\n * import { styledOptions } from '@codecademy/gamut-styles';\n * // default case for divs\n * styled('div', styledOptions)();\n * // elements other than div\n * styled('svg', styledOptions<'svg'>())();\n * // additional non system props to filter\n * styled('div', styledOptions(['data-invalidsomething']))();\n * // Extending existing components\n * styled(Box)()\n *\n */\n\nexport var styledOptions = Object.assign(createStyledOptions, createStyledOptions());","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/@codecademy/gamut-styles/dist/variance/utils.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","isPropValid","all","allProps","allPropnames","concat","keys","validPropnames","filter","createStyledOptions","additional","arguments","undefined","additionalExclusions","shouldForwardProp","prop","includes","styledOptions","assign"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isPropValid from '@emotion/is-prop-valid';\nimport { all as allProps } from './config';\nvar allPropnames = ['mode', 'variant'].concat(_toConsumableArray(Object.keys(allProps)));\n/**\n * Emotion will not attempt to forward all system props - so this pre filters all possible exceptions to search agains\n * props like `color` and `width`.\n */\n\nvar validPropnames = allPropnames.filter(isPropValid);\nexport function createStyledOptions() {\n  var additional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  // Cache possible valid prop names to prevent searching a larger list.\n  var additionalExclusions = additional.filter(isPropValid);\n  return {\n    shouldForwardProp: function shouldForwardProp(prop) {\n      return isPropValid(prop) && !validPropnames.includes(prop) && !additionalExclusions.includes(prop);\n    }\n  };\n}\n/**\n * @description\n * This object can be passed to the second argument of `styled('div', styledOptions)` or be called as a function to filter additional prop names\n * If you are extending a component that already has filtered props - you do not need to provide additional guards if  you are not passing additional props\n * @example\n * import { styledOptions } from '@codecademy/gamut-styles';\n * // default case for divs\n * styled('div', styledOptions)();\n * // elements other than div\n * styled('svg', styledOptions<'svg'>())();\n * // additional non system props to filter\n * styled('div', styledOptions(['data-invalidsomething']))();\n * // Extending existing components\n * styled(Box)()\n *\n */\n\nexport var styledOptions = Object.assign(createStyledOptions, createStyledOptions());"]},"metadata":{},"sourceType":"module"}