{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { authApi } from \"services/auth\";\nconst initialState = {\n  user: null,\n  token: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    setCredentials: (state, {\n      payload: {\n        user,\n        token\n      }\n    }) => {\n      state.user = user;\n      state.token = token;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(authApi.endpoints.logout.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = null;\n      state.token = null;\n    }).addMatcher(authApi.endpoints.signup.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload.user;\n      state.token = payload.token;\n    }).addMatcher(authApi.endpoints.updateAvatar.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload.user;\n      state.avatar = payload.avatar;\n    }).addMatcher(authApi.endpoints.updateProfile.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = payload;\n    });\n  }\n});\nexport const {\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const selectCurrentUser = state => state.auth.user;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/auth/authSlice.ts"],"names":["createSlice","authApi","initialState","user","token","authSlice","name","reducers","setCredentials","state","payload","extraReducers","builder","addMatcher","endpoints","logout","matchFulfilled","signup","updateAvatar","avatar","updateProfile","actions","reducer","selectCurrentUser","auth"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAASC,OAAT,QAAwB,eAAxB;AAOA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAArB;AACA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAAY,EAAEA,YAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CACdC,KADc,EAEd;AAAEC,MAAAA,OAAO,EAAE;AAAEP,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAX,KAFc,KAGX;AACHK,MAAAA,KAAK,CAACN,IAAN,GAAaA,IAAb;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AACD;AAPO,GAHkB;AAY5BO,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIZ,OAAO,CAACa,SAAR,CAAkBC,MAAlB,CAAyBC,cAF7B,EAGI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACN,IAAN,GAAa,IAAb;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KANL,EAQGS,UARH,CASIZ,OAAO,CAACa,SAAR,CAAkBG,MAAlB,CAAyBD,cAT7B,EAUI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACN,IAAN,GAAaO,OAAO,CAACP,IAArB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcM,OAAO,CAACN,KAAtB;AACD,KAbL,EAcIS,UAdJ,CAeIZ,OAAO,CAACa,SAAR,CAAkBI,YAAlB,CAA+BF,cAfnC,EAgBI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACN,IAAN,GAAaO,OAAO,CAACP,IAArB;AACAM,MAAAA,KAAK,CAACU,MAAN,GAAeT,OAAO,CAACS,MAAvB;AACD,KAnBL,EAoBIN,UApBJ,CAqBIZ,OAAO,CAACa,SAAR,CAAkBM,aAAlB,CAAgCJ,cArBpC,EAsBI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACN,IAAN,GAAaO,OAAb;AACD,KAxBL;AA0BD;AAvC2B,CAAD,CAA7B;AA0CA,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAqBH,SAAS,CAACgB,OAArC;AAEP,eAAehB,SAAS,CAACiB,OAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAId,KAAD,IAAsBA,KAAK,CAACe,IAAN,CAAWrB,IAA3D","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport { authApi } from \"services/auth\";\n\ntype AuthState = {\n  user: User | null;\n  avatar: string | null;\n  token: string | null;\n};\nconst initialState = { user: null, token: null };\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState as AuthState,\n  reducers: {\n    setCredentials: (\n      state,\n      { payload: { user, token } }: PayloadAction<{ user: User; token: string }>\n    ) => {\n      state.user = user;\n      state.token = token;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        authApi.endpoints.logout.matchFulfilled,\n        (state, { payload }) => {\n          state.user = null;\n          state.token = null;\n        }\n      )\n      .addMatcher(\n        authApi.endpoints.signup.matchFulfilled,\n        (state, { payload }) => {\n          state.user = payload.user;\n          state.token = payload.token;\n        }\n      ).addMatcher(\n        authApi.endpoints.updateAvatar.matchFulfilled,\n        (state, { payload }) => {\n          state.user = payload.user;\n          state.avatar = payload.avatar;\n        }\n      ).addMatcher(\n        authApi.endpoints.updateProfile.matchFulfilled,\n        (state, { payload }) => {\n          state.user = payload;\n        }\n      );\n  },\n});\n\nexport const { setCredentials } = authSlice.actions;\n\nexport default authSlice.reducer;\n\nexport const selectCurrentUser = (state: RootState) => state.auth.user;\n\n"]},"metadata":{},"sourceType":"module"}