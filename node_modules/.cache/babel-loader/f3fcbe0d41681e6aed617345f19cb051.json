{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{Column,Video}from'@codecademy/gamut';import styled from'@emotion/styled';import{omit}from'lodash';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var Image=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var RightColumn=styled(Column)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n\"])));export var PageHeroMedia=function PageHeroMedia(_ref){var media=_ref.media,size=_ref.size;switch(media.type){case'image':return/*#__PURE__*/_jsx(RightColumn,{size:size,ml:{_:0,sm:16},display:{_:'none',sm:'grid'},children:/*#__PURE__*/_jsx(Image,{src:media.src,alt:media.alt})});case'video':var videoArgs=omit(media,'type');return/*#__PURE__*/_jsx(RightColumn,{size:{_:12,sm:size},children:/*#__PURE__*/_jsx(Video,_objectSpread({},videoArgs))});}};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/LandingPage/PageHeroMedia.tsx"],"names":["Column","Video","styled","omit","React","Image","img","RightColumn","PageHeroMedia","media","size","type","_","sm","src","alt","videoArgs"],"mappings":"kYAAA,OAASA,MAAT,CAA8BC,KAA9B,KAA2C,mBAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAIA,GAAMC,CAAAA,KAAK,CAAGH,MAAM,CAACI,GAAV,mFAAX,CAIA,GAAMC,CAAAA,WAAW,CAAGL,MAAM,CAACF,MAAD,CAAT,6FAAjB,CASA,MAAO,IAAMQ,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAGrD,IAFJC,CAAAA,KAEI,MAFJA,KAEI,CADJC,IACI,MADJA,IACI,CACJ,OAAQD,KAAK,CAACE,IAAd,EACE,IAAK,OAAL,CACE,mBACE,KAAC,WAAD,EACE,IAAI,CAAED,IADR,CAEE,EAAE,CAAE,CAAEE,CAAC,CAAE,CAAL,CAAQC,EAAE,CAAE,EAAZ,CAFN,CAGE,OAAO,CAAE,CAAED,CAAC,CAAE,MAAL,CAAaC,EAAE,CAAE,MAAjB,CAHX,uBAKE,KAAC,KAAD,EAAO,GAAG,CAAEJ,KAAK,CAACK,GAAlB,CAAuB,GAAG,CAAEL,KAAK,CAACM,GAAlC,EALF,EADF,CASF,IAAK,OAAL,CACE,GAAMC,CAAAA,SAAS,CAAGb,IAAI,CAACM,KAAD,CAAQ,MAAR,CAAtB,CACA,mBACE,KAAC,WAAD,EAAa,IAAI,CAAE,CAAEG,CAAC,CAAE,EAAL,CAASC,EAAE,CAAEH,IAAb,CAAnB,uBACE,KAAC,KAAD,kBAAWM,SAAX,EADF,EADF,CAbJ,CAmBD,CAvBM","sourcesContent":["import { Column, ColumnProps, Video } from '@codecademy/gamut';\nimport styled from '@emotion/styled';\nimport { omit } from 'lodash';\nimport React from 'react';\n\nimport { MediaProps } from './PageHero';\n\nconst Image = styled.img`\n  width: 100%;\n`;\n\nconst RightColumn = styled(Column)`\n  align-items: center;\n`;\n\nexport type PageHeroMediaProps = {\n  media: MediaProps;\n  size: Extract<ColumnProps['size'], number>;\n};\n\nexport const PageHeroMedia: React.FC<PageHeroMediaProps> = ({\n  media,\n  size,\n}) => {\n  switch (media.type) {\n    case 'image':\n      return (\n        <RightColumn\n          size={size}\n          ml={{ _: 0, sm: 16 }}\n          display={{ _: 'none', sm: 'grid' }}\n        >\n          <Image src={media.src} alt={media.alt} />\n        </RightColumn>\n      );\n    case 'video':\n      const videoArgs = omit(media, 'type');\n      return (\n        <RightColumn size={{ _: 12, sm: size }}>\n          <Video {...videoArgs} />\n        </RightColumn>\n      );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}