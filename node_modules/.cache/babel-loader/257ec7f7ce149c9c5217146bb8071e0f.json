{"ast":null,"code":"/*!\n * jsUri\n * https://github.com/derek-watson/jsUri\n *\n * Copyright 2013, Derek Watson\n * Released under the MIT license.\n *\n * Includes parseUri regular expressions\n * http://blog.stevenlevithan.com/archives/parseuri\n * Copyright 2007, Steven Levithan\n * Released under the MIT license.\n */\n\n/*globals define, module */\n(function (global) {\n  var re = {\n    starts_with_slashes: /^\\/+/,\n    ends_with_slashes: /\\/+$/,\n    pluses: /\\+/g,\n    query_separator: /[&;]/,\n    uri_parser: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@\\/]*)(?::([^:@]*))?)?@)?(\\[[0-9a-fA-F:.]+\\]|[^:\\/?#]*)(?::(\\d+|(?=:)))?(:)?)((((?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  };\n  /**\n   * Define forEach for older js environments\n   * @see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach#Compatibility\n   */\n\n  if (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n      var T, k;\n\n      if (this == null) {\n        throw new TypeError(' this is null or not defined');\n      }\n\n      var O = Object(this);\n      var len = O.length >>> 0;\n\n      if (typeof callback !== \"function\") {\n        throw new TypeError(callback + ' is not a function');\n      }\n\n      if (arguments.length > 1) {\n        T = thisArg;\n      }\n\n      k = 0;\n\n      while (k < len) {\n        var kValue;\n\n        if (k in O) {\n          kValue = O[k];\n          callback.call(T, kValue, k, O);\n        }\n\n        k++;\n      }\n    };\n  }\n  /**\n   * unescape a query param value\n   * @param  {string} s encoded value\n   * @return {string}   decoded value\n   */\n\n\n  function decode(s) {\n    if (s) {\n      s = s.toString().replace(re.pluses, '%20');\n      s = decodeURIComponent(s);\n    }\n\n    return s;\n  }\n  /**\n   * Breaks a uri string down into its individual parts\n   * @param  {string} str uri\n   * @return {object}     parts\n   */\n\n\n  function parseUri(str) {\n    var parser = re.uri_parser;\n    var parserKeys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"isColonUri\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n    var m = parser.exec(str || '');\n    var parts = {};\n    parserKeys.forEach(function (key, i) {\n      parts[key] = m[i] || '';\n    });\n    return parts;\n  }\n  /**\n   * Breaks a query string down into an array of key/value pairs\n   * @param  {string} str query\n   * @return {array}      array of arrays (key/value pairs)\n   */\n\n\n  function parseQuery(str) {\n    var i, ps, p, n, k, v, l;\n    var pairs = [];\n\n    if (typeof str === 'undefined' || str === null || str === '') {\n      return pairs;\n    }\n\n    if (str.indexOf('?') === 0) {\n      str = str.substring(1);\n    }\n\n    ps = str.toString().split(re.query_separator);\n\n    for (i = 0, l = ps.length; i < l; i++) {\n      p = ps[i];\n      n = p.indexOf('=');\n\n      if (n !== 0) {\n        k = decode(p.substring(0, n));\n        v = decode(p.substring(n + 1));\n        pairs.push(n === -1 ? [p, null] : [k, v]);\n      }\n    }\n\n    return pairs;\n  }\n  /**\n   * Creates a new Uri object\n   * @constructor\n   * @param {string} str\n   */\n\n\n  function Uri(str) {\n    this.uriParts = parseUri(str);\n    this.queryPairs = parseQuery(this.uriParts.query);\n    this.hasAuthorityPrefixUserPref = null;\n  }\n  /**\n   * Define getter/setter methods\n   */\n\n\n  ['protocol', 'userInfo', 'host', 'port', 'path', 'anchor'].forEach(function (key) {\n    Uri.prototype[key] = function (val) {\n      if (typeof val !== 'undefined') {\n        this.uriParts[key] = val;\n      }\n\n      return this.uriParts[key];\n    };\n  });\n  /**\n   * if there is no protocol, the leading // can be enabled or disabled\n   * @param  {Boolean}  val\n   * @return {Boolean}\n   */\n\n  Uri.prototype.hasAuthorityPrefix = function (val) {\n    if (typeof val !== 'undefined') {\n      this.hasAuthorityPrefixUserPref = val;\n    }\n\n    if (this.hasAuthorityPrefixUserPref === null) {\n      return this.uriParts.source.indexOf('//') !== -1;\n    } else {\n      return this.hasAuthorityPrefixUserPref;\n    }\n  };\n\n  Uri.prototype.isColonUri = function (val) {\n    if (typeof val !== 'undefined') {\n      this.uriParts.isColonUri = !!val;\n    } else {\n      return !!this.uriParts.isColonUri;\n    }\n  };\n  /**\n   * Serializes the internal state of the query pairs\n   * @param  {string} [val]   set a new query string\n   * @return {string}         query string\n   */\n\n\n  Uri.prototype.query = function (val) {\n    var s = '',\n        i,\n        param,\n        l;\n\n    if (typeof val !== 'undefined') {\n      this.queryPairs = parseQuery(val);\n    }\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n\n      if (s.length > 0) {\n        s += '&';\n      }\n\n      if (param[1] === null) {\n        s += param[0];\n      } else {\n        s += param[0];\n        s += '=';\n\n        if (typeof param[1] !== 'undefined') {\n          s += encodeURIComponent(param[1]);\n        }\n      }\n    }\n\n    return s.length > 0 ? '?' + s : s;\n  };\n  /**\n   * returns the first query param value found for the key\n   * @param  {string} key query key\n   * @return {string}     first value found for key\n   */\n\n\n  Uri.prototype.getQueryParamValue = function (key) {\n    var param, i, l;\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n\n      if (key === param[0]) {\n        return param[1];\n      }\n    }\n  };\n  /**\n   * returns an array of query param values for the key\n   * @param  {string} key query key\n   * @return {array}      array of values\n   */\n\n\n  Uri.prototype.getQueryParamValues = function (key) {\n    var arr = [],\n        i,\n        param,\n        l;\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n\n      if (key === param[0]) {\n        arr.push(param[1]);\n      }\n    }\n\n    return arr;\n  };\n  /**\n   * removes query parameters\n   * @param  {string} key     remove values for key\n   * @param  {val}    [val]   remove a specific value, otherwise removes all\n   * @return {Uri}            returns self for fluent chaining\n   */\n\n\n  Uri.prototype.deleteQueryParam = function (key, val) {\n    var arr = [],\n        i,\n        param,\n        keyMatchesFilter,\n        valMatchesFilter,\n        l;\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n      keyMatchesFilter = decode(param[0]) === decode(key);\n      valMatchesFilter = param[1] === val;\n\n      if (arguments.length === 1 && !keyMatchesFilter || arguments.length === 2 && (!keyMatchesFilter || !valMatchesFilter)) {\n        arr.push(param);\n      }\n    }\n\n    this.queryPairs = arr;\n    return this;\n  };\n  /**\n   * adds a query parameter\n   * @param  {string}  key        add values for key\n   * @param  {string}  val        value to add\n   * @param  {integer} [index]    specific index to add the value at\n   * @return {Uri}                returns self for fluent chaining\n   */\n\n\n  Uri.prototype.addQueryParam = function (key, val, index) {\n    if (arguments.length === 3 && index !== -1) {\n      index = Math.min(index, this.queryPairs.length);\n      this.queryPairs.splice(index, 0, [key, val]);\n    } else if (arguments.length > 0) {\n      this.queryPairs.push([key, val]);\n    }\n\n    return this;\n  };\n  /**\n   * test for the existence of a query parameter\n   * @param  {string}  key        add values for key\n   * @param  {string}  val        value to add\n   * @param  {integer} [index]    specific index to add the value at\n   * @return {Uri}                returns self for fluent chaining\n   */\n\n\n  Uri.prototype.hasQueryParam = function (key) {\n    var i,\n        len = this.queryPairs.length;\n\n    for (i = 0; i < len; i++) {\n      if (this.queryPairs[i][0] == key) return true;\n    }\n\n    return false;\n  };\n  /**\n   * replaces query param values\n   * @param  {string} key         key to replace value for\n   * @param  {string} newVal      new value\n   * @param  {string} [oldVal]    replace only one specific value (otherwise replaces all)\n   * @return {Uri}                returns self for fluent chaining\n   */\n\n\n  Uri.prototype.replaceQueryParam = function (key, newVal, oldVal) {\n    var index = -1,\n        len = this.queryPairs.length,\n        i,\n        param;\n\n    if (arguments.length === 3) {\n      for (i = 0; i < len; i++) {\n        param = this.queryPairs[i];\n\n        if (decode(param[0]) === decode(key) && decodeURIComponent(param[1]) === decode(oldVal)) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index >= 0) {\n        this.deleteQueryParam(key, decode(oldVal)).addQueryParam(key, newVal, index);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        param = this.queryPairs[i];\n\n        if (decode(param[0]) === decode(key)) {\n          index = i;\n          break;\n        }\n      }\n\n      this.deleteQueryParam(key);\n      this.addQueryParam(key, newVal, index);\n    }\n\n    return this;\n  };\n  /**\n   * Define fluent setter methods (setProtocol, setHasAuthorityPrefix, etc)\n   */\n\n\n  ['protocol', 'hasAuthorityPrefix', 'isColonUri', 'userInfo', 'host', 'port', 'path', 'query', 'anchor'].forEach(function (key) {\n    var method = 'set' + key.charAt(0).toUpperCase() + key.slice(1);\n\n    Uri.prototype[method] = function (val) {\n      this[key](val);\n      return this;\n    };\n  });\n  /**\n   * Scheme name, colon and doubleslash, as required\n   * @return {string} http:// or possibly just //\n   */\n\n  Uri.prototype.scheme = function () {\n    var s = '';\n\n    if (this.protocol()) {\n      s += this.protocol();\n\n      if (this.protocol().indexOf(':') !== this.protocol().length - 1) {\n        s += ':';\n      }\n\n      s += '//';\n    } else {\n      if (this.hasAuthorityPrefix() && this.host()) {\n        s += '//';\n      }\n    }\n\n    return s;\n  };\n  /**\n   * Same as Mozilla nsIURI.prePath\n   * @return {string} scheme://user:password@host:port\n   * @see  https://developer.mozilla.org/en/nsIURI\n   */\n\n\n  Uri.prototype.origin = function () {\n    var s = this.scheme();\n\n    if (this.userInfo() && this.host()) {\n      s += this.userInfo();\n\n      if (this.userInfo().indexOf('@') !== this.userInfo().length - 1) {\n        s += '@';\n      }\n    }\n\n    if (this.host()) {\n      s += this.host();\n\n      if (this.port() || this.path() && this.path().substr(0, 1).match(/[0-9]/)) {\n        s += ':' + this.port();\n      }\n    }\n\n    return s;\n  };\n  /**\n   * Adds a trailing slash to the path\n   */\n\n\n  Uri.prototype.addTrailingSlash = function () {\n    var path = this.path() || '';\n\n    if (path.substr(-1) !== '/') {\n      this.path(path + '/');\n    }\n\n    return this;\n  };\n  /**\n   * Serializes the internal state of the Uri object\n   * @return {string}\n   */\n\n\n  Uri.prototype.toString = function () {\n    var path,\n        s = this.origin();\n\n    if (this.isColonUri()) {\n      if (this.path()) {\n        s += ':' + this.path();\n      }\n    } else if (this.path()) {\n      path = this.path();\n\n      if (!(re.ends_with_slashes.test(s) || re.starts_with_slashes.test(path))) {\n        s += '/';\n      } else {\n        if (s) {\n          s.replace(re.ends_with_slashes, '/');\n        }\n\n        path = path.replace(re.starts_with_slashes, '/');\n      }\n\n      s += path;\n    } else {\n      if (this.host() && (this.query().toString() || this.anchor())) {\n        s += '/';\n      }\n    }\n\n    if (this.query().toString()) {\n      s += this.query().toString();\n    }\n\n    if (this.anchor()) {\n      if (this.anchor().indexOf('#') !== 0) {\n        s += '#';\n      }\n\n      s += this.anchor();\n    }\n\n    return s;\n  };\n  /**\n   * Clone a Uri object\n   * @return {Uri} duplicate copy of the Uri\n   */\n\n\n  Uri.prototype.clone = function () {\n    return new Uri(this.toString());\n  };\n  /**\n   * export via AMD or CommonJS, otherwise leak a global\n   */\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return Uri;\n    });\n  } else if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = Uri;\n  } else {\n    global.Uri = Uri;\n  }\n})(this);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/jsuri/Uri.js"],"names":["global","re","starts_with_slashes","ends_with_slashes","pluses","query_separator","uri_parser","Array","prototype","forEach","callback","thisArg","T","k","TypeError","O","Object","len","length","arguments","kValue","call","decode","s","toString","replace","decodeURIComponent","parseUri","str","parser","parserKeys","m","exec","parts","key","i","parseQuery","ps","p","n","v","l","pairs","indexOf","substring","split","push","Uri","uriParts","queryPairs","query","hasAuthorityPrefixUserPref","val","hasAuthorityPrefix","source","isColonUri","param","encodeURIComponent","getQueryParamValue","getQueryParamValues","arr","deleteQueryParam","keyMatchesFilter","valMatchesFilter","addQueryParam","index","Math","min","splice","hasQueryParam","replaceQueryParam","newVal","oldVal","method","charAt","toUpperCase","slice","scheme","protocol","host","origin","userInfo","port","path","substr","match","addTrailingSlash","test","anchor","clone","define","amd","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AAEA,WAASA,MAAT,EAAiB;AAEhB,MAAIC,EAAE,GAAG;AACPC,IAAAA,mBAAmB,EAAE,MADd;AAEPC,IAAAA,iBAAiB,EAAE,MAFZ;AAGPC,IAAAA,MAAM,EAAE,KAHD;AAIPC,IAAAA,eAAe,EAAE,MAJV;AAKPC,IAAAA,UAAU,EAAE;AALL,GAAT;AAQA;AACF;AACA;AACA;;AACE,MAAI,CAACC,KAAK,CAACC,SAAN,CAAgBC,OAArB,EAA8B;AAC5BF,IAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,GAA0B,UAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACpD,UAAIC,CAAJ,EAAOC,CAAP;;AAEA,UAAI,QAAQ,IAAZ,EAAkB;AAChB,cAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;AACD;;AAED,UAAIC,CAAC,GAAGC,MAAM,CAAC,IAAD,CAAd;AACA,UAAIC,GAAG,GAAGF,CAAC,CAACG,MAAF,KAAa,CAAvB;;AAEA,UAAI,OAAOR,QAAP,KAAoB,UAAxB,EAAoC;AAClC,cAAM,IAAII,SAAJ,CAAcJ,QAAQ,GAAG,oBAAzB,CAAN;AACD;;AAED,UAAIS,SAAS,CAACD,MAAV,GAAmB,CAAvB,EAA0B;AACxBN,QAAAA,CAAC,GAAGD,OAAJ;AACD;;AAEDE,MAAAA,CAAC,GAAG,CAAJ;;AAEA,aAAOA,CAAC,GAAGI,GAAX,EAAgB;AACd,YAAIG,MAAJ;;AACA,YAAIP,CAAC,IAAIE,CAAT,EAAY;AACVK,UAAAA,MAAM,GAAGL,CAAC,CAACF,CAAD,CAAV;AACAH,UAAAA,QAAQ,CAACW,IAAT,CAAcT,CAAd,EAAiBQ,MAAjB,EAAyBP,CAAzB,EAA4BE,CAA5B;AACD;;AACDF,QAAAA,CAAC;AACF;AACF,KA5BD;AA6BD;AAED;AACF;AACA;AACA;AACA;;;AACE,WAASS,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,QAAIA,CAAJ,EAAO;AACHA,MAAAA,CAAC,GAAGA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqBxB,EAAE,CAACG,MAAxB,EAAgC,KAAhC,CAAJ;AACAmB,MAAAA,CAAC,GAAGG,kBAAkB,CAACH,CAAD,CAAtB;AACH;;AACD,WAAOA,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACE,WAASI,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,QAAIC,MAAM,GAAG5B,EAAE,CAACK,UAAhB;AACA,QAAIwB,UAAU,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,WAAvB,EAAoC,UAApC,EAAgD,MAAhD,EAAwD,UAAxD,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,YAApF,EAAkG,UAAlG,EAA8G,MAA9G,EAAsH,WAAtH,EAAmI,MAAnI,EAA2I,OAA3I,EAAoJ,QAApJ,CAAjB;AACA,QAAIC,CAAC,GAAGF,MAAM,CAACG,IAAP,CAAYJ,GAAG,IAAI,EAAnB,CAAR;AACA,QAAIK,KAAK,GAAG,EAAZ;AAEAH,IAAAA,UAAU,CAACrB,OAAX,CAAmB,UAASyB,GAAT,EAAcC,CAAd,EAAiB;AAClCF,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAaH,CAAC,CAACI,CAAD,CAAD,IAAQ,EAArB;AACD,KAFD;AAIA,WAAOF,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACE,WAASG,UAAT,CAAoBR,GAApB,EAAyB;AACvB,QAAIO,CAAJ,EAAOE,EAAP,EAAWC,CAAX,EAAcC,CAAd,EAAiB1B,CAAjB,EAAoB2B,CAApB,EAAuBC,CAAvB;AACA,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAI,OAAOd,GAAP,KAAgB,WAAhB,IAA+BA,GAAG,KAAK,IAAvC,IAA+CA,GAAG,KAAK,EAA3D,EAA+D;AAC7D,aAAOc,KAAP;AACD;;AAED,QAAId,GAAG,CAACe,OAAJ,CAAY,GAAZ,MAAqB,CAAzB,EAA4B;AAC1Bf,MAAAA,GAAG,GAAGA,GAAG,CAACgB,SAAJ,CAAc,CAAd,CAAN;AACD;;AAEDP,IAAAA,EAAE,GAAGT,GAAG,CAACJ,QAAJ,GAAeqB,KAAf,CAAqB5C,EAAE,CAACI,eAAxB,CAAL;;AAEA,SAAK8B,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAGJ,EAAE,CAACnB,MAAnB,EAA2BiB,CAAC,GAAGM,CAA/B,EAAkCN,CAAC,EAAnC,EAAuC;AACrCG,MAAAA,CAAC,GAAGD,EAAE,CAACF,CAAD,CAAN;AACAI,MAAAA,CAAC,GAAGD,CAAC,CAACK,OAAF,CAAU,GAAV,CAAJ;;AAEA,UAAIJ,CAAC,KAAK,CAAV,EAAa;AACX1B,QAAAA,CAAC,GAAGS,MAAM,CAACgB,CAAC,CAACM,SAAF,CAAY,CAAZ,EAAeL,CAAf,CAAD,CAAV;AACAC,QAAAA,CAAC,GAAGlB,MAAM,CAACgB,CAAC,CAACM,SAAF,CAAYL,CAAC,GAAG,CAAhB,CAAD,CAAV;AACAG,QAAAA,KAAK,CAACI,IAAN,CAAWP,CAAC,KAAK,CAAC,CAAP,GAAW,CAACD,CAAD,EAAI,IAAJ,CAAX,GAAuB,CAACzB,CAAD,EAAI2B,CAAJ,CAAlC;AACD;AAEF;;AACD,WAAOE,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACE,WAASK,GAAT,CAAanB,GAAb,EAAkB;AAChB,SAAKoB,QAAL,GAAgBrB,QAAQ,CAACC,GAAD,CAAxB;AACA,SAAKqB,UAAL,GAAkBb,UAAU,CAAC,KAAKY,QAAL,CAAcE,KAAf,CAA5B;AACA,SAAKC,0BAAL,GAAkC,IAAlC;AACD;AAED;AACF;AACA;;;AACE,GAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,QAAjD,EAA2D1C,OAA3D,CAAmE,UAASyB,GAAT,EAAc;AAC/Ea,IAAAA,GAAG,CAACvC,SAAJ,CAAc0B,GAAd,IAAqB,UAASkB,GAAT,EAAc;AACjC,UAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC9B,aAAKJ,QAAL,CAAcd,GAAd,IAAqBkB,GAArB;AACD;;AACD,aAAO,KAAKJ,QAAL,CAAcd,GAAd,CAAP;AACD,KALD;AAMD,GAPD;AASA;AACF;AACA;AACA;AACA;;AACEa,EAAAA,GAAG,CAACvC,SAAJ,CAAc6C,kBAAd,GAAmC,UAASD,GAAT,EAAc;AAC/C,QAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC9B,WAAKD,0BAAL,GAAkCC,GAAlC;AACD;;AAED,QAAI,KAAKD,0BAAL,KAAoC,IAAxC,EAA8C;AAC5C,aAAQ,KAAKH,QAAL,CAAcM,MAAd,CAAqBX,OAArB,CAA6B,IAA7B,MAAuC,CAAC,CAAhD;AACD,KAFD,MAEO;AACL,aAAO,KAAKQ,0BAAZ;AACD;AACF,GAVD;;AAYAJ,EAAAA,GAAG,CAACvC,SAAJ,CAAc+C,UAAd,GAA2B,UAAUH,GAAV,EAAe;AACxC,QAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC9B,WAAKJ,QAAL,CAAcO,UAAd,GAA2B,CAAC,CAACH,GAA7B;AACD,KAFD,MAEO;AACL,aAAO,CAAC,CAAC,KAAKJ,QAAL,CAAcO,UAAvB;AACD;AACF,GAND;AAQA;AACF;AACA;AACA;AACA;;;AACER,EAAAA,GAAG,CAACvC,SAAJ,CAAc0C,KAAd,GAAsB,UAASE,GAAT,EAAc;AAClC,QAAI7B,CAAC,GAAG,EAAR;AAAA,QAAYY,CAAZ;AAAA,QAAeqB,KAAf;AAAA,QAAsBf,CAAtB;;AAEA,QAAI,OAAOW,GAAP,KAAe,WAAnB,EAAgC;AAC9B,WAAKH,UAAL,GAAkBb,UAAU,CAACgB,GAAD,CAA5B;AACD;;AAED,SAAKjB,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAG,KAAKQ,UAAL,CAAgB/B,MAAhC,EAAwCiB,CAAC,GAAGM,CAA5C,EAA+CN,CAAC,EAAhD,EAAoD;AAClDqB,MAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;;AACA,UAAIZ,CAAC,CAACL,MAAF,GAAW,CAAf,EAAkB;AAChBK,QAAAA,CAAC,IAAI,GAAL;AACD;;AACD,UAAIiC,KAAK,CAAC,CAAD,CAAL,KAAa,IAAjB,EAAuB;AACrBjC,QAAAA,CAAC,IAAIiC,KAAK,CAAC,CAAD,CAAV;AACD,OAFD,MAEO;AACLjC,QAAAA,CAAC,IAAIiC,KAAK,CAAC,CAAD,CAAV;AACAjC,QAAAA,CAAC,IAAI,GAAL;;AACA,YAAI,OAAOiC,KAAK,CAAC,CAAD,CAAZ,KAAoB,WAAxB,EAAqC;AACnCjC,UAAAA,CAAC,IAAIkC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAvB;AACD;AACF;AACF;;AACD,WAAOjC,CAAC,CAACL,MAAF,GAAW,CAAX,GAAe,MAAMK,CAArB,GAAyBA,CAAhC;AACD,GAvBD;AAyBA;AACF;AACA;AACA;AACA;;;AACEwB,EAAAA,GAAG,CAACvC,SAAJ,CAAckD,kBAAd,GAAmC,UAAUxB,GAAV,EAAe;AAChD,QAAIsB,KAAJ,EAAWrB,CAAX,EAAcM,CAAd;;AACA,SAAKN,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAG,KAAKQ,UAAL,CAAgB/B,MAAhC,EAAwCiB,CAAC,GAAGM,CAA5C,EAA+CN,CAAC,EAAhD,EAAoD;AAClDqB,MAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;;AACA,UAAID,GAAG,KAAKsB,KAAK,CAAC,CAAD,CAAjB,EAAsB;AACpB,eAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;AACF;AACF,GARD;AAUA;AACF;AACA;AACA;AACA;;;AACET,EAAAA,GAAG,CAACvC,SAAJ,CAAcmD,mBAAd,GAAoC,UAAUzB,GAAV,EAAe;AACjD,QAAI0B,GAAG,GAAG,EAAV;AAAA,QAAczB,CAAd;AAAA,QAAiBqB,KAAjB;AAAA,QAAwBf,CAAxB;;AACA,SAAKN,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAG,KAAKQ,UAAL,CAAgB/B,MAAhC,EAAwCiB,CAAC,GAAGM,CAA5C,EAA+CN,CAAC,EAAhD,EAAoD;AAClDqB,MAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;;AACA,UAAID,GAAG,KAAKsB,KAAK,CAAC,CAAD,CAAjB,EAAsB;AACpBI,QAAAA,GAAG,CAACd,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd;AACD;AACF;;AACD,WAAOI,GAAP;AACD,GATD;AAWA;AACF;AACA;AACA;AACA;AACA;;;AACEb,EAAAA,GAAG,CAACvC,SAAJ,CAAcqD,gBAAd,GAAiC,UAAU3B,GAAV,EAAekB,GAAf,EAAoB;AACnD,QAAIQ,GAAG,GAAG,EAAV;AAAA,QAAczB,CAAd;AAAA,QAAiBqB,KAAjB;AAAA,QAAwBM,gBAAxB;AAAA,QAA0CC,gBAA1C;AAAA,QAA4DtB,CAA5D;;AAEA,SAAKN,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAG,KAAKQ,UAAL,CAAgB/B,MAAhC,EAAwCiB,CAAC,GAAGM,CAA5C,EAA+CN,CAAC,EAAhD,EAAoD;AAElDqB,MAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;AACA2B,MAAAA,gBAAgB,GAAGxC,MAAM,CAACkC,KAAK,CAAC,CAAD,CAAN,CAAN,KAAqBlC,MAAM,CAACY,GAAD,CAA9C;AACA6B,MAAAA,gBAAgB,GAAGP,KAAK,CAAC,CAAD,CAAL,KAAaJ,GAAhC;;AAEA,UAAKjC,SAAS,CAACD,MAAV,KAAqB,CAArB,IAA0B,CAAC4C,gBAA5B,IAAkD3C,SAAS,CAACD,MAAV,KAAqB,CAArB,KAA2B,CAAC4C,gBAAD,IAAqB,CAACC,gBAAjD,CAAtD,EAA2H;AACzHH,QAAAA,GAAG,CAACd,IAAJ,CAASU,KAAT;AACD;AACF;;AAED,SAAKP,UAAL,GAAkBW,GAAlB;AAEA,WAAO,IAAP;AACD,GAjBD;AAmBA;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEb,EAAAA,GAAG,CAACvC,SAAJ,CAAcwD,aAAd,GAA8B,UAAU9B,GAAV,EAAekB,GAAf,EAAoBa,KAApB,EAA2B;AACvD,QAAI9C,SAAS,CAACD,MAAV,KAAqB,CAArB,IAA0B+C,KAAK,KAAK,CAAC,CAAzC,EAA4C;AAC1CA,MAAAA,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASF,KAAT,EAAgB,KAAKhB,UAAL,CAAgB/B,MAAhC,CAAR;AACA,WAAK+B,UAAL,CAAgBmB,MAAhB,CAAuBH,KAAvB,EAA8B,CAA9B,EAAiC,CAAC/B,GAAD,EAAMkB,GAAN,CAAjC;AACD,KAHD,MAGO,IAAIjC,SAAS,CAACD,MAAV,GAAmB,CAAvB,EAA0B;AAC/B,WAAK+B,UAAL,CAAgBH,IAAhB,CAAqB,CAACZ,GAAD,EAAMkB,GAAN,CAArB;AACD;;AACD,WAAO,IAAP;AACD,GARD;AAUA;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEL,EAAAA,GAAG,CAACvC,SAAJ,CAAc6D,aAAd,GAA8B,UAAUnC,GAAV,EAAe;AAC3C,QAAIC,CAAJ;AAAA,QAAOlB,GAAG,GAAG,KAAKgC,UAAL,CAAgB/B,MAA7B;;AACA,SAAKiB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlB,GAAhB,EAAqBkB,CAAC,EAAtB,EAA0B;AACxB,UAAI,KAAKc,UAAL,CAAgBd,CAAhB,EAAmB,CAAnB,KAAyBD,GAA7B,EACE,OAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACD,GAPD;AASA;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEa,EAAAA,GAAG,CAACvC,SAAJ,CAAc8D,iBAAd,GAAkC,UAAUpC,GAAV,EAAeqC,MAAf,EAAuBC,MAAvB,EAA+B;AAC/D,QAAIP,KAAK,GAAG,CAAC,CAAb;AAAA,QAAgBhD,GAAG,GAAG,KAAKgC,UAAL,CAAgB/B,MAAtC;AAAA,QAA8CiB,CAA9C;AAAA,QAAiDqB,KAAjD;;AAEA,QAAIrC,SAAS,CAACD,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAKiB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlB,GAAhB,EAAqBkB,CAAC,EAAtB,EAA0B;AACxBqB,QAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;;AACA,YAAIb,MAAM,CAACkC,KAAK,CAAC,CAAD,CAAN,CAAN,KAAqBlC,MAAM,CAACY,GAAD,CAA3B,IAAoCR,kBAAkB,CAAC8B,KAAK,CAAC,CAAD,CAAN,CAAlB,KAAiClC,MAAM,CAACkD,MAAD,CAA/E,EAAyF;AACvFP,UAAAA,KAAK,GAAG9B,CAAR;AACA;AACD;AACF;;AACD,UAAI8B,KAAK,IAAI,CAAb,EAAgB;AACd,aAAKJ,gBAAL,CAAsB3B,GAAtB,EAA2BZ,MAAM,CAACkD,MAAD,CAAjC,EAA2CR,aAA3C,CAAyD9B,GAAzD,EAA8DqC,MAA9D,EAAsEN,KAAtE;AACD;AACF,KAXD,MAWO;AACL,WAAK9B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlB,GAAhB,EAAqBkB,CAAC,EAAtB,EAA0B;AACxBqB,QAAAA,KAAK,GAAG,KAAKP,UAAL,CAAgBd,CAAhB,CAAR;;AACA,YAAIb,MAAM,CAACkC,KAAK,CAAC,CAAD,CAAN,CAAN,KAAqBlC,MAAM,CAACY,GAAD,CAA/B,EAAsC;AACpC+B,UAAAA,KAAK,GAAG9B,CAAR;AACA;AACD;AACF;;AACD,WAAK0B,gBAAL,CAAsB3B,GAAtB;AACA,WAAK8B,aAAL,CAAmB9B,GAAnB,EAAwBqC,MAAxB,EAAgCN,KAAhC;AACD;;AACD,WAAO,IAAP;AACD,GA1BD;AA4BA;AACF;AACA;;;AACE,GAAC,UAAD,EAAa,oBAAb,EAAmC,YAAnC,EAAiD,UAAjD,EAA6D,MAA7D,EAAqE,MAArE,EAA6E,MAA7E,EAAqF,OAArF,EAA8F,QAA9F,EAAwGxD,OAAxG,CAAgH,UAASyB,GAAT,EAAc;AAC5H,QAAIuC,MAAM,GAAG,QAAQvC,GAAG,CAACwC,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAR,GAAsCzC,GAAG,CAAC0C,KAAJ,CAAU,CAAV,CAAnD;;AACA7B,IAAAA,GAAG,CAACvC,SAAJ,CAAciE,MAAd,IAAwB,UAASrB,GAAT,EAAc;AACpC,WAAKlB,GAAL,EAAUkB,GAAV;AACA,aAAO,IAAP;AACD,KAHD;AAID,GAND;AAQA;AACF;AACA;AACA;;AACEL,EAAAA,GAAG,CAACvC,SAAJ,CAAcqE,MAAd,GAAuB,YAAW;AAChC,QAAItD,CAAC,GAAG,EAAR;;AAEA,QAAI,KAAKuD,QAAL,EAAJ,EAAqB;AACnBvD,MAAAA,CAAC,IAAI,KAAKuD,QAAL,EAAL;;AACA,UAAI,KAAKA,QAAL,GAAgBnC,OAAhB,CAAwB,GAAxB,MAAiC,KAAKmC,QAAL,GAAgB5D,MAAhB,GAAyB,CAA9D,EAAiE;AAC/DK,QAAAA,CAAC,IAAI,GAAL;AACD;;AACDA,MAAAA,CAAC,IAAI,IAAL;AACD,KAND,MAMO;AACL,UAAI,KAAK8B,kBAAL,MAA6B,KAAK0B,IAAL,EAAjC,EAA8C;AAC5CxD,QAAAA,CAAC,IAAI,IAAL;AACD;AACF;;AAED,WAAOA,CAAP;AACD,GAhBD;AAkBA;AACF;AACA;AACA;AACA;;;AACEwB,EAAAA,GAAG,CAACvC,SAAJ,CAAcwE,MAAd,GAAuB,YAAW;AAChC,QAAIzD,CAAC,GAAG,KAAKsD,MAAL,EAAR;;AAEA,QAAI,KAAKI,QAAL,MAAmB,KAAKF,IAAL,EAAvB,EAAoC;AAClCxD,MAAAA,CAAC,IAAI,KAAK0D,QAAL,EAAL;;AACA,UAAI,KAAKA,QAAL,GAAgBtC,OAAhB,CAAwB,GAAxB,MAAiC,KAAKsC,QAAL,GAAgB/D,MAAhB,GAAyB,CAA9D,EAAiE;AAC/DK,QAAAA,CAAC,IAAI,GAAL;AACD;AACF;;AAED,QAAI,KAAKwD,IAAL,EAAJ,EAAiB;AACfxD,MAAAA,CAAC,IAAI,KAAKwD,IAAL,EAAL;;AACA,UAAI,KAAKG,IAAL,MAAgB,KAAKC,IAAL,MAAe,KAAKA,IAAL,GAAYC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,OAA/B,CAAnC,EAA6E;AAC3E9D,QAAAA,CAAC,IAAI,MAAM,KAAK2D,IAAL,EAAX;AACD;AACF;;AAED,WAAO3D,CAAP;AACD,GAlBD;AAoBA;AACF;AACA;;;AACEwB,EAAAA,GAAG,CAACvC,SAAJ,CAAc8E,gBAAd,GAAiC,YAAW;AAC1C,QAAIH,IAAI,GAAG,KAAKA,IAAL,MAAe,EAA1B;;AAEA,QAAIA,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,MAAoB,GAAxB,EAA6B;AAC3B,WAAKD,IAAL,CAAUA,IAAI,GAAG,GAAjB;AACD;;AAED,WAAO,IAAP;AACD,GARD;AAUA;AACF;AACA;AACA;;;AACEpC,EAAAA,GAAG,CAACvC,SAAJ,CAAcgB,QAAd,GAAyB,YAAW;AAClC,QAAI2D,IAAJ;AAAA,QAAU5D,CAAC,GAAG,KAAKyD,MAAL,EAAd;;AAEA,QAAI,KAAKzB,UAAL,EAAJ,EAAuB;AACrB,UAAI,KAAK4B,IAAL,EAAJ,EAAiB;AACf5D,QAAAA,CAAC,IAAI,MAAI,KAAK4D,IAAL,EAAT;AACD;AACF,KAJD,MAIO,IAAI,KAAKA,IAAL,EAAJ,EAAiB;AACtBA,MAAAA,IAAI,GAAG,KAAKA,IAAL,EAAP;;AACA,UAAI,EAAElF,EAAE,CAACE,iBAAH,CAAqBoF,IAArB,CAA0BhE,CAA1B,KAAgCtB,EAAE,CAACC,mBAAH,CAAuBqF,IAAvB,CAA4BJ,IAA5B,CAAlC,CAAJ,EAA0E;AACxE5D,QAAAA,CAAC,IAAI,GAAL;AACD,OAFD,MAEO;AACL,YAAIA,CAAJ,EAAO;AACLA,UAAAA,CAAC,CAACE,OAAF,CAAUxB,EAAE,CAACE,iBAAb,EAAgC,GAAhC;AACD;;AACDgF,QAAAA,IAAI,GAAGA,IAAI,CAAC1D,OAAL,CAAaxB,EAAE,CAACC,mBAAhB,EAAqC,GAArC,CAAP;AACD;;AACDqB,MAAAA,CAAC,IAAI4D,IAAL;AACD,KAXM,MAWA;AACL,UAAI,KAAKJ,IAAL,OAAgB,KAAK7B,KAAL,GAAa1B,QAAb,MAA2B,KAAKgE,MAAL,EAA3C,CAAJ,EAA+D;AAC7DjE,QAAAA,CAAC,IAAI,GAAL;AACD;AACF;;AACD,QAAI,KAAK2B,KAAL,GAAa1B,QAAb,EAAJ,EAA6B;AAC3BD,MAAAA,CAAC,IAAI,KAAK2B,KAAL,GAAa1B,QAAb,EAAL;AACD;;AAED,QAAI,KAAKgE,MAAL,EAAJ,EAAmB;AACjB,UAAI,KAAKA,MAAL,GAAc7C,OAAd,CAAsB,GAAtB,MAA+B,CAAnC,EAAsC;AACpCpB,QAAAA,CAAC,IAAI,GAAL;AACD;;AACDA,MAAAA,CAAC,IAAI,KAAKiE,MAAL,EAAL;AACD;;AAED,WAAOjE,CAAP;AACD,GAnCD;AAqCA;AACF;AACA;AACA;;;AACEwB,EAAAA,GAAG,CAACvC,SAAJ,CAAciF,KAAd,GAAsB,YAAW;AAC/B,WAAO,IAAI1C,GAAJ,CAAQ,KAAKvB,QAAL,EAAR,CAAP;AACD,GAFD;AAIA;AACF;AACA;;;AACE,MAAI,OAAOkE,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9CD,IAAAA,MAAM,CAAC,YAAW;AAChB,aAAO3C,GAAP;AACD,KAFK,CAAN;AAGD,GAJD,MAIO,IAAI,OAAO6C,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,OAAd,KAA0B,WAA/D,EAA4E;AACjFD,IAAAA,MAAM,CAACC,OAAP,GAAiB9C,GAAjB;AACD,GAFM,MAEA;AACL/C,IAAAA,MAAM,CAAC+C,GAAP,GAAaA,GAAb;AACD;AACF,CA5bA,EA4bC,IA5bD,CAAD","sourcesContent":["/*!\n * jsUri\n * https://github.com/derek-watson/jsUri\n *\n * Copyright 2013, Derek Watson\n * Released under the MIT license.\n *\n * Includes parseUri regular expressions\n * http://blog.stevenlevithan.com/archives/parseuri\n * Copyright 2007, Steven Levithan\n * Released under the MIT license.\n */\n\n /*globals define, module */\n\n(function(global) {\n\n  var re = {\n    starts_with_slashes: /^\\/+/,\n    ends_with_slashes: /\\/+$/,\n    pluses: /\\+/g,\n    query_separator: /[&;]/,\n    uri_parser: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@\\/]*)(?::([^:@]*))?)?@)?(\\[[0-9a-fA-F:.]+\\]|[^:\\/?#]*)(?::(\\d+|(?=:)))?(:)?)((((?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  };\n\n  /**\n   * Define forEach for older js environments\n   * @see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach#Compatibility\n   */\n  if (!Array.prototype.forEach) {\n    Array.prototype.forEach = function(callback, thisArg) {\n      var T, k;\n\n      if (this == null) {\n        throw new TypeError(' this is null or not defined');\n      }\n\n      var O = Object(this);\n      var len = O.length >>> 0;\n\n      if (typeof callback !== \"function\") {\n        throw new TypeError(callback + ' is not a function');\n      }\n\n      if (arguments.length > 1) {\n        T = thisArg;\n      }\n\n      k = 0;\n\n      while (k < len) {\n        var kValue;\n        if (k in O) {\n          kValue = O[k];\n          callback.call(T, kValue, k, O);\n        }\n        k++;\n      }\n    };\n  }\n\n  /**\n   * unescape a query param value\n   * @param  {string} s encoded value\n   * @return {string}   decoded value\n   */\n  function decode(s) {\n    if (s) {\n        s = s.toString().replace(re.pluses, '%20');\n        s = decodeURIComponent(s);\n    }\n    return s;\n  }\n\n  /**\n   * Breaks a uri string down into its individual parts\n   * @param  {string} str uri\n   * @return {object}     parts\n   */\n  function parseUri(str) {\n    var parser = re.uri_parser;\n    var parserKeys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"isColonUri\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n    var m = parser.exec(str || '');\n    var parts = {};\n\n    parserKeys.forEach(function(key, i) {\n      parts[key] = m[i] || '';\n    });\n\n    return parts;\n  }\n\n  /**\n   * Breaks a query string down into an array of key/value pairs\n   * @param  {string} str query\n   * @return {array}      array of arrays (key/value pairs)\n   */\n  function parseQuery(str) {\n    var i, ps, p, n, k, v, l;\n    var pairs = [];\n\n    if (typeof(str) === 'undefined' || str === null || str === '') {\n      return pairs;\n    }\n\n    if (str.indexOf('?') === 0) {\n      str = str.substring(1);\n    }\n\n    ps = str.toString().split(re.query_separator);\n\n    for (i = 0, l = ps.length; i < l; i++) {\n      p = ps[i];\n      n = p.indexOf('=');\n\n      if (n !== 0) {\n        k = decode(p.substring(0, n));\n        v = decode(p.substring(n + 1));\n        pairs.push(n === -1 ? [p, null] : [k, v]);\n      }\n\n    }\n    return pairs;\n  }\n\n  /**\n   * Creates a new Uri object\n   * @constructor\n   * @param {string} str\n   */\n  function Uri(str) {\n    this.uriParts = parseUri(str);\n    this.queryPairs = parseQuery(this.uriParts.query);\n    this.hasAuthorityPrefixUserPref = null;\n  }\n\n  /**\n   * Define getter/setter methods\n   */\n  ['protocol', 'userInfo', 'host', 'port', 'path', 'anchor'].forEach(function(key) {\n    Uri.prototype[key] = function(val) {\n      if (typeof val !== 'undefined') {\n        this.uriParts[key] = val;\n      }\n      return this.uriParts[key];\n    };\n  });\n\n  /**\n   * if there is no protocol, the leading // can be enabled or disabled\n   * @param  {Boolean}  val\n   * @return {Boolean}\n   */\n  Uri.prototype.hasAuthorityPrefix = function(val) {\n    if (typeof val !== 'undefined') {\n      this.hasAuthorityPrefixUserPref = val;\n    }\n\n    if (this.hasAuthorityPrefixUserPref === null) {\n      return (this.uriParts.source.indexOf('//') !== -1);\n    } else {\n      return this.hasAuthorityPrefixUserPref;\n    }\n  };\n\n  Uri.prototype.isColonUri = function (val) {\n    if (typeof val !== 'undefined') {\n      this.uriParts.isColonUri = !!val;\n    } else {\n      return !!this.uriParts.isColonUri;\n    }\n  };\n\n  /**\n   * Serializes the internal state of the query pairs\n   * @param  {string} [val]   set a new query string\n   * @return {string}         query string\n   */\n  Uri.prototype.query = function(val) {\n    var s = '', i, param, l;\n\n    if (typeof val !== 'undefined') {\n      this.queryPairs = parseQuery(val);\n    }\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n      if (s.length > 0) {\n        s += '&';\n      }\n      if (param[1] === null) {\n        s += param[0];\n      } else {\n        s += param[0];\n        s += '=';\n        if (typeof param[1] !== 'undefined') {\n          s += encodeURIComponent(param[1]);\n        }\n      }\n    }\n    return s.length > 0 ? '?' + s : s;\n  };\n\n  /**\n   * returns the first query param value found for the key\n   * @param  {string} key query key\n   * @return {string}     first value found for key\n   */\n  Uri.prototype.getQueryParamValue = function (key) {\n    var param, i, l;\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n      if (key === param[0]) {\n        return param[1];\n      }\n    }\n  };\n\n  /**\n   * returns an array of query param values for the key\n   * @param  {string} key query key\n   * @return {array}      array of values\n   */\n  Uri.prototype.getQueryParamValues = function (key) {\n    var arr = [], i, param, l;\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n      param = this.queryPairs[i];\n      if (key === param[0]) {\n        arr.push(param[1]);\n      }\n    }\n    return arr;\n  };\n\n  /**\n   * removes query parameters\n   * @param  {string} key     remove values for key\n   * @param  {val}    [val]   remove a specific value, otherwise removes all\n   * @return {Uri}            returns self for fluent chaining\n   */\n  Uri.prototype.deleteQueryParam = function (key, val) {\n    var arr = [], i, param, keyMatchesFilter, valMatchesFilter, l;\n\n    for (i = 0, l = this.queryPairs.length; i < l; i++) {\n\n      param = this.queryPairs[i];\n      keyMatchesFilter = decode(param[0]) === decode(key);\n      valMatchesFilter = param[1] === val;\n\n      if ((arguments.length === 1 && !keyMatchesFilter) || (arguments.length === 2 && (!keyMatchesFilter || !valMatchesFilter))) {\n        arr.push(param);\n      }\n    }\n\n    this.queryPairs = arr;\n\n    return this;\n  };\n\n  /**\n   * adds a query parameter\n   * @param  {string}  key        add values for key\n   * @param  {string}  val        value to add\n   * @param  {integer} [index]    specific index to add the value at\n   * @return {Uri}                returns self for fluent chaining\n   */\n  Uri.prototype.addQueryParam = function (key, val, index) {\n    if (arguments.length === 3 && index !== -1) {\n      index = Math.min(index, this.queryPairs.length);\n      this.queryPairs.splice(index, 0, [key, val]);\n    } else if (arguments.length > 0) {\n      this.queryPairs.push([key, val]);\n    }\n    return this;\n  };\n\n  /**\n   * test for the existence of a query parameter\n   * @param  {string}  key        add values for key\n   * @param  {string}  val        value to add\n   * @param  {integer} [index]    specific index to add the value at\n   * @return {Uri}                returns self for fluent chaining\n   */\n  Uri.prototype.hasQueryParam = function (key) {\n    var i, len = this.queryPairs.length;\n    for (i = 0; i < len; i++) {\n      if (this.queryPairs[i][0] == key)\n        return true;\n    }\n    return false;\n  };\n\n  /**\n   * replaces query param values\n   * @param  {string} key         key to replace value for\n   * @param  {string} newVal      new value\n   * @param  {string} [oldVal]    replace only one specific value (otherwise replaces all)\n   * @return {Uri}                returns self for fluent chaining\n   */\n  Uri.prototype.replaceQueryParam = function (key, newVal, oldVal) {\n    var index = -1, len = this.queryPairs.length, i, param;\n\n    if (arguments.length === 3) {\n      for (i = 0; i < len; i++) {\n        param = this.queryPairs[i];\n        if (decode(param[0]) === decode(key) && decodeURIComponent(param[1]) === decode(oldVal)) {\n          index = i;\n          break;\n        }\n      }\n      if (index >= 0) {\n        this.deleteQueryParam(key, decode(oldVal)).addQueryParam(key, newVal, index);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        param = this.queryPairs[i];\n        if (decode(param[0]) === decode(key)) {\n          index = i;\n          break;\n        }\n      }\n      this.deleteQueryParam(key);\n      this.addQueryParam(key, newVal, index);\n    }\n    return this;\n  };\n\n  /**\n   * Define fluent setter methods (setProtocol, setHasAuthorityPrefix, etc)\n   */\n  ['protocol', 'hasAuthorityPrefix', 'isColonUri', 'userInfo', 'host', 'port', 'path', 'query', 'anchor'].forEach(function(key) {\n    var method = 'set' + key.charAt(0).toUpperCase() + key.slice(1);\n    Uri.prototype[method] = function(val) {\n      this[key](val);\n      return this;\n    };\n  });\n\n  /**\n   * Scheme name, colon and doubleslash, as required\n   * @return {string} http:// or possibly just //\n   */\n  Uri.prototype.scheme = function() {\n    var s = '';\n\n    if (this.protocol()) {\n      s += this.protocol();\n      if (this.protocol().indexOf(':') !== this.protocol().length - 1) {\n        s += ':';\n      }\n      s += '//';\n    } else {\n      if (this.hasAuthorityPrefix() && this.host()) {\n        s += '//';\n      }\n    }\n\n    return s;\n  };\n\n  /**\n   * Same as Mozilla nsIURI.prePath\n   * @return {string} scheme://user:password@host:port\n   * @see  https://developer.mozilla.org/en/nsIURI\n   */\n  Uri.prototype.origin = function() {\n    var s = this.scheme();\n\n    if (this.userInfo() && this.host()) {\n      s += this.userInfo();\n      if (this.userInfo().indexOf('@') !== this.userInfo().length - 1) {\n        s += '@';\n      }\n    }\n\n    if (this.host()) {\n      s += this.host();\n      if (this.port() || (this.path() && this.path().substr(0, 1).match(/[0-9]/))) {\n        s += ':' + this.port();\n      }\n    }\n\n    return s;\n  };\n\n  /**\n   * Adds a trailing slash to the path\n   */\n  Uri.prototype.addTrailingSlash = function() {\n    var path = this.path() || '';\n\n    if (path.substr(-1) !== '/') {\n      this.path(path + '/');\n    }\n\n    return this;\n  };\n\n  /**\n   * Serializes the internal state of the Uri object\n   * @return {string}\n   */\n  Uri.prototype.toString = function() {\n    var path, s = this.origin();\n\n    if (this.isColonUri()) {\n      if (this.path()) {\n        s += ':'+this.path();\n      }\n    } else if (this.path()) {\n      path = this.path();\n      if (!(re.ends_with_slashes.test(s) || re.starts_with_slashes.test(path))) {\n        s += '/';\n      } else {\n        if (s) {\n          s.replace(re.ends_with_slashes, '/');\n        }\n        path = path.replace(re.starts_with_slashes, '/');\n      }\n      s += path;\n    } else {\n      if (this.host() && (this.query().toString() || this.anchor())) {\n        s += '/';\n      }\n    }\n    if (this.query().toString()) {\n      s += this.query().toString();\n    }\n\n    if (this.anchor()) {\n      if (this.anchor().indexOf('#') !== 0) {\n        s += '#';\n      }\n      s += this.anchor();\n    }\n\n    return s;\n  };\n\n  /**\n   * Clone a Uri object\n   * @return {Uri} duplicate copy of the Uri\n   */\n  Uri.prototype.clone = function() {\n    return new Uri(this.toString());\n  };\n\n  /**\n   * export via AMD or CommonJS, otherwise leak a global\n   */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Uri;\n    });\n  } else if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = Uri;\n  } else {\n    global.Uri = Uri;\n  }\n}(this));\n"]},"metadata":{},"sourceType":"script"}