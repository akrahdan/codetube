{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\nimport { Outcome } from \"./Outcome\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateHeadingMutation, useCreateIncludedMutation, useCreateLearningOutcomeMutation, useCreateSyllabusMutation, useEditSyllabusMutation, useEditIncludedMutation, useDeleteOutcomeMutation, useEditLearningOutcomeMutation, useFetchIncludedQuery, useDeleteSyllabusMutation, useDeleteIncludedMutation, useFetchSyllabusQuery, useFetchOutcomesQuery } from \"services/projects\";\nimport { selectOutcomes, selectIncluded, selectSyllabuses } from \"state/project/projectSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n  const {\n    data: syllabusQuery\n  } = useFetchSyllabusQuery(locationPayload.id);\n  const {\n    data: learningQuery\n  } = useFetchOutcomesQuery(locationPayload.id);\n  const {\n    data: IncludedQuery\n  } = useFetchIncludedQuery(locationPayload.id);\n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses);\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes);\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded);\n  const alert = useAlert();\n  const [syllabuses, setSyllabuses] = useState([{\n    id: \"syllabusList--0\",\n    title: \"\"\n  }]);\n  const [outcomes, setOutcomes] = useState([{\n    id: \"outcomeList--0\",\n    title: \"\"\n  }]);\n  const [included, setIncluded] = useState([{\n    id: \"incList--0\",\n    title: \"\"\n  }]);\n\n  const removeSyllabus = syllabus => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = req => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = req => {\n    deleteIncluded(req.id);\n  };\n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n  useEffect(() => {\n    const syllabusResults = syllabuses;\n    syllabusResults && syllabusResults.forEach(syllabus => {\n      if (syllabus.title) {\n        createSyllabus({\n          title: syllabus.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = syllabusResults.filter(item => item.id != syllabus.id);\n          setSyllabuses(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const learningOutcomes = outcomes;\n    learningOutcomes && learningOutcomes.forEach(exp => {\n      if (exp.title) {\n        createLearningOutcome({\n          title: exp.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = learningOutcomes.filter(item => item.id != exp.id);\n          setOutcomes(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const incResults = included;\n    incResults && incResults.forEach(req => {\n      if (req.title) {\n        createIncluded({\n          title: req.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = incResults.filter(item => item.id != req.id);\n          setIncluded(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    syllabusUpdate && syllabusUpdate.forEach(req => {\n      if (req.title) {\n        console.log(\"Req: \", req);\n        editSyllabus({ ...req,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    learningUpdate && learningUpdate.forEach((req, index) => {\n      if (req.title) {\n        editLearningOutcome({ ...req,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    includeUpdate && includeUpdate.forEach(item => {\n      if (item.title) {\n        editIncluded({ ...item,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your project is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your project?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [syllabusUpdate && syllabusUpdate.map(syllabus => /*#__PURE__*/_jsxDEV(Syllabus, {\n                    syllabus: syllabus,\n                    handleRemove: removeSyllabus,\n                    handleChange: obj => {\n                      let gUpdate = [...syllabusUpdate];\n                      let index = gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setSyllabusUpdate(gUpdate);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)), syllabuses.map(syllabus => /*#__PURE__*/_jsxDEV(SyllabusCreate, {\n                    syllabus: syllabus,\n                    handleRemove: value => {\n                      const updatedGoals = syllabus.filter(result => result.id != value.id);\n                      setSyllabuses(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newSyllabus = [...syllabuses];\n                      let index = newSyllabus.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newSyllabus[index] = obj;\n                      setSyllabuses(newSyllabus);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const syllabusItem = {\n                  id: `syllabusList--${syllabuses.length}`,\n                  title: \"\"\n                };\n                const newSyllabus = [...syllabuses, syllabusItem];\n                const emptyValue = syllabuses.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setSyllabuses(newSyllabus);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"What will be ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [learningUpdate && learningUpdate.map(req => /*#__PURE__*/_jsxDEV(Outcome, {\n                    outcome: req,\n                    handleRemove: removeOutcome,\n                    handleChange: obj => {\n                      let reqUpdates = [...learningUpdate];\n                      let index = reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setLearningUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)), outcomes.map(req => /*#__PURE__*/_jsxDEV(CreateOutcome, {\n                    outcome: req,\n                    handleRemove: value => {\n                      const updatedReqs = outcomes.filter(result => result.id != value.id);\n                      setOutcomes(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...outcomes];\n                      let index = reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setOutcomes(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: `outcomeList--${outcomes.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...outcomes, reqItem];\n                const emptyValue = outcomes.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setOutcomes(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [includeUpdate && includeUpdate.map(exp => /*#__PURE__*/_jsxDEV(Included, {\n                    inc: exp,\n                    handleRemove: removeIncluded,\n                    handleChange: obj => {\n                      let expUpdate = [...includeUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setIncludeUpdate(expUpdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)), included.map(exp => /*#__PURE__*/_jsxDEV(CreateIncluded, {\n                    inc: exp,\n                    handleRemove: value => {\n                      const updatedIncluded = included.filter(result => result.id != value.id);\n                      setIncluded(updatedIncluded);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...included];\n                      let index = expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setIncluded(expdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: `incList--${included.length}`,\n                  value: \"\"\n                };\n                const newExps = [...included, expItem];\n                const emptyValue = included.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setIncluded(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"MSnONzMxk8xWg1wRge4qjEUgXCU=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateSyllabusMutation, useCreateLearningOutcomeMutation, useCreateIncludedMutation, useEditSyllabusMutation, useEditLearningOutcomeMutation, useEditIncludedMutation, useDeleteSyllabusMutation, useDeleteOutcomeMutation, useDeleteIncludedMutation, useFetchSyllabusQuery, useFetchOutcomesQuery, useFetchIncludedQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js"],"names":["useEffect","useState","useAlert","Included","CreateIncluded","Syllabus","SyllabusCreate","CreateOutcome","Outcome","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateHeadingMutation","useCreateIncludedMutation","useCreateLearningOutcomeMutation","useCreateSyllabusMutation","useEditSyllabusMutation","useEditIncludedMutation","useDeleteOutcomeMutation","useEditLearningOutcomeMutation","useFetchIncludedQuery","useDeleteSyllabusMutation","useDeleteIncludedMutation","useFetchSyllabusQuery","useFetchOutcomesQuery","selectOutcomes","selectIncluded","selectSyllabuses","Target","locationPath","selectedSave","locationPayload","selectedOutcomes","selectedIncluded","selectedSyllabuses","createSyllabus","createLearningOutcome","createIncluded","editSyllabus","editLearningOutcome","editIncluded","deleteSyllabus","deleteOutcome","deleteIncluded","data","syllabusQuery","id","learningQuery","IncludedQuery","syllabusUpdate","setSyllabusUpdate","learningUpdate","setLearningUpdate","includeUpdate","setIncludeUpdate","alert","syllabuses","setSyllabuses","title","outcomes","setOutcomes","included","setIncluded","removeSyllabus","syllabus","removeOutcome","req","removeIncluded","syllabusResults","forEach","project","then","results","filter","item","show","learningOutcomes","exp","incResults","console","log","index","map","obj","gUpdate","findIndex","value","updatedGoals","result","newSyllabus","syllabusItem","length","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","name","expUpdate","updatedIncluded","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\n\n\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\n\nimport { Outcome } from \"./Outcome\";\n\nimport { selectSave } from \"state/course/courseSplice\";\n\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\n\nimport {\n  useCreateHeadingMutation,\n  useCreateIncludedMutation,\n  useCreateLearningOutcomeMutation,\n  useCreateSyllabusMutation,\n  useEditSyllabusMutation,\n  useEditIncludedMutation,\n  useDeleteOutcomeMutation,\n  useEditLearningOutcomeMutation,\n  useFetchIncludedQuery,\n  useDeleteSyllabusMutation,\n  useDeleteIncludedMutation,\n  useFetchSyllabusQuery,\n  useFetchOutcomesQuery,\n} from \"services/projects\";\n\nimport {\n  selectOutcomes,\n  selectIncluded,\n  selectSyllabuses,\n} from \"state/project/projectSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n\n  const { data: syllabusQuery } = useFetchSyllabusQuery(locationPayload.id);\n  const { data: learningQuery } = useFetchOutcomesQuery(locationPayload.id);\n  const { data: IncludedQuery } = useFetchIncludedQuery(locationPayload.id);\n\n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses);\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes);\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded);\n\n  const alert = useAlert();\n\n  const [syllabuses, setSyllabuses] = useState([\n    { id: \"syllabusList--0\", title: \"\" },\n  ]);\n  const [outcomes, setOutcomes] = useState([\n    { id: \"outcomeList--0\", title: \"\" },\n  ]);\n\n  const [included, setIncluded] = useState([{ id: \"incList--0\", title: \"\" }]);\n\n  const removeSyllabus = (syllabus) => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = (req) => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = (req) => {\n    deleteIncluded(req.id);\n  };\n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n\n  useEffect(() => {\n    const syllabusResults = syllabuses;\n    syllabusResults &&\n      syllabusResults.forEach((syllabus) => {\n        if (syllabus.title) {\n          createSyllabus({\n            title: syllabus.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = syllabusResults.filter(\n              (item) => item.id != syllabus.id\n            );\n            setSyllabuses(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    const learningOutcomes = outcomes;\n    learningOutcomes &&\n      learningOutcomes.forEach((exp) => {\n        if (exp.title) {\n          createLearningOutcome({\n            title: exp.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = learningOutcomes.filter(\n              (item) => item.id != exp.id\n            );\n            setOutcomes(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    const incResults = included;\n    incResults &&\n      incResults.forEach((req) => {\n        if (req.title) {\n          createIncluded({\n            title: req.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = incResults.filter((item) => item.id != req.id);\n            setIncluded(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n    syllabusUpdate &&\n      syllabusUpdate.forEach((req) => {\n        if (req.title) {\n          console.log(\"Req: \", req);\n          editSyllabus({\n            ...req,\n            project: locationPayload.id,\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    learningUpdate &&\n      learningUpdate.forEach((req, index) => {\n        if (req.title) {\n          editLearningOutcome({\n            ...req,\n            project: locationPayload.id,\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    includeUpdate &&\n      includeUpdate.forEach((item) => {\n        if (item.title) {\n          editIncluded({\n            ...item,\n            project: locationPayload.id,\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            project is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your project?\n                </label>\n                <div>\n                  <div>\n                    {syllabusUpdate &&\n                      syllabusUpdate.map((syllabus) => (\n                        <Syllabus\n                          key={syllabus.id}\n                          syllabus={syllabus}\n                          handleRemove={removeSyllabus}\n                          handleChange={(obj) => {\n                            let gUpdate = [...syllabusUpdate];\n                            let index = gUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setSyllabusUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {syllabuses.map((syllabus) => (\n                      <SyllabusCreate\n                        key={syllabus.id}\n                        syllabus={syllabus}\n                        handleRemove={(value) => {\n                          const updatedGoals = syllabus.filter(\n                            (result) => result.id != value.id\n                          );\n                          setSyllabuses(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newSyllabus = [...syllabuses];\n                          let index = newSyllabus.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newSyllabus[index] = obj;\n                          setSyllabuses(newSyllabus);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const syllabusItem = {\n                    id: `syllabusList--${syllabuses.length}`,\n                    title: \"\",\n                  };\n                  const newSyllabus = [...syllabuses, syllabusItem];\n                  const emptyValue = syllabuses.filter(\n                    (item) => item.title == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setSyllabuses(newSyllabus);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  What will be ?\n                </label>\n                <div>\n                  <div>\n                    {learningUpdate &&\n                      learningUpdate.map((req) => (\n                        <Outcome\n                          outcome={req}\n                          key={req.id}\n                          handleRemove={removeOutcome}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...learningUpdate];\n                            let index = reqUpdates.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setLearningUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {outcomes.map((req) => (\n                      <CreateOutcome\n                        outcome={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = outcomes.filter(\n                            (result) => result.id != value.id\n                          );\n                          setOutcomes(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...outcomes];\n                          let index = reqs.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setOutcomes(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: `outcomeList--${outcomes.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...outcomes, reqItem];\n                  const emptyValue = outcomes.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setOutcomes(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {includeUpdate &&\n                      includeUpdate.map((exp) => (\n                        <Included\n                          key={exp.id}\n                          inc={exp}\n                          handleRemove={removeIncluded}\n                          handleChange={(obj) => {\n                            let expUpdate = [...includeUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setIncludeUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {included.map((exp) => (\n                      <CreateIncluded\n                        key={exp.id}\n                        inc={exp}\n                        handleRemove={(value) => {\n                          const updatedIncluded = included.filter(\n                            (result) => result.id != value.id\n                          );\n                          setIncluded(updatedIncluded);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...included];\n\n                          let index = expdate.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setIncluded(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: `incList--${included.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...included, expItem];\n                  const emptyValue = included.filter(\n                    (item) => item.title == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setIncluded(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}