{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport default (function (pathname, action, prev, history, kind) {\n  var type = action.type,\n      _action$payload = action.payload,\n      payload = _action$payload === undefined ? {} : _action$payload,\n      _action$meta = action.meta,\n      meta = _action$meta === undefined ? {} : _action$meta;\n  var query = action.query || meta.query || payload.query;\n  var parts = pathname.split('?');\n  var search = parts[1];\n  return _extends({}, action, action.query && {\n    query: query\n  }, {\n    type: type,\n    payload: payload,\n    meta: _extends({}, meta, meta.query && {\n      query: query\n    }, {\n      location: {\n        current: _extends({\n          pathname: parts[0],\n          type: type,\n          payload: payload\n        }, query && {\n          query: query,\n          search: search\n        }),\n        prev: prev,\n        kind: kind,\n        history: undefined\n      }\n    })\n  });\n});\nexport var nestHistory = function nestHistory(history) {\n  return history.entries ? {\n    index: history.index,\n    length: history.entries.length,\n    entries: history.entries.slice(0) // history.entries.map(entry => entry.pathname)\n\n  } : undefined;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/redux-first-router/dist/es/pure-utils/nestAction.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","pathname","action","prev","history","kind","type","_action$payload","payload","undefined","_action$meta","meta","query","parts","split","search","location","current","nestHistory","entries","index","slice"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,gBAAgB,UAAUS,QAAV,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,IAA3C,EAAiD;AAC/D,MAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AAAA,MACIC,eAAe,GAAGL,MAAM,CAACM,OAD7B;AAAA,MAEIA,OAAO,GAAGD,eAAe,KAAKE,SAApB,GAAgC,EAAhC,GAAqCF,eAFnD;AAAA,MAGIG,YAAY,GAAGR,MAAM,CAACS,IAH1B;AAAA,MAIIA,IAAI,GAAGD,YAAY,KAAKD,SAAjB,GAA6B,EAA7B,GAAkCC,YAJ7C;AAMA,MAAIE,KAAK,GAAGV,MAAM,CAACU,KAAP,IAAgBD,IAAI,CAACC,KAArB,IAA8BJ,OAAO,CAACI,KAAlD;AACA,MAAIC,KAAK,GAAGZ,QAAQ,CAACa,KAAT,CAAe,GAAf,CAAZ;AACA,MAAIC,MAAM,GAAGF,KAAK,CAAC,CAAD,CAAlB;AAEA,SAAOxB,QAAQ,CAAC,EAAD,EAAKa,MAAL,EAAaA,MAAM,CAACU,KAAP,IAAgB;AAAEA,IAAAA,KAAK,EAAEA;AAAT,GAA7B,EAA+C;AAC5DN,IAAAA,IAAI,EAAEA,IADsD;AAE5DE,IAAAA,OAAO,EAAEA,OAFmD;AAG5DG,IAAAA,IAAI,EAAEtB,QAAQ,CAAC,EAAD,EAAKsB,IAAL,EAAWA,IAAI,CAACC,KAAL,IAAc;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAAzB,EAA2C;AACvDI,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAE5B,QAAQ,CAAC;AAChBY,UAAAA,QAAQ,EAAEY,KAAK,CAAC,CAAD,CADC;AAEhBP,UAAAA,IAAI,EAAEA,IAFU;AAGhBE,UAAAA,OAAO,EAAEA;AAHO,SAAD,EAIdI,KAAK,IAAI;AAAEA,UAAAA,KAAK,EAAEA,KAAT;AAAgBG,UAAAA,MAAM,EAAEA;AAAxB,SAJK,CADT;AAMRZ,QAAAA,IAAI,EAAEA,IANE;AAORE,QAAAA,IAAI,EAAEA,IAPE;AAQRD,QAAAA,OAAO,EAAEK;AARD;AAD6C,KAA3C;AAH8C,GAA/C,CAAf;AAgBD,CA3BD;AA8BA,OAAO,IAAIS,WAAW,GAAG,SAASA,WAAT,CAAqBd,OAArB,EAA8B;AACrD,SAAOA,OAAO,CAACe,OAAR,GAAkB;AACvBC,IAAAA,KAAK,EAAEhB,OAAO,CAACgB,KADQ;AAEvBzB,IAAAA,MAAM,EAAES,OAAO,CAACe,OAAR,CAAgBxB,MAFD;AAGvBwB,IAAAA,OAAO,EAAEf,OAAO,CAACe,OAAR,CAAgBE,KAAhB,CAAsB,CAAtB,CAHc,CAGW;;AAHX,GAAlB,GAIHZ,SAJJ;AAKD,CANM","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexport default (function (pathname, action, prev, history, kind) {\n  var type = action.type,\n      _action$payload = action.payload,\n      payload = _action$payload === undefined ? {} : _action$payload,\n      _action$meta = action.meta,\n      meta = _action$meta === undefined ? {} : _action$meta;\n\n  var query = action.query || meta.query || payload.query;\n  var parts = pathname.split('?');\n  var search = parts[1];\n\n  return _extends({}, action, action.query && { query: query }, {\n    type: type,\n    payload: payload,\n    meta: _extends({}, meta, meta.query && { query: query }, {\n      location: {\n        current: _extends({\n          pathname: parts[0],\n          type: type,\n          payload: payload\n        }, query && { query: query, search: search }),\n        prev: prev,\n        kind: kind,\n        history: undefined\n      }\n    })\n  });\n});\n\n\nexport var nestHistory = function nestHistory(history) {\n  return history.entries ? {\n    index: history.index,\n    length: history.entries.length,\n    entries: history.entries.slice(0) // history.entries.map(entry => entry.pathname)\n  } : undefined;\n};"]},"metadata":{},"sourceType":"module"}