{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/fullscreen-button.js\";\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import * as actions from '../../actions'\n\nimport css from './control-bar.module.scss';\nimport { toggleFullscreen } from 'state/player/playerSlice';\nimport icons from '../icons';\nimport { FullscreenState } from '../constants';\nimport ControlBarButton from './control-bar-button/control-bar-button';\nimport Tooltip from '../tooltip/tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FullscreenButton extends Component {\n  render() {\n    const {\n      FullscreenIcon,\n      FullscreenExitIcon\n    } = icons;\n    const {\n      fullscreenState,\n      toggleFullscreen\n    } = this.props;\n    const button = fullscreenState === FullscreenState.NORMAL ? /*#__PURE__*/_jsxDEV(FullscreenIcon, {\n      className: classNames(css.fullscreen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FullscreenExitIcon, {\n      className: classNames(css.fullscreenexit)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      text: \"Fullscreen (f)\",\n      isFarRight: true,\n      children: /*#__PURE__*/_jsxDEV(ControlBarButton, {\n        onAction: toggleFullscreen,\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default FullscreenButton; // export default connect(\n//   state => ({ fullscreenState: state.fullscreenState }),\n//   store => ({ toggleFullscreen: actions.toggleFullscreen })\n// )(FullscreenButton)","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/fullscreen-button.js"],"names":["classNames","React","Component","connect","css","toggleFullscreen","icons","FullscreenState","ControlBarButton","Tooltip","FullscreenButton","render","FullscreenIcon","FullscreenExitIcon","fullscreenState","props","button","NORMAL","fullscreen","fullscreenexit"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,OAAO,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AAC9CS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAyCP,KAA/C;AACA,UAAM;AAAEQ,MAAAA,eAAF;AAAmBT,MAAAA;AAAnB,QAAwC,KAAKU,KAAnD;AAEA,UAAMC,MAAM,GACVF,eAAe,KAAKP,eAAe,CAACU,MAApC,gBACE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEjB,UAAU,CAACI,GAAG,CAACc,UAAL;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,kBAAD;AAAoB,MAAA,SAAS,EAAElB,UAAU,CAACI,GAAG,CAACe,cAAL;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAOA,wBACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,gBAAd;AAA+B,MAAA,UAAU,MAAzC;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEd,gBAA5B;AAAA,kBAA+CW;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjB6C;AAmBhD,eAAeN,gBAAf,C,CACA;AACA;AACA;AACA","sourcesContent":["import classNames from 'classnames'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// import * as actions from '../../actions'\nimport css from './control-bar.module.scss'\nimport { toggleFullscreen } from 'state/player/playerSlice'\nimport icons from '../icons'\nimport { FullscreenState } from '../constants'\nimport ControlBarButton from './control-bar-button/control-bar-button'\nimport Tooltip from '../tooltip/tooltip'\n\nexport class FullscreenButton extends Component {\n  render() {\n    const { FullscreenIcon, FullscreenExitIcon } = icons\n    const { fullscreenState, toggleFullscreen } = this.props\n\n    const button =\n      fullscreenState === FullscreenState.NORMAL ? (\n        <FullscreenIcon className={classNames(css.fullscreen)} />\n      ) : (\n        <FullscreenExitIcon className={classNames(css.fullscreenexit)} />\n      )\n\n    return (\n      <Tooltip text=\"Fullscreen (f)\" isFarRight>\n        <ControlBarButton onAction={toggleFullscreen}>{button}</ControlBarButton>\n      </Tooltip>\n    )\n  }\n}\nexport default FullscreenButton\n// export default connect(\n//   state => ({ fullscreenState: state.fullscreenState }),\n//   store => ({ toggleFullscreen: actions.toggleFullscreen })\n// )(FullscreenButton)\n"]},"metadata":{},"sourceType":"module"}