{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/LayoutMenu/LayoutMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Logo, StrokeButton } from '@codecademy/gamut';\nimport React, { useRef } from 'react';\nimport { Flyout } from '../Flyout';\nimport { AccordionMenu } from './AccordionMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LayoutMenu = ({\n  sections,\n  onSectionToggle,\n  selectedItem,\n  mobileButtonText,\n  breakpoint = 'lg',\n  children\n}) => {\n  _s();\n\n  const closeFlyoutRef = useRef(() => {});\n\n  const closeFlyout = () => closeFlyoutRef.current();\n\n  const accordionMenuSections = sections.map(section => /*#__PURE__*/_jsxDEV(AccordionMenu, {\n    section: section,\n    onSectionToggle: onSectionToggle,\n    onItemClick: closeFlyout,\n    selectedItem: selectedItem\n  }, section.slug, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n\n  const renderButton = onClick => /*#__PURE__*/_jsxDEV(StrokeButton, {\n    variant: \"secondary\",\n    width: 1,\n    onClick: onClick,\n    children: mobileButtonText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        _: 'block',\n        [breakpoint]: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Flyout, {\n        renderButton: renderButton,\n        closeFlyoutRef: closeFlyoutRef,\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          bg: \"white\",\n          minHeight: 1,\n          p: 16,\n          children: [/*#__PURE__*/_jsxDEV(Logo, {\n            mb: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), accordionMenuSections, children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        _: 'none',\n        [breakpoint]: 'block'\n      },\n      children: [accordionMenuSections, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LayoutMenu, \"7s2tDcEeWGFgmylKmqXvtz679r8=\");\n\n_c = LayoutMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutMenu\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/LayoutMenu/LayoutMenu.tsx"],"names":["Box","Logo","StrokeButton","React","useRef","Flyout","AccordionMenu","LayoutMenu","sections","onSectionToggle","selectedItem","mobileButtonText","breakpoint","children","closeFlyoutRef","closeFlyout","current","accordionMenuSections","map","section","slug","renderButton","onClick","_"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,YAApB,QAAwC,mBAAxC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,QAAuC,iBAAvC;;AAyBA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AACpDC,EAAAA,QADoD;AAEpDC,EAAAA,eAFoD;AAGpDC,EAAAA,YAHoD;AAIpDC,EAAAA,gBAJoD;AAKpDC,EAAAA,UAAU,GAAG,IALuC;AAMpDC,EAAAA;AANoD,CAAD,KAO/C;AAAA;;AACJ,QAAMC,cAAc,GAAGV,MAAM,CAAC,MAAM,CAAE,CAAT,CAA7B;;AAEA,QAAMW,WAAW,GAAG,MAAMD,cAAc,CAACE,OAAf,EAA1B;;AAEA,QAAMC,qBAAqB,GAAGT,QAAQ,CAACU,GAAT,CAAcC,OAAD,iBACzC,QAAC,aAAD;AAEE,IAAA,OAAO,EAAEA,OAFX;AAGE,IAAA,eAAe,EAAEV,eAHnB;AAIE,IAAA,WAAW,EAAEM,WAJf;AAKE,IAAA,YAAY,EAAEL;AALhB,KACOS,OAAO,CAACC,IADf;AAAA;AAAA;AAAA;AAAA,UAD4B,CAA9B;;AAUA,QAAMC,YAAY,GAAIC,OAAD,iBACnB,QAAC,YAAD;AAAc,IAAA,OAAO,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAE,CAAzC;AAA4C,IAAA,OAAO,EAAEA,OAArD;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE;AAAEY,QAAAA,CAAC,EAAE,OAAL;AAAc,SAACX,UAAD,GAAc;AAA5B,OAAd;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAES,YADhB;AAEE,QAAA,cAAc,EAAEP,cAFlB;AAGE,QAAA,SAAS,EAAC,MAHZ;AAIE,QAAA,SAAS,EAAC,QAJZ;AAAA,+BAME,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,SAAS,EAAE,CAA3B;AAA8B,UAAA,CAAC,EAAE,EAAjC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGG,qBAFH,EAGGJ,QAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE;AAAEU,QAAAA,CAAC,EAAE,MAAL;AAAa,SAACX,UAAD,GAAc;AAA3B,OAAd;AAAA,iBACGK,qBADH,EAEGJ,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlDM;;GAAMN,U;;KAAAA,U","sourcesContent":["import { Box, Logo, StrokeButton } from '@codecademy/gamut';\nimport React, { useRef } from 'react';\n\nimport { Flyout } from '../Flyout';\nimport { AccordionMenu, Section } from './AccordionMenu';\n\nexport type LayoutMenuProps = {\n  /**\n   * An array of sections containing the title, slug, and items, each of which will become an accordion. Each item contains a title, slug, and onClick.\n   */\n  sections: Section[];\n  /**\n   * The slug of the current selected item\n   */\n  selectedItem?: string;\n  /**\n   * Callback to be run on click of the accordion button\n   */\n  onSectionToggle: (sectionSlug: string) => void;\n  /**\n   * Text shown in mobile button that opens flyout on click\n   */\n  mobileButtonText: string;\n  /**\n   * Breakpoint above which the menu button displays as a full sidebar\n   */\n  breakpoint?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n};\n\nexport const LayoutMenu: React.FC<LayoutMenuProps> = ({\n  sections,\n  onSectionToggle,\n  selectedItem,\n  mobileButtonText,\n  breakpoint = 'lg',\n  children,\n}) => {\n  const closeFlyoutRef = useRef(() => {});\n\n  const closeFlyout = () => closeFlyoutRef.current();\n\n  const accordionMenuSections = sections.map((section) => (\n    <AccordionMenu\n      key={section.slug}\n      section={section}\n      onSectionToggle={onSectionToggle}\n      onItemClick={closeFlyout}\n      selectedItem={selectedItem}\n    />\n  ));\n\n  const renderButton = (onClick: () => void) => (\n    <StrokeButton variant=\"secondary\" width={1} onClick={onClick}>\n      {mobileButtonText}\n    </StrokeButton>\n  );\n\n  return (\n    <nav>\n      <Box display={{ _: 'block', [breakpoint]: 'none' }}>\n        <Flyout\n          renderButton={renderButton}\n          closeFlyoutRef={closeFlyoutRef}\n          overflowY=\"auto\"\n          overflowX=\"hidden\"\n        >\n          <Box bg=\"white\" minHeight={1} p={16}>\n            <Logo mb={32} />\n            {accordionMenuSections}\n            {children}\n          </Box>\n        </Flyout>\n      </Box>\n      <Box display={{ _: 'none', [breakpoint]: 'block' }}>\n        {accordionMenuSections}\n        {children}\n      </Box>\n    </nav>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}