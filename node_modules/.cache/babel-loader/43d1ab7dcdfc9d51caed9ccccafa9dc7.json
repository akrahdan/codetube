{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Header/HeaderContainer/index.tsx\";\nimport { AppBar, AppBarSection } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport React from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HeaderContainer = ({\n  className,\n  sections: {\n    after,\n    left,\n    right\n  } = {}\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: cx(styles.container, className),\n    \"data-testid\": \"AppHeader\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: styles.appBar,\n      children: [/*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"left\",\n        children: left\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"right\",\n        children: right\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), after]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = HeaderContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Header/HeaderContainer/index.tsx"],"names":["AppBar","AppBarSection","cx","React","styles","HeaderContainer","className","sections","after","left","right","container","appBar"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAcA,OAAO,MAAMC,eAA+C,GAAG,CAAC;AAC9DC,EAAAA,SAD8D;AAE9DC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAAyB;AAF2B,CAAD,KAGzD;AACJ,sBACE;AAAQ,IAAA,SAAS,EAAER,EAAE,CAACE,MAAM,CAACO,SAAR,EAAmBL,SAAnB,CAArB;AAAoD,mBAAY,WAAhE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,MAAM,CAACQ,MAA1B;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAAA,kBAAgCH;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,OAAxB;AAAA,kBAAiCC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGF,KALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbM;KAAMH,e","sourcesContent":["import { AppBar, AppBarSection } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport React from 'react';\n\nimport styles from './styles.module.scss';\n\nexport type HeaderContainerProps = {\n  className?: string;\n  /**\n   * Pass ReactNode into any or each desired positions\n   */\n  sections?: {\n    after?: React.ReactNode;\n    left?: React.ReactNode;\n    right?: React.ReactNode;\n  };\n};\n\nexport const HeaderContainer: React.FC<HeaderContainerProps> = ({\n  className,\n  sections: { after, left, right } = {},\n}) => {\n  return (\n    <header className={cx(styles.container, className)} data-testid=\"AppHeader\">\n      <AppBar className={styles.appBar}>\n        <AppBarSection position=\"left\">{left}</AppBarSection>\n        <AppBarSection position=\"right\">{right}</AppBarSection>\n      </AppBar>\n      {after}\n    </header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}