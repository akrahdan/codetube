{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormSections/GridFormContent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { GridFormInputGroup } from '../GridFormInputGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GridFormContent = ({\n  field,\n  showRequired\n}) => {\n  _s();\n\n  var _errors$field$name, _field$validation;\n\n  const {\n    register,\n    errors,\n    setValue\n  } = useFormContext();\n  /**\n   * Keep track of the first error in this form.\n   * This is so we only add the correct aria-live props on the first error.\n   */\n\n  const isFirstError = Object.keys(errors)[0] === field.name;\n  const errorMessage = (_errors$field$name = errors[field.name]) === null || _errors$field$name === void 0 ? void 0 : _errors$field$name.message;\n  const requiredBoolean = !!(field.type !== 'hidden' && field.type !== 'sweet-container' && ((_field$validation = field.validation) === null || _field$validation === void 0 ? void 0 : _field$validation.required));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridFormInputGroup, {\n      error: errorMessage,\n      isFirstError: isFirstError,\n      field: field,\n      register: register,\n      setValue: setValue,\n      required: requiredBoolean,\n      showRequired: showRequired\n    }, field.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GridFormContent, \"c2qxr8TMv4mtL8dVFVW9oyWn8P0=\", false, function () {\n  return [useFormContext];\n});\n\n_c = GridFormContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridFormContent\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormSections/GridFormContent.tsx"],"names":["React","useFormContext","GridFormInputGroup","GridFormContent","field","showRequired","register","errors","setValue","isFirstError","Object","keys","name","errorMessage","message","requiredBoolean","type","validation","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAqBC,cAArB,QAA2C,iBAA3C;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;;;AAQA,OAAO,MAAMC,eAA+C,GAAG,CAAC;AAC9DC,EAAAA,KAD8D;AAE9DC,EAAAA;AAF8D,CAAD,KAGzD;AAAA;;AAAA;;AACJ,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAAiCP,cAAc,EAArD;AAEA;AACF;AACA;AACA;;AACE,QAAMQ,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,CAApB,MAA2BH,KAAK,CAACQ,IAAtD;AACA,QAAMC,YAAY,yBAAIN,MAAM,CAACH,KAAK,CAACQ,IAAP,CAAV,uDAAG,mBAAoCE,OAAzD;AAEA,QAAMC,eAAe,GAAG,CAAC,EACvBX,KAAK,CAACY,IAAN,KAAe,QAAf,IACAZ,KAAK,CAACY,IAAN,KAAe,iBADf,0BAEAZ,KAAK,CAACa,UAFN,sDAEA,kBAAkBC,QAFlB,CADuB,CAAzB;AAMA,sBACE;AAAA,2BACE,QAAC,kBAAD;AACE,MAAA,KAAK,EAAEL,YADT;AAEE,MAAA,YAAY,EAAEJ,YAFhB;AAGE,MAAA,KAAK,EAAEL,KAHT;AAKE,MAAA,QAAQ,EAAEE,QALZ;AAME,MAAA,QAAQ,EAAEE,QANZ;AAOE,MAAA,QAAQ,EAAEO,eAPZ;AAQE,MAAA,YAAY,EAAEV;AARhB,OAIOD,KAAK,CAACQ,IAJb;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAjCM;;GAAMT,e;UAI4BF,c;;;KAJ5BE,e","sourcesContent":["import React from 'react';\nimport { FieldError, useFormContext } from 'react-hook-form';\n\nimport { GridFormInputGroup } from '../GridFormInputGroup';\nimport { GridFormField } from '../types';\n\nexport type GridFormContentProps = {\n  field: GridFormField;\n  showRequired: boolean;\n};\n\nexport const GridFormContent: React.FC<GridFormContentProps> = ({\n  field,\n  showRequired,\n}) => {\n  const { register, errors, setValue } = useFormContext();\n\n  /**\n   * Keep track of the first error in this form.\n   * This is so we only add the correct aria-live props on the first error.\n   */\n  const isFirstError = Object.keys(errors)[0] === field.name;\n  const errorMessage = (errors[field.name] as FieldError)?.message;\n\n  const requiredBoolean = !!(\n    field.type !== 'hidden' &&\n    field.type !== 'sweet-container' &&\n    field.validation?.required\n  );\n\n  return (\n    <>\n      <GridFormInputGroup\n        error={errorMessage}\n        isFirstError={isFirstError}\n        field={field}\n        key={field.name}\n        register={register}\n        setValue={setValue}\n        required={requiredBoolean}\n        showRequired={showRequired}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}