{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { projectApi } from \"services/projects\";\nconst initialState = {\n  pricing: null,\n  project: null,\n  projects: null,\n  saveProps: {\n    submit: false,\n    locationPath: null\n  }\n};\nconst projectSplice = createSlice({\n  name: \"project\",\n  initialState: initialState,\n  reducers: {\n    saveProject: (state, action) => {\n      state.saveProps = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(projectApi.endpoints.createProject.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.project = payload;\n    }).addMatcher(projectApi.endpoints.updateProject.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.project = payload;\n    }).addMatcher(projectApi.endpoints.fetchProjects.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.projects = payload;\n    }).addMatcher(projectApi.endpoints.fetchInstructorProjects.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.projects = payload;\n    }).addMatcher(projectApi.endpoints.fetchProject.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.project = payload;\n    }).addMatcher(projectApi.endpoints.createHeading.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.header = payload;\n    }).addMatcher(projectApi.endpoints.createIncluded.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.included = payload;\n    }).addMatcher(projectApi.endpoints.createLearningOutcome.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.outcomes = payload;\n    }).addMatcher(projectApi.endpoints.createSyllabus.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.syllabuses = payload;\n    }).addMatcher(projectApi.endpoints.createIncluded.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.included = payload;\n    }).addMatcher(projectApi.endpoints.fetchIncluded.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.included = payload;\n    }).addMatcher(projectApi.endpoints.fetchOutcomes.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.outcomes = payload;\n    }).addMatcher(projectApi.endpoints.fetchSyllabus.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.syllabuses = payload;\n    }).addMatcher(projectApi.endpoints.fetchSyllabus.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.syllabuses = payload;\n    }).addMatcher(projectApi.endpoints.editIncluded.matchFulfilled, (state, {\n      payload\n    }) => {\n      const included = state.included.map(included => {\n        if (included.id == payload.id) {\n          return payload;\n        }\n\n        return included;\n      });\n      state.included = included;\n    }).addMatcher(projectApi.endpoints.editHeading.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.header = payload;\n    }).addMatcher(projectApi.endpoints.editLearningOutcome.matchFulfilled, (state, {\n      payload\n    }) => {\n      const outcomes = state.outcomes.map(outcome => {\n        if (outcome.id == payload.id) {\n          return payload;\n        }\n\n        return outcome;\n      });\n      state.outcomes = outcomes;\n    }).addMatcher(projectApi.endpoints.editSyllabus.matchFulfilled, (state, {\n      payload\n    }) => {\n      const syllabuses = state.syllabuses.map(syllabus => {\n        if (syllabus.id == payload.id) {\n          return payload;\n        }\n\n        return syllabus;\n      });\n      state.syllabuses = syllabuses;\n    });\n  }\n});\nexport const {\n  saveProject\n} = projectSplice.actions;\nexport default projectSplice.reducer;\nexport const selectProject = state => state.project.project;\nexport const selectProjects = state => state.project.projects;\nexport const selectOutcomes = state => state.project.outcomes;\nexport const selectSyllabuses = state => state.project.syllabuses;\nexport const selectIncluded = state => state.project.included;\nexport const selectPricing = state => state.course.pricing;\nexport const selectSave = state => state.course.saveProps;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/project/projectSplice.ts"],"names":["createSlice","projectApi","initialState","pricing","project","projects","saveProps","submit","locationPath","projectSplice","name","reducers","saveProject","state","action","payload","extraReducers","builder","addMatcher","endpoints","createProject","matchFulfilled","updateProject","fetchProjects","fetchInstructorProjects","fetchProject","createHeading","header","createIncluded","included","createLearningOutcome","outcomes","createSyllabus","syllabuses","fetchIncluded","fetchOutcomes","fetchSyllabus","editIncluded","map","id","editHeading","editLearningOutcome","outcome","editSyllabus","syllabus","actions","reducer","selectProject","selectProjects","selectOutcomes","selectSyllabuses","selectIncluded","selectPricing","course","selectSave"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"store\";\nimport  { ContainerProgress} from 'portal/scenes/Dashboard/ProgressBar'\nimport type {\n  TitleDescription,\n  HeaderDescription,\n  ProjectEntityResponse,\n  Pricing,\n} from \"services/projects\";\nimport { projectApi } from \"services/projects\";\ninterface submitProps {\n  submit: boolean;\n  locationPath: string;\n}\ntype ProjectState = {\n  project: ProjectEntityResponse | null;\n  projects: ProjectEntityResponse[] | null;\n  saveProps: submitProps | null;\n  pricing: Pricing | null;\n  outcomes: TitleDescription[] | null;\n  header: HeaderDescription | null;\n  included: TitleDescription[] | null;\n  syllabuses: TitleDescription[] | null;\n};\nconst initialState = {\n  pricing: null,\n  project: null,\n  projects: null,\n  saveProps: {\n    submit: false,\n    locationPath: null,\n  },\n};\nconst projectSplice = createSlice({\n  name: \"project\",\n  initialState: initialState as ProjectState,\n  reducers: {\n    saveProject: (state, action: PayloadAction<submitProps>) => {\n      state.saveProps = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        projectApi.endpoints.createProject.matchFulfilled,\n        (state, { payload }) => {\n          state.project = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.updateProject.matchFulfilled,\n        (state, { payload }) => {\n          state.project = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchProjects.matchFulfilled,\n        (state, { payload }) => {\n          state.projects = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchInstructorProjects.matchFulfilled,\n        (state, { payload }) => {\n          state.projects = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchProject.matchFulfilled,\n        (state, { payload }) => {\n          state.project = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.createHeading.matchFulfilled,\n        (state, { payload }) => {\n          state.header = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.createIncluded.matchFulfilled,\n        (state, { payload }) => {\n          state.included = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.createLearningOutcome.matchFulfilled,\n        (state, { payload }) => {\n          state.outcomes = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.createSyllabus.matchFulfilled,\n        (state, { payload }) => {\n          state.syllabuses = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.createIncluded.matchFulfilled,\n        (state, { payload }) => {\n          state.included = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchIncluded.matchFulfilled,\n        (state, { payload }) => {\n          state.included = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchOutcomes.matchFulfilled,\n        (state, { payload }) => {\n          state.outcomes = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchSyllabus.matchFulfilled,\n        (state, { payload }) => {\n          state.syllabuses = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.fetchSyllabus.matchFulfilled,\n        (state, { payload }) => {\n          state.syllabuses = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.editIncluded.matchFulfilled,\n        (state, { payload }) => {\n          const included = state.included.map((included) => {\n            if (included.id == payload.id) {\n              return payload;\n            }\n            return included;\n          });\n          state.included = included;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.editHeading.matchFulfilled,\n        (state, { payload }) => {\n          state.header = payload;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.editLearningOutcome.matchFulfilled,\n        (state, { payload }) => {\n          const outcomes = state.outcomes.map((outcome) => {\n            if (outcome.id == payload.id) {\n              return payload;\n            }\n            return outcome;\n          });\n          state.outcomes = outcomes;\n        }\n      )\n      .addMatcher(\n        projectApi.endpoints.editSyllabus.matchFulfilled,\n        (state, { payload }) => {\n          const syllabuses = state.syllabuses.map((syllabus) => {\n            if (syllabus.id == payload.id) {\n              return payload;\n            }\n            return syllabus;\n          });\n          state.syllabuses = syllabuses;\n        }\n      );\n  },\n});\n\nexport const { saveProject } = projectSplice.actions;\n\nexport default projectSplice.reducer;\n\nexport const selectProject = (state: RootState) => state.project.project;\nexport const selectProjects = (state: RootState) => state.project.projects;\nexport const selectOutcomes = (state: RootState) => state.project.outcomes;\nexport const selectSyllabuses = (state: RootState) => state.project.syllabuses;\nexport const selectIncluded = (state: RootState) => state.project.included;\nexport const selectPricing = (state: RootState) => state.course.pricing;\nexport const selectSave = (state: RootState) => state.course.saveProps;\n"]},"metadata":{},"sourceType":"module"}