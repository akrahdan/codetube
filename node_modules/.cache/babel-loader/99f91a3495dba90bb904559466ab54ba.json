{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emojisplosion = exports.defaultTagName = exports.defaultPosition = exports.defaultPhysics = exports.defaultEmojiCount = exports.defaultCreateContainer = exports.defaultClassName = void 0;\n\nconst actor_1 = require(\"./actor\");\n\nconst animator_1 = require(\"./animator\");\n\nconst emojis_1 = require(\"./emojis\");\n\nconst styles_1 = require(\"./styles\");\n\nconst utils_1 = require(\"./utils\");\n/**\r\n * Default class name to add to emoji elements.\r\n */\n\n\nexports.defaultClassName = \"emoji-styles\";\n/**\r\n * Default creator for a container element.\r\n *\r\n * @returns <div /> element prepended to document.body.\r\n */\n\nexports.defaultCreateContainer = (() => {\n  let container;\n  return () => {\n    if ((container === null || container === void 0 ? void 0 : container.parentNode) === document.body) {\n      return container;\n    }\n\n    container = document.createElement(\"div\");\n    document.body.prepend(container);\n    return container;\n  };\n})();\n/**\r\n * Default emojiCount to choose a random number of emoji per blast.\r\n *\r\n * @returns Random integer within 14 to 28.\r\n */\n\n\nexports.defaultEmojiCount = () => Math.floor(Math.random() * 14) + 14;\n/**\r\n * Default runtime change constants for actor movements.\r\n */\n\n\nexports.defaultPhysics = {\n  fontSize: {\n    max: 28,\n    min: 14\n  },\n  framerate: 60,\n  gravity: 0.35,\n  initialVelocities: {\n    rotation: {\n      max: 7,\n      min: -7\n    },\n    x: {\n      max: 7,\n      min: -7\n    },\n    y: {\n      max: -7,\n      min: -21\n    }\n  },\n  preserveOutOfBounds: false,\n  rotation: {\n    max: 45,\n    min: -45\n  },\n  rotationDeceleration: 0.98\n};\n/**\r\n * Default position to choose random locations within the page.\r\n *\r\n * @returns Random { left, top } integers within the page.\r\n */\n\nexports.defaultPosition = () => ({\n  x: Math.random() * innerWidth,\n  y: Math.random() * innerHeight\n});\n/**\r\n * Default emoji processor, which does nothing.\r\n */\n\n\nconst defaultProcess = () => {};\n/**\r\n * Default HTML tag name to create elements as.\r\n */\n\n\nexports.defaultTagName = \"span\";\n/**\r\n * Launches an emojisplosion across the page! ðŸŽ†\r\n *\r\n * @param settings   Settings to emojisplode.\r\n */\n\nexports.emojisplosion = (settings = {}) => {\n  const {\n    animator = new animator_1.Animator().start(),\n    className = exports.defaultClassName,\n    container = exports.defaultCreateContainer,\n    emojiCount = exports.defaultEmojiCount,\n    emojis = emojis_1.defaultEmojis,\n    position = exports.defaultPosition,\n    process = defaultProcess,\n    tagName = exports.defaultTagName,\n    uniqueness = Infinity\n  } = settings;\n  styles_1.createStyleElementAndClass(className);\n  const physics = Object.assign(Object.assign(Object.assign({}, exports.defaultPhysics), settings.physics), {\n    initialVelocities: Object.assign(Object.assign({}, exports.defaultPhysics.initialVelocities), settings.physics !== undefined ? settings.physics.initialVelocities : {})\n  });\n  const emojiSettings = {\n    className,\n    container: utils_1.obtainValue(container),\n    // Copy the input array to prevent modifications.\n    emojis: utils_1.shuffleArray(utils_1.obtainValue(emojis)).slice(0, utils_1.obtainValue(uniqueness)),\n    physics,\n    position: utils_1.obtainValue(position),\n    process,\n    tagName: utils_1.obtainValue(tagName)\n  };\n  const blastEmojiCount = utils_1.obtainValue(emojiCount);\n\n  for (let i = 0; i < blastEmojiCount; i += 1) {\n    animator.add(new actor_1.EmojiActor(emojiSettings));\n  }\n\n  return animator;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/emojisplosion/src/emojisplosion.js"],"names":["Object","defineProperty","exports","value","emojisplosion","defaultTagName","defaultPosition","defaultPhysics","defaultEmojiCount","defaultCreateContainer","defaultClassName","actor_1","require","animator_1","emojis_1","styles_1","utils_1","container","parentNode","document","body","createElement","prepend","Math","floor","random","fontSize","max","min","framerate","gravity","initialVelocities","rotation","x","y","preserveOutOfBounds","rotationDeceleration","innerWidth","innerHeight","defaultProcess","settings","animator","Animator","start","className","emojiCount","emojis","defaultEmojis","position","process","tagName","uniqueness","Infinity","createStyleElementAndClass","physics","assign","undefined","emojiSettings","obtainValue","shuffleArray","slice","blastEmojiCount","i","add","EmojiActor"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.emojisplosion = exports.defaultTagName = exports.defaultPosition = exports.defaultPhysics = exports.defaultEmojiCount = exports.defaultCreateContainer = exports.defaultClassName = void 0;\r\nconst actor_1 = require(\"./actor\");\r\nconst animator_1 = require(\"./animator\");\r\nconst emojis_1 = require(\"./emojis\");\r\nconst styles_1 = require(\"./styles\");\r\nconst utils_1 = require(\"./utils\");\r\n/**\r\n * Default class name to add to emoji elements.\r\n */\r\nexports.defaultClassName = \"emoji-styles\";\r\n/**\r\n * Default creator for a container element.\r\n *\r\n * @returns <div /> element prepended to document.body.\r\n */\r\nexports.defaultCreateContainer = (() => {\r\n    let container;\r\n    return () => {\r\n        if ((container === null || container === void 0 ? void 0 : container.parentNode) === document.body) {\r\n            return container;\r\n        }\r\n        container = document.createElement(\"div\");\r\n        document.body.prepend(container);\r\n        return container;\r\n    };\r\n})();\r\n/**\r\n * Default emojiCount to choose a random number of emoji per blast.\r\n *\r\n * @returns Random integer within 14 to 28.\r\n */\r\nexports.defaultEmojiCount = () => Math.floor(Math.random() * 14) + 14;\r\n/**\r\n * Default runtime change constants for actor movements.\r\n */\r\nexports.defaultPhysics = {\r\n    fontSize: {\r\n        max: 28,\r\n        min: 14,\r\n    },\r\n    framerate: 60,\r\n    gravity: 0.35,\r\n    initialVelocities: {\r\n        rotation: {\r\n            max: 7,\r\n            min: -7,\r\n        },\r\n        x: {\r\n            max: 7,\r\n            min: -7,\r\n        },\r\n        y: {\r\n            max: -7,\r\n            min: -21,\r\n        },\r\n    },\r\n    preserveOutOfBounds: false,\r\n    rotation: {\r\n        max: 45,\r\n        min: -45,\r\n    },\r\n    rotationDeceleration: 0.98,\r\n};\r\n/**\r\n * Default position to choose random locations within the page.\r\n *\r\n * @returns Random { left, top } integers within the page.\r\n */\r\nexports.defaultPosition = () => ({\r\n    x: Math.random() * innerWidth,\r\n    y: Math.random() * innerHeight,\r\n});\r\n/**\r\n * Default emoji processor, which does nothing.\r\n */\r\nconst defaultProcess = () => { };\r\n/**\r\n * Default HTML tag name to create elements as.\r\n */\r\nexports.defaultTagName = \"span\";\r\n/**\r\n * Launches an emojisplosion across the page! ðŸŽ†\r\n *\r\n * @param settings   Settings to emojisplode.\r\n */\r\nexports.emojisplosion = (settings = {}) => {\r\n    const { animator = new animator_1.Animator().start(), className = exports.defaultClassName, container = exports.defaultCreateContainer, emojiCount = exports.defaultEmojiCount, emojis = emojis_1.defaultEmojis, position = exports.defaultPosition, process = defaultProcess, tagName = exports.defaultTagName, uniqueness = Infinity, } = settings;\r\n    styles_1.createStyleElementAndClass(className);\r\n    const physics = Object.assign(Object.assign(Object.assign({}, exports.defaultPhysics), settings.physics), { initialVelocities: Object.assign(Object.assign({}, exports.defaultPhysics.initialVelocities), (settings.physics !== undefined ? settings.physics.initialVelocities : {})) });\r\n    const emojiSettings = {\r\n        className,\r\n        container: utils_1.obtainValue(container),\r\n        // Copy the input array to prevent modifications.\r\n        emojis: utils_1.shuffleArray(utils_1.obtainValue(emojis))\r\n            .slice(0, utils_1.obtainValue(uniqueness)),\r\n        physics,\r\n        position: utils_1.obtainValue(position),\r\n        process,\r\n        tagName: utils_1.obtainValue(tagName),\r\n    };\r\n    const blastEmojiCount = utils_1.obtainValue(emojiCount);\r\n    for (let i = 0; i < blastEmojiCount; i += 1) {\r\n        animator.add(new actor_1.EmojiActor(emojiSettings));\r\n    }\r\n    return animator;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}