{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { routesManageCourse } from 'portal/routes';\nimport './course.scss';\nimport { useAppSelector } from 'store/hooks';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateCourse = () => {\n  _s();\n\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const {\n    scene: Scene\n  } = getRouteMetaForLocation(routesManageCourse, locationPayload.slug);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CreateCourse, \"0vr4A99DZ9re/3BZkVYHLEy4lak=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = CreateCourse;\nexport default CreateCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCourse\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/manageCourse.tsx"],"names":["getRouteMetaForLocation","selectLocationPayload","routesManageCourse","useAppSelector","CreateCourse","locationPayload","scene","Scene","slug"],"mappings":";;AAMA,SAASA,uBAAT,QAAwC,uBAAxC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAUA,OAAO,eAAP;AAEA,SAASC,cAAT,QAA+B,aAA/B;;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,eAAe,GAAGF,cAAc,CAACF,qBAAD,CAAtC;AACD,QAAM;AAAEK,IAAAA,KAAK,EAAEC;AAAT,MAAkBP,uBAAuB,CAACE,kBAAD,EAAqBG,eAAe,CAACG,IAArC,CAA/C;AACC,sBACI,qCADJ;AAMH,CATM;;GAAMJ,Y;UACeD,c;;;KADfC,Y;AAWb,eAAeA,YAAf","sourcesContent":["import { PlatformTheme } from '@codecademy/gamut-styles';\nimport Theme from '@pluralsight/ps-design-system-theme'\nimport styles from './styles.module.scss';\nimport { Shell } from '../components/Shell';\nimport { DeferredRender } from 'components/DeferredRender';\nimport Header from '../components/Header';\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { routesManageCourse } from 'portal/routes';\nimport { SimpleFooter } from '../components/SimpleFooter';\nimport CourseDescription from './description';\nimport { CourseManageHeader } from './header/courseManageHeader';\nimport  { ManageSidebar } from './Sidebar/ManageSidebar'\nimport { Target } from './Target';\nimport { LandingPage } from './Landing/LandingPage';\nimport { Pricing } from './Pricing';\nimport { Curriculum } from './Curriculum';\nimport { Messages } from './Messages';\nimport './course.scss';\n\nimport { useAppSelector } from 'store/hooks';\nexport const CreateCourse = () => {\n    const locationPayload = useAppSelector(selectLocationPayload)\n   const { scene: Scene} = getRouteMetaForLocation(routesManageCourse, locationPayload.slug)\n    return (\n        <>\n        </>\n        \n\n    );\n}\n\nexport default CreateCourse"]},"metadata":{},"sourceType":"module"}