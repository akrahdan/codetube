{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/time-display.js\";\nimport classNames from 'classnames';\nimport React, { Component } from 'react';\nimport { connect } from 'unistore/react'; // import * as actions from '../../actions'\n\nimport { formatTime } from '../utilities';\nimport css from './control-bar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TimeDisplay extends Component {\n  render() {\n    const {\n      duration,\n      time\n    } = this.props;\n    const numerator = formatTime(time);\n    const [numeratorMinutes, numeratorSeconds] = numerator.split(':');\n    const denominator = formatTime(duration);\n    const [denominatorMinutes, denominatorSeconds] = denominator.split(':');\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: css.controlBarText,\n      \"aria-label\": `${numeratorMinutes} minutes and ${numeratorSeconds} of ${denominatorMinutes} minutes and ${denominatorSeconds} seconds`,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: numerator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: '200'\n        },\n        children: [\" / \", denominator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default TimeDisplay; // export default connect(\n//   state => ({\n//     duration: state.duration,\n//     time: state.time,\n//   }),\n//   store => {}\n// )(TimeDisplay)","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/time-display.js"],"names":["classNames","React","Component","connect","formatTime","css","TimeDisplay","render","duration","time","props","numerator","numeratorMinutes","numeratorSeconds","split","denominator","denominatorMinutes","denominatorSeconds","controlBarText","fontWeight"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,OAAO,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AACzCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqB,KAAKC,KAAhC;AACA,UAAMC,SAAS,GAAGP,UAAU,CAACK,IAAD,CAA5B;AACA,UAAM,CAACG,gBAAD,EAAmBC,gBAAnB,IAAuCF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAA7C;AACA,UAAMC,WAAW,GAAGX,UAAU,CAACI,QAAD,CAA9B;AACA,UAAM,CAACQ,kBAAD,EAAqBC,kBAArB,IAA2CF,WAAW,CAACD,KAAZ,CAAkB,GAAlB,CAAjD;AAEA,wBACE;AACE,MAAA,SAAS,EAAET,GAAG,CAACa,cADjB;AAEE,oBAAa,GAAEN,gBAAiB,gBAAeC,gBAAiB,OAAMG,kBAAmB,gBAAeC,kBAAmB,UAF7H;AAAA,8BAIE;AAAA,kBAASN;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,KAAK,EAAE;AAAEQ,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA,0BAAwCJ,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAjBwC;AAmB3C,eAAeT,WAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classNames from 'classnames'\nimport React, { Component } from 'react'\nimport { connect } from 'unistore/react'\n\n// import * as actions from '../../actions'\nimport { formatTime } from '../utilities'\nimport css from './control-bar.css'\n\nexport class TimeDisplay extends Component {\n  render() {\n    const { duration, time } = this.props\n    const numerator = formatTime(time)\n    const [numeratorMinutes, numeratorSeconds] = numerator.split(':')\n    const denominator = formatTime(duration)\n    const [denominatorMinutes, denominatorSeconds] = denominator.split(':')\n\n    return (\n      <span\n        className={css.controlBarText}\n        aria-label={`${numeratorMinutes} minutes and ${numeratorSeconds} of ${denominatorMinutes} minutes and ${denominatorSeconds} seconds`}\n      >\n        <strong>{numerator}</strong>\n        <span style={{ fontWeight: '200' }}> / {denominator}</span>\n      </span>\n    )\n  }\n}\nexport default TimeDisplay;\n// export default connect(\n//   state => ({\n//     duration: state.duration,\n//     time: state.time,\n//   }),\n//   store => {}\n// )(TimeDisplay)\n"]},"metadata":{},"sourceType":"module"}