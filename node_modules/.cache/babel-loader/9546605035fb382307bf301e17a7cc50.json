{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emojisplosions = void 0;\n\nvar emojisplosion_1 = require(\"./emojisplosion\");\n\nvar utils_1 = require(\"./utils\");\n/**\r\n * Default interval setting for fire delays.\r\n *\r\n * @returns Random number between 0 and 2100.\r\n */\n\n\nvar defaultInterval = function defaultInterval() {\n  return 700 + Math.floor(Math.random() * 1401);\n};\n/**\r\n * Periodically emojisplodes across the page! ðŸŽ†\r\n *\r\n * @param settings   Settings to emojisplode.\r\n * @returns Handler for the ongoing emojisplosions.\r\n */\n\n\nexports.emojisplosions = function () {\n  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _settings$interval = settings.interval,\n      interval = _settings$interval === void 0 ? defaultInterval : _settings$interval,\n      _settings$scheduler = settings.scheduler,\n      scheduler = _settings$scheduler === void 0 ? setTimeout : _settings$scheduler;\n  var cancelled = false;\n\n  var blast = function blast() {\n    return emojisplosion_1.emojisplosion(settings);\n  };\n\n  var blastAndSchedule = function blastAndSchedule() {\n    if (cancelled) {\n      return;\n    }\n\n    if (document.visibilityState === \"visible\") {\n      blast();\n    }\n\n    scheduler(blastAndSchedule, utils_1.obtainValue(interval));\n  };\n\n  scheduler(blastAndSchedule, 0);\n  return {\n    blast: blast,\n    cancel: function cancel() {\n      cancelled = true;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/emojisplosion/src/emojisplosions.js"],"names":["Object","defineProperty","exports","value","emojisplosions","emojisplosion_1","require","utils_1","defaultInterval","Math","floor","random","settings","interval","scheduler","setTimeout","cancelled","blast","emojisplosion","blastAndSchedule","document","visibilityState","obtainValue","cancel"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,IAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAA/B;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAZ;AAAA,CAAxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAT,OAAO,CAACE,cAAR,GAAyB,YAAmB;AAAA,MAAlBQ,QAAkB,uEAAP,EAAO;AAAA,2BACwBA,QADxB,CAChCC,QADgC;AAAA,MAChCA,QADgC,mCACrBL,eADqB;AAAA,4BACwBI,QADxB,CACJE,SADI;AAAA,MACJA,SADI,oCACQC,UADR;AAExC,MAAIC,SAAS,GAAG,KAAhB;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMZ,eAAe,CAACa,aAAhB,CAA8BN,QAA9B,CAAN;AAAA,GAAd;;AACA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAIH,SAAJ,EAAe;AACX;AACH;;AACD,QAAII,QAAQ,CAACC,eAAT,KAA6B,SAAjC,EAA4C;AACxCJ,MAAAA,KAAK;AACR;;AACDH,IAAAA,SAAS,CAACK,gBAAD,EAAmBZ,OAAO,CAACe,WAAR,CAAoBT,QAApB,CAAnB,CAAT;AACH,GARD;;AASAC,EAAAA,SAAS,CAACK,gBAAD,EAAmB,CAAnB,CAAT;AACA,SAAO;AACHF,IAAAA,KAAK,EAALA,KADG;AAEHM,IAAAA,MAFG,oBAEM;AACLP,MAAAA,SAAS,GAAG,IAAZ;AACH;AAJE,GAAP;AAMH,CApBD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.emojisplosions = void 0;\r\nconst emojisplosion_1 = require(\"./emojisplosion\");\r\nconst utils_1 = require(\"./utils\");\r\n/**\r\n * Default interval setting for fire delays.\r\n *\r\n * @returns Random number between 0 and 2100.\r\n */\r\nconst defaultInterval = () => 700 + Math.floor(Math.random() * 1401);\r\n/**\r\n * Periodically emojisplodes across the page! ðŸŽ†\r\n *\r\n * @param settings   Settings to emojisplode.\r\n * @returns Handler for the ongoing emojisplosions.\r\n */\r\nexports.emojisplosions = (settings = {}) => {\r\n    const { interval = defaultInterval, scheduler = setTimeout, } = settings;\r\n    let cancelled = false;\r\n    const blast = () => emojisplosion_1.emojisplosion(settings);\r\n    const blastAndSchedule = () => {\r\n        if (cancelled) {\r\n            return;\r\n        }\r\n        if (document.visibilityState === \"visible\") {\r\n            blast();\r\n        }\r\n        scheduler(blastAndSchedule, utils_1.obtainValue(interval));\r\n    };\r\n    scheduler(blastAndSchedule, 0);\r\n    return {\r\n        blast,\r\n        cancel() {\r\n            cancelled = true;\r\n        },\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}