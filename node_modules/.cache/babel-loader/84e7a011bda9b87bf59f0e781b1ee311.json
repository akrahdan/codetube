{"ast":null,"code":"const shortcuts = [{\n  name: 'togglePlayPause',\n  action: 'togglePlayPause'\n}, {\n  name: 'toggleFullscreen',\n  action: 'toggleFullscreen'\n}, {\n  name: 'toggleMute',\n  action: 'toggleMute'\n}, {\n  name: 'increaseSpeed',\n  action: 'increaseSpeed'\n}, {\n  name: 'decreaseSpeed',\n  action: 'decreaseSpeed'\n}, {\n  name: 'fastForward',\n  action: 'fastForward'\n}, {\n  name: 'fastRewind',\n  action: 'fastRewind'\n}, {\n  name: 'volumeUp',\n  action: 'volumeUp'\n}, {\n  name: 'volumeDown',\n  action: 'volumeDown'\n}, {\n  name: 'closeMenu',\n  action: 'closeMenu'\n}, {\n  name: 'toggleKeyboardShortcutsModal',\n  action: 'toggleKeyboardShortcuts'\n}, {\n  name: 'toggleClosedCaptioning',\n  action: 'toggleClosedCaptioning'\n}];\nconst hideableShortcuts = {\n  previous: {\n    name: 'previousClip',\n    action: 'previousClip'\n  },\n  next: {\n    name: 'nextClip',\n    action: 'nextClip'\n  }\n};\n\nconst registerDefaultShortcuts = (props, handleGetClip) => {\n  if (!props.registerShortcut) return;\n  const registerShortcut = props.registerShortcut;\n  shortcuts.forEach(({\n    name,\n    action\n  }) => {\n    registerShortcut({\n      name,\n      handler: props[action],\n      handleGetClip\n    });\n  });\n  Object.keys(hideableShortcuts).forEach(key => {\n    const shortcut = hideableShortcuts[key];\n\n    if (!props.hiddenButtons || props.hiddenButtons[key] === undefined) {\n      registerShortcut({\n        name: shortcut.name,\n        handler: props[shortcut.action],\n        handleGetClip\n      });\n    }\n  });\n\n  if (navigator && navigator.mediaSession) {\n    navigator.mediaSession.setActionHandler('play', props.togglePlayPause);\n    navigator.mediaSession.setActionHandler('pause', props.togglePlayPause);\n    navigator.mediaSession.setActionHandler('seekbackward', props.fastRewind);\n    navigator.mediaSession.setActionHandler('seekforward', props.fastForward);\n  }\n};\n\nexport { registerDefaultShortcuts, shortcuts };","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/keyboard/register-shortcuts.js"],"names":["shortcuts","name","action","hideableShortcuts","previous","next","registerDefaultShortcuts","props","handleGetClip","registerShortcut","forEach","handler","Object","keys","key","shortcut","hiddenButtons","undefined","navigator","mediaSession","setActionHandler","togglePlayPause","fastRewind","fastForward"],"mappings":"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","sourcesContent":["const shortcuts = [\n    { name: 'togglePlayPause', action: 'togglePlayPause' },\n    { name: 'toggleFullscreen', action: 'toggleFullscreen' },\n    { name: 'toggleMute', action: 'toggleMute' },\n    { name: 'increaseSpeed', action: 'increaseSpeed' },\n    { name: 'decreaseSpeed', action: 'decreaseSpeed' },\n    { name: 'fastForward', action: 'fastForward' },\n    { name: 'fastRewind', action: 'fastRewind' },\n    { name: 'volumeUp', action: 'volumeUp' },\n    { name: 'volumeDown', action: 'volumeDown' },\n    { name: 'closeMenu', action: 'closeMenu' },\n    { name: 'toggleKeyboardShortcutsModal', action: 'toggleKeyboardShortcuts' },\n    { name: 'toggleClosedCaptioning', action: 'toggleClosedCaptioning' },\n  ]\n  \n  const hideableShortcuts = {\n    previous: { name: 'previousClip', action: 'previousClip' },\n    next: { name: 'nextClip', action: 'nextClip' },\n  }\n  \n  const registerDefaultShortcuts = (props, handleGetClip) => {\n    if (!props.registerShortcut) return\n    const registerShortcut = props.registerShortcut\n  \n    shortcuts.forEach(({ name, action }) => {\n      registerShortcut({ name, handler: props[action], handleGetClip })\n    })\n  \n    Object.keys(hideableShortcuts).forEach((key) => {\n      const shortcut = hideableShortcuts[key]\n  \n      if (!props.hiddenButtons || props.hiddenButtons[key] === undefined) {\n        registerShortcut({ name: shortcut.name, handler: props[shortcut.action], handleGetClip })\n      }\n    })\n    \n    if (navigator && navigator.mediaSession) {\n      navigator.mediaSession.setActionHandler('play', props.togglePlayPause)\n      navigator.mediaSession.setActionHandler('pause', props.togglePlayPause)\n      navigator.mediaSession.setActionHandler('seekbackward', props.fastRewind)\n      navigator.mediaSession.setActionHandler('seekforward', props.fastForward)\n    }\n  }\n  \n  export { registerDefaultShortcuts, shortcuts }\n  "]},"metadata":{},"sourceType":"module"}