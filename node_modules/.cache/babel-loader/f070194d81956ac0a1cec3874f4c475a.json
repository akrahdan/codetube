{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/settings-button.js\";\nimport classnames from 'classnames';\nimport React, { Component } from 'react'; // import { connect } from 'unistore/react'\n// import * as actions from '../../actions'\n\nimport SettingsMenu from '../settings-menu/settings-menu';\nimport ControlBarButton from './control-bar-button/control-bar-button';\nimport Tooltip from '../tooltip/tooltip';\nimport icons from '../icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SettingsIcon\n} = icons;\nexport class SettingsButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleMenu = e => {\n      const {\n        activeMenu,\n        setActiveMenu\n      } = this.props;\n      activeMenu === Menus.SETTINGS ? setActiveMenu && setActiveMenu(Menus.NONE) : setActiveMenu && setActiveMenu(Menus.SETTINGS);\n    };\n\n    this.element = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const {\n      activeMenu\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.element,\n      onClick: e => e.stopPropagation(),\n      onTouchStart: this.cancelAction,\n      children: [/*#__PURE__*/_jsxDEV(SettingsMenu, {\n        isActive: activeMenu === Menus.SETTINGS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        text: \"Settings\",\n        isDisabled: activeMenu === Menus.SETTINGS,\n        children: /*#__PURE__*/_jsxDEV(ControlBarButton, {\n          active: activeMenu === Menus.SETTINGS,\n          onAction: this.toggleMenu,\n          ariaHaspopup: \"true\",\n          ariaOwns: \"eplayer-settings-menu-flyout\",\n          ariaExpanded: activeMenu === Menus.SETTINGS,\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default SettingsButton; // export default connect(\n//   (state) => ({\n//     activeMenu: state.activeMenu,\n//   }),\n//   (store) => ({\n//     setActiveMenu: actions.setActiveMenu,\n//   })\n// )(SettingsButton)","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/settings-button.js"],"names":["classnames","React","Component","SettingsMenu","ControlBarButton","Tooltip","icons","SettingsIcon","SettingsButton","constructor","props","toggleMenu","e","activeMenu","setActiveMenu","Menus","SETTINGS","NONE","element","createRef","render","stopPropagation","cancelAction"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBD,KAAzB;AAIA,OAAO,MAAME,cAAN,SAA6BN,SAA7B,CAAuC;AAC5CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,UALmB,GAKLC,CAAD,IAAO;AAClB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAgC,KAAKJ,KAA3C;AACAG,MAAAA,UAAU,KAAKE,KAAK,CAACC,QAArB,GACIF,aAAa,IAAIA,aAAa,CAACC,KAAK,CAACE,IAAP,CADlC,GAEIH,aAAa,IAAIA,aAAa,CAACC,KAAK,CAACC,QAAP,CAFlC;AAGD,KAVkB;;AAEjB,SAAKE,OAAL,gBAAejB,KAAK,CAACkB,SAAN,EAAf;AACD;;AASDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAiB,KAAKH,KAA5B;AAEA,wBACE;AAAK,MAAA,GAAG,EAAE,KAAKQ,OAAf;AAAwB,MAAA,OAAO,EAAGN,CAAD,IAAOA,CAAC,CAACS,eAAF,EAAxC;AAA6D,MAAA,YAAY,EAAE,KAAKC,YAAhF;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAET,UAAU,KAAKE,KAAK,CAACC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,UAAd;AAAyB,QAAA,UAAU,EAAEH,UAAU,KAAKE,KAAK,CAACC,QAA1D;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,MAAM,EAAEH,UAAU,KAAKE,KAAK,CAACC,QAD/B;AAEE,UAAA,QAAQ,EAAE,KAAKL,UAFjB;AAGE,UAAA,YAAY,EAAC,MAHf;AAIE,UAAA,QAAQ,EAAC,8BAJX;AAKE,UAAA,YAAY,EAAEE,UAAU,KAAKE,KAAK,CAACC,QALrC;AAAA,iCAOE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAhC2C;AAkC9C,eAAeR,cAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classnames from 'classnames'\nimport React, { Component } from 'react'\n// import { connect } from 'unistore/react'\n// import * as actions from '../../actions'\n\nimport SettingsMenu from '../settings-menu/settings-menu'\nimport ControlBarButton from './control-bar-button/control-bar-button'\n\nimport Tooltip from '../tooltip/tooltip'\nimport icons from '../icons'\nconst { SettingsIcon } = icons\n\n\n\nexport class SettingsButton extends Component {\n  constructor(props) {\n    super(props)\n    this.element = React.createRef()\n  }\n\n  toggleMenu = (e) => {\n    const { activeMenu, setActiveMenu } = this.props\n    activeMenu === Menus.SETTINGS\n      ? setActiveMenu && setActiveMenu(Menus.NONE)\n      : setActiveMenu && setActiveMenu(Menus.SETTINGS)\n  }\n\n  render() {\n    const { activeMenu } = this.props\n\n    return (\n      <div ref={this.element} onClick={(e) => e.stopPropagation()} onTouchStart={this.cancelAction}>\n        <SettingsMenu isActive={activeMenu === Menus.SETTINGS} />\n        <Tooltip text=\"Settings\" isDisabled={activeMenu === Menus.SETTINGS}>\n          <ControlBarButton\n            active={activeMenu === Menus.SETTINGS}\n            onAction={this.toggleMenu}\n            ariaHaspopup=\"true\"\n            ariaOwns=\"eplayer-settings-menu-flyout\"\n            ariaExpanded={activeMenu === Menus.SETTINGS}\n          >\n            <SettingsIcon />\n          </ControlBarButton>\n        </Tooltip>\n      </div>\n    )\n  }\n}\nexport default SettingsButton;\n// export default connect(\n//   (state) => ({\n//     activeMenu: state.activeMenu,\n//   }),\n//   (store) => ({\n//     setActiveMenu: actions.setActiveMenu,\n//   })\n// )(SettingsButton)\n"]},"metadata":{},"sourceType":"module"}