{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import cx from'classnames';import React from'react';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var offsetForEmptyProgress=290;var offsetForFullProgress=10;var offsetDelta=offsetForEmptyProgress-offsetForFullProgress;var convertPercentToOffset=function convertPercentToOffset(percent){return offsetForEmptyProgress-Math.floor(offsetDelta*(percent/100));};/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n */export var RadialProgress=function RadialProgress(_ref){var children=_ref.children,className=_ref.className,_ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,duration=_ref.duration,value=_ref.value,_ref$strokeLinecap=_ref.strokeLinecap,strokeLinecap=_ref$strokeLinecap===void 0?'round':_ref$strokeLinecap,_ref$strokeWidth=_ref.strokeWidth,strokeWidth=_ref$strokeWidth===void 0?10:_ref$strokeWidth,props=_objectWithoutProperties(_ref,[\"children\",\"className\",\"size\",\"duration\",\"value\",\"strokeLinecap\",\"strokeWidth\"]);var startingValue;var finalValue;if(Array.isArray(value)){startingValue=convertPercentToOffset(value[0]);finalValue=convertPercentToOffset(value[1]);}else{finalValue=startingValue=convertPercentToOffset(value);}return/*#__PURE__*/_jsxs(\"div\",{className:cx(styles.radialProgress,className),style:{height:size,width:size},children:[/*#__PURE__*/_jsxs(\"svg\",_objectSpread(_objectSpread({\"aria-label\":\"\".concat(value,\"% progress\"),viewBox:\"0 0 100 100\",height:size,width:size},props),{},{children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"50\",cy:\"50\",r:\"45\",stroke:\"currentColor\",strokeWidth:strokeWidth,fill:\"none\",opacity:\".2\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"50\",cy:\"50\",r:\"45\",stroke:\"currentColor\",strokeWidth:strokeWidth,strokeLinecap:strokeLinecap,fill:\"none\",opacity:\"1\",strokeDashoffset:finalValue,strokeDasharray:offsetForEmptyProgress,transform:\"rotate(-90 50 50)\",children:startingValue!==finalValue&&/*#__PURE__*/_jsx(\"animate\",{attributeType:\"CSS\",attributeName:\"stroke-dashoffset\",from:startingValue,to:finalValue,dur:\"\".concat(duration,\"ms\"),begin:\"0\",fill:\"freeze\"})})]})),children&&/*#__PURE__*/_jsx(\"div\",{className:styles.children,children:children})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/RadialProgress/index.tsx"],"names":["cx","React","styles","offsetForEmptyProgress","offsetForFullProgress","offsetDelta","convertPercentToOffset","percent","Math","floor","RadialProgress","children","className","size","duration","value","strokeLinecap","strokeWidth","props","startingValue","finalValue","Array","isArray","radialProgress","height","width"],"mappings":"iWAAA,MAAOA,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,KAAP,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAUA,GAAMC,CAAAA,sBAAsB,CAAG,GAA/B,CACA,GAAMC,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAMC,CAAAA,WAAW,CAAGF,sBAAsB,CAAGC,qBAA7C,CAEA,GAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,OAAD,QAC7BJ,CAAAA,sBAAsB,CAAGK,IAAI,CAACC,KAAL,CAAWJ,WAAW,EAAIE,OAAO,CAAG,GAAd,CAAtB,CADI,EAA/B,CAGA;AACA;AACA;AACA,GAEA,MAAO,IAAMG,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MASvD,IARJC,CAAAA,QAQI,MARJA,QAQI,CAPJC,SAOI,MAPJA,SAOI,gBANJC,IAMI,CANJA,IAMI,oBANG,EAMH,WALJC,QAKI,MALJA,QAKI,CAJJC,KAII,MAJJA,KAII,yBAHJC,aAGI,CAHJA,aAGI,6BAHY,OAGZ,0CAFJC,WAEI,CAFJA,WAEI,2BAFU,EAEV,kBADDC,KACC,iHACJ,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,UAAJ,CAEA,GAAIC,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,CAA0B,CACxBI,aAAa,CAAGb,sBAAsB,CAACS,KAAK,CAAC,CAAD,CAAN,CAAtC,CACAK,UAAU,CAAGd,sBAAsB,CAACS,KAAK,CAAC,CAAD,CAAN,CAAnC,CACD,CAHD,IAGO,CACLK,UAAU,CAAGD,aAAa,CAAGb,sBAAsB,CAACS,KAAD,CAAnD,CACD,CAED,mBACE,aACE,SAAS,CAAEf,EAAE,CAACE,MAAM,CAACqB,cAAR,CAAwBX,SAAxB,CADf,CAEE,KAAK,CAAE,CAAEY,MAAM,CAAEX,IAAV,CAAgBY,KAAK,CAAEZ,IAAvB,CAFT,wBAIE,yCACE,uBAAeE,KAAf,cADF,CAEE,OAAO,CAAC,aAFV,CAGE,MAAM,CAAEF,IAHV,CAIE,KAAK,CAAEA,IAJT,EAKMK,KALN,6BAOE,eACE,EAAE,CAAC,IADL,CAEE,EAAE,CAAC,IAFL,CAGE,CAAC,CAAC,IAHJ,CAIE,MAAM,CAAC,cAJT,CAKE,WAAW,CAAED,WALf,CAME,IAAI,CAAC,MANP,CAOE,OAAO,CAAC,IAPV,EAPF,cAgBE,eACE,EAAE,CAAC,IADL,CAEE,EAAE,CAAC,IAFL,CAGE,CAAC,CAAC,IAHJ,CAIE,MAAM,CAAC,cAJT,CAKE,WAAW,CAAEA,WALf,CAME,aAAa,CAAED,aANjB,CAOE,IAAI,CAAC,MAPP,CAQE,OAAO,CAAC,GARV,CASE,gBAAgB,CAAEI,UATpB,CAUE,eAAe,CAAEjB,sBAVnB,CAWE,SAAS,CAAC,mBAXZ,UAaGgB,aAAa,GAAKC,UAAlB,eACC,gBACE,aAAa,CAAC,KADhB,CAEE,aAAa,CAAC,mBAFhB,CAGE,IAAI,CAAED,aAHR,CAIE,EAAE,CAAEC,UAJN,CAKE,GAAG,WAAKN,QAAL,MALL,CAME,KAAK,CAAC,GANR,CAOE,IAAI,CAAC,QAPP,EAdJ,EAhBF,IAJF,CA8CGH,QAAQ,eAAI,YAAK,SAAS,CAAET,MAAM,CAACS,QAAvB,UAAkCA,QAAlC,EA9Cf,GADF,CAkDD,CAtEM","sourcesContent":["import cx from 'classnames';\nimport React, { SVGProps } from 'react';\n\nimport styles from './styles.module.scss';\n\nexport interface RadialProgressProps extends SVGProps<SVGSVGElement> {\n  size?: number | string;\n  duration?: number;\n  value: number | number[];\n  strokeWidth?: number | string;\n  strokeLinecap?: 'round' | 'butt' | 'square';\n}\n\nconst offsetForEmptyProgress = 290;\nconst offsetForFullProgress = 10;\nconst offsetDelta = offsetForEmptyProgress - offsetForFullProgress;\n\nconst convertPercentToOffset = (percent: number) =>\n  offsetForEmptyProgress - Math.floor(offsetDelta * (percent / 100));\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n */\n\nexport const RadialProgress: React.FC<RadialProgressProps> = ({\n  children,\n  className,\n  size = 24,\n  duration,\n  value,\n  strokeLinecap = 'round',\n  strokeWidth = 10,\n  ...props\n}) => {\n  let startingValue;\n  let finalValue;\n\n  if (Array.isArray(value)) {\n    startingValue = convertPercentToOffset(value[0]);\n    finalValue = convertPercentToOffset(value[1]);\n  } else {\n    finalValue = startingValue = convertPercentToOffset(value);\n  }\n\n  return (\n    <div\n      className={cx(styles.radialProgress, className)}\n      style={{ height: size, width: size }}\n    >\n      <svg\n        aria-label={`${value}% progress`}\n        viewBox=\"0 0 100 100\"\n        height={size}\n        width={size}\n        {...props}\n      >\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          opacity=\".2\"\n        />\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          strokeLinecap={strokeLinecap}\n          fill=\"none\"\n          opacity=\"1\"\n          strokeDashoffset={finalValue}\n          strokeDasharray={offsetForEmptyProgress}\n          transform=\"rotate(-90 50 50)\"\n        >\n          {startingValue !== finalValue && (\n            <animate\n              attributeType=\"CSS\"\n              attributeName=\"stroke-dashoffset\"\n              from={startingValue}\n              to={finalValue}\n              dur={`${duration}ms`}\n              begin=\"0\"\n              fill=\"freeze\"\n            />\n          )}\n        </circle>\n      </svg>\n      {children && <div className={styles.children}>{children}</div>}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}