{"ast":null,"code":"const breakpoints = [[120, 160], [240, 427], [360, 640], [480, 854], [720, 1280], [1080, 1920]];\nexport function findBreakpoint({\n  width,\n  height\n}) {\n  let i = breakpoints.length - 1;\n  let breakpoint = {\n    height: breakpoints[0][0],\n    width: breakpoints[0][1]\n  };\n\n  while (i--) {\n    let [h, w] = breakpoints[i];\n    let [largerH, largerW] = breakpoints[i + 1];\n\n    if (h < height && w < width) {\n      breakpoint = {\n        height: largerH,\n        width: largerW\n      };\n      break;\n    }\n  }\n\n  return breakpoint;\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/utilities/find-breakpoint.js"],"names":["breakpoints","findBreakpoint","width","height","i","length","breakpoint","h","w","largerH","largerW"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,EAAyB,CAAC,GAAD,EAAM,GAAN,CAAzB,EAAqC,CAAC,GAAD,EAAM,GAAN,CAArC,EAAiD,CAAC,GAAD,EAAM,IAAN,CAAjD,EAA8D,CAAC,IAAD,EAAO,IAAP,CAA9D,CAApB;AAEA,OAAO,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA2C;AAChD,MAAIC,CAAC,GAAGJ,WAAW,CAACK,MAAZ,GAAqB,CAA7B;AACA,MAAIC,UAAU,GAAG;AAAEH,IAAAA,MAAM,EAAEH,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAV;AAA6BE,IAAAA,KAAK,EAAEF,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf;AAApC,GAAjB;;AAEA,SAAOI,CAAC,EAAR,EAAY;AACV,QAAI,CAACG,CAAD,EAAIC,CAAJ,IAASR,WAAW,CAACI,CAAD,CAAxB;AACA,QAAI,CAACK,OAAD,EAAUC,OAAV,IAAqBV,WAAW,CAACI,CAAC,GAAG,CAAL,CAApC;;AAEA,QAAIG,CAAC,GAAGJ,MAAJ,IAAcK,CAAC,GAAGN,KAAtB,EAA6B;AAC3BI,MAAAA,UAAU,GAAG;AAAEH,QAAAA,MAAM,EAAEM,OAAV;AAAmBP,QAAAA,KAAK,EAAEQ;AAA1B,OAAb;AACA;AACD;AACF;;AACD,SAAOJ,UAAP;AACD","sourcesContent":["const breakpoints = [[120, 160], [240, 427], [360, 640], [480, 854], [720, 1280], [1080, 1920]]\n\nexport function findBreakpoint({ width, height }) {\n  let i = breakpoints.length - 1\n  let breakpoint = { height: breakpoints[0][0], width: breakpoints[0][1] }\n\n  while (i--) {\n    let [h, w] = breakpoints[i]\n    let [largerH, largerW] = breakpoints[i + 1]\n\n    if (h < height && w < width) {\n      breakpoint = { height: largerH, width: largerW }\n      break\n    }\n  }\n  return breakpoint\n}\n"]},"metadata":{},"sourceType":"module"}