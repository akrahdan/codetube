{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Projects/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Column, ContentContainer, HeadingDeprecated, LayoutGrid } from '@codecademy/gamut';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport { projectDetailPath } from 'libs/urlHelpers';\nimport { CardGrid } from 'portal/components/CardGrid';\nimport { PortalContainer } from 'portal/layouts/PortalContainer';\nimport { useFetchProjectsQuery } from 'services/projects';\nimport { ProjectsSection } from './ProjectsSection/ProjectsSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsContainer = styled(Column)`\n  padding-bottom: ${({\n  theme\n}) => theme.spacing[64]};\n`;\n_c = ProjectsContainer;\nconst ProjectsHeading = styled(HeadingDeprecated)`\n  margin-top: ${({\n  theme\n}) => theme.spacing[24]};\n`;\n_c2 = ProjectsHeading;\nexport const Projects = () => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    data: projects\n  } = useFetchProjectsQuery();\n  return /*#__PURE__*/_jsxDEV(PortalContainer, {\n    backgroundColor: \"beige\",\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      as: \"main\",\n      children: /*#__PURE__*/_jsxDEV(LayoutGrid, {\n        rowGap: 48,\n        columnGap: {\n          _: 16,\n          md: 32\n        },\n        children: /*#__PURE__*/_jsxDEV(ProjectsContainer, {\n          size: 12,\n          children: [/*#__PURE__*/_jsxDEV(ProjectsHeading, {\n            as: \"h1\",\n            fontSize: \"xl\",\n            children: \"Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Master any skill a Project at a time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n            as: \"ul\",\n            columns: 4,\n            children: /*#__PURE__*/_jsxDEV(ProjectsSection, {\n              projects: projects,\n              linkCallback: project => projectDetailPath(project.slug),\n              trackingData: {\n                page_name: 'practice_tab',\n                target: 'challenge_project'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"+bkKL0H6ellCDYJUWrTm6g5VVbc=\", false, function () {\n  return [useFetchProjectsQuery];\n});\n\n_c3 = Projects;\nexport default Projects;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProjectsContainer\");\n$RefreshReg$(_c2, \"ProjectsHeading\");\n$RefreshReg$(_c3, \"Projects\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Projects/index.tsx"],"names":["Column","ContentContainer","HeadingDeprecated","LayoutGrid","styled","React","useState","projectDetailPath","CardGrid","PortalContainer","useFetchProjectsQuery","ProjectsSection","ProjectsContainer","theme","spacing","ProjectsHeading","Projects","isModalOpen","setIsModalOpen","data","projects","_","md","project","slug","page_name","target"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,UAJF,QAKO,mBALP;AAMA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAA+BC,iBAA/B,QAAwD,iBAAxD;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAGA,SAASC,qBAAT,QAAmE,mBAAnE;AAEA,SAASC,eAAT,QAAgC,mCAAhC;;AAEA,MAAMC,iBAAiB,GAAGR,MAAM,CAACJ,MAAD,CAAS;AACzC,oBAAoB,CAAC;AAAEa,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAc,EAAd,CAAkB;AACrD,CAFA;KAAMF,iB;AAIN,MAAMG,eAAe,GAAGX,MAAM,CAACF,iBAAD,CAAoB;AAClD,gBAAgB,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAc,EAAd,CAAkB;AACjD,CAFA;MAAMC,e;AAIN,OAAO,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;AAGA,QAAM;AAAEa,IAAAA,IAAI,EAAEC;AAAR,MAAqBV,qBAAqB,EAAhD;AAGA,sBACE,QAAC,eAAD;AACA,IAAA,eAAe,EAAC,OADhB;AAAA,2BAGE,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,MAArB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,EAApB;AAAwB,QAAA,SAAS,EAAE;AAAEW,UAAAA,CAAC,EAAE,EAAL;AAASC,UAAAA,EAAE,EAAE;AAAb,SAAnC;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,IAAI,EAAE,EAAzB;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,EAAE,EAAC,IAApB;AAAyB,YAAA,QAAQ,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC,IAAb;AAAkB,YAAA,OAAO,EAAE,CAA3B;AAAA,mCACE,QAAC,eAAD;AACE,cAAA,QAAQ,EAAIF,QADd;AAEE,cAAA,YAAY,EAAGG,OAAD,IAAahB,iBAAiB,CAACgB,OAAO,CAACC,IAAT,CAF9C;AAIE,cAAA,YAAY,EAAE;AACZC,gBAAAA,SAAS,EAAE,cADC;AAEZC,gBAAAA,MAAM,EAAE;AAFI;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnCM;;GAAMV,Q;UAIgBN,qB;;;MAJhBM,Q;AAqCb,eAAeA,QAAf","sourcesContent":["import {\n  Column,\n  ContentContainer,\n  HeadingDeprecated,\n  LayoutGrid,\n} from '@codecademy/gamut';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { challengeProjectPath, projectDetailPath } from 'libs/urlHelpers';\n\nimport { CardGrid } from 'portal/components/CardGrid';\nimport { PortalContainer } from 'portal/layouts/PortalContainer';\n\n\nimport { useFetchProjectsQuery, useCartUpdateMutation, Cart } from 'services/projects';\n\nimport { ProjectsSection } from './ProjectsSection/ProjectsSection';\n\nconst ProjectsContainer = styled(Column)`\n  padding-bottom: ${({ theme }) => theme.spacing[64]};\n`;\n\nconst ProjectsHeading = styled(HeadingDeprecated)`\n  margin-top: ${({ theme }) => theme.spacing[24]};\n`;\n\nexport const Projects: React.FC = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n\n  const { data: projects } = useFetchProjectsQuery()\n\n\n  return (\n    <PortalContainer\n    backgroundColor=\"beige\"\n    >\n      <ContentContainer as=\"main\">\n        <LayoutGrid rowGap={48} columnGap={{ _: 16, md: 32 }}>\n          <ProjectsContainer size={12}>\n            <ProjectsHeading as=\"h1\" fontSize=\"xl\">\n              Coming Soon\n            </ProjectsHeading>\n            <p>Master any skill a Project at a time</p>\n            <CardGrid as=\"ul\" columns={4}>\n              <ProjectsSection\n                projects= { projects}\n                linkCallback={(project) => projectDetailPath(project.slug)}\n              \n                trackingData={{\n                  page_name: 'practice_tab',\n                  target: 'challenge_project',\n                }}\n              />\n            </CardGrid>\n          </ProjectsContainer>\n          \n        </LayoutGrid>\n      </ContentContainer>\n    </PortalContainer>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}