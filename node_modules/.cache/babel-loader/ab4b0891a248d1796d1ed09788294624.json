{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, isOrContainsNode } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n      refresh = _ref.refresh,\n      store = _ref.store,\n      setters = _objectWithoutProperties(_ref, [\"props\", \"refresh\", \"store\"]);\n\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        formElement = providedProps.formElement,\n        panelElement = providedProps.panelElement,\n        rest = _objectWithoutProperties(providedProps, [\"inputElement\", \"formElement\", \"panelElement\"]);\n\n    return _objectSpread({\n      // On touch devices, we do not rely on the native `blur` event of the\n      // input to close the panel, but rather on a custom `touchstart` event\n      // outside of the autocomplete elements.\n      // This ensures a working experience on mobile because we blur the input\n      // on touch devices when the user starts scrolling (`touchmove`).\n      onTouchStart: function onTouchStart(event) {\n        if (store.getState().isOpen === false || event.target === inputElement) {\n          return;\n        } // @TODO: support cases where there are multiple Autocomplete instances.\n        // Right now, a second instance makes this computation return false.\n\n\n        var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n          return isOrContainsNode(contextNode, event.target) || isOrContainsNode(contextNode, props.environment.document.activeElement);\n        });\n\n        if (isTargetWithinAutocomplete === false) {\n          store.dispatch('blur', null);\n        }\n      },\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n\n        inputElement.blur();\n      }\n    }, rest);\n  };\n\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        rest = _objectWithoutProperties(providedProps, [\"inputElement\"]);\n\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n\n  var getInputProps = function getInputProps(providedProps) {\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    var isTouchDevice = ('ontouchstart' in props.environment);\n\n    var _ref2 = providedProps || {},\n        inputElement = _ref2.inputElement,\n        _ref2$maxLength = _ref2.maxLength,\n        maxLength = _ref2$maxLength === void 0 ? 512 : _ref2$maxLength,\n        rest = _objectWithoutProperties(_ref2, [\"inputElement\", \"maxLength\"]);\n\n    var activeItem = getActiveItem(store.getState());\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? \"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId) : undefined,\n      'aria-controls': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      value: store.getState().completion || store.getState().query,\n      id: \"\".concat(props.id, \"-input\"),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: activeItem !== null && activeItem !== void 0 && activeItem.itemUrl ? 'go' : 'search',\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      onBlur: function onBlur() {\n        // We do rely on the `blur` event on touch devices.\n        // See explanation in `onTouchStart`.\n        if (!isTouchDevice) {\n          store.dispatch('blur', null);\n        }\n      },\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n\n  var getLabelProps = function getLabelProps(rest) {\n    return _objectSpread({\n      htmlFor: \"\".concat(props.id, \"-input\"),\n      id: \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n\n  var getListProps = function getListProps(rest) {\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      id: \"\".concat(props.id, \"-list\")\n    }, rest);\n  };\n\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n        source = providedProps.source,\n        rest = _objectWithoutProperties(providedProps, [\"item\", \"source\"]);\n\n    return _objectSpread({\n      id: \"\".concat(props.id, \"-item-\").concat(item.__autocomplete_id),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n              itemInputValue = activeItem.itemInputValue,\n              itemUrl = activeItem.itemUrl,\n              _source = activeItem.source;\n\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        }); // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","onInput","onKeyDown","_onKeyDown","getActiveItem","isOrContainsNode","getPropGetters","_ref","props","refresh","store","setters","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","rest","onTouchStart","event","getState","isOpen","isTargetWithinAutocomplete","some","contextNode","environment","document","activeElement","dispatch","onTouchMove","blur","getRootProps","role","concat","id","undefined","getFormProps","action","noValidate","onSubmit","_providedProps$inputE","preventDefault","state","onReset","_providedProps$inputE2","focus","getInputProps","onFocus","openOnFocus","Boolean","query","completion","isTouchDevice","_ref2","_ref2$maxLength","maxLength","activeItem","activeItemId","autoComplete","autoCorrect","autoCapitalize","enterKeyHint","itemUrl","spellCheck","autoFocus","placeholder","type","onChange","currentTarget","slice","onBlur","onClick","getLabelProps","htmlFor","getListProps","getPanelProps","onMouseDown","onMouseLeave","getItemProps","item","__autocomplete_id","onMouseMove","_item","itemInputValue","_source","onActive","getItemInputValue","getItemUrl","runPreCommand","Promise","resolve","nextState","then","onSelect"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,wBAAT,CAAkCX,MAAlC,EAA0CY,QAA1C,EAAoD;AAAE,MAAIZ,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAGiB,6BAA6B,CAACb,MAAD,EAASY,QAAT,CAA1C;;AAA8D,MAAIV,GAAJ,EAASL,CAAT;;AAAY,MAAIX,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAI2B,gBAAgB,GAAG5B,MAAM,CAACC,qBAAP,CAA6Ba,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiB,gBAAgB,CAACf,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEK,MAAAA,GAAG,GAAGY,gBAAgB,CAACjB,CAAD,CAAtB;AAA2B,UAAIe,QAAQ,CAACG,OAAT,CAAiBb,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAAChB,MAAM,CAAC8B,SAAP,CAAiBC,oBAAjB,CAAsCC,IAAtC,CAA2ClB,MAA3C,EAAmDE,GAAnD,CAAL,EAA8D;AAAUN,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAE5e,SAASiB,6BAAT,CAAuCb,MAAvC,EAA+CY,QAA/C,EAAyD;AAAE,MAAIZ,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIuB,UAAU,GAAGjC,MAAM,CAACD,IAAP,CAAYe,MAAZ,CAAjB;AAAsC,MAAIE,GAAJ,EAASL,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsB,UAAU,CAACpB,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEK,IAAAA,GAAG,GAAGiB,UAAU,CAACtB,CAAD,CAAhB;AAAqB,QAAIe,QAAQ,CAACG,OAAT,CAAiBb,GAAjB,KAAyB,CAA7B,EAAgC;AAAUN,IAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;;AAAC,SAAON,MAAP;AAAgB;;AAEnT,SAASwB,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAS,IAAIC,UAAtB,QAAwC,aAAxC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,SAAhD;AACA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,OAAO,GAAGnB,wBAAwB,CAACe,IAAD,EAAO,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAAP,CAHtC;;AAKA,MAAIK,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,aAA7B,EAA4C;AACpE,QAAIC,YAAY,GAAGD,aAAa,CAACC,YAAjC;AAAA,QACIC,WAAW,GAAGF,aAAa,CAACE,WADhC;AAAA,QAEIC,YAAY,GAAGH,aAAa,CAACG,YAFjC;AAAA,QAGIC,IAAI,GAAGzB,wBAAwB,CAACqB,aAAD,EAAgB,CAAC,cAAD,EAAiB,aAAjB,EAAgC,cAAhC,CAAhB,CAHnC;;AAKA,WAAOrC,aAAa,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA0C,MAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzC,YAAIT,KAAK,CAACU,QAAN,GAAiBC,MAAjB,KAA4B,KAA5B,IAAqCF,KAAK,CAAC1C,MAAN,KAAiBqC,YAA1D,EAAwE;AACtE;AACD,SAHwC,CAGvC;AACF;;;AAGA,YAAIQ,0BAA0B,GAAG,CAACP,WAAD,EAAcC,YAAd,EAA4BO,IAA5B,CAAiC,UAAUC,WAAV,EAAuB;AACvF,iBAAOnB,gBAAgB,CAACmB,WAAD,EAAcL,KAAK,CAAC1C,MAApB,CAAhB,IAA+C4B,gBAAgB,CAACmB,WAAD,EAAchB,KAAK,CAACiB,WAAN,CAAkBC,QAAlB,CAA2BC,aAAzC,CAAtE;AACD,SAFgC,CAAjC;;AAIA,YAAIL,0BAA0B,KAAK,KAAnC,EAA0C;AACxCZ,UAAAA,KAAK,CAACkB,QAAN,CAAe,MAAf,EAAuB,IAAvB;AACD;AACF,OApBkB;AAqBnB;AACA;AACA;AACA;AACAC,MAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBV,KAArB,EAA4B;AACvC,YAAIT,KAAK,CAACU,QAAN,GAAiBC,MAAjB,KAA4B,KAA5B,IAAqCP,YAAY,KAAKN,KAAK,CAACiB,WAAN,CAAkBC,QAAlB,CAA2BC,aAAjF,IAAkGR,KAAK,CAAC1C,MAAN,KAAiBqC,YAAvH,EAAqI;AACnI;AACD;;AAEDA,QAAAA,YAAY,CAACgB,IAAb;AACD;AA/BkB,KAAD,EAgCjBb,IAhCiB,CAApB;AAiCD,GAvCD;;AAyCA,MAAIc,YAAY,GAAG,SAASA,YAAT,CAAsBd,IAAtB,EAA4B;AAC7C,WAAOzC,aAAa,CAAC;AACnBwD,MAAAA,IAAI,EAAE,UADa;AAEnB,uBAAiBtB,KAAK,CAACU,QAAN,GAAiBC,MAFf;AAGnB,uBAAiB,SAHE;AAInB,mBAAaX,KAAK,CAACU,QAAN,GAAiBC,MAAjB,GAA0B,GAAGY,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,OAApB,CAA1B,GAAyDC,SAJnD;AAKnB,yBAAmB,GAAGF,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB;AALA,KAAD,EAMjBjB,IANiB,CAApB;AAOD,GARD;;AAUA,MAAImB,YAAY,GAAG,SAASA,YAAT,CAAsBvB,aAAtB,EAAqC;AACtD,QAAIC,YAAY,GAAGD,aAAa,CAACC,YAAjC;AAAA,QACIG,IAAI,GAAGzB,wBAAwB,CAACqB,aAAD,EAAgB,CAAC,cAAD,CAAhB,CADnC;;AAGA,WAAOrC,aAAa,CAAC;AACnB6D,MAAAA,MAAM,EAAE,EADW;AAEnBC,MAAAA,UAAU,EAAE,IAFO;AAGnBN,MAAAA,IAAI,EAAE,QAHa;AAInBO,MAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBpB,KAAlB,EAAyB;AACjC,YAAIqB,qBAAJ;;AAEArB,QAAAA,KAAK,CAACsB,cAAN;AACAjC,QAAAA,KAAK,CAAC+B,QAAN,CAAe/D,aAAa,CAAC;AAC3B2C,UAAAA,KAAK,EAAEA,KADoB;AAE3BV,UAAAA,OAAO,EAAEA,OAFkB;AAG3BiC,UAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAHoB,SAAD,EAIzBT,OAJyB,CAA5B;AAKAD,QAAAA,KAAK,CAACkB,QAAN,CAAe,QAAf,EAAyB,IAAzB;AACA,SAACY,qBAAqB,GAAG3B,aAAa,CAACC,YAAvC,MAAyD,IAAzD,IAAiE0B,qBAAqB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6GA,qBAAqB,CAACV,IAAtB,EAA7G;AACD,OAfkB;AAgBnBa,MAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBxB,KAAjB,EAAwB;AAC/B,YAAIyB,sBAAJ;;AAEAzB,QAAAA,KAAK,CAACsB,cAAN;AACAjC,QAAAA,KAAK,CAACmC,OAAN,CAAcnE,aAAa,CAAC;AAC1B2C,UAAAA,KAAK,EAAEA,KADmB;AAE1BV,UAAAA,OAAO,EAAEA,OAFiB;AAG1BiC,UAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAHmB,SAAD,EAIxBT,OAJwB,CAA3B;AAKAD,QAAAA,KAAK,CAACkB,QAAN,CAAe,OAAf,EAAwB,IAAxB;AACA,SAACgB,sBAAsB,GAAG/B,aAAa,CAACC,YAAxC,MAA0D,IAA1D,IAAkE8B,sBAAsB,KAAK,KAAK,CAAlG,GAAsG,KAAK,CAA3G,GAA+GA,sBAAsB,CAACC,KAAvB,EAA/G;AACD;AA3BkB,KAAD,EA4BjB5B,IA5BiB,CAApB;AA6BD,GAjCD;;AAmCA,MAAI6B,aAAa,GAAG,SAASA,aAAT,CAAuBjC,aAAvB,EAAsC;AACxD,aAASkC,OAAT,CAAiB5B,KAAjB,EAAwB;AACtB;AACA;AACA,UAAIX,KAAK,CAACwC,WAAN,IAAqBC,OAAO,CAACvC,KAAK,CAACU,QAAN,GAAiB8B,KAAlB,CAAhC,EAA0D;AACxDjD,QAAAA,OAAO,CAACzB,aAAa,CAAC;AACpB2C,UAAAA,KAAK,EAAEA,KADa;AAEpBX,UAAAA,KAAK,EAAEA,KAFa;AAGpB0C,UAAAA,KAAK,EAAExC,KAAK,CAACU,QAAN,GAAiB+B,UAAjB,IAA+BzC,KAAK,CAACU,QAAN,GAAiB8B,KAHnC;AAIpBzC,UAAAA,OAAO,EAAEA,OAJW;AAKpBC,UAAAA,KAAK,EAAEA;AALa,SAAD,EAMlBC,OANkB,CAAd,CAAP;AAOD;;AAEDD,MAAAA,KAAK,CAACkB,QAAN,CAAe,OAAf,EAAwB,IAAxB;AACD;;AAED,QAAIwB,aAAa,IAAI,kBAAkB5C,KAAK,CAACiB,WAA5B,CAAjB;;AAEA,QAAI4B,KAAK,GAAGxC,aAAa,IAAI,EAA7B;AAAA,QACIC,YAAY,GAAGuC,KAAK,CAACvC,YADzB;AAAA,QAEIwC,eAAe,GAAGD,KAAK,CAACE,SAF5B;AAAA,QAGIA,SAAS,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,GAA7B,GAAmCA,eAHnD;AAAA,QAIIrC,IAAI,GAAGzB,wBAAwB,CAAC6D,KAAD,EAAQ,CAAC,cAAD,EAAiB,WAAjB,CAAR,CAJnC;;AAMA,QAAIG,UAAU,GAAGpD,aAAa,CAACM,KAAK,CAACU,QAAN,EAAD,CAA9B;AACA,WAAO5C,aAAa,CAAC;AACnB,2BAAqB,MADF;AAEnB,+BAAyBkC,KAAK,CAACU,QAAN,GAAiBC,MAAjB,IAA2BX,KAAK,CAACU,QAAN,GAAiBqC,YAAjB,KAAkC,IAA7D,GAAoE,GAAGxB,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,EAA8BD,MAA9B,CAAqCvB,KAAK,CAACU,QAAN,GAAiBqC,YAAtD,CAApE,GAA0ItB,SAFhJ;AAGnB,uBAAiBzB,KAAK,CAACU,QAAN,GAAiBC,MAAjB,GAA0B,GAAGY,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,OAApB,CAA1B,GAAyDC,SAHvD;AAInB,yBAAmB,GAAGF,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,CAJA;AAKnB7C,MAAAA,KAAK,EAAEqB,KAAK,CAACU,QAAN,GAAiB+B,UAAjB,IAA+BzC,KAAK,CAACU,QAAN,GAAiB8B,KALpC;AAMnBhB,MAAAA,EAAE,EAAE,GAAGD,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,CANe;AAOnBwB,MAAAA,YAAY,EAAE,KAPK;AAQnBC,MAAAA,WAAW,EAAE,KARM;AASnBC,MAAAA,cAAc,EAAE,KATG;AAUnBC,MAAAA,YAAY,EAAEL,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,IAAgDA,UAAU,CAACM,OAA3D,GAAqE,IAArE,GAA4E,QAVvE;AAWnBC,MAAAA,UAAU,EAAE,OAXO;AAYnBC,MAAAA,SAAS,EAAExD,KAAK,CAACwD,SAZE;AAanBC,MAAAA,WAAW,EAAEzD,KAAK,CAACyD,WAbA;AAcnBV,MAAAA,SAAS,EAAEA,SAdQ;AAenBW,MAAAA,IAAI,EAAE,QAfa;AAgBnBC,MAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBhD,KAAlB,EAAyB;AACjClB,QAAAA,OAAO,CAACzB,aAAa,CAAC;AACpB2C,UAAAA,KAAK,EAAEA,KADa;AAEpBX,UAAAA,KAAK,EAAEA,KAFa;AAGpB0C,UAAAA,KAAK,EAAE/B,KAAK,CAACiD,aAAN,CAAoB/E,KAApB,CAA0BgF,KAA1B,CAAgC,CAAhC,EAAmCd,SAAnC,CAHa;AAIpB9C,UAAAA,OAAO,EAAEA,OAJW;AAKpBC,UAAAA,KAAK,EAAEA;AALa,SAAD,EAMlBC,OANkB,CAAd,CAAP;AAOD,OAxBkB;AAyBnBT,MAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBiB,KAAnB,EAA0B;AACnChB,QAAAA,UAAU,CAAC3B,aAAa,CAAC;AACvB2C,UAAAA,KAAK,EAAEA,KADgB;AAEvBX,UAAAA,KAAK,EAAEA,KAFgB;AAGvBC,UAAAA,OAAO,EAAEA,OAHc;AAIvBC,UAAAA,KAAK,EAAEA;AAJgB,SAAD,EAKrBC,OALqB,CAAd,CAAV;AAMD,OAhCkB;AAiCnBoC,MAAAA,OAAO,EAAEA,OAjCU;AAkCnBuB,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB;AACA;AACA,YAAI,CAAClB,aAAL,EAAoB;AAClB1C,UAAAA,KAAK,CAACkB,QAAN,CAAe,MAAf,EAAuB,IAAvB;AACD;AACF,OAxCkB;AAyCnB2C,MAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBpD,KAAjB,EAAwB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAIN,aAAa,CAACC,YAAd,KAA+BN,KAAK,CAACiB,WAAN,CAAkBC,QAAlB,CAA2BC,aAA1D,IAA2E,CAACjB,KAAK,CAACU,QAAN,GAAiBC,MAAjG,EAAyG;AACvG0B,UAAAA,OAAO,CAAC5B,KAAD,CAAP;AACD;AACF;AApDkB,KAAD,EAqDjBF,IArDiB,CAApB;AAsDD,GAhFD;;AAkFA,MAAIuD,aAAa,GAAG,SAASA,aAAT,CAAuBvD,IAAvB,EAA6B;AAC/C,WAAOzC,aAAa,CAAC;AACnBiG,MAAAA,OAAO,EAAE,GAAGxC,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,CADU;AAEnBA,MAAAA,EAAE,EAAE,GAAGD,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB;AAFe,KAAD,EAGjBjB,IAHiB,CAApB;AAID,GALD;;AAOA,MAAIyD,YAAY,GAAG,SAASA,YAAT,CAAsBzD,IAAtB,EAA4B;AAC7C,WAAOzC,aAAa,CAAC;AACnBwD,MAAAA,IAAI,EAAE,SADa;AAEnB,yBAAmB,GAAGC,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,CAFA;AAGnBA,MAAAA,EAAE,EAAE,GAAGD,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,OAApB;AAHe,KAAD,EAIjBjB,IAJiB,CAApB;AAKD,GAND;;AAQA,MAAI0D,aAAa,GAAG,SAASA,aAAT,CAAuB1D,IAAvB,EAA6B;AAC/C,WAAOzC,aAAa,CAAC;AACnBoG,MAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBzD,KAArB,EAA4B;AACvC;AACA;AACA;AACAA,QAAAA,KAAK,CAACsB,cAAN;AACD,OANkB;AAOnBoC,MAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpCnE,QAAAA,KAAK,CAACkB,QAAN,CAAe,YAAf,EAA6B,IAA7B;AACD;AATkB,KAAD,EAUjBX,IAViB,CAApB;AAWD,GAZD;;AAcA,MAAI6D,YAAY,GAAG,SAASA,YAAT,CAAsBjE,aAAtB,EAAqC;AACtD,QAAIkE,IAAI,GAAGlE,aAAa,CAACkE,IAAzB;AAAA,QACIlG,MAAM,GAAGgC,aAAa,CAAChC,MAD3B;AAAA,QAEIoC,IAAI,GAAGzB,wBAAwB,CAACqB,aAAD,EAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,CAFnC;;AAIA,WAAOrC,aAAa,CAAC;AACnB0D,MAAAA,EAAE,EAAE,GAAGD,MAAH,CAAUzB,KAAK,CAAC0B,EAAhB,EAAoB,QAApB,EAA8BD,MAA9B,CAAqC8C,IAAI,CAACC,iBAA1C,CADe;AAEnBhD,MAAAA,IAAI,EAAE,QAFa;AAGnB,uBAAiBtB,KAAK,CAACU,QAAN,GAAiBqC,YAAjB,KAAkCsB,IAAI,CAACC,iBAHrC;AAInBC,MAAAA,WAAW,EAAE,SAASA,WAAT,CAAqB9D,KAArB,EAA4B;AACvC,YAAI4D,IAAI,CAACC,iBAAL,KAA2BtE,KAAK,CAACU,QAAN,GAAiBqC,YAAhD,EAA8D;AAC5D;AACD;;AAED/C,QAAAA,KAAK,CAACkB,QAAN,CAAe,WAAf,EAA4BmD,IAAI,CAACC,iBAAjC;AACA,YAAIxB,UAAU,GAAGpD,aAAa,CAACM,KAAK,CAACU,QAAN,EAAD,CAA9B;;AAEA,YAAIV,KAAK,CAACU,QAAN,GAAiBqC,YAAjB,KAAkC,IAAlC,IAA0CD,UAA9C,EAA0D;AACxD,cAAI0B,KAAK,GAAG1B,UAAU,CAACuB,IAAvB;AAAA,cACII,cAAc,GAAG3B,UAAU,CAAC2B,cADhC;AAAA,cAEIrB,OAAO,GAAGN,UAAU,CAACM,OAFzB;AAAA,cAGIsB,OAAO,GAAG5B,UAAU,CAAC3E,MAHzB;;AAKAuG,UAAAA,OAAO,CAACC,QAAR,CAAiB7G,aAAa,CAAC;AAC7B2C,YAAAA,KAAK,EAAEA,KADsB;AAE7B4D,YAAAA,IAAI,EAAEG,KAFuB;AAG7BC,YAAAA,cAAc,EAAEA,cAHa;AAI7BrB,YAAAA,OAAO,EAAEA,OAJoB;AAK7BrD,YAAAA,OAAO,EAAEA,OALoB;AAM7B5B,YAAAA,MAAM,EAAEuG,OANqB;AAO7B1C,YAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAPsB,WAAD,EAQ3BT,OAR2B,CAA9B;AASD;AACF,OA5BkB;AA6BnBiE,MAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBzD,KAArB,EAA4B;AACvC;AACA;AACAA,QAAAA,KAAK,CAACsB,cAAN;AACD,OAjCkB;AAkCnB8B,MAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBpD,KAAjB,EAAwB;AAC/B,YAAIgE,cAAc,GAAGtG,MAAM,CAACyG,iBAAP,CAAyB;AAC5CP,UAAAA,IAAI,EAAEA,IADsC;AAE5CrC,UAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAFqC,SAAzB,CAArB;AAIA,YAAI0C,OAAO,GAAGjF,MAAM,CAAC0G,UAAP,CAAkB;AAC9BR,UAAAA,IAAI,EAAEA,IADwB;AAE9BrC,UAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAFuB,SAAlB,CAAd,CAL+B,CAQ3B;AACJ;AACA;AACA;AACA;;AAEA,YAAIoE,aAAa,GAAG1B,OAAO,GAAG2B,OAAO,CAACC,OAAR,EAAH,GAAuBzF,OAAO,CAACzB,aAAa,CAAC;AACtE2C,UAAAA,KAAK,EAAEA,KAD+D;AAEtEwE,UAAAA,SAAS,EAAE;AACTtE,YAAAA,MAAM,EAAE;AADC,WAF2D;AAKtEb,UAAAA,KAAK,EAAEA,KAL+D;AAMtE0C,UAAAA,KAAK,EAAEiC,cAN+D;AAOtE1E,UAAAA,OAAO,EAAEA,OAP6D;AAQtEC,UAAAA,KAAK,EAAEA;AAR+D,SAAD,EASpEC,OAToE,CAAd,CAAzD;AAUA6E,QAAAA,aAAa,CAACI,IAAd,CAAmB,YAAY;AAC7B/G,UAAAA,MAAM,CAACgH,QAAP,CAAgBrH,aAAa,CAAC;AAC5B2C,YAAAA,KAAK,EAAEA,KADqB;AAE5B4D,YAAAA,IAAI,EAAEA,IAFsB;AAG5BI,YAAAA,cAAc,EAAEA,cAHY;AAI5BrB,YAAAA,OAAO,EAAEA,OAJmB;AAK5BrD,YAAAA,OAAO,EAAEA,OALmB;AAM5B5B,YAAAA,MAAM,EAAEA,MANoB;AAO5B6D,YAAAA,KAAK,EAAEhC,KAAK,CAACU,QAAN;AAPqB,WAAD,EAQ1BT,OAR0B,CAA7B;AASD,SAVD;AAWD;AArEkB,KAAD,EAsEjBM,IAtEiB,CAApB;AAuED,GA5ED;;AA8EA,SAAO;AACLL,IAAAA,mBAAmB,EAAEA,mBADhB;AAELmB,IAAAA,YAAY,EAAEA,YAFT;AAGLK,IAAAA,YAAY,EAAEA,YAHT;AAILoC,IAAAA,aAAa,EAAEA,aAJV;AAKL1B,IAAAA,aAAa,EAAEA,aALV;AAML6B,IAAAA,aAAa,EAAEA,aANV;AAOLD,IAAAA,YAAY,EAAEA,YAPT;AAQLI,IAAAA,YAAY,EAAEA;AART,GAAP;AAUD","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, isOrContainsNode } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n      refresh = _ref.refresh,\n      store = _ref.store,\n      setters = _objectWithoutProperties(_ref, [\"props\", \"refresh\", \"store\"]);\n\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        formElement = providedProps.formElement,\n        panelElement = providedProps.panelElement,\n        rest = _objectWithoutProperties(providedProps, [\"inputElement\", \"formElement\", \"panelElement\"]);\n\n    return _objectSpread({\n      // On touch devices, we do not rely on the native `blur` event of the\n      // input to close the panel, but rather on a custom `touchstart` event\n      // outside of the autocomplete elements.\n      // This ensures a working experience on mobile because we blur the input\n      // on touch devices when the user starts scrolling (`touchmove`).\n      onTouchStart: function onTouchStart(event) {\n        if (store.getState().isOpen === false || event.target === inputElement) {\n          return;\n        } // @TODO: support cases where there are multiple Autocomplete instances.\n        // Right now, a second instance makes this computation return false.\n\n\n        var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n          return isOrContainsNode(contextNode, event.target) || isOrContainsNode(contextNode, props.environment.document.activeElement);\n        });\n\n        if (isTargetWithinAutocomplete === false) {\n          store.dispatch('blur', null);\n        }\n      },\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n\n        inputElement.blur();\n      }\n    }, rest);\n  };\n\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        rest = _objectWithoutProperties(providedProps, [\"inputElement\"]);\n\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n\n  var getInputProps = function getInputProps(providedProps) {\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    var isTouchDevice = ('ontouchstart' in props.environment);\n\n    var _ref2 = providedProps || {},\n        inputElement = _ref2.inputElement,\n        _ref2$maxLength = _ref2.maxLength,\n        maxLength = _ref2$maxLength === void 0 ? 512 : _ref2$maxLength,\n        rest = _objectWithoutProperties(_ref2, [\"inputElement\", \"maxLength\"]);\n\n    var activeItem = getActiveItem(store.getState());\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? \"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId) : undefined,\n      'aria-controls': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      value: store.getState().completion || store.getState().query,\n      id: \"\".concat(props.id, \"-input\"),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: activeItem !== null && activeItem !== void 0 && activeItem.itemUrl ? 'go' : 'search',\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      onBlur: function onBlur() {\n        // We do rely on the `blur` event on touch devices.\n        // See explanation in `onTouchStart`.\n        if (!isTouchDevice) {\n          store.dispatch('blur', null);\n        }\n      },\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n\n  var getLabelProps = function getLabelProps(rest) {\n    return _objectSpread({\n      htmlFor: \"\".concat(props.id, \"-input\"),\n      id: \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n\n  var getListProps = function getListProps(rest) {\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      id: \"\".concat(props.id, \"-list\")\n    }, rest);\n  };\n\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n        source = providedProps.source,\n        rest = _objectWithoutProperties(providedProps, [\"item\", \"source\"]);\n\n    return _objectSpread({\n      id: \"\".concat(props.id, \"-item-\").concat(item.__autocomplete_id),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n              itemInputValue = activeItem.itemInputValue,\n              itemUrl = activeItem.itemUrl,\n              _source = activeItem.source;\n\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        }); // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}"]},"metadata":{},"sourceType":"module"}