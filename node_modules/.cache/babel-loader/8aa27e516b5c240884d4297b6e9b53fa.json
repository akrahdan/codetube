{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/FormError.tsx\";\nimport { theme, variant } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorSpanVariants = variant({\n  base: {\n    left: 0,\n    top: `calc(100% - ${theme.spacing[8]})`,\n    color: 'feedback-error',\n    display: 'inline-block',\n    fontSize: 'small'\n  },\n  defaultVariant: 'initial',\n  variants: {\n    initial: {\n      position: 'initial'\n    },\n    absolute: {\n      position: 'absolute'\n    },\n    inlineCentered: {\n      position: 'initial',\n      textAlign: 'center'\n    }\n  }\n});\nconst ErrorSpan = styled.span(errorSpanVariants);\n_c = ErrorSpan;\nexport const FormError = props => {\n  return /*#__PURE__*/_jsxDEV(ErrorSpan, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_c2 = FormError;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorSpan\");\n$RefreshReg$(_c2, \"FormError\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/FormError.tsx"],"names":["theme","variant","styled","React","errorSpanVariants","base","left","top","spacing","color","display","fontSize","defaultVariant","variants","initial","position","absolute","inlineCentered","textAlign","ErrorSpan","span","FormError","props"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,0BAA/B;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAsC,OAAtC;;AAEA,MAAMC,iBAAiB,GAAGH,OAAO,CAAC;AAChCI,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,GAAG,EAAG,eAAcP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAiB,GAFjC;AAGJC,IAAAA,KAAK,EAAE,gBAHH;AAIJC,IAAAA,OAAO,EAAE,cAJL;AAKJC,IAAAA,QAAQ,EAAE;AALN,GAD0B;AAQhCC,EAAAA,cAAc,EAAE,SARgB;AAShCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH,KADD;AAIRC,IAAAA,QAAQ,EAAE;AACRD,MAAAA,QAAQ,EAAE;AADF,KAJF;AAORE,IAAAA,cAAc,EAAE;AACdF,MAAAA,QAAQ,EAAE,SADI;AAEdG,MAAAA,SAAS,EAAE;AAFG;AAPR;AATsB,CAAD,CAAjC;AAuBA,MAAMC,SAAS,GAAGjB,MAAM,CAACkB,IAAP,CAAYhB,iBAAZ,CAAlB;KAAMe,S;AAKN,OAAO,MAAME,SAAmC,GAAIC,KAAD,IAAW;AAC5D,sBAAO,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFM;MAAMD,S","sourcesContent":["import { theme, variant } from '@codecademy/gamut-styles';\nimport { StyleProps } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport React, { HTMLAttributes } from 'react';\n\nconst errorSpanVariants = variant({\n  base: {\n    left: 0,\n    top: `calc(100% - ${theme.spacing[8]})`,\n    color: 'feedback-error',\n    display: 'inline-block',\n    fontSize: 'small',\n  },\n  defaultVariant: 'initial',\n  variants: {\n    initial: {\n      position: 'initial',\n    },\n    absolute: {\n      position: 'absolute',\n    },\n    inlineCentered: {\n      position: 'initial',\n      textAlign: 'center',\n    },\n  },\n});\n\nconst ErrorSpan = styled.span(errorSpanVariants);\n\ntype FormErrorProps = StyleProps<typeof errorSpanVariants> &\n  HTMLAttributes<HTMLSpanElement>;\n\nexport const FormError: React.FC<FormErrorProps> = (props) => {\n  return <ErrorSpan {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}