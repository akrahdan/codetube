{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{Video}from'@codecademy/gamut';import{mediaQueries}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{CTA}from'./CTA';import{Description}from'./Description';import{Title}from'./Title';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Grid=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template: 1fr / 1fr;\\n  gap: 8px;\\n\\n  \",\" {\\n    // there must be a mathematical explanation for why ~12:5 is the correct ratio for\\n    // the column widths but I do not know what it is. Regardless, the effect is that\\n    // all three videos will maintain a 16:9 aspect ratio with an even gap between them.\\n\\n    grid-template: 1fr 1fr / 12fr 5fr;\\n\\n    gap: 16px;\\n  }\\n  \",\" {\\n    gap: 24px;\\n  }\\n  \",\" {\\n    gap: 32px;\\n  }\\n\"])),mediaQueries.sm,mediaQueries.md,mediaQueries.lg);var GridVideo=styled(Video)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  \",\" {\\n    &:first-of-type {\\n      grid-row: 1 / span 2;\\n    }\\n  }\\n\"])),mediaQueries.sm);var StyledDesc=styled(Description)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 2rem;\\n\"])));export var PageVideoGallery=function PageVideoGallery(_ref){var videos=_ref.videos,mode=_ref.mode,title=_ref.title,desc=_ref.desc,onAnchorClick=_ref.onAnchorClick,cta=_ref.cta,testId=_ref.testId;return/*#__PURE__*/_jsxs(\"div\",{children:[title&&/*#__PURE__*/_jsx(Title,{mode:mode,isPageHeading:true,children:title}),desc&&/*#__PURE__*/_jsx(StyledDesc,{text:desc,onAnchorClick:onAnchorClick,mode:mode}),/*#__PURE__*/_jsx(Grid,{\"data-testid\":testId,children:videos.map(function(video){return/*#__PURE__*/_jsx(GridVideo,{videoUrl:video.url,videoTitle:video.title,placeholderImage:video.placeholderImage||true},video.url);})}),cta&&/*#__PURE__*/_jsx(CTA,{href:cta.href,onCtaButtonClick:cta.onClick,mode:mode,children:cta.text})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/LandingPage/PageVideoGallery.tsx"],"names":["Video","mediaQueries","styled","React","CTA","Description","Title","Grid","div","sm","md","lg","GridVideo","StyledDesc","PageVideoGallery","videos","mode","title","desc","onAnchorClick","cta","testId","map","video","url","placeholderImage","href","onClick","text"],"mappings":"6OAAA,OAASA,KAAT,KAAsB,mBAAtB,CACA,OAASC,YAAT,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,GAAT,KAAoB,OAApB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,KAAT,KAAsB,SAAtB,C,wFAGA,GAAMC,CAAAA,IAAI,CAAGL,MAAM,CAACM,GAAV,ghBAKNP,YAAY,CAACQ,EALP,CAcNR,YAAY,CAACS,EAdP,CAiBNT,YAAY,CAACU,EAjBP,CAAV,CAsBA,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAACF,KAAD,CAAT,8IACXC,YAAY,CAACQ,EADF,CAAf,CAQA,GAAMI,CAAAA,UAAU,CAAGX,MAAM,CAACG,WAAD,CAAT,6FAAhB,CAeA,MAAO,IAAMS,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,UAC/DC,CAAAA,MAD+D,MAC/DA,MAD+D,CAE/DC,IAF+D,MAE/DA,IAF+D,CAG/DC,KAH+D,MAG/DA,KAH+D,CAI/DC,IAJ+D,MAI/DA,IAJ+D,CAK/DC,aAL+D,MAK/DA,aAL+D,CAM/DC,GAN+D,MAM/DA,GAN+D,CAO/DC,MAP+D,MAO/DA,MAP+D,oBAS/D,uBACGJ,KAAK,eACJ,KAAC,KAAD,EAAO,IAAI,CAAED,IAAb,CAAmB,aAAa,KAAhC,UACGC,KADH,EAFJ,CAMGC,IAAI,eACH,KAAC,UAAD,EAAY,IAAI,CAAEA,IAAlB,CAAwB,aAAa,CAAEC,aAAvC,CAAsD,IAAI,CAAEH,IAA5D,EAPJ,cASE,KAAC,IAAD,EAAM,cAAaK,MAAnB,UACGN,MAAM,CAACO,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,SAAD,EAEE,QAAQ,CAAEA,KAAK,CAACC,GAFlB,CAGE,UAAU,CAAED,KAAK,CAACN,KAHpB,CAIE,gBAAgB,CAAEM,KAAK,CAACE,gBAAN,EAA0B,IAJ9C,EACOF,KAAK,CAACC,GADb,CADU,EAAX,CADH,EATF,CAmBGJ,GAAG,eACF,KAAC,GAAD,EAAK,IAAI,CAAEA,GAAG,CAACM,IAAf,CAAqB,gBAAgB,CAAEN,GAAG,CAACO,OAA3C,CAAoD,IAAI,CAAEX,IAA1D,UACGI,GAAG,CAACQ,IADP,EApBJ,GAT+D,EAA1D","sourcesContent":["import { Video } from '@codecademy/gamut';\nimport { mediaQueries } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { CTA } from './CTA';\nimport { Description } from './Description';\nimport { Title } from './Title';\nimport { BaseProps, DarkModeProps } from './types';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template: 1fr / 1fr;\n  gap: 8px;\n\n  ${mediaQueries.sm} {\n    // there must be a mathematical explanation for why ~12:5 is the correct ratio for\n    // the column widths but I do not know what it is. Regardless, the effect is that\n    // all three videos will maintain a 16:9 aspect ratio with an even gap between them.\n\n    grid-template: 1fr 1fr / 12fr 5fr;\n\n    gap: 16px;\n  }\n  ${mediaQueries.md} {\n    gap: 24px;\n  }\n  ${mediaQueries.lg} {\n    gap: 32px;\n  }\n`;\n\nconst GridVideo = styled(Video)`\n  ${mediaQueries.sm} {\n    &:first-of-type {\n      grid-row: 1 / span 2;\n    }\n  }\n`;\n\nconst StyledDesc = styled(Description)`\n  margin-bottom: 2rem;\n`;\n\nexport type PageVideo = {\n  url: string;\n  title: string;\n  placeholderImage?: string;\n};\n\nexport type PageVideoGalleryProps = BaseProps &\n  DarkModeProps & {\n    videos: PageVideo[];\n  };\n\nexport const PageVideoGallery: React.FC<PageVideoGalleryProps> = ({\n  videos,\n  mode,\n  title,\n  desc,\n  onAnchorClick,\n  cta,\n  testId,\n}) => (\n  <div>\n    {title && (\n      <Title mode={mode} isPageHeading>\n        {title}\n      </Title>\n    )}\n    {desc && (\n      <StyledDesc text={desc} onAnchorClick={onAnchorClick} mode={mode} />\n    )}\n    <Grid data-testid={testId}>\n      {videos.map((video) => (\n        <GridVideo\n          key={video.url}\n          videoUrl={video.url}\n          videoTitle={video.title}\n          placeholderImage={video.placeholderImage || true}\n        />\n      ))}\n    </Grid>\n    {cta && (\n      <CTA href={cta.href} onCtaButtonClick={cta.onClick} mode={mode}>\n        {cta.text}\n      </CTA>\n    )}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}