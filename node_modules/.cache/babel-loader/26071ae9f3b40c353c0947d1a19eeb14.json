{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import styled from'@emotion/styled';import{motion}from'framer-motion';import React,{useState}from'react';import{useIsomorphicLayoutEffect}from'react-use';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var transitionDuration=0.2;var variants={expanded:{height:'auto'},folded:{height:'0'}};/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */export var AccordionArea=function AccordionArea(_ref){var children=_ref.children,className=_ref.className,expanded=_ref.expanded,top=_ref.top;var _useState=useState(expanded),_useState2=_slicedToArray(_useState,2),delayExpanded=_useState2[0],setDelayExpanded=_useState2[1];useIsomorphicLayoutEffect(function(){var handle=setTimeout(function(){return setDelayExpanded(expanded);},transitionDuration*1000);return function(){return clearTimeout(handle);};},[expanded]);return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[top,/*#__PURE__*/_jsx(StyledAccordionBody,{\"aria-expanded\":expanded,initial:expanded?'expanded':'folded',animate:expanded?'expanded':'folded',variants:variants,transition:{duration:transitionDuration,ease:'easeInOut'},children:(expanded||delayExpanded)&&children})]});};var StyledAccordionBody=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  overflow: hidden;\\n\"])));","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/AccordionArea/index.tsx"],"names":["styled","motion","React","useState","useIsomorphicLayoutEffect","transitionDuration","variants","expanded","height","folded","AccordionArea","children","className","top","delayExpanded","setDelayExpanded","handle","setTimeout","clearTimeout","duration","ease","StyledAccordionBody","div"],"mappings":"kXAAA,MAAOA,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,MAAT,KAAuB,eAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,yBAAT,KAA0C,WAA1C,C,wFAkBA,GAAMC,CAAAA,kBAAkB,CAAG,GAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,QAAQ,CAAE,CAAEC,MAAM,CAAE,MAAV,CADK,CAEfC,MAAM,CAAE,CAAED,MAAM,CAAE,GAAV,CAFO,CAAjB,CAKA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAME,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAKrD,IAJJC,CAAAA,QAII,MAJJA,QAII,CAHJC,SAGI,MAHJA,SAGI,CAFJL,QAEI,MAFJA,QAEI,CADJM,GACI,MADJA,GACI,eACsCV,QAAQ,CAACI,QAAD,CAD9C,wCACGO,aADH,eACkBC,gBADlB,eAGJX,yBAAyB,CAAC,UAAM,CAC9B,GAAMY,CAAAA,MAAM,CAAGC,UAAU,CACvB,iBAAMF,CAAAA,gBAAgB,CAACR,QAAD,CAAtB,EADuB,CAEvBF,kBAAkB,CAAG,IAFE,CAAzB,CAKA,MAAO,kBAAMa,CAAAA,YAAY,CAACF,MAAD,CAAlB,EAAP,CACD,CAPwB,CAOtB,CAACT,QAAD,CAPsB,CAAzB,CASA,mBACE,aAAK,SAAS,CAAEK,SAAhB,WACGC,GADH,cAEE,KAAC,mBAAD,EACE,gBAAeN,QADjB,CAEE,OAAO,CAAEA,QAAQ,CAAG,UAAH,CAAgB,QAFnC,CAGE,OAAO,CAAEA,QAAQ,CAAG,UAAH,CAAgB,QAHnC,CAIE,QAAQ,CAAED,QAJZ,CAKE,UAAU,CAAE,CAAEa,QAAQ,CAAEd,kBAAZ,CAAgCe,IAAI,CAAE,WAAtC,CALd,UAOG,CAACb,QAAQ,EAAIO,aAAb,GAA+BH,QAPlC,EAFF,GADF,CAcD,CA/BM,CAiCP,GAAMU,CAAAA,mBAAmB,CAAGrB,MAAM,CAACC,MAAM,CAACqB,GAAR,CAAT,wFAAzB","sourcesContent":["import styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useIsomorphicLayoutEffect } from 'react-use';\n\nexport type AccordionAreaProps = {\n  children: React.ReactNode;\n\n  className?: string;\n\n  /**\n   * Whether the accordion is visually expanded to show its contents.\n   */\n  expanded?: boolean;\n\n  /**\n   * Contents of the clickable header button.\n   */\n  top: React.ReactNode;\n};\n\nconst transitionDuration = 0.2;\n\nconst variants = {\n  expanded: { height: 'auto' },\n  folded: { height: '0' },\n};\n\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionArea: React.FC<AccordionAreaProps> = ({\n  children,\n  className,\n  expanded,\n  top,\n}) => {\n  const [delayExpanded, setDelayExpanded] = useState(expanded);\n\n  useIsomorphicLayoutEffect(() => {\n    const handle = setTimeout(\n      () => setDelayExpanded(expanded),\n      transitionDuration * 1000\n    );\n\n    return () => clearTimeout(handle);\n  }, [expanded]);\n\n  return (\n    <div className={className}>\n      {top}\n      <StyledAccordionBody\n        aria-expanded={expanded}\n        initial={expanded ? 'expanded' : 'folded'}\n        animate={expanded ? 'expanded' : 'folded'}\n        variants={variants}\n        transition={{ duration: transitionDuration, ease: 'easeInOut' }}\n      >\n        {(expanded || delayExpanded) && children}\n      </StyledAccordionBody>\n    </div>\n  );\n};\n\nconst StyledAccordionBody = styled(motion.div)`\n  overflow: hidden;\n`;\n"]},"metadata":{},"sourceType":"module"}