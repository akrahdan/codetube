{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormSweetContainerInput/index.tsx\";\nimport React from 'react';\nimport { Box } from '../../..';\nimport { Input } from '../../../Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GridFormSweetContainerInput = ({\n  register,\n  field: {\n    name\n  },\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: \"1px\",\n    left: \"100vw\",\n    overflow: \"hidden\",\n    position: \"fixed\",\n    top: \"0\",\n    width: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      ref: register(),\n      type: \"checkbox\",\n      id: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = GridFormSweetContainerInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridFormSweetContainerInput\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormSweetContainerInput/index.tsx"],"names":["React","Box","Input","GridFormSweetContainerInput","register","field","name","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AASA,OAAO,MAAMC,2BAAuE,GAAG,CAAC;AACtFC,EAAAA,QADsF;AAEtFC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAF+E;AAGtFC,EAAAA;AAHsF,CAAD,KAIjF;AACJ,sBACE,QAAC,GAAD;AACE,IAAA,MAAM,EAAC,KADT;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,QAAQ,EAAC,OAJX;AAKE,IAAA,GAAG,EAAC,GALN;AAME,IAAA,KAAK,EAAC,KANR;AAAA,4BAQE;AAAO,MAAA,OAAO,EAAED,IAAhB;AAAA,gBAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAmB,MAAA,GAAG,EAAEF,QAAQ,EAAhC;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAoD,MAAA,EAAE,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlBM;KAAMH,2B","sourcesContent":["import React from 'react';\nimport { UseFormMethods } from 'react-hook-form';\n\nimport { Box } from '../../..';\nimport { Input } from '../../../Form';\nimport { GridFormSweetContainerField } from '../../types';\n\nexport type GridFormSweetContainerInputProps = {\n  field: GridFormSweetContainerField;\n  register: UseFormMethods['register'];\n  label: string;\n};\n\nexport const GridFormSweetContainerInput: React.FC<GridFormSweetContainerInputProps> = ({\n  register,\n  field: { name },\n  label,\n}) => {\n  return (\n    <Box\n      height=\"1px\"\n      left=\"100vw\"\n      overflow=\"hidden\"\n      position=\"fixed\"\n      top=\"0\"\n      width=\"1px\"\n    >\n      <label htmlFor={name}>{label}</label>\n      <Input name={name} ref={register()} type=\"checkbox\" id={name} />\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}