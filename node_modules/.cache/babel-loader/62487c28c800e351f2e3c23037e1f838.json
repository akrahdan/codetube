{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/portal/layouts/PortalContainer/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { AppWrapper } from '@codecademy/gamut';\nimport { GlobalPage } from 'components/gamut-overrides';\nimport React from 'react';\nimport { useAppHeaderProps } from 'components/AppHeader/useAppHeaderProps';\nimport { showModal } from 'state/modals/modalSlice';\nimport { useAppDispatch } from 'store/hooks'; // import { BrandedBanner } from '~/components/BrandedBanner';\n// import { useFooterSketches } from '~/components/FooterSketches';\n// import { PageMeta, PageMetaProps } from '~/components/PageMeta';\n// import { trackUserClick } from '~/libs/eventTracking';\n// import ButterbarStatic from '~/portal/components/ButterbarStatic';\n// import { selectCurrentUserCountry } from '~/state/currentUser/selectors';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PortalContainer = ({\n  as = 'div',\n  backgroundColor,\n  children,\n  showBanner,\n  skipToContentId,\n  pageMetaProps\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const userGeoCountry = useSelector(selectCurrentUserCountry);\n  // const [p5egg, openP5Egg] = useFooterSketches();\n  const [search] = useAppHeaderProps();\n\n  const handleClick = (event, item) => {\n    _s();\n\n    const dispatch = useAppDispatch();\n\n    if (item.type !== 'render-element') {}\n\n    dispatch(showModal(item.id));\n    console.log(event.target);\n    console.log(item);\n  };\n\n  _s(handleClick, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n    return [useAppDispatch];\n  });\n\n  const headerProps = {\n    type: 'anon',\n    action: handleClick,\n    search: {\n      onEnable: () => console.log(),\n      onSearch: query => /*#__PURE__*/_jsxDEV(SearchButton, {\n        toggleSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this),\n      onTrackingClick: target => console.log()\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalPage, {\n    backgroundColor: backgroundColor,\n    footer: {\n      onClick: ({\n        target\n      }) => {\n        console.log(\"clicked\");\n      },\n      onMadeInClick: undefined,\n      userGeo: \"US\"\n    },\n    header: headerProps,\n    skipToContentId: skipToContentId,\n    children: [search, /*#__PURE__*/_jsxDEV(AppWrapper, {\n      as: as,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PortalContainer, \"kdXXRtD9w76dks6v1jfWnx1StZI=\", false, function () {\n  return [useAppHeaderProps];\n});\n\n_c = PortalContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortalContainer\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/portal/layouts/PortalContainer/index.tsx"],"names":["AppWrapper","GlobalPage","React","useAppHeaderProps","showModal","useAppDispatch","PortalContainer","as","backgroundColor","children","showBanner","skipToContentId","pageMetaProps","search","handleClick","event","item","dispatch","type","id","console","log","target","headerProps","action","onEnable","onSearch","query","toggleSearch","onTrackingClick","onClick","onMadeInClick","undefined","userGeo"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,SAAT,QAAuD,yBAAvD;AACA,SAASC,cAAT,QAA+C,aAA/C,C,CACA;AACA;AACA;AACA;AACA;AACA;;;AAUA,OAAO,MAAMC,eAA+C,GAAG,CAAC;AAC9DC,EAAAA,EAAE,GAAG,KADyD;AAE9DC,EAAAA,eAF8D;AAG9DC,EAAAA,QAH8D;AAI9DC,EAAAA,UAJ8D;AAK9DC,EAAAA,eAL8D;AAM9DC,EAAAA;AAN8D,CAAD,KAOzD;AAAA;;AAAA;;AACJ;AACA;AACA,QAAM,CAACC,MAAD,IAAWV,iBAAiB,EAAlC;;AAEA,QAAMW,WAAkC,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAA;;AAC1D,UAAMC,QAAQ,GAAGZ,cAAc,EAA/B;;AACA,QAAIW,IAAI,CAACE,IAAL,KAAc,gBAAlB,EAAoC,CAEnC;;AACDD,IAAAA,QAAQ,CAACb,SAAS,CAACY,IAAI,CAACG,EAAN,CAAV,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GARD;;AALI,KAKEF,WALF;AAAA,YAMeT,cANf;AAAA;;AAeJ,QAAMkB,WAA8B,GAAI;AACtCL,IAAAA,IAAI,EAAE,MADgC;AAGtCM,IAAAA,MAAM,EAAEV,WAH8B;AAItCD,IAAAA,MAAM,EAAE;AACNY,MAAAA,QAAQ,EAAE,MAAML,OAAO,CAACC,GAAR,EADV;AAENK,MAAAA,QAAQ,EAAGC,KAAD,iBAAmB,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFvB;AAGNC,MAAAA,eAAe,EAAGP,MAAD,IAAoBF,OAAO,CAACC,GAAR;AAH/B;AAJ8B,GAAxC;AAeA,sBACE,QAAC,UAAD;AACE,IAAA,eAAe,EAAEb,eADnB;AAEE,IAAA,MAAM,EAAE;AACNsB,MAAAA,OAAO,EAAE,CAAC;AAAER,QAAAA;AAAF,OAAD,KAAgB;AACvBF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAHK;AAINU,MAAAA,aAAa,EAAEC,SAJT;AAKNC,MAAAA,OAAO,EAAE;AALH,KAFV;AASE,IAAA,MAAM,EAAEV,WATV;AAUE,IAAA,eAAe,EAAEZ,eAVnB;AAAA,eAcGE,MAdH,eAgBE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEN,EAAhB;AAAA,gBAAqBE;AAArB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1DM;;IAAMH,e;UAUMH,iB;;;KAVNG,e","sourcesContent":["import { AppWrapper } from '@codecademy/gamut';\nimport { GlobalPage } from 'components/gamut-overrides'; \nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppHeaderClickHandler } from 'components/gamut-overrides';\nimport { useAppHeaderProps } from 'components/AppHeader/useAppHeaderProps';\nimport { showModal, hideModal, hideCurrentModal } from 'state/modals/modalSlice';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\n// import { BrandedBanner } from '~/components/BrandedBanner';\n// import { useFooterSketches } from '~/components/FooterSketches';\n// import { PageMeta, PageMetaProps } from '~/components/PageMeta';\n// import { trackUserClick } from '~/libs/eventTracking';\n// import ButterbarStatic from '~/portal/components/ButterbarStatic';\n// import { selectCurrentUserCountry } from '~/state/currentUser/selectors';\n\nexport type PortalContainerProps = {\n  as?: 'main' | 'div';\n  pageMetaProps?: undefined;\n  backgroundColor?: 'white' | 'beige' | 'paleBlue' | 'paleYellow';\n  showBanner?: boolean;\n  skipToContentId?: string;\n};\n\nexport const PortalContainer: React.FC<PortalContainerProps> = ({\n  as = 'div',\n  backgroundColor,\n  children,\n  showBanner,\n  skipToContentId,\n  pageMetaProps,\n}) => {\n  // const userGeoCountry = useSelector(selectCurrentUserCountry);\n  // const [p5egg, openP5Egg] = useFooterSketches();\n  const [search] = useAppHeaderProps();\n\n  const handleClick: AppHeaderClickHandler = (event, item) => {\n    const dispatch = useAppDispatch()\n    if (item.type !== 'render-element') {\n     \n    }\n    dispatch(showModal(item.id))\n    console.log(event.target)\n    console.log(item)\n  };\n\n  const headerProps: GlobalHeaderProps =  {\n    type: 'anon',\n   \n    action: handleClick,\n    search: {\n      onEnable: () => console.log(),\n      onSearch: (query: string) => <SearchButton toggleSearch={toggleSearch} />,\n      onTrackingClick: (target: string) => console.log()\n      \n    }\n  \n \n   \n  };\n\n  return (\n    <GlobalPage\n      backgroundColor={backgroundColor}\n      footer={{\n        onClick: ({ target }) => {\n          console.log(\"clicked\")\n        },\n        onMadeInClick: undefined,\n        userGeo: \"US\",\n      }}\n      header={headerProps}\n      skipToContentId={skipToContentId}\n    >\n      {/* {pageMetaProps && <PageMeta {...pageMetaProps} />} */}\n      {/* {showBanner && <BrandedBanner />} */}\n      {search}\n      {/* <ButterbarStatic /> */}\n      <AppWrapper as={as}>{children}</AppWrapper>\n      {/* {p5egg} */}\n    </GlobalPage>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}