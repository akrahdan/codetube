{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [showGoal, setShowGoal] = useState(true);\n  const [goal, setGoal] = useState();\n  const [goals, setGoals] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [experience, setExperience] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n  useEffect(() => {\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults && (goalResults === null || goalResults === void 0 ? void 0 : goalResults.forEach(async (goal, index) => {\n        if (goal === null || goal === void 0 ? void 0 : goal.name) {\n          const awaitGoal = await createGoal({\n            name: goal.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (goalResults === null || goalResults === void 0 ? void 0 : goalResults.length) - 1) {\n            setGoals(awaitGoal);\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      }));\n      const experienceResults = experience;\n      experienceResults && (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.forEach(async (exp, index) => {\n        if (exp === null || exp === void 0 ? void 0 : exp.name) {\n          const awaitExperience = await createExperience({\n            name: exp.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.length) - 1) {\n            if (awaitExperience) {\n              setExperience(awaitExperience);\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        }\n      }));\n      const reqResults = requirements;\n      reqResults && reqResults.forEach(async (req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          const awaitReqs = await createRequirement({\n            name: req === null || req === void 0 ? void 0 : req.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index = (reqResults === null || reqResults === void 0 ? void 0 : reqResults.length) - 1) {\n            // setRequirements(awaitReqs);\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      });\n      requirementsUpdate && requirementsUpdate.forEach(async (req, index) => {\n        if (req.name) {\n          const awaitReq = await editRequirement({ ...req,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (requirementsUpdate === null || requirementsUpdate === void 0 ? void 0 : requirementsUpdate.length) - 1) {\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      });\n      experienceUpdate && (experienceUpdate === null || experienceUpdate === void 0 ? void 0 : experienceUpdate.forEach(async (req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          const awaitEditExp = await editExperience({ ...req,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == experienceUpdate.length - 1) {\n            if (awaitEditExp === null || awaitEditExp === void 0 ? void 0 : awaitEditExp.name) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        }\n      }));\n      goalsUpdate && (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.forEach(async (item, index) => {\n        if (item.name) {\n          const awaitEditGoal = await editGoal({ ...item,\n            course: locationPayload === null || locationPayload === void 0 ? void 0 : locationPayload.id\n          }).unwrap();\n\n          if (index == (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.length) - 1) {\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      }));\n    }\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(CourseGoal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      let gUpdate = [...goalsUpdate];\n                      let index = gUpdate === null || gUpdate === void 0 ? void 0 : gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setGoalsUpdate(gUpdate);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this)), showGoal && /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    handleRemove: value => {\n                      setShowGoal(!showGoal);\n                    },\n                    handleChange: obj => {\n                      setGoal({\n                        name: obj.name,\n                        id: obj.id,\n                        course: locationPayload.id\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                if (goal) {\n                  createGoal({\n                    name: goal.name,\n                    course: goal.course\n                  });\n                } else {\n                  return;\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      let reqUpdates = [...requirementsUpdate];\n                      let index = reqUpdates === null || reqUpdates === void 0 ? void 0 : reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setRequirementsUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      const updatedReqs = requirements.filter(result => result.id != value.id);\n                      setRequirements(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...requirements];\n                      let index = reqs === null || reqs === void 0 ? void 0 : reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setRequirements(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: requirements === null || requirements === void 0 ? void 0 : requirements.length,\n                  name: \"\",\n                  course: locationPayload.id\n                };\n                const newReqs = [...requirements, reqItem];\n                const emptyValue = requirements === null || requirements === void 0 ? void 0 : requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(CourseExperience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      let expUpdate = [...experienceUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setExperienceUpdate(expUpdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      const updatedExperience = experience.filter(result => result.id != value.id);\n                      setExperience(updatedExperience);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...experience];\n                      let index = expdate === null || expdate === void 0 ? void 0 : expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setExperience(expdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: experience.length,\n                  name: \"\",\n                  course: locationPayload.id\n                };\n                const newExps = [...experience, expItem];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"gJ7ju425DluFxe6C7kV4sLjQQgQ=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx"],"names":["useEffect","useState","useAlert","CourseGoal","Requirements","CourseExperience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","showGoal","setShowGoal","goal","setGoal","goals","setGoals","name","course","requirements","setRequirements","experience","setExperience","removeGoal","removeReq","req","removeExp","submit","goalResults","forEach","index","awaitGoal","unwrap","length","show","experienceResults","exp","awaitExperience","reqResults","awaitReqs","awaitReq","awaitEditExp","item","awaitEditGoal","map","obj","gUpdate","findIndex","value","reqUpdates","updatedReqs","filter","result","reqs","reqItem","newReqs","emptyValue","expUpdate","updatedExperience","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  Experience,\n  Requirement,\n  Goal\n\n} from \"services/courses\";\n\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  \n  const [showGoal, setShowGoal] = useState(true)\n  const [ goal, setGoal ] = useState<Goal>()\n  const [goals, setGoals] = useState<Goal[]>([{ id: 0, name: \"\", course: locationPayload.id }]);\n  const [requirements, setRequirements] = useState<Requirement[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n\n  const [experience, setExperience] = useState<Experience[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n\n  useEffect(() => {\n\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults &&\n        goalResults?.forEach(async (goal, index) => {\n          if (goal?.name) {\n            const awaitGoal = await createGoal({\n              name: goal.name,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index == goalResults?.length - 1) {\n\n              setGoals(awaitGoal);\n              alert.show(\"Your data has been saved successfully\")\n            }\n\n          }\n        });\n\n      const experienceResults = experience;\n      experienceResults &&\n        experienceResults?.forEach(async (exp, index) => {\n          if (exp?.name) {\n            const awaitExperience = await createExperience({\n              name: exp.name,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index == experienceResults?.length - 1) {\n              if (awaitExperience) {\n                setExperience(awaitExperience);\n                alert.show(\"Your data has been saved successfully\")\n              }\n            }\n\n          }\n        });\n\n      const reqResults = requirements;\n      reqResults &&\n        reqResults.forEach(async (req, index) => {\n          if (req?.name) {\n            const awaitReqs = await createRequirement({\n              name: req?.name,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index = reqResults?.length - 1) {\n\n              // setRequirements(awaitReqs);\n              alert.show(\"Your data has been saved successfully\")\n            }\n\n          }\n        });\n      requirementsUpdate &&\n        requirementsUpdate.forEach(async (req, index) => {\n          if (req.name) {\n\n            const awaitReq = await editRequirement({\n              ...req,\n              course: locationPayload.id,\n            }).unwrap()\n\n            if (index == requirementsUpdate?.length - 1) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        });\n\n      experienceUpdate &&\n        experienceUpdate?.forEach(async (req, index) => {\n          if (req?.name) {\n            const awaitEditExp = await editExperience({\n              ...req,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index == experienceUpdate.length - 1) {\n              if (awaitEditExp?.name) {\n                alert.show(\"Your data has been saved successfully\");\n              }\n            }\n          }\n        });\n\n      goalsUpdate &&\n        goalsUpdate?.forEach(async (item, index) => {\n          if (item.name) {\n            const awaitEditGoal = await editGoal({\n              ...item,\n              course: locationPayload?.id,\n            }).unwrap()\n            if (index == goalsUpdate?.length - 1) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        });\n    }\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate &&\n                      goalsUpdate.map((goal) => (\n                        <CourseGoal\n                          key={goal.id}\n                          goal={goal}\n                          handleRemove={removeGoal}\n                          handleChange={(obj) => {\n                            let gUpdate = [...goalsUpdate];\n                            let index = gUpdate?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setGoalsUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {showGoal && <GoalCreate\n                        \n                        handleRemove={(value) => {\n                          setShowGoal(!showGoal)\n                        }}\n                        handleChange={(obj) => {\n                          \n                          setGoal({\n                            name: obj.name,\n                            id: obj.id,\n                            course: locationPayload.id\n                          })\n                        }}\n                      />}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={async () => {\n                  \n                  if (goal) {\n                    createGoal({\n                      name: goal.name,\n                      course: goal.course,\n\n                    })\n                  } else {\n                    return;\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate &&\n                      requirementsUpdate.map((req) => (\n                        <Requirements\n                          req={req}\n                          key={req.id}\n                          handleRemove={removeReq}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...requirementsUpdate];\n                            let index = reqUpdates?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setRequirementsUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = requirements.filter(\n                            (result) => result.id != value.id\n                          );\n                          setRequirements(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...requirements];\n                          let index = reqs?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setRequirements(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: requirements?.length,\n                    name: \"\",\n                    course: locationPayload.id\n                  };\n                  const newReqs = [...requirements, reqItem];\n                  const emptyValue = requirements?.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate &&\n                      experienceUpdate.map((exp) => (\n                        <CourseExperience\n                          key={exp?.id}\n                          experience={exp}\n                          handleRemove={removeExp}\n                          handleChange={(obj) => {\n                            let expUpdate = [...experienceUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setExperienceUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp?.id}\n                        experience={exp}\n                        handleRemove={(value) => {\n                          const updatedExperience = experience.filter(\n                            (result) => result.id != value.id\n                          );\n                          setExperience(updatedExperience);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...experience];\n\n                          let index = expdate?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setExperience(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: experience.length,\n                    name: \"\",\n                    course: locationPayload.id\n                  };\n                  const newExps = [...experience, expItem];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}