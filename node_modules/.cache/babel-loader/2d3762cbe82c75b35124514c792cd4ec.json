{"ast":null,"code":"import exenv from 'exenv';\nimport React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { combineFns } from './combine-fns';\nimport { debounce } from './debounce';\nvar canUseDOM = exenv.canUseDOM;\nexport function useResizeObserver(ref, onResize) {\n  var _a = React.useState(0),\n      width = _a[0],\n      setWidth = _a[1];\n\n  var _b = React.useState(0),\n      height = _b[0],\n      setHeight = _b[1];\n\n  React.useEffect(function () {\n    var el = ref.current;\n    if (!el || !canUseDOM) return;\n    var subscribed = true;\n    var handleResize = combineFns(function (entries) {\n      if (!subscribed) return;\n      var contentRect = entries[0].contentRect;\n      setWidth(contentRect.width);\n      setHeight(contentRect.height);\n    }, onResize);\n    var debouncedResize = debounce(150, handleResize);\n    var observer = new ResizeObserver(debouncedResize);\n    observer.observe(el);\n    return function () {\n      subscribed = false;\n      observer.unobserve(el);\n    };\n  }, [onResize, ref]);\n  return {\n    width: width,\n    height: height\n  };\n}","map":{"version":3,"sources":["../../src/use-resize-observer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP,MAA2B,0BAA3B;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,QAAT,QAAyB,YAAzB;AAEQ,IAAA,SAAS,GAAK,KAAK,CAAV,SAAT;AAER,OAAM,SAAU,iBAAV,CACJ,GADI,EAIJ,QAJI,EAI6B;AAE3B,MAAA,EAAA,GAAoB,KAAK,CAAC,QAAN,CAAe,CAAf,CAApB;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AACA,MAAA,EAAA,GAAsB,KAAK,CAAC,QAAN,CAAe,CAAf,CAAtB;AAAA,MAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP;AAAA,MAAS,SAAS,GAAA,EAAA,CAAA,CAAA,CAAlB;;AAEN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACN,QAAS,EAAE,GAAK,GAAG,CAAR,OAAX;AACR,QAAI,CAAC,EAAD,IAAO,CAAC,SAAZ,EAAuB;AAEvB,QAAI,UAAU,GAAG,IAAjB;AAEA,QAAM,YAAY,GAAG,UAAU,CAAC,UAAA,OAAA,EAAO;AACrC,UAAI,CAAC,UAAL,EAAiB;AAET,UAAA,WAAW,GAAK,OAAO,CAAC,CAAD,CAAP,CAAL,WAAX;AAER,MAAA,QAAQ,CAAC,WAAW,CAAC,KAAb,CAAR;AACA,MAAA,SAAS,CAAC,WAAW,CAAC,MAAb,CAAT;AACD,KAP8B,EAO5B,QAP4B,CAA/B;AASA,QAAM,eAAe,GAAG,QAAQ,CAAC,GAAD,EAAM,YAAN,CAAhC;AACA,QAAM,QAAQ,GAAG,IAAI,cAAJ,CAAmB,eAAnB,CAAjB;AAEA,IAAA,QAAQ,CAAC,OAAT,CAAiB,EAAjB;AAEA,WAAO,YAAA;AACL,MAAA,UAAU,GAAG,KAAb;AACA,MAAA,QAAQ,CAAC,SAAT,CAAmB,EAAnB;AACD,KAHD;AAID,GAxBD,EAwBG,CAAC,QAAD,EAAW,GAAX,CAxBH;AA0BA,SAAO;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,MAAM,EAAA;AAAf,GAAP;AACD","sourceRoot":"","sourcesContent":["import exenv from 'exenv';\nimport React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { combineFns } from './combine-fns';\nimport { debounce } from './debounce';\nvar canUseDOM = exenv.canUseDOM;\nexport function useResizeObserver(ref, onResize) {\n    var _a = React.useState(0), width = _a[0], setWidth = _a[1];\n    var _b = React.useState(0), height = _b[0], setHeight = _b[1];\n    React.useEffect(function () {\n        var el = ref.current;\n        if (!el || !canUseDOM)\n            return;\n        var subscribed = true;\n        var handleResize = combineFns(function (entries) {\n            if (!subscribed)\n                return;\n            var contentRect = entries[0].contentRect;\n            setWidth(contentRect.width);\n            setHeight(contentRect.height);\n        }, onResize);\n        var debouncedResize = debounce(150, handleResize);\n        var observer = new ResizeObserver(debouncedResize);\n        observer.observe(el);\n        return function () {\n            subscribed = false;\n            observer.unobserve(el);\n        };\n    }, [onResize, ref]);\n    return { width: width, height: height };\n}\n//# sourceMappingURL=use-resize-observer.js.map"]},"metadata":{},"sourceType":"module"}