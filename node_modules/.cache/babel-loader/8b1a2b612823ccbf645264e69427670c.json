{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/contentItem/lecture.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"../styles.module.css\";\nimport css from \"./lecture.module.scss\";\nimport { CaretIcon } from \"./caretIcon/caretIcon\";\nimport { LectureItem } from \"./lectureItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Lecture = ({\n  section,\n  position,\n  views\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [current, setCurrent] = useState(0);\n  const [active, setActive] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const navRef = useRef();\n  const [heightDom, setHeightDom] = useState(null);\n  const callbackRef = useCallback(node => {\n    if (node) {\n      setHeightDom(node.getBoundingClientRect().height);\n    }\n  }, []);\n  const height = visible ? heightDom : \"0px\";\n  const visibility = visible ? \"visible\" : \"hidden\";\n  useEffect(() => {\n    if (views && section) {\n      const currentViews = section.lectures.filter(lec => views.includes(lec.id));\n\n      if (currentViews.length) {\n        setOffset(69.11503837897544 * currentViews.length / section.lectures.length);\n      }\n    }\n  }, [views]);\n  useEffect(() => {\n    const navigation = navRef.current;\n\n    if (!visible && navigation) {\n      const height = navigation.getBoundingClientRect().height;\n    }\n  }, [visible, navRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.lectureContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(css.lectureSubContainer, {\n        [css.active]: visible\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.lectureDiv,\n        onClick: () => {\n          setVisible(!visible);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.navDisplay,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.progressContainer,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: classNames(css.svgProgress),\n              \"aria-label\": \"module completed\",\n              viewBox: \"0 0 24 24\",\n              version: \"1.1\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              transform: \"rotate(-90)\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                r: 11,\n                cx: 12,\n                cy: 12,\n                className: css.svgCircleBackground,\n                strokeWidth: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                className: css.svgProgressText,\n                x: \"49%\",\n                y: \"-31%\",\n                textAnchor: \"middle\",\n                transform: \"rotate(90)\",\n                children: position + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                r: 11,\n                cx: 12,\n                cy: 12,\n                strokeWidth: 2,\n                strokeDasharray: \"69.11503837897544 69.11503837897544\",\n                strokeDashoffset: active == section.id ? 69.11503837897544 - offset : 69.11503837897544,\n                className: classNames(css.svgProgressCircle, {\n                  [css.current]: active == section.id\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.navItemContent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.navItemHeader,\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.navItemSubTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: styles.svgDuration,\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"24px\",\n                height: \"24px\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 23.1a11.44 11.44 0 1 1 11.43-11.43c0 6.3-5.13 11.42-11.43 11.42zm0-20.87a9.44 9.44 0 0 0 0 18.87 9.44 9.44 0 0 0 0-18.87z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M13 11V3.95h-2V11H4.36v2H13v-2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.screenReader,\n                children: \"Module Length\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), Math.round(section.duration / 60), \" mins\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CaretIcon, {\n        toggle: visible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.lectureItemContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(css.heightTransition, {\n          [css.visible]: visible\n        }),\n        style: {\n          height: height,\n          overflow: visibility,\n          visibility: visibility\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: navRef,\n          children: section.lectures && section.lectures.map(lecture => /*#__PURE__*/_jsxDEV(LectureItem, {\n            handleActive: () => setActive(section.id),\n            lecture: lecture,\n            handleCurrent: () => setCurrent(lecture.id),\n            isCurrent: current == lecture.id,\n            complete: views && views.includes(lecture.id)\n          }, lecture.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lecture, \"1ml7sqe3jI38f9hGG9gT5qtjpjU=\");\n\n_c = Lecture;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lecture\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/contentItem/lecture.tsx"],"names":["useEffect","useState","useRef","useCallback","classNames","styles","css","CaretIcon","LectureItem","Lecture","section","position","views","visible","setVisible","current","setCurrent","active","setActive","offset","setOffset","navRef","heightDom","setHeightDom","callbackRef","node","getBoundingClientRect","height","visibility","currentViews","lectures","filter","lec","includes","id","length","navigation","lectureContainer","lectureSubContainer","lectureDiv","navDisplay","progressContainer","svgProgress","svgCircleBackground","svgProgressText","svgProgressCircle","navItemContent","navItemHeader","title","navItemSubTitle","svgDuration","screenReader","Math","round","duration","lectureItemContainer","heightTransition","overflow","map","lecture"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"../styles.module.css\";\nimport css from \"./lecture.module.scss\";\nimport { CaretIcon } from \"./caretIcon/caretIcon\";\nimport { LectureItem } from \"./lectureItem\";\nimport { Section } from \"services/courses\";\n\ntype SectionProps = {\n  section: Section,\n  position: number,\n  views: number[]\n}\nexport const Lecture: React.FC<SectionProps> = ({ section, position, views }) => {\n  const [visible, setVisible] = useState(false);\n  const [current, setCurrent] = useState(0)\n  const [active, setActive] = useState(0)\n  const [offset, setOffset] = useState(0)\n  const navRef = useRef<HTMLDivElement>()\n  const [heightDom, setHeightDom] = useState(null)\n  const callbackRef = useCallback(node => {\n    if(node) {\n     setHeightDom(node.getBoundingClientRect().height)\n    }\n  }, [])\n  const height = visible ? heightDom : \"0px\";\n  const visibility = visible ? \"visible\" : \"hidden\";\n \n\n  useEffect(() => {\n    if (views && section) {\n      const currentViews = section.lectures.filter(lec => views.includes(lec.id))\n      if (currentViews.length) {\n        setOffset((69.11503837897544 * currentViews.length) / section.lectures.length)\n      }\n\n    }\n  }, [views])\n\n  useEffect(() => {\n    const navigation = navRef.current\n    if(!visible && navigation) {\n      const height = navigation.getBoundingClientRect().height\n    }\n  }, [visible, navRef])\n\n  return (\n    <div\n      className={css.lectureContainer}\n\n    >\n      <div\n        className={classNames(css.lectureSubContainer, {\n          [css.active]: visible,\n        })}\n      >\n        <div className={styles.lectureDiv}\n          onClick={() => {\n            setVisible(!visible);\n\n          }}\n        >\n\n          <div className={styles.navDisplay}>\n            <div className={css.progressContainer}>\n              <svg\n                className={classNames(css.svgProgress)}\n                aria-label=\"module completed\"\n                viewBox=\"0 0 24 24\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                transform=\"rotate(-90)\"\n              >\n                <circle\n                  r={11}\n                  cx={12}\n                  cy={12}\n                  className={css.svgCircleBackground}\n                  strokeWidth={2}\n                />\n                <text\n                  className={css.svgProgressText}\n                  x=\"49%\"\n                  y=\"-31%\"\n                  textAnchor=\"middle\"\n                  transform=\"rotate(90)\"\n                >\n                  {position + 1}\n                </text>\n                <circle\n                  r={11}\n                  cx={12}\n                  cy={12}\n                  strokeWidth={2}\n                  strokeDasharray=\"69.11503837897544 69.11503837897544\"\n                  strokeDashoffset={active == section.id ? (69.11503837897544 - offset) : 69.11503837897544}\n                  className={classNames(css.svgProgressCircle, {\n                    [css.current] : active == section.id\n                  })}\n                />\n              </svg>\n            </div>\n            <div className={styles.navItemContent}>\n              <div className={styles.navItemHeader}>{section.title}</div>\n              <div className={styles.navItemSubTitle}>\n                <svg\n                  className={styles.svgDuration}\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24px\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M12 23.1a11.44 11.44 0 1 1 11.43-11.43c0 6.3-5.13 11.42-11.43 11.42zm0-20.87a9.44 9.44 0 0 0 0 18.87 9.44 9.44 0 0 0 0-18.87z\" />\n                  <path d=\"M13 11V3.95h-2V11H4.36v2H13v-2z\" />\n                </svg>\n                <span className={styles.screenReader}>Module Length</span>\n                {Math.round(section.duration / 60)} mins\n              </div>\n            </div>\n          </div>\n        </div>\n        <CaretIcon toggle={visible} />\n      </div>\n      <div className={css.lectureItemContainer}>\n        <div\n          className={classNames(css.heightTransition, {\n            [css.visible]: visible\n          })}\n          style={{\n            height: height,\n            overflow: visibility,\n            visibility: visibility,\n\n          }}\n        >\n          <div ref={navRef}>\n            {section.lectures && section.lectures.map(lecture =>\n              <LectureItem\n                handleActive={() => setActive(section.id)}\n                key={lecture.id}\n                lecture={lecture} handleCurrent={() => setCurrent(lecture.id)}\n                isCurrent={current == lecture.id}\n                complete={views && views.includes(lecture.id)} />)}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}