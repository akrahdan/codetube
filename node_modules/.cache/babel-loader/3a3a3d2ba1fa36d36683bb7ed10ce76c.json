{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/Flyout/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { BodyPortal, FocusTrap, IconButton } from '@codecademy/gamut';\nimport { MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { system, variant } from '@codecademy/gamut-styles';\nimport { variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const transitionDuration = 0.35;\nconst flyoutStyles = variance.compose(system.background, system.border, system.flex, system.grid, system.layout, system.positioning);\nconst flyoutOpenVariants = variant({\n  defaultVariant: 'left',\n  prop: 'openFrom',\n  variants: {\n    left: {\n      right: 'auto',\n      left: 0\n    },\n    right: {\n      right: 0,\n      left: 'auto'\n    }\n  }\n});\nexport const DrawerBase = styled(motion.div)(flyoutStyles, flyoutOpenVariants);\nexport const Flyout = ({\n  children,\n  renderButton,\n  initialExpanded,\n  openFrom = 'left',\n  openWidth = 30,\n  clickOutsideDoesNotClose,\n  escapeDoesNotClose,\n  closeFlyoutRef,\n  ...styleProps\n}) => {\n  _s();\n\n  const initialX = openFrom === 'left' ? -1000 : 1000;\n  const [isExpanded, setIsExpanded] = useState(!!initialExpanded);\n  const toggleExpanded = useCallback(() => setIsExpanded(isExpanded => !isExpanded), []);\n  const closeFlyout = useCallback(() => {\n    setIsExpanded(false);\n  }, []);\n  useEffect(() => {\n    // Passes the function up to any interested parent component\n    if (closeFlyoutRef) {\n      closeFlyoutRef.current = closeFlyout;\n      return () => {\n        closeFlyoutRef.current = () => {};\n      };\n    }\n  }, [closeFlyoutRef, closeFlyout]);\n  const handleOutsideClick = useCallback(() => {\n    !clickOutsideDoesNotClose && closeFlyout();\n  }, [clickOutsideDoesNotClose, closeFlyout]);\n  const handleEscapeKey = useCallback(() => {\n    !escapeDoesNotClose && closeFlyout();\n  }, [escapeDoesNotClose, closeFlyout]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isExpanded ? /*#__PURE__*/_jsxDEV(BodyPortal, {\n        children: /*#__PURE__*/_jsxDEV(FocusTrap, {\n          onClickOutside: handleOutsideClick,\n          onEscapeKey: handleEscapeKey,\n          children: /*#__PURE__*/_jsxDEV(DrawerBase, {\n            \"aria-expanded\": isExpanded,\n            initial: {\n              x: initialX\n            },\n            animate: {\n              x: 0\n            },\n            exit: {\n              x: initialX\n            },\n            transition: {\n              duration: transitionDuration\n            },\n            width: {\n              _: '75%',\n              sm: `${openWidth}rem`\n            },\n            maxWidth: `${openWidth}rem`,\n            openFrom: openFrom,\n            position: \"fixed\",\n            bottom: \"0\",\n            top: \"0\",\n            ...styleProps,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              icon: MiniDeleteIcon,\n              onClick: toggleExpanded,\n              position: \"absolute\",\n              top: \"0.5rem\",\n              right: \"0.5rem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), children]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), renderButton(toggleExpanded)]\n  }, void 0, true);\n};\n\n_s(Flyout, \"lTgiSrmfpy3bQviQuUN5U830RgM=\");\n\n_c = Flyout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flyout\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/Flyout/index.tsx"],"names":["BodyPortal","FocusTrap","IconButton","MiniDeleteIcon","system","variant","variance","styled","AnimatePresence","motion","React","useCallback","useEffect","useState","transitionDuration","flyoutStyles","compose","background","border","flex","grid","layout","positioning","flyoutOpenVariants","defaultVariant","prop","variants","left","right","DrawerBase","div","Flyout","children","renderButton","initialExpanded","openFrom","openWidth","clickOutsideDoesNotClose","escapeDoesNotClose","closeFlyoutRef","styleProps","initialX","isExpanded","setIsExpanded","toggleExpanded","closeFlyout","current","handleOutsideClick","handleEscapeKey","x","duration","_","sm"],"mappings":"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","sourcesContent":["import { BodyPortal, FocusTrap, IconButton } from '@codecademy/gamut';\nimport { MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { system, variant } from '@codecademy/gamut-styles';\nimport { StyleProps, variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nexport const transitionDuration = 0.35;\n\nconst flyoutStyles = variance.compose(\n  system.background,\n  system.border,\n  system.flex,\n  system.grid,\n  system.layout,\n  system.positioning\n);\n\nconst flyoutOpenVariants = variant({\n  defaultVariant: 'left',\n  prop: 'openFrom',\n  variants: {\n    left: {\n      right: 'auto',\n      left: 0,\n    },\n    right: {\n      right: 0,\n      left: 'auto',\n    },\n  },\n});\n\nexport type FlyoutStyles = StyleProps<typeof flyoutStyles> &\n  StyleProps<typeof flyoutOpenVariants>;\nexport interface FlyoutStyleProps extends FlyoutStyles {}\n\nexport const DrawerBase = styled(motion.div)<FlyoutStyleProps>(\n  flyoutStyles,\n  flyoutOpenVariants\n);\n\ntype FlyoutProps = FlyoutStyleProps & {\n  /**\n   * if the drawer should be open or closed\n   */\n  initialExpanded?: boolean;\n  /**\n   * width of the open drawer in rem\n   */\n  openWidth?: number;\n  /**\n   * toggles the Flyout\n   */\n  renderButton: (onClick: () => void) => React.ReactNode;\n  /**\n   * Whether clicking on the screen outside of the container should close the Flyout\n   */\n  clickOutsideDoesNotClose?: boolean;\n  /**\n   * Whether clicking the escape key should close the Flyout\n   */\n  escapeDoesNotClose?: boolean;\n\n  /**\n   * A means of the parent method to get a reference to the closeFlyout function\n   */\n  closeFlyoutRef?: React.MutableRefObject<Function>;\n};\n\nexport const Flyout: React.FC<FlyoutProps> = ({\n  children,\n  renderButton,\n  initialExpanded,\n  openFrom = 'left',\n  openWidth = 30,\n  clickOutsideDoesNotClose,\n  escapeDoesNotClose,\n  closeFlyoutRef,\n  ...styleProps\n}) => {\n  const initialX = openFrom === 'left' ? -1000 : 1000;\n\n  const [isExpanded, setIsExpanded] = useState(!!initialExpanded);\n  const toggleExpanded = useCallback(\n    () => setIsExpanded((isExpanded) => !isExpanded),\n    []\n  );\n  const closeFlyout = useCallback(() => {\n    setIsExpanded(false);\n  }, []);\n\n  useEffect(() => {\n    // Passes the function up to any interested parent component\n    if (closeFlyoutRef) {\n      closeFlyoutRef.current = closeFlyout;\n      return () => {\n        closeFlyoutRef.current = () => {};\n      };\n    }\n  }, [closeFlyoutRef, closeFlyout]);\n\n  const handleOutsideClick = useCallback(() => {\n    !clickOutsideDoesNotClose && closeFlyout();\n  }, [clickOutsideDoesNotClose, closeFlyout]);\n\n  const handleEscapeKey = useCallback(() => {\n    !escapeDoesNotClose && closeFlyout();\n  }, [escapeDoesNotClose, closeFlyout]);\n\n  return (\n    <>\n      <AnimatePresence>\n        {isExpanded ? (\n          <BodyPortal>\n            <FocusTrap\n              onClickOutside={handleOutsideClick}\n              onEscapeKey={handleEscapeKey}\n            >\n              <DrawerBase\n                aria-expanded={isExpanded}\n                initial={{ x: initialX }}\n                animate={{ x: 0 }}\n                exit={{ x: initialX }}\n                transition={{ duration: transitionDuration }}\n                width={{ _: '75%', sm: `${openWidth}rem` }}\n                maxWidth={`${openWidth}rem`}\n                openFrom={openFrom}\n                position=\"fixed\"\n                bottom=\"0\"\n                top=\"0\"\n                {...styleProps}\n              >\n                <IconButton\n                  icon={MiniDeleteIcon}\n                  onClick={toggleExpanded}\n                  position=\"absolute\"\n                  top=\"0.5rem\"\n                  right=\"0.5rem\"\n                />\n                {children}\n              </DrawerBase>\n            </FocusTrap>\n          </BodyPortal>\n        ) : null}\n      </AnimatePresence>\n      {renderButton(toggleExpanded)}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}