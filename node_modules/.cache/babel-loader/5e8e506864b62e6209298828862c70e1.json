{"ast":null,"code":"import{MiniDeleteIcon}from'@codecademy/gamut-icons';import{system}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React,{useMemo}from'react';import{Box}from'../Box';import{IconButton}from'../Button/IconButton';import{FloatingCard}from'../FloatingCard/FloatingCard';import{Text}from'../Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var layoutVariants=system.variant({prop:'layout',defaultVariant:'message',variants:{message:{minHeight:'80px',gridTemplateAreas:\"'message message close'\"},'icon-message':{gridTemplateAreas:\"'icon message close'\",minHeight:'104px'},'title-message':{minHeight:'104px',gridTemplateAreas:\"'message message close'\"}}});var ToastContainer=styled(FloatingCard)(system.css({display:'grid',width:360,py:12,px:16,pr:12,columnGap:12,gridTemplateColumns:'4rem 1fr 2rem'}),layoutVariants);var IconContainer=styled(Box)(system.css({bg:'text',width:64,height:64,border:1,gridArea:'icon',borderRadius:'50%',backgroundSize:'contain'}));export var Toast=function Toast(_ref){var title=_ref.title,children=_ref.children,icon=_ref.icon,onClose=_ref.onClose;var layoutType=useMemo(function(){if(icon)return'icon-message';if(title)return'title-message';return'message';},[title,icon]);return/*#__PURE__*/_jsxs(ToastContainer,{layout:layoutType,pattern:\"checkerDense\",children:[icon&&/*#__PURE__*/_jsx(IconContainer,{alignSelf:\"center\",backgroundImage:\"url(\".concat(icon,\")\")}),/*#__PURE__*/_jsxs(Box,{gridArea:\"message\",py:4,children:[title&&/*#__PURE__*/_jsx(Text,{variant:\"p-base\",fontWeight:\"title\",mb:4,children:title}),/*#__PURE__*/_jsx(Text,{as:\"div\",variant:\"p-small\",children:children})]}),/*#__PURE__*/_jsx(IconButton,{onClick:onClose,size:\"small\",variant:\"secondary\",icon:MiniDeleteIcon,alignSelf:\"start\"})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Toast/Toast.tsx"],"names":["MiniDeleteIcon","system","styled","React","useMemo","Box","IconButton","FloatingCard","Text","layoutVariants","variant","prop","defaultVariant","variants","message","minHeight","gridTemplateAreas","ToastContainer","css","display","width","py","px","pr","columnGap","gridTemplateColumns","IconContainer","bg","height","border","gridArea","borderRadius","backgroundSize","Toast","title","children","icon","onClose","layoutType"],"mappings":"AAAA,OAASA,cAAT,KAA+B,yBAA/B,CACA,OAASC,MAAT,KAAuB,0BAAvB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,EAA2BC,OAA3B,KAA0C,OAA1C,CAEA,OAASC,GAAT,KAAoB,QAApB,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,YAAT,KAA6B,8BAA7B,CACA,OAASC,IAAT,KAAqB,eAArB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAGR,MAAM,CAACS,OAAP,CAAe,CACpCC,IAAI,CAAE,QAD8B,CAEpCC,cAAc,CAAE,SAFoB,CAGpCC,QAAQ,CAAE,CACRC,OAAO,CAAE,CACPC,SAAS,CAAE,MADJ,CAEPC,iBAAiB,0BAFV,CADD,CAKR,eAAgB,CACdA,iBAAiB,uBADH,CAEdD,SAAS,CAAE,OAFG,CALR,CASR,gBAAiB,CACfA,SAAS,CAAE,OADI,CAEfC,iBAAiB,0BAFF,CATT,CAH0B,CAAf,CAAvB,CAmBA,GAAMC,CAAAA,cAAc,CAAGf,MAAM,CAACK,YAAD,CAAN,CACrBN,MAAM,CAACiB,GAAP,CAAW,CACTC,OAAO,CAAE,MADA,CAETC,KAAK,CAAE,GAFE,CAGTC,EAAE,CAAE,EAHK,CAITC,EAAE,CAAE,EAJK,CAKTC,EAAE,CAAE,EALK,CAMTC,SAAS,CAAE,EANF,CAOTC,mBAAmB,CAAE,eAPZ,CAAX,CADqB,CAUrBhB,cAVqB,CAAvB,CAaA,GAAMiB,CAAAA,aAAa,CAAGxB,MAAM,CAACG,GAAD,CAAN,CACpBJ,MAAM,CAACiB,GAAP,CAAW,CACTS,EAAE,CAAE,MADK,CAETP,KAAK,CAAE,EAFE,CAGTQ,MAAM,CAAE,EAHC,CAITC,MAAM,CAAE,CAJC,CAKTC,QAAQ,CAAE,MALD,CAMTC,YAAY,CAAE,KANL,CAOTC,cAAc,CAAE,SAPP,CAAX,CADoB,CAAtB,CAkBA,MAAO,IAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAKrC,IAJJC,CAAAA,KAII,MAJJA,KAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,UAAU,CAAGlC,OAAO,CAAC,UAAM,CAC/B,GAAIgC,IAAJ,CAAU,MAAO,cAAP,CACV,GAAIF,KAAJ,CAAW,MAAO,eAAP,CACX,MAAO,SAAP,CACD,CAJyB,CAIvB,CAACA,KAAD,CAAQE,IAAR,CAJuB,CAA1B,CAMA,mBACE,MAAC,cAAD,EAAgB,MAAM,CAAEE,UAAxB,CAAoC,OAAO,CAAC,cAA5C,WACGF,IAAI,eACH,KAAC,aAAD,EAAe,SAAS,CAAC,QAAzB,CAAkC,eAAe,eAASA,IAAT,KAAjD,EAFJ,cAIE,MAAC,GAAD,EAAK,QAAQ,CAAC,SAAd,CAAwB,EAAE,CAAE,CAA5B,WACGF,KAAK,eACJ,KAAC,IAAD,EAAM,OAAO,CAAC,QAAd,CAAuB,UAAU,CAAC,OAAlC,CAA0C,EAAE,CAAE,CAA9C,UACGA,KADH,EAFJ,cAME,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,OAAO,CAAC,SAAvB,UACGC,QADH,EANF,GAJF,cAcE,KAAC,UAAD,EACE,OAAO,CAAEE,OADX,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAC,WAHV,CAIE,IAAI,CAAErC,cAJR,CAKE,SAAS,CAAC,OALZ,EAdF,GADF,CAwBD,CApCM","sourcesContent":["import { MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { system } from '@codecademy/gamut-styles';\nimport { StyleProps } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport { Box } from '../Box';\nimport { IconButton } from '../Button/IconButton';\nimport { FloatingCard } from '../FloatingCard/FloatingCard';\nimport { Text } from '../Typography';\n\nconst layoutVariants = system.variant({\n  prop: 'layout',\n  defaultVariant: 'message',\n  variants: {\n    message: {\n      minHeight: '80px',\n      gridTemplateAreas: `'message message close'`,\n    },\n    'icon-message': {\n      gridTemplateAreas: `'icon message close'`,\n      minHeight: '104px',\n    },\n    'title-message': {\n      minHeight: '104px',\n      gridTemplateAreas: `'message message close'`,\n    },\n  },\n});\n\nconst ToastContainer = styled(FloatingCard)<StyleProps<typeof layoutVariants>>(\n  system.css({\n    display: 'grid',\n    width: 360,\n    py: 12,\n    px: 16,\n    pr: 12,\n    columnGap: 12,\n    gridTemplateColumns: '4rem 1fr 2rem',\n  }),\n  layoutVariants\n);\n\nconst IconContainer = styled(Box)(\n  system.css({\n    bg: 'text',\n    width: 64,\n    height: 64,\n    border: 1,\n    gridArea: 'icon',\n    borderRadius: '50%',\n    backgroundSize: 'contain',\n  })\n);\n\ntype ToastProps = {\n  title?: ReactNode;\n  icon?: string;\n  onClose: () => void;\n};\n\nexport const Toast: React.FC<ToastProps> = ({\n  title,\n  children,\n  icon,\n  onClose,\n}) => {\n  const layoutType = useMemo(() => {\n    if (icon) return 'icon-message';\n    if (title) return 'title-message';\n    return 'message';\n  }, [title, icon]);\n\n  return (\n    <ToastContainer layout={layoutType} pattern=\"checkerDense\">\n      {icon && (\n        <IconContainer alignSelf=\"center\" backgroundImage={`url(${icon})`} />\n      )}\n      <Box gridArea=\"message\" py={4}>\n        {title && (\n          <Text variant=\"p-base\" fontWeight=\"title\" mb={4}>\n            {title}\n          </Text>\n        )}\n        <Text as=\"div\" variant=\"p-small\">\n          {children}\n        </Text>\n      </Box>\n      <IconButton\n        onClick={onClose}\n        size=\"small\"\n        variant=\"secondary\"\n        icon={MiniDeleteIcon}\n        alignSelf=\"start\"\n      />\n    </ToastContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}