{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { without } from 'lodash';\nexport const initialState = {\n  id: null\n};\nexport const modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    showModal: (state, action) => {\n      state.id = action.payload;\n    },\n    hideCurrentModal: state => {\n      const ids = state.ids.slice[1];\n      state.ids = ids;\n    },\n    hideModal: (state, action) => {\n      const ids = without(state.ids, action.payload);\n      state.ids = ids;\n    }\n  }\n});\nexport const {\n  showModal,\n  hideCurrentModal,\n  hideModal\n} = modalSlice.actions;\nexport default modalSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/state/modals/modalSlice.ts"],"names":["createSlice","without","initialState","id","modalSlice","name","reducers","showModal","state","action","payload","hideCurrentModal","ids","slice","hideModal","actions","reducer"],"mappings":"AAAA,SAA2BA,WAA3B,QACO,kBADP;AAGA,SAASC,OAAT,QAAwB,QAAxB;AAMA,OAAO,MAAMC,YAAwB,GAAG;AACpCC,EAAAA,EAAE,EAAE;AADgC,CAAjC;AAGP,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AAClCK,EAAAA,IAAI,EAAE,OAD4B;AAElCH,EAAAA,YAFkC;AAGlCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AAEjDD,MAAAA,KAAK,CAACL,EAAN,GAAWM,MAAM,CAACC,OAAlB;AACH,KAJK;AAKNC,IAAAA,gBAAgB,EAAGH,KAAD,IAAW;AAC5B,YAAMI,GAAG,GAAGJ,KAAK,CAACI,GAAN,CAAUC,KAAV,CAAgB,CAAhB,CAAZ;AACAL,MAAAA,KAAK,CAACI,GAAN,GAAYA,GAAZ;AACA,KARK;AAUNE,IAAAA,SAAS,EAAE,CAACN,KAAD,EAAQC,MAAR,KAA0C;AACnD,YAAMG,GAAG,GAAGX,OAAO,CAACO,KAAK,CAACI,GAAP,EAAYH,MAAM,CAACC,OAAnB,CAAnB;AACAF,MAAAA,KAAK,CAACI,GAAN,GAAYA,GAAZ;AACD;AAbK;AAHwB,CAAD,CAA9B;AAqBP,OAAO,MAAO;AAAEL,EAAAA,SAAF;AAAaI,EAAAA,gBAAb;AAA+BG,EAAAA;AAA/B,IAA6CV,UAAU,CAACW,OAA/D;AAEP,eAAeX,UAAU,CAACY,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction \n} from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { without } from 'lodash';\n\nexport interface ModalState { \n    id: string\n}\n\nexport const initialState: ModalState = {\n    id: null\n}\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState,\n    reducers: {\n        showModal: (state, action: PayloadAction<string>) => {\n          \n            state.id = action.payload \n        },\n        hideCurrentModal: (state) => {\n         const ids = state.ids.slice[1]\n         state.ids = ids\n        },\n\n        hideModal: (state, action: PayloadAction<string>) => {\n          const ids = without(state.ids, action.payload)\n          state.ids = ids\n        }\n\n    }\n});\n\nexport const  { showModal, hideCurrentModal, hideModal } = modalSlice.actions\n\nexport default modalSlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}