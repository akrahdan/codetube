{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormTextInput/index.tsx\";\nimport React from 'react';\nimport { Input } from '../../../Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GridFormTextInput = ({\n  className,\n  error,\n  field,\n  register,\n  showRequired\n}) => {\n  return /*#__PURE__*/_jsxDEV(Input, {\n    className: className,\n    disabled: field.disabled,\n    error: error,\n    htmlFor: field.name,\n    onChange: event => {\n      var _field$onUpdate;\n\n      return (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, event.target.value);\n    },\n    placeholder: field.placeholder,\n    name: field.name,\n    ref: register(field.validation),\n    type: field.type,\n    id: field.id,\n    \"aria-invalid\": error,\n    \"aria-required\": showRequired\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GridFormTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridFormTextInput\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormTextInput/index.tsx"],"names":["React","Input","GridFormTextInput","className","error","field","register","showRequired","disabled","name","event","onUpdate","target","value","placeholder","validation","type","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,KAAT,QAAsB,eAAtB;;AAWA,OAAO,MAAMC,iBAAmD,GAAG,CAAC;AAClEC,EAAAA,SADkE;AAElEC,EAAAA,KAFkE;AAGlEC,EAAAA,KAHkE;AAIlEC,EAAAA,QAJkE;AAKlEC,EAAAA;AALkE,CAAD,KAM7D;AACJ,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAEJ,SADb;AAEE,IAAA,QAAQ,EAAEE,KAAK,CAACG,QAFlB;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,OAAO,EAAEC,KAAK,CAACI,IAJjB;AAKE,IAAA,QAAQ,EAAGC,KAAD;AAAA;;AAAA,gCAAWL,KAAK,CAACM,QAAjB,oDAAW,qBAAAN,KAAK,EAAYK,KAAK,CAACE,MAAN,CAAaC,KAAzB,CAAhB;AAAA,KALZ;AAME,IAAA,WAAW,EAAER,KAAK,CAACS,WANrB;AAOE,IAAA,IAAI,EAAET,KAAK,CAACI,IAPd;AAQE,IAAA,GAAG,EAAEH,QAAQ,CAACD,KAAK,CAACU,UAAP,CARf;AASE,IAAA,IAAI,EAAEV,KAAK,CAACW,IATd;AAUE,IAAA,EAAE,EAAEX,KAAK,CAACY,EAVZ;AAWE,oBAAcb,KAXhB;AAYE,qBAAeG;AAZjB;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvBM;KAAML,iB","sourcesContent":["import React from 'react';\nimport { UseFormMethods } from 'react-hook-form';\n\nimport { Input } from '../../../Form';\nimport { GridFormTextField } from '../../types';\n\nexport type GridFormTextInputProps = {\n  className?: string;\n  error?: boolean;\n  showRequired?: boolean;\n  field: Omit<GridFormTextField, 'label'>;\n  register: UseFormMethods['register'];\n};\n\nexport const GridFormTextInput: React.FC<GridFormTextInputProps> = ({\n  className,\n  error,\n  field,\n  register,\n  showRequired,\n}) => {\n  return (\n    <Input\n      className={className}\n      disabled={field.disabled}\n      error={error}\n      htmlFor={field.name}\n      onChange={(event) => field.onUpdate?.(event.target.value)}\n      placeholder={field.placeholder}\n      name={field.name}\n      ref={register(field.validation)}\n      type={field.type}\n      id={field.id}\n      aria-invalid={error}\n      aria-required={showRequired}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}