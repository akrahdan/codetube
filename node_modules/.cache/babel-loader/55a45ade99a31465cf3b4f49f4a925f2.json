{"ast":null,"code":"/* eslint-disable */\n\n/*\n * Taken from Preact\n *\n * See https://github.com/preactjs/preact/blob/6ab49d9020740127577bf4af66bf63f4af7f9fee/src/diff/props.js#L58-L151\n */\nfunction setStyle(style, key, value) {\n  if (value === null) {\n    style[key] = '';\n  } else if (typeof value !== 'number') {\n    style[key] = value;\n  } else {\n    style[key] = value + 'px';\n  }\n}\n/**\n * Proxy an event to hooked event handlers\n */\n\n\nfunction eventProxy(event) {\n  this._listeners[event.type](event);\n}\n/**\n * Set a property value on a DOM node\n */\n\n\nexport function setProperty(dom, name, value) {\n  var useCapture;\n  var nameLower;\n  var oldValue = dom[name];\n\n  if (name === 'style') {\n    if (typeof value == 'string') {\n      dom.style = value;\n    } else {\n      if (value === null) {\n        dom.style = '';\n      } else {\n        for (name in value) {\n          if (!oldValue || value[name] !== oldValue[name]) {\n            setStyle(dom.style, name, value[name]);\n          }\n        }\n      }\n    }\n  } // Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n  else if (name[0] === 'o' && name[1] === 'n') {\n      useCapture = name !== (name = name.replace(/Capture$/, ''));\n      nameLower = name.toLowerCase();\n      if (nameLower in dom) name = nameLower;\n      name = name.slice(2);\n      if (!dom._listeners) dom._listeners = {};\n      dom._listeners[name] = value;\n\n      if (value) {\n        if (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n      } else {\n        dom.removeEventListener(name, eventProxy, useCapture);\n      }\n    } else if (name !== 'list' && name !== 'tagName' && // HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n    // setAttribute\n    name !== 'form' && name !== 'type' && name !== 'size' && name !== 'download' && name !== 'href' && name in dom) {\n      dom[name] = value == null ? '' : value;\n    } else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n      if (value == null || value === false && // ARIA-attributes have a different notion of boolean values.\n      // The value `false` is different from the attribute not\n      // existing on the DOM, so we can't remove it. For non-boolean\n      // ARIA-attributes we could treat false as a removal, but the\n      // amount of exceptions would cost us too many bytes. On top of\n      // that other VDOM frameworks also always stringify `false`.\n      !/^ar/.test(name)) {\n        dom.removeAttribute(name);\n      } else {\n        dom.setAttribute(name, value);\n      }\n    }\n}\n\nfunction getNormalizedName(name) {\n  switch (name) {\n    case 'onChange':\n      return 'onInput';\n\n    default:\n      return name;\n  }\n}\n\nexport function setProperties(dom, props) {\n  for (var name in props) {\n    setProperty(dom, getNormalizedName(name), props[name]);\n  }\n}\nexport function setPropertiesWithoutEvents(dom, props) {\n  for (var name in props) {\n    if (!(name[0] === 'o' && name[1] === 'n')) {\n      setProperty(dom, getNormalizedName(name), props[name]);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-js/dist/esm/utils/setProperties.js"],"names":["setStyle","style","key","value","eventProxy","event","_listeners","type","setProperty","dom","name","useCapture","nameLower","oldValue","replace","toLowerCase","slice","addEventListener","removeEventListener","test","removeAttribute","setAttribute","getNormalizedName","setProperties","props","setPropertiesWithoutEvents"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\n/*\n * Taken from Preact\n *\n * See https://github.com/preactjs/preact/blob/6ab49d9020740127577bf4af66bf63f4af7f9fee/src/diff/props.js#L58-L151\n */\nfunction setStyle(style, key, value) {\n  if (value === null) {\n    style[key] = '';\n  } else if (typeof value !== 'number') {\n    style[key] = value;\n  } else {\n    style[key] = value + 'px';\n  }\n}\n/**\n * Proxy an event to hooked event handlers\n */\n\n\nfunction eventProxy(event) {\n  this._listeners[event.type](event);\n}\n/**\n * Set a property value on a DOM node\n */\n\n\nexport function setProperty(dom, name, value) {\n  var useCapture;\n  var nameLower;\n  var oldValue = dom[name];\n\n  if (name === 'style') {\n    if (typeof value == 'string') {\n      dom.style = value;\n    } else {\n      if (value === null) {\n        dom.style = '';\n      } else {\n        for (name in value) {\n          if (!oldValue || value[name] !== oldValue[name]) {\n            setStyle(dom.style, name, value[name]);\n          }\n        }\n      }\n    }\n  } // Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n  else if (name[0] === 'o' && name[1] === 'n') {\n      useCapture = name !== (name = name.replace(/Capture$/, ''));\n      nameLower = name.toLowerCase();\n      if (nameLower in dom) name = nameLower;\n      name = name.slice(2);\n      if (!dom._listeners) dom._listeners = {};\n      dom._listeners[name] = value;\n\n      if (value) {\n        if (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n      } else {\n        dom.removeEventListener(name, eventProxy, useCapture);\n      }\n    } else if (name !== 'list' && name !== 'tagName' && // HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n    // setAttribute\n    name !== 'form' && name !== 'type' && name !== 'size' && name !== 'download' && name !== 'href' && name in dom) {\n      dom[name] = value == null ? '' : value;\n    } else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n      if (value == null || value === false && // ARIA-attributes have a different notion of boolean values.\n      // The value `false` is different from the attribute not\n      // existing on the DOM, so we can't remove it. For non-boolean\n      // ARIA-attributes we could treat false as a removal, but the\n      // amount of exceptions would cost us too many bytes. On top of\n      // that other VDOM frameworks also always stringify `false`.\n      !/^ar/.test(name)) {\n        dom.removeAttribute(name);\n      } else {\n        dom.setAttribute(name, value);\n      }\n    }\n}\n\nfunction getNormalizedName(name) {\n  switch (name) {\n    case 'onChange':\n      return 'onInput';\n\n    default:\n      return name;\n  }\n}\n\nexport function setProperties(dom, props) {\n  for (var name in props) {\n    setProperty(dom, getNormalizedName(name), props[name]);\n  }\n}\nexport function setPropertiesWithoutEvents(dom, props) {\n  for (var name in props) {\n    if (!(name[0] === 'o' && name[1] === 'n')) {\n      setProperty(dom, getNormalizedName(name), props[name]);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}