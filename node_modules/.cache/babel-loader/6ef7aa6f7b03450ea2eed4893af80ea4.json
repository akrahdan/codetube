{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shuffleArray = exports.randomArrayMember = exports.obtainValue = void 0;\n/**\r\n * Grabs the value of an item or item-returning function.\r\n *\r\n * @param value   Item or item-returning function.\r\n */\n\nexports.obtainValue = value => typeof value === \"function\" ? value() : value;\n/**\r\n * Grabs a random member of an array.\r\n *\r\n * @template T   Type of items in the array.\r\n * @param array   Array of items.\r\n * @returns Random member of the array.\r\n */\n\n\nexports.randomArrayMember = array => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n/**\r\n * Creates a shuffled version of an array.\r\n *\r\n * @template T   Type of items in the array.\r\n * @param array   Array to copy.\r\n * @returns Shuffled version of the array.\r\n */\n\n\nexports.shuffleArray = array => {\n  // Copy the input array to preserve immutability elsewhere\n  const copiedArray = array.slice();\n\n  for (let i = copiedArray.length - 1; i > 0; i -= 1) {\n    const swappingIndex = Math.floor(Math.random() * (i + 1));\n    const swapper = copiedArray[i];\n    copiedArray[i] = copiedArray[swappingIndex];\n    copiedArray[swappingIndex] = swapper;\n  }\n\n  return copiedArray;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/emojisplosion/src/utils.js"],"names":["Object","defineProperty","exports","value","shuffleArray","randomArrayMember","obtainValue","array","Math","floor","random","length","copiedArray","slice","i","swappingIndex","swapper"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAACI,WAAR,GAAsB,KAAK,CAA9E;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACI,WAAR,GAAuBH,KAAD,IAAW,OAAOA,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAAzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,OAAO,CAACG,iBAAR,GAA6BE,KAAD,IAAW;AACnC,SAAOA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAZ;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAT,OAAO,CAACE,YAAR,GAAwBG,KAAD,IAAW;AAC9B;AACA,QAAMK,WAAW,GAAGL,KAAK,CAACM,KAAN,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAGF,WAAW,CAACD,MAAZ,GAAqB,CAAlC,EAAqCG,CAAC,GAAG,CAAzC,EAA4CA,CAAC,IAAI,CAAjD,EAAoD;AAChD,UAAMC,aAAa,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBI,CAAC,GAAG,CAArB,CAAX,CAAtB;AACA,UAAME,OAAO,GAAGJ,WAAW,CAACE,CAAD,CAA3B;AACAF,IAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBF,WAAW,CAACG,aAAD,CAA5B;AACAH,IAAAA,WAAW,CAACG,aAAD,CAAX,GAA6BC,OAA7B;AACH;;AACD,SAAOJ,WAAP;AACH,CAVD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.shuffleArray = exports.randomArrayMember = exports.obtainValue = void 0;\r\n/**\r\n * Grabs the value of an item or item-returning function.\r\n *\r\n * @param value   Item or item-returning function.\r\n */\r\nexports.obtainValue = (value) => typeof value === \"function\" ? value() : value;\r\n/**\r\n * Grabs a random member of an array.\r\n *\r\n * @template T   Type of items in the array.\r\n * @param array   Array of items.\r\n * @returns Random member of the array.\r\n */\r\nexports.randomArrayMember = (array) => {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n};\r\n/**\r\n * Creates a shuffled version of an array.\r\n *\r\n * @template T   Type of items in the array.\r\n * @param array   Array to copy.\r\n * @returns Shuffled version of the array.\r\n */\r\nexports.shuffleArray = (array) => {\r\n    // Copy the input array to preserve immutability elsewhere\r\n    const copiedArray = array.slice();\r\n    for (let i = copiedArray.length - 1; i > 0; i -= 1) {\r\n        const swappingIndex = Math.floor(Math.random() * (i + 1));\r\n        const swapper = copiedArray[i];\r\n        copiedArray[i] = copiedArray[swappingIndex];\r\n        copiedArray[swappingIndex] = swapper;\r\n    }\r\n    return copiedArray;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}