{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import cx from'classnames';import{hasIn}from'lodash';import React from'react';import{ButtonDeprecatedBase}from'../ButtonDeprecatedBase';import{omitProps}from'../utils/omitProps';import styles from'./styles/index.module.scss';// themes can be an alias to a color\n// or a unique button type\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var buttonPresetThemes={secondary:'mint',platform:'greyblue',lantern:'darkmint',royalblue:'brand-purple'};var themes=['hyper','navy','red','white','brand-red','brand-yellow','brand-purple','brand-dark-blue','brand-blue','mint','darkmint','grey','greyblue'];var propKeys=['theme','size','outline','underline','link','caps','go','children','block','className','round','square','flat','fitText','onClick'];var isPreset=function isPreset(theme){return hasIn(buttonPresetThemes,theme);};/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * See [FillButon](https://gamut.codecademy.com/storybook/?path=/docs/atoms-button--fill-button#fill-button)\n *\n * @example\n * import { FillButton } fom '@codecademy/gamut';\n *\n * <FillButton variant=\"primary\" />\n */export var ButtonDeprecated=function ButtonDeprecated(props){var _cx;var _props$theme=props.theme,theme=_props$theme===void 0?'brand-red':_props$theme;if(isPreset(theme)){theme=buttonPresetThemes[theme];}var typeClassName=props.link?styles.link:styles.btn;var themeClassName=props.link?styles[\"link-\".concat(theme)]:styles[\"btn-\".concat(theme)];var classes=cx(typeClassName,themeClassName,styles[props.size],(_cx={},_defineProperty(_cx,styles.block,props.block),_defineProperty(_cx,styles.go,props.go),_defineProperty(_cx,styles.outline,props.outline),_defineProperty(_cx,styles.underline,props.underline),_defineProperty(_cx,styles.caps,props.caps),_defineProperty(_cx,styles.round,props.round),_defineProperty(_cx,styles.square,props.square),_defineProperty(_cx,styles.flat,props.flat),_defineProperty(_cx,styles['fit-text'],props.fitText),_cx),props.className);var propsToTransfer=omitProps(propKeys,props);return/*#__PURE__*/_jsx(ButtonDeprecatedBase,_objectSpread(_objectSpread({},propsToTransfer),{},{className:classes,link:props.link,onClick:props.onClick,children:props.children}));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/ButtonDeprecated/index.tsx"],"names":["cx","hasIn","React","ButtonDeprecatedBase","omitProps","styles","buttonPresetThemes","secondary","platform","lantern","royalblue","themes","propKeys","isPreset","theme","ButtonDeprecated","props","typeClassName","link","btn","themeClassName","classes","size","block","go","outline","underline","caps","round","square","flat","fitText","className","propsToTransfer","onClick","children"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport { hasIn } from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport {\n  ButtonDeprecatedBase,\n  ButtonDeprecatedBaseProps,\n} from '../ButtonDeprecatedBase';\nimport { omitProps } from '../utils/omitProps';\nimport styles from './styles/index.module.scss';\n\n// themes can be an alias to a color\n// or a unique button type\nexport const buttonPresetThemes = {\n  secondary: 'mint',\n  platform: 'greyblue',\n  lantern: 'darkmint',\n  royalblue: 'brand-purple',\n} as const;\n\nconst themes = [\n  'hyper',\n  'navy',\n  'red',\n  'white',\n  'brand-red',\n  'brand-yellow',\n  'brand-purple',\n  'brand-dark-blue',\n  'brand-blue',\n  'mint',\n  'darkmint',\n  'grey',\n  'greyblue',\n] as const;\n\nexport type ButtonDeprecatedThemes =\n  | keyof typeof buttonPresetThemes\n  | typeof themes[number];\n\nconst propKeys = [\n  'theme',\n  'size',\n  'outline',\n  'underline',\n  'link',\n  'caps',\n  'go',\n  'children',\n  'block',\n  'className',\n  'round',\n  'square',\n  'flat',\n  'fitText',\n  'onClick',\n];\n\nexport type ButtonDeprecatedProps = ButtonDeprecatedBaseProps & {\n  /**\n   * Whether button should behave like a block element or inline.\n   */\n  block?: boolean;\n  /**\n   * Capitalize the text of the button.\n   */\n  caps?: boolean;\n  children: ReactNode;\n  /**\n   * Disables the button and adds visual indicators to show it is not interactive.\n   */\n  disabled?: boolean;\n  /**\n   * Variant that displays the button as flat.\n   */\n  flat?: boolean;\n  /**\n   * Adds a pulsing animation to the button\n   */\n  go?: boolean;\n  /**\n   * Changes the button to a link with no visual indication\n   */\n  href?: string;\n  /**\n   * Link relationship property to be used with `href`\n   */\n  rel?: string;\n  /**\n   * Link target property to be used with `href`\n   */\n  target?: string;\n  id?: string;\n  /**\n   * Variant that displays the button as an inline link element, but maintains its semantic meaning as a button.\n   */\n  link?: boolean;\n  /**\n   * Variant the displays the button as a button that is outlined instead of solid.\n   */\n  outline?: boolean;\n  /**\n   *  Variant that rounds the corners of the button\n   */\n  round?: boolean;\n  /**\n   * Variant that determines the size of the button\n   */\n  size?: 'small' | 'large';\n  /**\n   * Variant that displays the button as a square\n   */\n  square?: boolean;\n  /**\n   * Variant that controls the background and text color of the button\n   * */\n  theme?: ButtonDeprecatedThemes;\n  type?: string;\n  /**\n   * Variant that underlines the text of the button.\n   */\n  underline?: boolean;\n  /**\n   *  Determines whether button dimensions should be determined by the content\n   */\n  fitText?: boolean;\n};\n\nconst isPreset = (theme: string): theme is keyof typeof buttonPresetThemes => {\n  return hasIn(buttonPresetThemes, theme);\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * See [FillButon](https://gamut.codecademy.com/storybook/?path=/docs/atoms-button--fill-button#fill-button)\n *\n * @example\n * import { FillButton } fom '@codecademy/gamut';\n *\n * <FillButton variant=\"primary\" />\n */\n\nexport const ButtonDeprecated: React.FC<ButtonDeprecatedProps> = (props) => {\n  let { theme = 'brand-red' } = props;\n\n  if (isPreset(theme)) {\n    theme = buttonPresetThemes[theme];\n  }\n\n  const typeClassName = props.link ? styles.link : styles.btn;\n  const themeClassName = props.link\n    ? styles[`link-${theme}`]\n    : styles[`btn-${theme}`];\n\n  const classes = cx(\n    typeClassName,\n    themeClassName,\n    styles[props.size!],\n    {\n      [styles.block]: props.block,\n      [styles.go]: props.go,\n      [styles.outline]: props.outline,\n      [styles.underline]: props.underline,\n      [styles.caps]: props.caps,\n      [styles.round]: props.round,\n      [styles.square]: props.square,\n      [styles.flat]: props.flat,\n      [styles['fit-text']]: props.fitText,\n    },\n    props.className\n  );\n\n  const propsToTransfer = omitProps(propKeys, props);\n\n  return (\n    <ButtonDeprecatedBase\n      {...propsToTransfer}\n      className={classes}\n      link={props.link}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </ButtonDeprecatedBase>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}