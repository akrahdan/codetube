{"ast":null,"code":"import { createTheme } from '@codecademy/variance';\nimport { corePalette, elements, fontFamily, fontSize, fontWeight, lineHeight, mediaQueries, spacing } from '../variables';\n/**\n *  @description  This is the core theme that all other Codecademy themes are extended from\n * and is the only theme that gamut components are typed to. This ensures that gamut components\n * are guaranteed to be interoperable between all contexts, but with differing behaviors.\n */\n\nexport var coreTheme = createTheme({\n  breakpoints: mediaQueries,\n  fontSize: fontSize,\n  fontFamily: fontFamily,\n  lineHeight: lineHeight,\n  fontWeight: fontWeight,\n  spacing: spacing,\n  elements: elements\n}).addColors(corePalette).addColorModes('light', {\n  light: {\n    text: {\n      _: 'navy-800',\n      disabled: 'navy-500'\n    },\n    feedback: {\n      error: 'red-500',\n      success: 'green-700',\n      warning: 'yellow'\n    },\n    background: {\n      _: 'white',\n      current: 'white',\n      primary: 'beige',\n      selected: 'navy-100',\n      disabled: 'navy-200',\n      hover: 'navy-200'\n    },\n    shadow: {\n      opaque: 'shadow-white-heavy',\n      solid: 'gray-200'\n    },\n    primary: {\n      _: 'hyper-500',\n      hover: 'hyper-400'\n    },\n    secondary: {\n      _: 'navy-800',\n      hover: 'navy-700'\n    },\n    danger: {\n      _: 'red-500',\n      hover: 'red-400'\n    }\n  },\n  dark: {\n    text: {\n      _: 'white',\n      disabled: 'navy-200'\n    },\n    feedback: {\n      error: 'red-0',\n      success: 'green-0',\n      warning: 'yellow'\n    },\n    background: {\n      _: 'navy-800',\n      current: 'navy-800',\n      primary: 'navy-900',\n      selected: 'navy-700',\n      disabled: 'navy-500',\n      hover: 'navy-900'\n    },\n    shadow: {\n      opaque: 'shadow-black-heavy',\n      solid: 'black'\n    },\n    primary: {\n      _: 'yellow-500',\n      hover: 'yellow-400'\n    },\n    secondary: {\n      _: 'white',\n      hover: 'navy-200'\n    },\n    danger: {\n      _: 'red-0',\n      hover: 'red-100'\n    }\n  }\n}).addScale('borders', function (_ref) {\n  var colors = _ref.colors;\n  return {\n    1: \"1px solid \".concat(colors.secondary),\n    2: \"2px solid \".concat(colors.secondary)\n  };\n}).createScaleVariables('elements').build();","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut-styles/dist/themes/core.js"],"names":["createTheme","corePalette","elements","fontFamily","fontSize","fontWeight","lineHeight","mediaQueries","spacing","coreTheme","breakpoints","addColors","addColorModes","light","text","_","disabled","feedback","error","success","warning","background","current","primary","selected","hover","shadow","opaque","solid","secondary","danger","dark","addScale","_ref","colors","concat","createScaleVariables","build"],"mappings":"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","sourcesContent":["import { createTheme } from '@codecademy/variance';\nimport { corePalette, elements, fontFamily, fontSize, fontWeight, lineHeight, mediaQueries, spacing } from '../variables';\n/**\n *  @description  This is the core theme that all other Codecademy themes are extended from\n * and is the only theme that gamut components are typed to. This ensures that gamut components\n * are guaranteed to be interoperable between all contexts, but with differing behaviors.\n */\n\nexport var coreTheme = createTheme({\n  breakpoints: mediaQueries,\n  fontSize: fontSize,\n  fontFamily: fontFamily,\n  lineHeight: lineHeight,\n  fontWeight: fontWeight,\n  spacing: spacing,\n  elements: elements\n}).addColors(corePalette).addColorModes('light', {\n  light: {\n    text: {\n      _: 'navy-800',\n      disabled: 'navy-500'\n    },\n    feedback: {\n      error: 'red-500',\n      success: 'green-700',\n      warning: 'yellow'\n    },\n    background: {\n      _: 'white',\n      current: 'white',\n      primary: 'beige',\n      selected: 'navy-100',\n      disabled: 'navy-200',\n      hover: 'navy-200'\n    },\n    shadow: {\n      opaque: 'shadow-white-heavy',\n      solid: 'gray-200'\n    },\n    primary: {\n      _: 'hyper-500',\n      hover: 'hyper-400'\n    },\n    secondary: {\n      _: 'navy-800',\n      hover: 'navy-700'\n    },\n    danger: {\n      _: 'red-500',\n      hover: 'red-400'\n    }\n  },\n  dark: {\n    text: {\n      _: 'white',\n      disabled: 'navy-200'\n    },\n    feedback: {\n      error: 'red-0',\n      success: 'green-0',\n      warning: 'yellow'\n    },\n    background: {\n      _: 'navy-800',\n      current: 'navy-800',\n      primary: 'navy-900',\n      selected: 'navy-700',\n      disabled: 'navy-500',\n      hover: 'navy-900'\n    },\n    shadow: {\n      opaque: 'shadow-black-heavy',\n      solid: 'black'\n    },\n    primary: {\n      _: 'yellow-500',\n      hover: 'yellow-400'\n    },\n    secondary: {\n      _: 'white',\n      hover: 'navy-200'\n    },\n    danger: {\n      _: 'red-0',\n      hover: 'red-100'\n    }\n  }\n}).addScale('borders', function (_ref) {\n  var colors = _ref.colors;\n  return {\n    1: \"1px solid \".concat(colors.secondary),\n    2: \"2px solid \".concat(colors.secondary)\n  };\n}).createScaleVariables('elements').build();"]},"metadata":{},"sourceType":"module"}