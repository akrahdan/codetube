{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{Box,Logo,StrokeButton}from'@codecademy/gamut';import React,{useRef}from'react';import{Flyout}from'../Flyout';import{AccordionMenu}from'./AccordionMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LayoutMenu=function LayoutMenu(_ref){var sections=_ref.sections,onSectionToggle=_ref.onSectionToggle,selectedItem=_ref.selectedItem,mobileButtonText=_ref.mobileButtonText,_ref$breakpoint=_ref.breakpoint,breakpoint=_ref$breakpoint===void 0?'lg':_ref$breakpoint,children=_ref.children;var closeFlyoutRef=useRef(function(){});var closeFlyout=function closeFlyout(){return closeFlyoutRef.current();};var accordionMenuSections=sections.map(function(section){return/*#__PURE__*/_jsx(AccordionMenu,{section:section,onSectionToggle:onSectionToggle,onItemClick:closeFlyout,selectedItem:selectedItem},section.slug);});var renderButton=function renderButton(onClick){return/*#__PURE__*/_jsx(StrokeButton,{variant:\"secondary\",width:1,onClick:onClick,children:mobileButtonText});};return/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(Box,{display:_defineProperty({_:'block'},breakpoint,'none'),children:/*#__PURE__*/_jsx(Flyout,{renderButton:renderButton,closeFlyoutRef:closeFlyoutRef,overflowY:\"auto\",overflowX:\"hidden\",children:/*#__PURE__*/_jsxs(Box,{bg:\"white\",minHeight:1,p:16,children:[/*#__PURE__*/_jsx(Logo,{mb:32}),accordionMenuSections,children]})})}),/*#__PURE__*/_jsxs(Box,{display:_defineProperty({_:'none'},breakpoint,'block'),children:[accordionMenuSections,children]})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/LayoutMenu/LayoutMenu.tsx"],"names":["Box","Logo","StrokeButton","React","useRef","Flyout","AccordionMenu","LayoutMenu","sections","onSectionToggle","selectedItem","mobileButtonText","breakpoint","children","closeFlyoutRef","closeFlyout","current","accordionMenuSections","map","section","slug","renderButton","onClick","_"],"mappings":"yKAAA,OAASA,GAAT,CAAcC,IAAd,CAAoBC,YAApB,KAAwC,mBAAxC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CAEA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,aAAT,KAAuC,iBAAvC,C,wFAyBA,MAAO,IAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAO/C,IANJC,CAAAA,QAMI,MANJA,QAMI,CALJC,eAKI,MALJA,eAKI,CAJJC,YAII,MAJJA,YAII,CAHJC,gBAGI,MAHJA,gBAGI,sBAFJC,UAEI,CAFJA,UAEI,0BAFS,IAET,iBADJC,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,cAAc,CAAGV,MAAM,CAAC,UAAM,CAAE,CAAT,CAA7B,CAEA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,cAAc,CAACE,OAAf,EAAN,EAApB,CAEA,GAAMC,CAAAA,qBAAqB,CAAGT,QAAQ,CAACU,GAAT,CAAa,SAACC,OAAD,qBACzC,KAAC,aAAD,EAEE,OAAO,CAAEA,OAFX,CAGE,eAAe,CAAEV,eAHnB,CAIE,WAAW,CAAEM,WAJf,CAKE,YAAY,CAAEL,YALhB,EACOS,OAAO,CAACC,IADf,CADyC,EAAb,CAA9B,CAUA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,qBACnB,KAAC,YAAD,EAAc,OAAO,CAAC,WAAtB,CAAkC,KAAK,CAAE,CAAzC,CAA4C,OAAO,CAAEA,OAArD,UACGX,gBADH,EADmB,EAArB,CAMA,mBACE,oCACE,KAAC,GAAD,EAAK,OAAO,kBAAIY,CAAC,CAAE,OAAP,EAAiBX,UAAjB,CAA8B,MAA9B,CAAZ,uBACE,KAAC,MAAD,EACE,YAAY,CAAES,YADhB,CAEE,cAAc,CAAEP,cAFlB,CAGE,SAAS,CAAC,MAHZ,CAIE,SAAS,CAAC,QAJZ,uBAME,MAAC,GAAD,EAAK,EAAE,CAAC,OAAR,CAAgB,SAAS,CAAE,CAA3B,CAA8B,CAAC,CAAE,EAAjC,wBACE,KAAC,IAAD,EAAM,EAAE,CAAE,EAAV,EADF,CAEGG,qBAFH,CAGGJ,QAHH,GANF,EADF,EADF,cAeE,MAAC,GAAD,EAAK,OAAO,kBAAIU,CAAC,CAAE,MAAP,EAAgBX,UAAhB,CAA6B,OAA7B,CAAZ,WACGK,qBADH,CAEGJ,QAFH,GAfF,GADF,CAsBD,CAlDM","sourcesContent":["import { Box, Logo, StrokeButton } from '@codecademy/gamut';\nimport React, { useRef } from 'react';\n\nimport { Flyout } from '../Flyout';\nimport { AccordionMenu, Section } from './AccordionMenu';\n\nexport type LayoutMenuProps = {\n  /**\n   * An array of sections containing the title, slug, and items, each of which will become an accordion. Each item contains a title, slug, and onClick.\n   */\n  sections: Section[];\n  /**\n   * The slug of the current selected item\n   */\n  selectedItem?: string;\n  /**\n   * Callback to be run on click of the accordion button\n   */\n  onSectionToggle: (sectionSlug: string) => void;\n  /**\n   * Text shown in mobile button that opens flyout on click\n   */\n  mobileButtonText: string;\n  /**\n   * Breakpoint above which the menu button displays as a full sidebar\n   */\n  breakpoint?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n};\n\nexport const LayoutMenu: React.FC<LayoutMenuProps> = ({\n  sections,\n  onSectionToggle,\n  selectedItem,\n  mobileButtonText,\n  breakpoint = 'lg',\n  children,\n}) => {\n  const closeFlyoutRef = useRef(() => {});\n\n  const closeFlyout = () => closeFlyoutRef.current();\n\n  const accordionMenuSections = sections.map((section) => (\n    <AccordionMenu\n      key={section.slug}\n      section={section}\n      onSectionToggle={onSectionToggle}\n      onItemClick={closeFlyout}\n      selectedItem={selectedItem}\n    />\n  ));\n\n  const renderButton = (onClick: () => void) => (\n    <StrokeButton variant=\"secondary\" width={1} onClick={onClick}>\n      {mobileButtonText}\n    </StrokeButton>\n  );\n\n  return (\n    <nav>\n      <Box display={{ _: 'block', [breakpoint]: 'none' }}>\n        <Flyout\n          renderButton={renderButton}\n          closeFlyoutRef={closeFlyoutRef}\n          overflowY=\"auto\"\n          overflowX=\"hidden\"\n        >\n          <Box bg=\"white\" minHeight={1} p={16}>\n            <Logo mb={32} />\n            {accordionMenuSections}\n            {children}\n          </Box>\n        </Flyout>\n      </Box>\n      <Box display={{ _: 'none', [breakpoint]: 'block' }}>\n        {accordionMenuSections}\n        {children}\n      </Box>\n    </nav>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}