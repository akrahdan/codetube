{"ast":null,"code":"import React from'react';import{useFormContext}from'react-hook-form';import{GridFormInputGroup}from'../GridFormInputGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var GridFormContent=function GridFormContent(_ref){var _errors$field$name,_field$validation;var field=_ref.field,showRequired=_ref.showRequired;var _useFormContext=useFormContext(),register=_useFormContext.register,errors=_useFormContext.errors,setValue=_useFormContext.setValue;/**\n   * Keep track of the first error in this form.\n   * This is so we only add the correct aria-live props on the first error.\n   */var isFirstError=Object.keys(errors)[0]===field.name;var errorMessage=(_errors$field$name=errors[field.name])===null||_errors$field$name===void 0?void 0:_errors$field$name.message;var requiredBoolean=!!(field.type!=='hidden'&&field.type!=='sweet-container'&&((_field$validation=field.validation)===null||_field$validation===void 0?void 0:_field$validation.required));return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GridFormInputGroup,{error:errorMessage,isFirstError:isFirstError,field:field,register:register,setValue:setValue,required:requiredBoolean,showRequired:showRequired},field.name)});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/GridForm/GridFormSections/GridFormContent.tsx"],"names":["React","useFormContext","GridFormInputGroup","GridFormContent","field","showRequired","register","errors","setValue","isFirstError","Object","keys","name","errorMessage","message","requiredBoolean","type","validation","required"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAqBC,cAArB,KAA2C,iBAA3C,CAEA,OAASC,kBAAT,KAAmC,uBAAnC,C,gGAQA,MAAO,IAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAGzD,6CAFJC,CAAAA,KAEI,MAFJA,KAEI,CADJC,YACI,MADJA,YACI,qBACmCJ,cAAc,EADjD,CACIK,QADJ,iBACIA,QADJ,CACcC,MADd,iBACcA,MADd,CACsBC,QADtB,iBACsBA,QADtB,CAGJ;AACF;AACA;AACA,KACE,GAAMC,CAAAA,YAAY,CAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoB,CAApB,IAA2BH,KAAK,CAACQ,IAAtD,CACA,GAAMC,CAAAA,YAAY,qBAAIN,MAAM,CAACH,KAAK,CAACQ,IAAP,CAAV,6CAAG,mBAAoCE,OAAzD,CAEA,GAAMC,CAAAA,eAAe,CAAG,CAAC,EACvBX,KAAK,CAACY,IAAN,GAAe,QAAf,EACAZ,KAAK,CAACY,IAAN,GAAe,iBADf,sBAEAZ,KAAK,CAACa,UAFN,4CAEA,kBAAkBC,QAFlB,CADuB,CAAzB,CAMA,mBACE,sCACE,KAAC,kBAAD,EACE,KAAK,CAAEL,YADT,CAEE,YAAY,CAAEJ,YAFhB,CAGE,KAAK,CAAEL,KAHT,CAKE,QAAQ,CAAEE,QALZ,CAME,QAAQ,CAAEE,QANZ,CAOE,QAAQ,CAAEO,eAPZ,CAQE,YAAY,CAAEV,YARhB,EAIOD,KAAK,CAACQ,IAJb,CADF,EADF,CAcD,CAjCM","sourcesContent":["import React from 'react';\nimport { FieldError, useFormContext } from 'react-hook-form';\n\nimport { GridFormInputGroup } from '../GridFormInputGroup';\nimport { GridFormField } from '../types';\n\nexport type GridFormContentProps = {\n  field: GridFormField;\n  showRequired: boolean;\n};\n\nexport const GridFormContent: React.FC<GridFormContentProps> = ({\n  field,\n  showRequired,\n}) => {\n  const { register, errors, setValue } = useFormContext();\n\n  /**\n   * Keep track of the first error in this form.\n   * This is so we only add the correct aria-live props on the first error.\n   */\n  const isFirstError = Object.keys(errors)[0] === field.name;\n  const errorMessage = (errors[field.name] as FieldError)?.message;\n\n  const requiredBoolean = !!(\n    field.type !== 'hidden' &&\n    field.type !== 'sweet-container' &&\n    field.validation?.required\n  );\n\n  return (\n    <>\n      <GridFormInputGroup\n        error={errorMessage}\n        isFirstError={isFirstError}\n        field={field}\n        key={field.name}\n        register={register}\n        setValue={setValue}\n        required={requiredBoolean}\n        showRequired={showRequired}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}