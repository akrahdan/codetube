{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{play as _play,pause as _pause,setVolume as _setVolume,setDuration,setTime as _setTime,ready as _ready,seekEnd as _seekEnd,seekStart as _seekStart,registerPlayer,setBufferedTime as _setBufferedTime,setMediaType as _setMediaType,setOverlay as _setOverlay,setBuffering as _setBuffering,setFullscreen as _setFullscreen,setLoading as _setLoading,setAutoplay as _setAutoplay,setPlaying as _setPlaying,setCurrentResolution as _setCurrentResolution,setPreferredResolutions as _setPreferredResolutions,setSupportedResolutions as _setSupportedResolutions}from'state/player/playerSlice';import css from'./video.module.css';import{DefaultResolutions}from'../constants';// import withAdobeHeartbeat from './with-adobe-heartbeat'\nimport{FullscreenState,HLS_SDK_URL,HLS_SDK_URL_SAFARI,MediaTypes}from'../constants';import{getSDK}from'../utilities/get-sdk';import{throttle}from'../utilities/throttle';// import { sendPlaySuccessEvent } from '../../analytics/player-events'\nimport{mapHlsError,mapGenericVideoError}from'../utilities/video-error';import{Truncate}from'@codecademy/gamut';import{jsx as _jsx}from\"react/jsx-runtime\";var HLS_EXTENSIONS=/\\.(m3u8)($|\\?)/i;var initialState={isPlaying:false,reportedVolume:null,reportedPlaybackRate:1,isBuffering:false,canPlay:false,ready:true};export var Video=/*#__PURE__*/function(_Component){_inherits(Video,_Component);var _super=_createSuper(Video);function Video(props){var _this;_classCallCheck(this,Video);_this=_super.call(this,props);_this.newReadyPromise=function(){return new Promise(function(resolve){_this.ready=function(){_this.setState({ready:true},function(){resolve();});};});};_this.isSafari=function(){return navigator.vendor.match(/apple/i);};_this.isHlsSource=function(source){return HLS_EXTENSIONS.test(source);};_this.destroyHls=function(){_this.setState({hlsPlaying:false});_this.hls&&_this.hls.destroy();};_this.startHls=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(source){var _this$props,setSupportedResolutions,setMediaType,setCurrentResolution,preferredResolutions,currentResolution,time,sdkUrl,Hls,videoElement;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$props=_this.props,setSupportedResolutions=_this$props.setSupportedResolutions,setMediaType=_this$props.setMediaType,setCurrentResolution=_this$props.setCurrentResolution,preferredResolutions=_this$props.preferredResolutions,currentResolution=_this$props.currentResolution,time=_this$props.time;sdkUrl=_this.isSafari()?HLS_SDK_URL_SAFARI:HLS_SDK_URL;//https://github.com/video-dev/hls.js/issues/1543\n_context.next=4;return getSDK(sdkUrl,'Hls');case 4:Hls=_context.sent;if(Hls.isSupported()){_context.next=7;break;}return _context.abrupt(\"return\",setMediaType&&setMediaType(MediaTypes.MP4));case 7:_this.Hls=Hls;_this.hls=new Hls({autoStartLoad:false});_this.hls.loadSource(source);videoElement=document.getElementById('video-element');_this.hls.attachMedia(videoElement);_this.hls.on(Hls.Events.MANIFEST_PARSED,function(event,data){_this.hls.startLoad(time||0);var autoLevel={height:'Auto',index:-1};var supportedResolutions=data.levels.map(function(r){return{width:r.width,height:r.height,index:data.levels.indexOf(r)};});setSupportedResolutions&&setSupportedResolutions(supportedResolutions.concat(autoLevel));var preferredResolution=preferredResolutions.hls?preferredResolutions.hls:null;var newResolution=preferredResolution&&supportedResolutions.find(function(r){return preferredResolution.width===r.width&&preferredResolution.height===r.height;});if(!newResolution){setCurrentResolution&&setCurrentResolution(autoLevel);return;}_this.hls&&(_this.hls.currentLevel=newResolution.index);var resolutionShouldChange=newResolution!==currentResolution;resolutionShouldChange&&setCurrentResolution&&setCurrentResolution(newResolution);});_this.hls.on(Hls.Events.ERROR,_this.handleHlsError.bind(_assertThisInitialized(_this)));_this.hls.on(Hls.Events.MEDIA_ATTACHED,function(event,data){_this.setState({hlsPlaying:true});});case 15:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onHlsLevelChange=function(_ref2){var height=_ref2.height,index=_ref2.index;var _this$props2=_this.props,currentResolution=_this$props2.currentResolution,setCurrentResolution=_this$props2.setCurrentResolution;if(height===currentResolution.height){return;}_this.hls&&(_this.hls.currentLevel=index);setCurrentResolution&&setCurrentResolution({height:height,index:index});};_this.requestNewUrls=function(){var _this$props3=_this.props,setLoading=_this$props3.setLoading,requestUrls=_this$props3.requestUrls;requestUrls&&requestUrls(true);setLoading&&setLoading(true);};_this.onMediaTypeChange=function(newMediaType){var _this$props4=_this.props,setSupportedResolutions=_this$props4.setSupportedResolutions,setCurrentResolution=_this$props4.setCurrentResolution,preferredResolutions=_this$props4.preferredResolutions;console.log(\"Mediatype: \",newMediaType);if(newMediaType!==MediaTypes.HLS){setSupportedResolutions&&setSupportedResolutions(DefaultResolutions[newMediaType]);var resolution=preferredResolutions&&preferredResolutions[newMediaType];setCurrentResolution&&setCurrentResolution(resolution);}if(newMediaType===MediaTypes.WEBM||newMediaType===MediaTypes.MP4){_this.requestNewUrls();}};_this.iosEndFullscreen=function(){_this.props.setFullscreen(FullscreenState.NORMAL);};_this.setVolume=function(percent){var onReady=_this.state.onReady;onReady.then(function(){var player=_this.element.current;player&&percent===0?player.muted=true:player.muted=false;// player.volume is read only on mobile iOS\nplayer&&isFinite(percent)&&(player.volume=percent);});};_this.setPlaybackRate=function(rate){var onReady=_this.state.onReady;onReady.then(function(){var player=_this.element.current;player&&(player.playbackRate=rate);});};_this.onCaptionUpdate=function(e){e.currentTarget.activeCues&&_this.props.setClosedCaptioningCueList(e.currentTarget.activeCues);};_this.toggleCaptions=function(language){var onReady=_this.state.onReady;onReady.then(function(){var player=_this.element.current;player&&_toConsumableArray(player.textTracks).forEach(function(track){if(track.mode==='showing'&&track.language!==language.code)track.mode='disabled';if(track.language===language.code){track.oncuechange=_this.onCaptionUpdate;track.mode='hidden';}else{track.oncuechange=null;}});});};_this.seekTo=function(amount){var onReady=_this.state.onReady;onReady.then(function(){var player=_this.element.current;player&&(player.currentTime=amount);});};_this.onRateChange=function(rate){var player=_this.element.current;player&&_this.setState({reportedPlaybackRate:player.playbackRate});};_this.onVolumeChange=function(rate){var player=_this.element.current;player&&_this.setState({reportedVolume:player.volume});};_this.onPlay=function(){var setPlaying=_this.props.setPlaying;// const { isStagingEnv, urls, currentUrlIndex, userId } = this.props\n_this.setState({isPlaying:true});// const currentUrl = urls[currentUrlIndex || 0]\n// // sendPlaySuccessEvent(currentUrl, isStagingEnv, userId)\nsetPlaying&&setPlaying(true);_this.updateProgress();};_this.onPause=function(){var setPlaying=_this.props.setPlaying;_this.setState({isPlaying:false});setPlaying&&setPlaying(false);};_this.onCanPlay=function(){var _this$props5=_this.props,setBuffering=_this$props5.setBuffering,buffering=_this$props5.buffering,loading=_this$props5.loading,setLoading=_this$props5.setLoading,adobeHeartbeat=_this$props5.adobeHeartbeat;_this.setState({canPlay:true});if(loading)setLoading&&setLoading(false);if(buffering){setBuffering&&setBuffering(false);//adobeHeartbeat && adobeHeartbeat.trackBufferComplete()\n}};_this.onLoadedData=function(){var _this$props6=_this.props,setBuffering=_this$props6.setBuffering,buffering=_this$props6.buffering,setOverlay=_this$props6.setOverlay,adobeHeartbeat=_this$props6.adobeHeartbeat;var onReady=_this.state.onReady;if(!buffering){_this.setState({isBuffering:true});setBuffering&&setBuffering(true);}setOverlay&&setOverlay(null);onReady.then(function(){var player=_this.element.current;//adobeHeartbeat && adobeHeartbeat.initHeartbeat(player.duration)\n});};_this.onEnded=function(e){// const { adobeHeartbeat, clipCompletedCallback, end, nextCallback, pause, userAutoplaySetting, clipId } = this.props\n// end && end()\n_pause&&_pause(false);// adobeHeartbeat && adobeHeartbeat.trackComplete()\n// clipCompletedCallback && clipCompletedCallback(e)\n// userAutoplaySetting && nextCallback && nextCallback(e)\n};_this.updateTracks=function(videoElement){// const { closedCaptioningLanguage, closedCaptioningEnabled, setClosedCaptioningCueList } = this.props\n// const tracks = videoElement && videoElement.textTracks\n// tracks &&\n//   Object.values(tracks).forEach((track) => {\n//     const isActive = closedCaptioningEnabled && track.language === closedCaptioningLanguage.code\n//     if (isActive) {\n//       track.mode = 'hidden'\n//       videoElement.textTracks[0].mode = 'hidden' // Firefox\n//       track.oncuechange = (e) => {\n//         e.currentTarget.activeCues && setClosedCaptioningCueList(e.currentTarget.activeCues)\n//       }\n//     } else {\n//       track.mode = 'disabled'\n//     }\n//   })\n};_this.onLoadedMetadata=function(){var _this$props7=_this.props,ready=_this$props7.ready,registerPlayer=_this$props7.registerPlayer;_this.ready();var duration=_this.getDuration();ready&&ready(duration);var videoElement=document.getElementById('video-element');registerPlayer&&registerPlayer(videoElement);// this.updateTracks(videoElement)\n};_this.getSrc=function(_ref3){var currentUrlIndex=_ref3.currentUrlIndex,urls=_ref3.urls;// return currentUrlIndex !== null && urls && urls.length > 0 ? urls[currentUrlIndex].url : null\nvar source=\"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\";return source;};_this.onSeeking=function(){// const { adobeHeartbeat } = this.props\n// adobeHeartbeat && adobeHeartbeat.trackSeekStart()\n};_this.onSeeked=function(){// const { adobeHeartbeat } = this.props\n// adobeHeartbeat && adobeHeartbeat.trackSeekComplete()\n};_this.updateProgress=function(){var _this$props8=_this.props,clipId=_this$props8.clipId,setTime=_this$props8.setTime,playing=_this$props8.playing;if(!playing)return;var reportedTime=_this.getPlayedSeconds();setTime&&setTime(reportedTime);// reportedTime > 0 && this.throttledSetClipProgress({clipId, videoSecondsWatched: reportedTime })\n_this.progressTimeout=setTimeout(_this.updateProgress,50);};_this.onProgress=function(){var setBufferedTime=_this.props.setBufferedTime;var bufferedTime=_this.getSecondsLoaded();setBufferedTime&&setBufferedTime(bufferedTime);};_this.onWaiting=function(){var _this$props9=_this.props,adobeHeartbeat=_this$props9.adobeHeartbeat,setBuffering=_this$props9.setBuffering;//adobeHeartbeat && adobeHeartbeat.trackBufferStart()\nsetBuffering&&setBuffering(true);};_this.state=_objectSpread(_objectSpread({},initialState),{},{clipId:props.clipId,onReady:_this.newReadyPromise(),hlsPlaying:false,videoSrc:null});_this.element=/*#__PURE__*/React.createRef();return _this;}_createClass(Video,[{key:\"componentDidMount\",value:function componentDidMount(){var _this$props10=this.props,playing=_this$props10.playing,volume=_this$props10.volume,muted=_this$props10.muted,playbackRate=_this$props10.playbackRate,time=_this$props10.time,closedCaptioningEnabled=_this$props10.closedCaptioningEnabled,closedCaptioningLanguage=_this$props10.closedCaptioningLanguage,mediaType=_this$props10.mediaType,userAutoplaySetting=_this$props10.userAutoplaySetting,setClipProgress=_this$props10.setClipProgress;this.throttledSetClipProgress=throttle(setClipProgress,1000);var src=this.getSrc(this.props);if(muted||volume!==null){volume&&this.setVolume(muted?0:volume);}if(playbackRate){this.setPlaybackRate(playbackRate);}if(time){this.seekTo(time);}if(closedCaptioningEnabled){this.toggleCaptions(closedCaptioningLanguage);}if(src){this.maybeStartHls(src,mediaType);}this.onMediaTypeChange(mediaType);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.destroyHls();clearTimeout(this.progressTimeout);}},{key:\"maybeStartHls\",value:function maybeStartHls(source,mediaType){var setMediaType=this.props.setMediaType;var hlsPlaying=this.state.hlsPlaying;var isHlsSource=this.isHlsSource(source);var shouldPlayHls=mediaType===MediaTypes.HLS&&isHlsSource;if(hlsPlaying)this.destroyHls();if(shouldPlayHls){this.startHls(source);}if(mediaType===MediaTypes.HLS&&!shouldPlayHls){setMediaType&&setMediaType(MediaTypes.MP4);}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this$props11=this.props,adobeHeartbeat=_this$props11.adobeHeartbeat,clipId=_this$props11.clipId,closedCaptioningEnabled=_this$props11.closedCaptioningEnabled,closedCaptioningLanguage=_this$props11.closedCaptioningLanguage,currentUrlIndex=_this$props11.currentUrlIndex,mediaType=_this$props11.mediaType,currentResolution=_this$props11.currentResolution,setClosedCaptioningCueList=_this$props11.setClosedCaptioningCueList;var _this$state=this.state,reportedPlaybackRate=_this$state.reportedPlaybackRate,reportedVolume=_this$state.reportedVolume,ready=_this$state.ready,isPlaying=_this$state.isPlaying,hlsPlaying=_this$state.hlsPlaying;var newSource=this.getSrc(nextProps);// Handle URL change\nvar sourceDidChange=currentUrlIndex!==nextProps.currentUrlIndex||clipId!==nextProps.clipId||mediaType!==nextProps.mediaType||this.getSrc(this.props)!==newSource;var captionsDidChange=nextProps.closedCaptioningEnabled!==closedCaptioningEnabled||nextProps.closedCaptioningLanguage!==closedCaptioningLanguage;var resolutionDidChange=nextProps.currentResolution!==currentResolution;var mediaTypeDidChange=mediaType&&mediaType!==nextProps.mediaType;if(mediaTypeDidChange)this.onMediaTypeChange(nextProps.mediaType);if(sourceDidChange&&newSource){setClosedCaptioningCueList&&setClosedCaptioningCueList(null);this.maybeStartHls(newSource,mediaType);}if(sourceDidChange&&ready){this.setState({onReady:this.newReadyPromise(),ready:false,reportedVolume:null,reportedPlaybackRate:null,isPlaying:null},function(){adobeHeartbeat&&adobeHeartbeat.trackComplete();});}if(!ready){return;}// Handle playing change\nif(nextProps.playing&&!isPlaying){this.play(true);}if(!nextProps.playing&&isPlaying){this.pause(true);}// Handle volume change\nif(nextProps.volume!==null||nextProps.muted){if(!nextProps.muted){if(nextProps.volume!==reportedVolume){this.setVolume(nextProps.volume);}}if(nextProps.muted&&reportedVolume!==0){this.setVolume(0);}}if(nextProps.playbackRate!==reportedPlaybackRate){this.setPlaybackRate(nextProps.playbackRate);}// Handle time change\nvar timeDelta=Math.abs(nextProps.time-this.getPlayedSeconds());if(timeDelta>=1){this.seekTo(nextProps.time);}if(captionsDidChange){this.toggleCaptions(nextProps.closedCaptioningLanguage);}if(resolutionDidChange&&hlsPlaying)this.onHlsLevelChange(nextProps.currentResolution);}},{key:\"connectIosFullscreenExit\",value:function connectIosFullscreenExit(){var _this2=this;var onReady=this.state.onReady;onReady.then(function(){var player=_this2.element.current;if(player.webkitExitFullscreen){player.addEventListener('webkitendfullscreen',_this2.iosEndFullscreen,false);}});}//#region Player API\n},{key:\"play\",value:function play(){var _this3=this;var onReady=this.state.onReady;onReady.then(function(){//   const { adobeHeartbeat, clipId, title } = this.props\nvar player=_this3.element.current;if(player){var promise=player.play(Truncate);// adobeHeartbeat && adobeHeartbeat.trackPlay()\nif(promise){promise.catch(function(e){var _this3$props=_this3.props,onError=_this3$props.onError,pause=_this3$props.pause;pause&&pause(false);onError&&onError(e);});}}});}},{key:\"pause\",value:function pause(){var _this4=this;var onReady=this.state.onReady;var _this$props12=this.props,adobeHeartbeat=_this$props12.adobeHeartbeat,onPause=_this$props12.onPause;onReady.then(function(){var player=_this4.element.current;player&&player.pause();//   adobeHeartbeat && adobeHeartbeat.trackPause()\nonPause&&onPause();});}},{key:\"getDuration\",value:function getDuration(){var player=this.element.current;return player?player.duration:0;}},{key:\"getPlayedSeconds\",value:function getPlayedSeconds(){var player=this.element.current;return player?player.currentTime:0;}},{key:\"getSecondsLoaded\",value:function getSecondsLoaded(){var player=this.element.current;if(!player){return 0;}var bufferedLength=player.buffered.length;if(bufferedLength===0)return 0;var maxBuffered=0,currentBuffered;for(var i=0;i<bufferedLength;i++){currentBuffered=player.buffered.end(i);maxBuffered=currentBuffered>maxBuffered?currentBuffered:maxBuffered;}return maxBuffered;}//#endregion\n},{key:\"renderTrack\",value:function renderTrack(language){// const { clipId, versionId } = this.props\n// return (\n//   <track\n//     key={language.code}\n//     label={language.name}\n//     kind=\"captions\"\n//     srcLang={language.code}\n//     src={\"\"}\n//   />\n// )\n}},{key:\"handleHlsError\",value:function handleHlsError(event,data){// const { onVideoError } = this.props\n// if (data.fatal) {\n//   switch (data.type) {\n//     case this.Hls.ErrorTypes.MEDIA_ERROR:\n//       this.hls.recoverMediaError()\n//       break\n//     default:\n//       this.destroyHls()\n//       onVideoError && onVideoError(mapHlsError(data), 'handleHlsError')\n//       break\n//   }\n// }\n}},{key:\"render\",value:function render(){// const { onVideoError, versionId, closedCaptioningLanguage, mediaType } = this.props\nvar _this$props13=this.props,playbackRate=_this$props13.playbackRate,mediaType=_this$props13.mediaType,supportedResolutions=_this$props13.supportedResolutions,buffering=_this$props13.buffering,loading=_this$props13.loading;var source=this.getSrc(this.props);//let source = \"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\";\nif(!source){return/*#__PURE__*/_jsx(\"div\",{className:css.video});}if(mediaType===MediaTypes.HLS)source=undefined;return/*#__PURE__*/_jsx(\"video\",{id:\"video-element\",className:css.video,ref:this.element,src:source,preload:\"auto\",playsInline:true,controls:false,loop:false,onLoadedMetadata:this.onLoadedMetadata,onLoadedData:this.onLoadedData,onCanPlay:this.onCanPlay,onPlay:this.onPlay,onSeeking:this.onSeeking,onSeeked:this.onSeeked,onPause:this.onPause// onEnded={this.onEnded}\n,onVolumeChange:this.onVolumeChange,onRateChange:this.onRateChange,onWaiting:this.onWaiting,onProgress:this.onProgress// onError={(e) => {\n//   const { current: player } = this.element\n//   onVideoError && onVideoError(mapGenericVideoError(player.error), 'videoElement.onError')\n// }}\n},source);}}]);return Video;}(Component);var mapStateToProps=function mapStateToProps(state){return{playing:state.player.playing,playbackRate:state.player.playbackSpeed,volume:state.player.volume,buffering:state.player.buffering,loading:state.player.loading,muted:state.player.muted,time:state.player.time,mediaType:state.player.mediaType,overlay:state.player.overlay,currentResolution:state.player.currentResolution,supportedResolutions:state.player.supportedResolutions,preferredResolutions:state.player.preferredResolutions};};var mapDispatchToProps=function mapDispatchToProps(dispatch){var _ref4;return _ref4={setVolume:function setVolume(payload){return dispatch(_setVolume(payload));},setDuration:function setDuration(payload){return dispatch(_setVolume(payload));},setTime:function setTime(payload){return dispatch(_setTime(payload));},setBufferedTime:function setBufferedTime(payload){return dispatch(_setBufferedTime(payload));},ready:function ready(payload){return dispatch(_ready(payload));},seekEnd:function seekEnd(payload){return dispatch(_seekEnd(payload));},seekStart:function seekStart(payload){return dispatch(_seekStart(payload));},play:function play(payload){return dispatch(_play(payload));},pause:function pause(payload){return dispatch(_pause(payload));}},_defineProperty(_ref4,\"setBufferedTime\",function setBufferedTime(payload){return dispatch(_setBufferedTime(payload));}),_defineProperty(_ref4,\"setBuffering\",function setBuffering(payload){return dispatch(_setBuffering(payload));}),_defineProperty(_ref4,\"setOverlay\",function setOverlay(payload){return dispatch(_setOverlay(payload));}),_defineProperty(_ref4,\"setFullscreen\",function setFullscreen(payload){return dispatch(_setFullscreen(payload));}),_defineProperty(_ref4,\"setLoading\",function setLoading(payload){return dispatch(_setLoading(payload));}),_defineProperty(_ref4,\"setPlaying\",function setPlaying(payload){return dispatch(_setPlaying(payload));}),_defineProperty(_ref4,\"setAutoplay\",function setAutoplay(payload){return dispatch(_setAutoplay(payload));}),_defineProperty(_ref4,\"setMediaType\",function setMediaType(payload){return dispatch(_setMediaType(payload));}),_defineProperty(_ref4,\"setCurrentResolution\",function setCurrentResolution(payload){return dispatch(_setCurrentResolution(payload));}),_defineProperty(_ref4,\"setPreferredResolutions\",function setPreferredResolutions(payload){return dispatch(_setPreferredResolutions(payload));}),_defineProperty(_ref4,\"setSupportedResolutions\",function setSupportedResolutions(payload){return dispatch(_setSupportedResolutions(payload));}),_ref4;};export default connect(mapStateToProps,mapDispatchToProps)(Video);// export default withAdobeHeartbeat(\n//   connect(\n//     (state) => ({\n//       userAutoplaySetting: state.userAutoplaySetting,\n//       buffering: state.buffering,\n//       clipCompletedCallback: state.clipCompletedCallback,\n//       clipId: state.clipId,\n//       versionId: state.versionId,\n//       closedCaptioningEnabled: state.closedCaptioningEnabled,\n//       closedCaptioningLanguage: state.closedCaptioningLanguage,\n//       currentResolution: state.currentResolution,\n//       currentUrlIndex: state.currentUrlIndex,\n//       loading: state.loading,\n//       muted: state.muted,\n//       nextCallback: state.nextCallback,\n//       resolution: state.resolutionValue,\n//       playbackRate: state.playbackSpeed,\n//       playing: state.playing,\n//       poster: state.poster,\n//       time: state.time,\n//       title: state.title,\n//       urls: state.urls,\n//       userId: state.userId,\n//       version: state.versions ? state.versions.VERSION : '0.0.0',\n//       volume: state.volume,\n//       mediaType: state.mediaType,\n//       preferredResolutions: state.preferredResolutions,\n//       overlay: state.overlay,\n//       isStagingEnv: state.isStagingEnv,\n//       autoPlay: state.autoPlay,\n//     }),\n//     (store) => ({\n//       registerPlayer: actions.registerPlayer,\n//       seekStart: actions.seekStart,\n//       onVideoError: actions.onVideoError,\n//       setBuffering: actions.setBuffering,\n//       setLoading: actions.setLoading,\n//       setMediaType: actions.setMediaType,\n//       setLoading: actions.setLoading,\n//       setCurrentResolution: actions.setCurrentResolution,\n//       setSupportedResolutions: actions.setSupportedResolutions,\n//       requestUrls: actions.requestUrls,\n//       end: actions.end,\n//       ready: actions.ready,\n//       pause: actions.pause,\n//       play: actions.play,\n//       setClosedCaptioningCueList: actions.setClosedCaptioningCueList,\n//       setFullscreen: actions.setFullscreen,\n//       setOverlay: actions.setOverlay,\n//       setClipProgress: actions.setClipProgress,\n//       setPlaying: actions.setPlaying,\n//       setBufferedTime: actions.setBufferedTime,\n//       setDuration: actions.setDuration,\n//       setTime: actions.setTime,\n//     })\n//   )(Video)\n// )","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/video/video.js"],"names":["React","Component","connect","play","pause","setVolume","setDuration","setTime","ready","seekEnd","seekStart","registerPlayer","setBufferedTime","setMediaType","setOverlay","setBuffering","setFullscreen","setLoading","setAutoplay","setPlaying","setCurrentResolution","setPreferredResolutions","setSupportedResolutions","css","DefaultResolutions","FullscreenState","HLS_SDK_URL","HLS_SDK_URL_SAFARI","MediaTypes","getSDK","throttle","mapHlsError","mapGenericVideoError","Truncate","HLS_EXTENSIONS","initialState","isPlaying","reportedVolume","reportedPlaybackRate","isBuffering","canPlay","Video","props","newReadyPromise","Promise","resolve","setState","isSafari","navigator","vendor","match","isHlsSource","source","test","destroyHls","hlsPlaying","hls","destroy","startHls","preferredResolutions","currentResolution","time","sdkUrl","Hls","isSupported","MP4","autoStartLoad","loadSource","videoElement","document","getElementById","attachMedia","on","Events","MANIFEST_PARSED","event","data","startLoad","autoLevel","height","index","supportedResolutions","levels","map","r","width","indexOf","concat","preferredResolution","newResolution","find","currentLevel","resolutionShouldChange","ERROR","handleHlsError","bind","MEDIA_ATTACHED","onHlsLevelChange","requestNewUrls","requestUrls","onMediaTypeChange","newMediaType","console","log","HLS","resolution","WEBM","iosEndFullscreen","NORMAL","percent","onReady","state","then","player","element","current","muted","isFinite","volume","setPlaybackRate","rate","playbackRate","onCaptionUpdate","e","currentTarget","activeCues","setClosedCaptioningCueList","toggleCaptions","language","textTracks","forEach","track","mode","code","oncuechange","seekTo","amount","currentTime","onRateChange","onVolumeChange","onPlay","updateProgress","onPause","onCanPlay","buffering","loading","adobeHeartbeat","onLoadedData","onEnded","updateTracks","onLoadedMetadata","duration","getDuration","getSrc","currentUrlIndex","urls","onSeeking","onSeeked","clipId","playing","reportedTime","getPlayedSeconds","progressTimeout","setTimeout","onProgress","bufferedTime","getSecondsLoaded","onWaiting","videoSrc","createRef","closedCaptioningEnabled","closedCaptioningLanguage","mediaType","userAutoplaySetting","setClipProgress","throttledSetClipProgress","src","maybeStartHls","clearTimeout","shouldPlayHls","nextProps","newSource","sourceDidChange","captionsDidChange","resolutionDidChange","mediaTypeDidChange","trackComplete","timeDelta","Math","abs","webkitExitFullscreen","addEventListener","promise","catch","onError","bufferedLength","buffered","length","maxBuffered","currentBuffered","i","end","video","undefined","mapStateToProps","playbackSpeed","overlay","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {play, pause, setVolume, setDuration,setTime, ready, seekEnd, seekStart,\n     registerPlayer, setBufferedTime,setMediaType, setOverlay, setBuffering, setFullscreen, setLoading, setAutoplay, setPlaying, setCurrentResolution, setPreferredResolutions, setSupportedResolutions } from 'state/player/playerSlice';\nimport css from './video.module.css'\n\n\nimport { DefaultResolutions } from '../constants'\n\n// import withAdobeHeartbeat from './with-adobe-heartbeat'\n\n\nimport { FullscreenState, HLS_SDK_URL, HLS_SDK_URL_SAFARI, MediaTypes } from '../constants'\nimport { getSDK } from '../utilities/get-sdk';\nimport { throttle } from '../utilities/throttle';\n// import { sendPlaySuccessEvent } from '../../analytics/player-events'\nimport { mapHlsError, mapGenericVideoError } from '../utilities/video-error'\nimport { Truncate } from '@codecademy/gamut';\n\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i\nconst initialState = {\n  isPlaying: false,\n  reportedVolume: null,\n  reportedPlaybackRate: 1,\n  isBuffering: false,\n  canPlay: false,\n  ready: true,\n}\n\nexport class Video extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ...initialState,\n      clipId: props.clipId,\n      onReady: this.newReadyPromise(),\n      hlsPlaying: false,\n      videoSrc: null,\n    }\n\n    this.element = React.createRef()\n  }\n\n  newReadyPromise = () => {\n    return new Promise((resolve) => {\n      this.ready = () => {\n        this.setState({ ready: true }, () => {\n          resolve()\n        })\n      }\n    })\n  }\n\n  isSafari = () => navigator.vendor.match(/apple/i)\n\n  componentDidMount() {\n    const {\n      playing,\n      volume,\n      muted,\n      playbackRate,\n      time,\n      closedCaptioningEnabled,\n      closedCaptioningLanguage,\n      mediaType,\n      userAutoplaySetting,\n      setClipProgress,\n    } = this.props\n    this.throttledSetClipProgress = throttle(setClipProgress, 1000)\n    const src = this.getSrc(this.props)\n\n    if (muted || volume !== null) {\n      volume && this.setVolume(muted ? 0 : volume)\n    }\n\n    if (playbackRate) {\n      this.setPlaybackRate(playbackRate)\n    }\n\n    if (time) {\n      this.seekTo(time)\n    }\n\n    if (closedCaptioningEnabled) {\n      this.toggleCaptions(closedCaptioningLanguage)\n    }\n\n    if (src) {\n      this.maybeStartHls(src, mediaType)\n    }\n    this.onMediaTypeChange(mediaType)\n  }\n\n  componentWillUnmount() {\n    this.destroyHls()\n    clearTimeout(this.progressTimeout)\n  }\n\n  maybeStartHls(source, mediaType) {\n    const { setMediaType } = this.props\n    const { hlsPlaying } = this.state\n    const isHlsSource = this.isHlsSource(source)\n    const shouldPlayHls = mediaType === MediaTypes.HLS && isHlsSource\n\n    if (hlsPlaying) this.destroyHls()\n\n    if (shouldPlayHls) {\n      this.startHls(source)\n    }\n\n    if (mediaType === MediaTypes.HLS && !shouldPlayHls) {\n      setMediaType && setMediaType(MediaTypes.MP4)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      adobeHeartbeat,\n      clipId,\n      closedCaptioningEnabled,\n      closedCaptioningLanguage,\n      currentUrlIndex,\n      mediaType,\n      currentResolution,\n      setClosedCaptioningCueList,\n    } = this.props\n    const { reportedPlaybackRate, reportedVolume, ready, isPlaying, hlsPlaying } = this.state\n\n    const newSource = this.getSrc(nextProps)\n\n    // Handle URL change\n    const sourceDidChange =\n      currentUrlIndex !== nextProps.currentUrlIndex ||\n      clipId !== nextProps.clipId ||\n      mediaType !== nextProps.mediaType ||\n      this.getSrc(this.props) !== newSource\n\n    const captionsDidChange =\n      nextProps.closedCaptioningEnabled !== closedCaptioningEnabled ||\n      nextProps.closedCaptioningLanguage !== closedCaptioningLanguage\n\n    const resolutionDidChange = nextProps.currentResolution !== currentResolution\n\n    const mediaTypeDidChange = mediaType && mediaType !== nextProps.mediaType\n\n    if (mediaTypeDidChange) this.onMediaTypeChange(nextProps.mediaType)\n\n    if (sourceDidChange && newSource) {\n      setClosedCaptioningCueList && setClosedCaptioningCueList(null)\n      this.maybeStartHls(newSource, mediaType)\n    }\n\n    if (sourceDidChange && ready) {\n      this.setState(\n        {\n          onReady: this.newReadyPromise(),\n          ready: false,\n          reportedVolume: null,\n          reportedPlaybackRate: null,\n          isPlaying: null,\n        },\n        () => {\n          adobeHeartbeat && adobeHeartbeat.trackComplete()\n        }\n      )\n    }\n   \n    if (!ready) {\n      return\n    }\n  \n    // Handle playing change\n    if (nextProps.playing && !isPlaying) {\n       \n      this.play(true)\n    }\n    if (!nextProps.playing && isPlaying) {\n      this.pause(true)\n    }\n\n    // Handle volume change\n    if (nextProps.volume !== null || nextProps.muted) {\n      if (!nextProps.muted) {\n        if (nextProps.volume !== reportedVolume) {\n          this.setVolume(nextProps.volume)\n        }\n      }\n\n      if (nextProps.muted && reportedVolume !== 0) {\n        this.setVolume(0)\n      }\n    }\n\n  \n    if (nextProps.playbackRate !== reportedPlaybackRate) {\n      this.setPlaybackRate(nextProps.playbackRate)\n    }\n\n    // Handle time change\n    const timeDelta = Math.abs(nextProps.time - this.getPlayedSeconds())\n    \n    if (timeDelta >= 1) {\n      this.seekTo(nextProps.time)\n    }\n\n    if (captionsDidChange) {\n      this.toggleCaptions(nextProps.closedCaptioningLanguage)\n    }\n\n    if (resolutionDidChange && hlsPlaying) this.onHlsLevelChange(nextProps.currentResolution)\n  }\n\n  isHlsSource = (source) => HLS_EXTENSIONS.test(source)\n\n  destroyHls = () => {\n    this.setState({ hlsPlaying: false })\n    this.hls && this.hls.destroy()\n  }\n\n  startHls = async (source) => {\n    const {\n      setSupportedResolutions,\n      setMediaType,\n      setCurrentResolution,\n      preferredResolutions,\n      currentResolution,\n      time,\n    } = this.props\n    const sdkUrl = this.isSafari() ? HLS_SDK_URL_SAFARI : HLS_SDK_URL //https://github.com/video-dev/hls.js/issues/1543\n    const Hls = await getSDK(sdkUrl, 'Hls')\n    if (!Hls.isSupported()) return setMediaType && setMediaType(MediaTypes.MP4)\n    this.Hls = Hls\n\n    this.hls = new Hls({ autoStartLoad: false })\n    this.hls.loadSource(source)\n\n    const videoElement = document.getElementById('video-element')\n    this.hls.attachMedia(videoElement)\n\n    this.hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n      this.hls.startLoad(time || 0)\n      const autoLevel = { height: 'Auto', index: -1 }\n      const supportedResolutions = data.levels.map((r) => ({\n        width: r.width,\n        height: r.height,\n        index: data.levels.indexOf(r),\n      }))\n      setSupportedResolutions && setSupportedResolutions(supportedResolutions.concat(autoLevel))\n\n      const preferredResolution = preferredResolutions.hls ? preferredResolutions.hls : null\n      const newResolution =\n        preferredResolution &&\n        supportedResolutions.find(\n          (r) => preferredResolution.width === r.width && preferredResolution.height === r.height\n        )\n\n      if (!newResolution) {\n        setCurrentResolution && setCurrentResolution(autoLevel)\n        return\n      }\n\n      this.hls && (this.hls.currentLevel = newResolution.index)\n      const resolutionShouldChange = newResolution !== currentResolution\n      resolutionShouldChange && setCurrentResolution && setCurrentResolution(newResolution)\n    })\n    this.hls.on(Hls.Events.ERROR, this.handleHlsError.bind(this))\n    this.hls.on(Hls.Events.MEDIA_ATTACHED, (event, data) => {\n      this.setState({ hlsPlaying: true })\n    })\n  }\n\n  onHlsLevelChange = ({ height, index }) => {\n    const { currentResolution, setCurrentResolution } = this.props\n\n    if (height === currentResolution.height) {\n      return\n    }\n    this.hls && (this.hls.currentLevel = index)\n    setCurrentResolution && setCurrentResolution({ height, index })\n  }\n\n  requestNewUrls = () => {\n    const { setLoading, requestUrls } = this.props\n    requestUrls && requestUrls(true)\n    setLoading && setLoading(true)\n  }\n\n  onMediaTypeChange = (newMediaType) => {\n    const { setSupportedResolutions, setCurrentResolution, preferredResolutions } = this.props\n    console.log(\"Mediatype: \", newMediaType)\n    if (newMediaType !== MediaTypes.HLS) {\n      setSupportedResolutions && setSupportedResolutions(DefaultResolutions[newMediaType])\n\n      const resolution = preferredResolutions && preferredResolutions[newMediaType]\n      setCurrentResolution && setCurrentResolution(resolution)\n    }\n\n    if (newMediaType === MediaTypes.WEBM || newMediaType === MediaTypes.MP4) {\n      this.requestNewUrls()\n    }\n  }\n\n  iosEndFullscreen = () => {\n    this.props.setFullscreen(FullscreenState.NORMAL)\n  }\n\n  connectIosFullscreenExit() {\n    const { onReady } = this.state\n    onReady.then(() => {\n      const { current: player } = this.element\n      if (player.webkitExitFullscreen) {\n        player.addEventListener('webkitendfullscreen', this.iosEndFullscreen, false)\n      }\n    })\n  }\n\n  //#region Player API\n  play() {\n    const { onReady } = this.state\n\n    onReady.then(() => {\n    //   const { adobeHeartbeat, clipId, title } = this.props\n      const { current: player } = this.element\n\n      if (player) {\n        const promise = player.play(Truncate)\n\n        // adobeHeartbeat && adobeHeartbeat.trackPlay()\n\n        if (promise) {\n          promise.catch((e) => {\n            const { onError, pause } = this.props\n            pause && pause(false)\n\n            onError && onError(e)\n          })\n        }\n      }\n    })\n  }\n\n  pause() {\n    const { onReady } = this.state\n    const { adobeHeartbeat, onPause } = this.props\n\n    onReady.then(() => {\n      const { current: player } = this.element\n\n      player && player.pause()\n\n    //   adobeHeartbeat && adobeHeartbeat.trackPause()\n\n      onPause && onPause()\n    })\n  }\n\n  setVolume = (percent) => {\n    const { onReady } = this.state\n\n    onReady.then(() => {\n      const { current: player } = this.element\n      player && percent === 0 ? (player.muted = true) : (player.muted = false) // player.volume is read only on mobile iOS\n      player && isFinite(percent) && (player.volume = percent)\n    })\n  }\n\n  setPlaybackRate = (rate) => {\n    const { onReady } = this.state\n\n    onReady.then(() => {\n      const { current: player } = this.element\n\n      player && (player.playbackRate = rate)\n    })\n  }\n\n  onCaptionUpdate = (e) => {\n    e.currentTarget.activeCues && this.props.setClosedCaptioningCueList(e.currentTarget.activeCues)\n  }\n\n  toggleCaptions = (language) => {\n    const { onReady } = this.state\n\n    onReady.then(() => {\n      const { current: player } = this.element\n\n      player &&\n        [...player.textTracks].forEach((track) => {\n          if (track.mode === 'showing' && track.language !== language.code) track.mode = 'disabled'\n\n          if (track.language === language.code) {\n            track.oncuechange = this.onCaptionUpdate\n            track.mode = 'hidden'\n          } else {\n            track.oncuechange = null\n          }\n        })\n    })\n  }\n\n  seekTo = (amount) => {\n    const { onReady } = this.state\n\n    onReady.then(() => {\n      const { current: player } = this.element\n\n      player && (player.currentTime = amount)\n    })\n  }\n\n  getDuration() {\n    const { current: player } = this.element\n\n    return player ? player.duration : 0\n  }\n\n  getPlayedSeconds() {\n    const { current: player } = this.element\n\n    return player ? player.currentTime : 0\n  }\n\n  getSecondsLoaded() {\n    const { current: player } = this.element\n\n    if (!player) {\n      return 0\n    }\n\n    const bufferedLength = player.buffered.length\n\n    if (bufferedLength === 0) return 0\n\n    let maxBuffered = 0,\n      currentBuffered\n    for (let i = 0; i < bufferedLength; i++) {\n      currentBuffered = player.buffered.end(i)\n      maxBuffered = currentBuffered > maxBuffered ? currentBuffered : maxBuffered\n    }\n\n    return maxBuffered\n  }\n  //#endregion\n\n  onRateChange = (rate) => {\n    const { current: player } = this.element\n\n    player && this.setState({ reportedPlaybackRate: player.playbackRate })\n  }\n\n  onVolumeChange = (rate) => {\n    const { current: player } = this.element\n\n    player && this.setState({ reportedVolume: player.volume })\n  }\n\n  onPlay = () => {\n    const { setPlaying } = this.props\n    // const { isStagingEnv, urls, currentUrlIndex, userId } = this.props\n    this.setState({ isPlaying: true })\n    // const currentUrl = urls[currentUrlIndex || 0]\n    // // sendPlaySuccessEvent(currentUrl, isStagingEnv, userId)\n    setPlaying && setPlaying(true)\n    this.updateProgress()\n  }\n\n  onPause = () => {\n    const { setPlaying } = this.props\n    this.setState({ isPlaying: false })\n    setPlaying && setPlaying(false)\n  }\n\n  onCanPlay = () => {\n    const { setBuffering, buffering, loading, setLoading, adobeHeartbeat } = this.props\n\n    this.setState({ canPlay: true })\n    if (loading) setLoading && setLoading(false)\n\n    if (buffering) {\n      setBuffering && setBuffering(false)\n      //adobeHeartbeat && adobeHeartbeat.trackBufferComplete()\n    }\n  }\n\n  onLoadedData = () => {\n    const { setBuffering, buffering, setOverlay, adobeHeartbeat } = this.props\n    const { onReady } = this.state\n\n    if (!buffering) {\n      this.setState({ isBuffering: true })\n      setBuffering && setBuffering(true)\n    }\n\n    setOverlay && setOverlay(null)\n\n    onReady.then(() => {\n      const { current: player } = this.element\n      //adobeHeartbeat && adobeHeartbeat.initHeartbeat(player.duration)\n    })\n  }\n\n  onEnded = (e) => {\n    // const { adobeHeartbeat, clipCompletedCallback, end, nextCallback, pause, userAutoplaySetting, clipId } = this.props\n\n    // end && end()\n\n    pause && pause(false)\n\n    // adobeHeartbeat && adobeHeartbeat.trackComplete()\n\n    // clipCompletedCallback && clipCompletedCallback(e)\n\n    // userAutoplaySetting && nextCallback && nextCallback(e)\n  }\n\n  renderTrack(language) {\n    // const { clipId, versionId } = this.props\n    // return (\n    //   <track\n    //     key={language.code}\n    //     label={language.name}\n    //     kind=\"captions\"\n    //     srcLang={language.code}\n    //     src={\"\"}\n    //   />\n    // )\n  }\n\n  updateTracks = (videoElement) => {\n    // const { closedCaptioningLanguage, closedCaptioningEnabled, setClosedCaptioningCueList } = this.props\n    // const tracks = videoElement && videoElement.textTracks\n\n    // tracks &&\n    //   Object.values(tracks).forEach((track) => {\n    //     const isActive = closedCaptioningEnabled && track.language === closedCaptioningLanguage.code\n\n    //     if (isActive) {\n    //       track.mode = 'hidden'\n    //       videoElement.textTracks[0].mode = 'hidden' // Firefox\n    //       track.oncuechange = (e) => {\n    //         e.currentTarget.activeCues && setClosedCaptioningCueList(e.currentTarget.activeCues)\n    //       }\n    //     } else {\n    //       track.mode = 'disabled'\n    //     }\n    //   })\n  }\n\n  onLoadedMetadata = () => {\n    const { ready, registerPlayer } = this.props\n    this.ready()\n\n    const duration = this.getDuration()\n    ready && ready(duration)\n\n    const videoElement = document.getElementById('video-element')\n    registerPlayer && registerPlayer(videoElement)\n    // this.updateTracks(videoElement)\n  }\n\n  getSrc = ({ currentUrlIndex, urls }) => {\n    // return currentUrlIndex !== null && urls && urls.length > 0 ? urls[currentUrlIndex].url : null\n    let source = \"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\";\n    return source;\n  }\n\n  onSeeking = () => {\n    // const { adobeHeartbeat } = this.props\n\n    // adobeHeartbeat && adobeHeartbeat.trackSeekStart()\n  }\n\n  onSeeked = () => {\n    // const { adobeHeartbeat } = this.props\n\n    // adobeHeartbeat && adobeHeartbeat.trackSeekComplete()\n  }\n\n  updateProgress = () => {\n    const { clipId, setTime, playing } = this.props\n    \n    if (!playing) return\n\n    const reportedTime = this.getPlayedSeconds()\n    setTime && setTime(reportedTime)\n    // reportedTime > 0 && this.throttledSetClipProgress({clipId, videoSecondsWatched: reportedTime })\n\n    this.progressTimeout = setTimeout(this.updateProgress, 50)\n  }\n\n  onProgress = () => {\n    const { setBufferedTime } = this.props\n    const bufferedTime = this.getSecondsLoaded()\n\n    setBufferedTime && setBufferedTime(bufferedTime)\n  }\n\n  handleHlsError(event, data) {\n    // const { onVideoError } = this.props\n    // if (data.fatal) {\n    //   switch (data.type) {\n    //     case this.Hls.ErrorTypes.MEDIA_ERROR:\n    //       this.hls.recoverMediaError()\n    //       break\n    //     default:\n    //       this.destroyHls()\n    //       onVideoError && onVideoError(mapHlsError(data), 'handleHlsError')\n    //       break\n    //   }\n    // }\n  }\n\n  onWaiting = () => {\n    const { adobeHeartbeat, setBuffering } = this.props\n    //adobeHeartbeat && adobeHeartbeat.trackBufferStart()\n    setBuffering && setBuffering(true)\n  }\n\n  render() {\n    // const { onVideoError, versionId, closedCaptioningLanguage, mediaType } = this.props\n    const { playbackRate, mediaType,supportedResolutions , buffering, loading} = this.props;\n    \n\n    let source = this.getSrc(this.props)\n    //let source = \"https://archive.org/download/ElephantsDream/ed_1024_512kb.mp4\";\n\n    if (!source) {\n      return <div className={css.video} />\n    }\n\n    if (mediaType === MediaTypes.HLS) source = undefined\n   \n    return (\n      <video\n        id=\"video-element\"\n        key={source}\n        className={css.video}\n        ref={this.element}\n        src={source}\n        preload=\"auto\"\n        playsInline\n        controls={false}\n        loop={false}\n        onLoadedMetadata={this.onLoadedMetadata}\n        onLoadedData={this.onLoadedData}\n        onCanPlay={this.onCanPlay}\n        onPlay={this.onPlay}\n        onSeeking={this.onSeeking}\n        onSeeked={this.onSeeked}\n        onPause={this.onPause}\n        // onEnded={this.onEnded}\n        onVolumeChange={this.onVolumeChange}\n        onRateChange={this.onRateChange}\n        onWaiting={this.onWaiting}\n        onProgress={this.onProgress}\n        // onError={(e) => {\n        //   const { current: player } = this.element\n        //   onVideoError && onVideoError(mapGenericVideoError(player.error), 'videoElement.onError')\n        // }}\n      >\n        {/* {closedCaptioningLanguage && versionId && this.renderTrack(closedCaptioningLanguage)} */}\n      </video>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    playing: state.player.playing,\n    playbackRate: state.player.playbackSpeed,\n    volume: state.player.volume,\n    buffering: state.player.buffering,\n    loading: state.player.loading,\n    muted: state.player.muted,\n    time: state.player.time,\n    mediaType: state.player.mediaType,\n    overlay: state.player.overlay,\n    currentResolution: state.player.currentResolution,\n    supportedResolutions: state.player.supportedResolutions,\n    preferredResolutions: state.player.preferredResolutions,\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setVolume: payload => dispatch(setVolume(payload)),\n    setDuration: payload => dispatch(setVolume(payload)),\n    setTime: payload => dispatch(setTime(payload)),\n    setBufferedTime: payload => dispatch(setBufferedTime(payload)),\n    ready: payload => dispatch(ready(payload)),\n    seekEnd: payload => dispatch(seekEnd(payload)),\n    seekStart: payload => dispatch(seekStart(payload)),\n    play: payload => dispatch(play(payload)),\n    pause: payload => dispatch(pause(payload)),\n    setBufferedTime: payload => dispatch(setBufferedTime(payload)),\n    setBuffering: payload => dispatch(setBuffering(payload)),\n    setOverlay: payload => dispatch(setOverlay(payload)),\n    setFullscreen: payload => dispatch(setFullscreen(payload)),\n    setLoading: payload => dispatch(setLoading(payload)),\n    setPlaying: payload => dispatch(setPlaying(payload)),\n    setAutoplay: payload => dispatch(setAutoplay(payload)),\n    setMediaType: payload => dispatch(setMediaType(payload)),\n    setCurrentResolution: payload => dispatch(setCurrentResolution(payload)),\n    setPreferredResolutions: payload => dispatch(setPreferredResolutions(payload)),\n    setSupportedResolutions: payload => dispatch(setSupportedResolutions(payload)),\n\n   \n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Video);\n\n// export default withAdobeHeartbeat(\n//   connect(\n//     (state) => ({\n//       userAutoplaySetting: state.userAutoplaySetting,\n//       buffering: state.buffering,\n//       clipCompletedCallback: state.clipCompletedCallback,\n//       clipId: state.clipId,\n//       versionId: state.versionId,\n//       closedCaptioningEnabled: state.closedCaptioningEnabled,\n//       closedCaptioningLanguage: state.closedCaptioningLanguage,\n//       currentResolution: state.currentResolution,\n//       currentUrlIndex: state.currentUrlIndex,\n//       loading: state.loading,\n//       muted: state.muted,\n//       nextCallback: state.nextCallback,\n//       resolution: state.resolutionValue,\n//       playbackRate: state.playbackSpeed,\n//       playing: state.playing,\n//       poster: state.poster,\n//       time: state.time,\n//       title: state.title,\n//       urls: state.urls,\n//       userId: state.userId,\n//       version: state.versions ? state.versions.VERSION : '0.0.0',\n//       volume: state.volume,\n//       mediaType: state.mediaType,\n//       preferredResolutions: state.preferredResolutions,\n//       overlay: state.overlay,\n//       isStagingEnv: state.isStagingEnv,\n//       autoPlay: state.autoPlay,\n//     }),\n//     (store) => ({\n//       registerPlayer: actions.registerPlayer,\n//       seekStart: actions.seekStart,\n//       onVideoError: actions.onVideoError,\n//       setBuffering: actions.setBuffering,\n//       setLoading: actions.setLoading,\n//       setMediaType: actions.setMediaType,\n//       setLoading: actions.setLoading,\n//       setCurrentResolution: actions.setCurrentResolution,\n//       setSupportedResolutions: actions.setSupportedResolutions,\n//       requestUrls: actions.requestUrls,\n//       end: actions.end,\n//       ready: actions.ready,\n//       pause: actions.pause,\n//       play: actions.play,\n//       setClosedCaptioningCueList: actions.setClosedCaptioningCueList,\n//       setFullscreen: actions.setFullscreen,\n//       setOverlay: actions.setOverlay,\n//       setClipProgress: actions.setClipProgress,\n//       setPlaying: actions.setPlaying,\n//       setBufferedTime: actions.setBufferedTime,\n//       setDuration: actions.setDuration,\n//       setTime: actions.setTime,\n//     })\n//   )(Video)\n// )\n"]},"metadata":{},"sourceType":"module"}