{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from 'services/courses';\nconst initialState = {\n  course: null\n};\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.co;\n    }).addMatcher(coursesApi.endpoints.updateCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.title = payload.title;\n      state.description = payload.description;\n      state.category = payload.category;\n      state.id = payload.id;\n      state.cover_image = payload.cover_image;\n      state.video_url = payload.video_url;\n      state.level = payload.level;\n      state.tags = payload.tags;\n    }).addMatcher(coursesApi.endpoints.fetchResources.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    }).addMatcher(coursesApi.endpoints.createResource.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    });\n    ;\n    ;\n  }\n});\nexport default courseSlice.reducer;\nexport const selectCourse = state => state.course;\nexport const selectResources = state => state.course.resources;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/course/courseSplice.ts"],"names":["createSlice","coursesApi","initialState","course","courseSlice","name","reducers","extraReducers","builder","addMatcher","endpoints","createCourse","matchFulfilled","state","payload","co","updateCourse","title","description","category","id","cover_image","video_url","level","tags","fetchResources","resources","createResource","reducer","selectCourse","selectResources"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAAwBC,UAAxB,QAAwD,kBAAxD;AAOA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAArB;AACA,MAAMC,WAAW,GAAGJ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAAY,EAAEA,YAFgB;AAG9BI,EAAAA,QAAQ,EAAE,EAHoB;AAM9BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIR,UAAU,CAACS,SAAX,CAAqBC,YAArB,CAAkCC,cAFtC,EAGI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACvBD,MAAAA,KAAK,CAACE,EAAN;AAEA,KANL,EAOIN,UAPJ,CAQIR,UAAU,CAACS,SAAX,CAAqBM,YAArB,CAAkCJ,cARtC,EASI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACI,KAAN,GAAcH,OAAO,CAACG,KAAtB;AACAJ,MAAAA,KAAK,CAACK,WAAN,GAAoBJ,OAAO,CAACI,WAA5B;AACAL,MAAAA,KAAK,CAACM,QAAN,GAAiBL,OAAO,CAACK,QAAzB;AACAN,MAAAA,KAAK,CAACO,EAAN,GAAWN,OAAO,CAACM,EAAnB;AACAP,MAAAA,KAAK,CAACQ,WAAN,GAAoBP,OAAO,CAACO,WAA5B;AACAR,MAAAA,KAAK,CAACS,SAAN,GAAkBR,OAAO,CAACQ,SAA1B;AACAT,MAAAA,KAAK,CAACU,KAAN,GAAcT,OAAO,CAACS,KAAtB;AACAV,MAAAA,KAAK,CAACW,IAAN,GAAaV,OAAO,CAACU,IAArB;AAID,KArBL,EAsBIf,UAtBJ,CAuBIR,UAAU,CAACS,SAAX,CAAqBe,cAArB,CAAoCb,cAvBxC,EAwBI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACa,SAAN,GAAkBZ,OAAlB;AAED,KA3BL,EA4BIL,UA5BJ,CA6BIR,UAAU,CAACS,SAAX,CAAqBiB,cAArB,CAAoCf,cA7BxC,EA8BI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACa,SAAN,GAAkBZ,OAAlB;AAED,KAjCL;AAkCI;AAAC;AACN;AA1C6B,CAAD,CAA/B;AA+CA,eAAeV,WAAW,CAACwB,OAA3B;AAEA,OAAO,MAAMC,YAAY,GAAIhB,KAAD,IAAsBA,KAAK,CAACV,MAAjD;AACP,OAAO,MAAM2B,eAAe,GAAIjB,KAAD,IAAsBA,KAAK,CAACV,MAAN,CAAauB,SAA3D","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport {CourseResponse, coursesApi, MediaResponse} from 'services/courses'\n\n\ntype CourseState = {\n  course: CourseResponse | null\n  resources: MediaResponse[] | []\n};\nconst initialState = { course: null };\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState as CourseState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createCourse.matchFulfilled,\n        (state, { payload }) => {\n         state.co\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.updateCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.title = payload.title;\n          state.description = payload.description;\n          state.category = payload.category;\n          state.id = payload.id;\n          state.cover_image = payload.cover_image\n          state.video_url = payload.video_url\n          state.level = payload.level\n          state.tags = payload.tags\n\n          \n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.fetchResources.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.createResource.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      );;;\n  },\n});\n\n\n\nexport default courseSlice.reducer;\n\nexport const selectCourse = (state: RootState) => state.course;\nexport const selectResources = (state: RootState) => state.course.resources;\n"]},"metadata":{},"sourceType":"module"}