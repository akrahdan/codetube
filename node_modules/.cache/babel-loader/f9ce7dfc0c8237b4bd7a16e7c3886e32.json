{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Dashboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { Courses } from \"./Courses\";\nimport { Communication } from \"./Communication\";\nimport { routesDashboard } from \"portal/routes\";\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { selectLocationPathName } from \"state/location/selectors\";\nimport { selectCurrentPath } from \"state/instructor/instructorSplice\";\nimport { useAppSelector } from \"store/hooks\";\nimport { NavBar } from \"./navbar\";\nimport \"./instructor.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectCurrentPath);\n  const [sideNav, setSideNav] = useState(false);\n  const [perfNav, setPerfNav] = useState(false);\n  const {\n    scene: Scene\n  } = getRouteMetaForLocation(routesDashboard, locationPath);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-frame\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          sideOpen: sideNav,\n          perfOpen: perfNav\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_container\",\n          children: /*#__PURE__*/_jsxDEV(Scene, {\n            sideNavToggle: value => setSideNav(value),\n            perfNavToggle: value => setPerfNav()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"ImZEySD6FoU7Q2cteL9xy7L7WGY=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Dashboard/index.js"],"names":["useState","Sidebar","Courses","Communication","routesDashboard","getRouteMetaForLocation","selectLocationPathName","selectCurrentPath","useAppSelector","NavBar","Dashboard","locationPath","sideNav","setSideNav","perfNav","setPerfNav","scene","Scene","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,uBAAT,QAAwC,uBAAxC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,mBAAP;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,YAAY,GAAGH,cAAc,CAACD,iBAAD,CAAnC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEgB,IAAAA,KAAK,EAAEC;AAAT,MAAmBZ,uBAAuB,CAC9CD,eAD8C,EAE9CO,YAF8C,CAAhD;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAGC,OAApB;AAA6B,UAAA,QAAQ,EAAIE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,aAAa,EAAGI,KAAD,IAAYL,UAAU,CAACK,KAAD,CAA5C;AACC,YAAA,aAAa,EAAGA,KAAD,IAAYH,UAAU;AADtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvBM;;GAAML,S;UACUF,c;;;KADVE,S;AAyBb,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\n\nimport { Sidebar } from \"./Sidebar\";\nimport { Courses } from \"./Courses\";\nimport { Communication } from \"./Communication\";\nimport { routesDashboard } from \"portal/routes\";\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { selectLocationPathName } from \"state/location/selectors\";\nimport { selectCurrentPath } from \"state/instructor/instructorSplice\";\nimport { useAppSelector } from \"store/hooks\";\nimport { NavBar } from \"./navbar\";\nimport \"./instructor.scss\";\n\nexport const Dashboard = () => {\n  const locationPath = useAppSelector(selectCurrentPath);\n  const [sideNav, setSideNav] = useState(false)\n  const [perfNav, setPerfNav] = useState(false)\n  const { scene: Scene } = getRouteMetaForLocation(\n    routesDashboard,\n    locationPath\n  );\n  return (\n    <div className=\"main-content-container\">\n      <NavBar />\n      <div className=\"main-content\">\n        <div className=\"page-frame\">\n          <Sidebar sideOpen= {sideNav} perfOpen = {perfNav}/>\n          <div className=\"main_container\">\n            <Scene sideNavToggle={(value ) => setSideNav(value)}\n             perfNavToggle={(value ) => setPerfNav()}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}