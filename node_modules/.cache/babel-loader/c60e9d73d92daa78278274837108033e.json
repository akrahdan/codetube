{"ast":null,"code":"import React from 'react';\nimport exenv from 'exenv';\nimport { canUseDOM } from './can-use-dom';\nimport { useHasMounted } from './use-has-mounted';\nvar canUseEventListeners = exenv.canUseEventListeners;\nvar noopQueryList = {\n  matches: false,\n  media: ''\n};\nexport function useMatchMedia(query) {\n  var hasMounted = useHasMounted();\n  var matcher = React.useCallback(function () {\n    return canUseDOM() ? window.matchMedia(query) : noopQueryList;\n  }, [query]);\n\n  var _a = React.useState(matcher),\n      queryList = _a[0],\n      setQueryList = _a[1];\n\n  var matches = useMatches(queryList);\n  React.useEffect(function () {\n    if (!hasMounted) return;\n    var nextQueryList = matcher();\n    setQueryList(nextQueryList);\n  }, [hasMounted, matcher]);\n  return matches;\n}\nexport function useMatches(queryList) {\n  var _a = React.useState(queryList.matches),\n      matches = _a[0],\n      setMatches = _a[1];\n\n  React.useEffect(function () {\n    var updateMatches = function updateMatches() {\n      setMatches(queryList.matches);\n    };\n\n    if (canUseEventListeners) queryList.addListener(updateMatches);\n    updateMatches();\n    return function () {\n      if (canUseEventListeners) queryList.removeListener(updateMatches);\n    };\n  }, [queryList]);\n  return matches;\n}","map":{"version":3,"sources":["../../src/use-match-media.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,SAAT,QAA0B,eAA1B;AACA,SAAS,aAAT,QAA8B,mBAA9B;AAEQ,IAAA,oBAAoB,GAAK,KAAK,CAAV,oBAApB;AAER,IAAM,aAAa,GAAG;AACpB,EAAA,OAAO,EAAE,KADW;AAEpB,EAAA,KAAK,EAAE;AAFa,CAAtB;AAKA,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAAqC;AACzC,MAAM,UAAU,GAAG,aAAa,EAAhC;AAEA,MAAM,OAAO,GAAG,KAAK,CAAC,WAAN,CACd,YAAA;AAAM,WAAC,SAAS,KAAK,MAAM,CAAC,UAAP,CAAkB,KAAlB,CAAL,GAAV,aAAA;AAAwD,GADhD,EAEd,CAAC,KAAD,CAFc,CAAhB;;AAIM,MAAA,EAAA,GAA4B,KAAK,CAAC,QAAN,CAAe,OAAf,CAA5B;AAAA,MAAC,SAAS,GAAA,EAAA,CAAA,CAAA,CAAV;AAAA,MAAY,YAAY,GAAA,EAAA,CAAA,CAAA,CAAxB;;AAEN,MAAM,OAAO,GAAG,UAAU,CAAC,SAAD,CAA1B;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,CAAC,UAAL,EAAiB;AAEjB,QAAM,aAAa,GAAG,OAAO,EAA7B;AAEA,IAAA,YAAY,CAAC,aAAD,CAAZ;AACD,GAND,EAMG,CAAC,UAAD,EAAa,OAAb,CANH;AAQA,SAAO,OAAP;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,SAArB,EAA8C;AAC5C,MAAA,EAAA,GAAwB,KAAK,CAAC,QAAN,CAAe,SAAS,CAAC,OAAzB,CAAxB;AAAA,MAAC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,UAAU,GAAA,EAAA,CAAA,CAAA,CAApB;;AAEN,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAM,aAAa,GAAG,SAAhB,aAAgB,GAAA;AACpB,MAAA,UAAU,CAAC,SAAS,CAAC,OAAX,CAAV;AACD,KAFD;;AAIA,QAAI,oBAAJ,EAA0B,SAAS,CAAC,WAAV,CAAsB,aAAtB;AAC1B,IAAA,aAAa;AAEb,WAAO,YAAA;AACL,UAAI,oBAAJ,EAA0B,SAAS,CAAC,cAAV,CAAyB,aAAzB;AAC3B,KAFD;AAGD,GAXD,EAWG,CAAC,SAAD,CAXH;AAaA,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import React from 'react';\nimport exenv from 'exenv';\nimport { canUseDOM } from './can-use-dom';\nimport { useHasMounted } from './use-has-mounted';\nvar canUseEventListeners = exenv.canUseEventListeners;\nvar noopQueryList = {\n    matches: false,\n    media: ''\n};\nexport function useMatchMedia(query) {\n    var hasMounted = useHasMounted();\n    var matcher = React.useCallback(function () { return (canUseDOM() ? window.matchMedia(query) : noopQueryList); }, [query]);\n    var _a = React.useState(matcher), queryList = _a[0], setQueryList = _a[1];\n    var matches = useMatches(queryList);\n    React.useEffect(function () {\n        if (!hasMounted)\n            return;\n        var nextQueryList = matcher();\n        setQueryList(nextQueryList);\n    }, [hasMounted, matcher]);\n    return matches;\n}\nexport function useMatches(queryList) {\n    var _a = React.useState(queryList.matches), matches = _a[0], setMatches = _a[1];\n    React.useEffect(function () {\n        var updateMatches = function () {\n            setMatches(queryList.matches);\n        };\n        if (canUseEventListeners)\n            queryList.addListener(updateMatches);\n        updateMatches();\n        return function () {\n            if (canUseEventListeners)\n                queryList.removeListener(updateMatches);\n        };\n    }, [queryList]);\n    return matches;\n}\n//# sourceMappingURL=use-match-media.js.map"]},"metadata":{},"sourceType":"module"}