{"ast":null,"code":"/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (!condition) {\n    throw new Error(\"[Autocomplete] \".concat(message));\n  }\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-shared/dist/esm/invariant.js"],"names":["invariant","condition","message","process","env","NODE_ENV","Error","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,OAA9B,EAAuC;AAC5C,MAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAJ,EAA8C;AAC5C;AACD;;AAED,MAAI,CAACJ,SAAL,EAAgB;AACd,UAAM,IAAIK,KAAJ,CAAU,kBAAkBC,MAAlB,CAAyBL,OAAzB,CAAV,CAAN;AACD;AACF","sourcesContent":["/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (!condition) {\n    throw new Error(\"[Autocomplete] \".concat(message));\n  }\n}"]},"metadata":{},"sourceType":"module"}