{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/AppHeader/useAppHeaderProps.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@codecademy/gamut';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { SearchButton } from './Search/SearchButton';\nimport cookie from 'react-cookies';\nimport { store } from 'store';\nimport { useLogoutMutation } from 'services/auth';\nimport { showModal } from 'state/modals/modalSlice';\nimport { useAuth } from 'store/useAuth';\nimport { useInstructor } from 'store/useInstructor';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedPopoverVariants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2\n    }\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.2\n    }\n  }\n};\nconst animatedPopoverProps = {\n  initial: 'exit',\n  animate: 'enter',\n  exit: 'exit',\n  variants: AnimatedPopoverVariants\n};\nexport const useAppHeaderProps = () => {\n  _s();\n\n  const [isSearchVisible, setSearchVisible] = useState(false); // const { data: currentUser } = useGetCurrentUserQuery()\n\n  const {\n    user: currentUser\n  } = useAuth();\n  const {};\n  const {\n    instructor\n  } = useInstructor();\n  console.log(\"Current: \", instructor);\n  const {\n    push\n  } = useHistory();\n  const [logout, {\n    data: logoutResponse\n  }] = useLogoutMutation();\n\n  if (logoutResponse && logoutResponse.detail) {\n    localStorage.clear();\n  }\n\n  const [isMobileNotificationsOpen, setIsMobileNotificationsOpen] = useState(false);\n\n  const toggleSearch = () => {\n    setSearchVisible(!isSearchVisible);\n  };\n\n  const toggleMobileNotifications = () => {\n    setIsMobileNotificationsOpen(!isMobileNotificationsOpen);\n  };\n\n  const handleClick = async (event, item) => {\n    if (item.id === \"instructor\") {\n      if (currentUser && currentUser.email) {\n        push('/course/create/');\n      } else {\n        store.dispatch(showModal('login'));\n      }\n    }\n\n    if (item.id == \"login\" || item.id == \"signup\") {\n      store.dispatch(showModal(item.id));\n    }\n\n    if (item.id == \"log-out\") {\n      const obj = {\n        csrfmiddlewaretoken: cookie.load('csrftoken')\n      };\n      const result = await logout(obj).unwrap();\n    }\n  };\n\n  const headerProps = currentUser ? {\n    type: 'pro',\n    action: handleClick,\n    user: {\n      avatar: '',\n      displayName: currentUser.first_name ? `${currentUser.first_name} ${currentUser.last_name}` : currentUser.email,\n      isInstructor: instructor && !!instructor.id\n    },\n    search: {\n      onEnable: () => console.log(),\n      onSearch: query => /*#__PURE__*/_jsxDEV(SearchButton, {\n        toggleSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }, this),\n      onTrackingClick: target => console.log()\n    }\n  } : {\n    type: 'anon',\n    action: handleClick,\n    search: {\n      onEnable: () => console.log(),\n      onSearch: query => /*#__PURE__*/_jsxDEV(SearchButton, {\n        toggleSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 36\n      }, this),\n      onTrackingClick: target => console.log()\n    }\n  };\n\n  const search = /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    zIndex: 15,\n    children: [isSearchVisible && /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, { ...animatedPopoverProps\n      }, \"search\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), isMobileNotificationsOpen && /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        _: 'block',\n        md: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: /*#__PURE__*/_jsxDEV(motion.div, { ...animatedPopoverProps,\n          \"data-testid\": \"header-mobile-notifications-dropdown\"\n        }, \"mobile notifications\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n\n  return [headerProps, search];\n};\n\n_s(useAppHeaderProps, \"oJUEUbcATx6nR969uSUwx1PA8Dc=\", false, function () {\n  return [useAuth, useInstructor, useHistory, useLogoutMutation];\n});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/AppHeader/useAppHeaderProps.tsx"],"names":["Box","AnimatePresence","motion","React","useState","SearchButton","cookie","store","useLogoutMutation","showModal","useAuth","useInstructor","useHistory","AnimatedPopoverVariants","enter","opacity","transition","duration","exit","animatedPopoverProps","initial","animate","variants","useAppHeaderProps","isSearchVisible","setSearchVisible","user","currentUser","instructor","console","log","push","logout","data","logoutResponse","detail","localStorage","clear","isMobileNotificationsOpen","setIsMobileNotificationsOpen","toggleSearch","toggleMobileNotifications","handleClick","event","item","id","email","dispatch","obj","csrfmiddlewaretoken","load","result","unwrap","headerProps","type","action","avatar","displayName","first_name","last_name","isInstructor","search","onEnable","onSearch","query","onTrackingClick","target","_","md"],"mappings":"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","sourcesContent":["import { Box } from '@codecademy/gamut';\nimport type {\n\n  AppHeaderClickHandler,\n  GlobalHeaderProps,\n} from 'components/gamut-overrides';\nimport { AnimatePresence, motion, MotionProps, Variants } from 'framer-motion';\nimport React, { useState } from 'react';\n\nimport { Search } from './Search';\nimport { MobileSearchBar } from './Search/MobileSearchBar';\nimport { SearchButton } from './Search/SearchButton';\nimport cookie from 'react-cookies';\nimport { store } from 'store';\n\nimport { Logout, useLogoutMutation } from 'services/auth';\nimport { showModal } from 'state/modals/modalSlice';\nimport { useAuth, useAvatar } from 'store/useAuth';\nimport { useInstructor } from 'store/useInstructor';\nimport { useHistory } from 'react-router';\n\nconst AnimatedPopoverVariants: Variants = {\n  enter: { opacity: 1, transition: { duration: 0.2 } },\n  exit: { opacity: 0, transition: { duration: 0.2 } },\n};\n\nconst animatedPopoverProps: MotionProps = {\n  initial: 'exit',\n  animate: 'enter',\n  exit: 'exit',\n  variants: AnimatedPopoverVariants,\n};\n\nexport const useAppHeaderProps = () => {\n\n\n\n\n  const [isSearchVisible, setSearchVisible] = useState(false);\n  // const { data: currentUser } = useGetCurrentUserQuery()\n  const { user: currentUser } = useAuth()\n  const { }\n  const { instructor } = useInstructor()\n  console.log(\"Current: \", instructor)\n  const { push } = useHistory();\n  const [logout, { data: logoutResponse }] = useLogoutMutation()\n \n  if (logoutResponse && logoutResponse.detail) {\n    localStorage.clear()\n  }\n\n  const [isMobileNotificationsOpen, setIsMobileNotificationsOpen] = useState(\n    false\n  );\n\n  const toggleSearch = () => {\n\n    setSearchVisible(!isSearchVisible);\n  };\n\n  const toggleMobileNotifications = () => {\n\n    setIsMobileNotificationsOpen(!isMobileNotificationsOpen);\n  };\n\n  const handleClick: AppHeaderClickHandler = async (event, item) => {\n\n    if (item.id === \"instructor\") {\n      if (currentUser && currentUser.email) {\n        push('/course/create/')\n      } else {\n        store.dispatch(showModal('login'))\n      }\n\n    }\n\n    if (item.id == \"login\" || item.id == \"signup\") {\n      store.dispatch(showModal(item.id))\n    }\n    if (item.id == \"log-out\") {\n      const obj: Logout = {\n        csrfmiddlewaretoken: cookie.load('csrftoken')\n      };\n\n      const result = await logout(obj).unwrap();\n\n    }\n\n  };\n\n\n\n  const headerProps: GlobalHeaderProps = currentUser ? {\n    type: 'pro',\n    action: handleClick,\n    user: {\n      avatar: '',\n      displayName: currentUser.first_name ? `${currentUser.first_name} ${currentUser.last_name}` : currentUser.email,\n      isInstructor: instructor && !!instructor.id\n\n    },\n    search: {\n      onEnable: () => console.log(),\n      onSearch: (query: string) => <SearchButton toggleSearch={toggleSearch} />,\n      onTrackingClick: (target: string) => console.log()\n\n    }\n\n  } : {\n    type: 'anon',\n\n\n    action: handleClick,\n    search: {\n      onEnable: () => console.log(),\n      onSearch: (query: string) => <SearchButton toggleSearch={toggleSearch} />,\n      onTrackingClick: (target: string) => console.log()\n\n    }\n  };\n\n\n\n  const search = (\n    <Box position=\"relative\" zIndex={15}>\n      {isSearchVisible && (\n        <AnimatePresence>\n          <motion.div key=\"search\" {...animatedPopoverProps}>\n\n          </motion.div>\n          )\n        </AnimatePresence>\n      )}\n      {isMobileNotificationsOpen && (\n        <Box display={{ _: 'block', md: 'none' }}>\n          <AnimatePresence>\n            <motion.div\n              key=\"mobile notifications\"\n              {...animatedPopoverProps}\n              data-testid=\"header-mobile-notifications-dropdown\"\n            >\n\n            </motion.div>\n          </AnimatePresence>\n        </Box>\n      )}\n    </Box>\n  );\n\n  return [headerProps, search] as const;\n};\n"]},"metadata":{},"sourceType":"module"}