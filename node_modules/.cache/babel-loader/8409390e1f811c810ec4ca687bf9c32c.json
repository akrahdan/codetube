{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  id: null\n};\nexport const modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    showModal: (state, action) => {\n      state.id = action.payload;\n    },\n    hideCurrentModal: state => {\n      state.id = null;\n    },\n    hideModal: (state, action) => {\n      state.id = action.payload;\n    }\n  }\n});\nexport const selectModal = state => state.modal.id;\nexport const {\n  showModal,\n  hideCurrentModal,\n  hideModal\n} = modalSlice.actions;\nexport const signupModal = id => (dispatch, getState) => {\n  dispatch(showModal(id));\n};\nexport default modalSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/modals/modalSlice.ts"],"names":["createSlice","initialState","id","modalSlice","name","reducers","showModal","state","action","payload","hideCurrentModal","hideModal","selectModal","modal","actions","signupModal","dispatch","getState","reducer"],"mappings":"AAAA,SAA2BA,WAA3B,QACO,kBADP;AAUA,OAAO,MAAMC,YAAwB,GAAG;AACpCC,EAAAA,EAAE,EAAE;AADgC,CAAjC;AAGP,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAClCI,EAAAA,IAAI,EAAE,OAD4B;AAElCH,EAAAA,YAFkC;AAGlCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AAEjDD,MAAAA,KAAK,CAACL,EAAN,GAAWM,MAAM,CAACC,OAAlB;AACH,KAJK;AAKNC,IAAAA,gBAAgB,EAAGH,KAAD,IAAW;AAE5BA,MAAAA,KAAK,CAACL,EAAN,GAAW,IAAX;AACA,KARK;AAUNS,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA0C;AAEnDD,MAAAA,KAAK,CAACL,EAAN,GAAWM,MAAM,CAACC,OAAlB;AACD;AAbK;AAHwB,CAAD,CAA9B;AAqBP,OAAO,MAAMG,WAAW,GAAIL,KAAD,IAAsBA,KAAK,CAACM,KAAN,CAAYX,EAAtD;AAGP,OAAO,MAAO;AAAEI,EAAAA,SAAF;AAAaI,EAAAA,gBAAb;AAA+BC,EAAAA;AAA/B,IAA6CR,UAAU,CAACW,OAA/D;AAEP,OAAO,MAAMC,WAAW,GAAIb,EAAD,IAA0B,CACjDc,QADiD,EAEjDC,QAFiD,KAGhD;AAEDD,EAAAA,QAAQ,CAACV,SAAS,CAACJ,EAAD,CAAV,CAAR;AACH,CANM;AAQP,eAAeC,UAAU,CAACe,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction \n} from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { without } from 'lodash';\nimport { AppThunk, RootState } from \"store\";\n\nexport interface ModalState { \n    id: string\n}\n\nexport const initialState: ModalState = {\n    id: null\n}\nexport const modalSlice = createSlice({\n    name: 'modal',\n    initialState,\n    reducers: {\n        showModal: (state, action: PayloadAction<string>) => {\n          \n            state.id = action.payload \n        },\n        hideCurrentModal: (state) => {\n        \n         state.id = null\n        },\n\n        hideModal: (state, action: PayloadAction<string>) => {\n         \n          state.id = action.payload\n        }\n\n    }\n});\n\nexport const selectModal = (state: RootState) => state.modal.id\n\n\nexport const  { showModal, hideCurrentModal, hideModal } = modalSlice.actions\n\nexport const signupModal = (id: string): AppThunk => (\n    dispatch,\n    getState\n) => {\n    \n    dispatch(showModal(id))\n}\n\nexport default modalSlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}