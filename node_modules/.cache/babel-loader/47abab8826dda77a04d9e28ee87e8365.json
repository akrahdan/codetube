{"ast":null,"code":"var existingCareerPaths=new Set(['web-development','data-science','code-foundations','computer-science']);export var isValidPortalRedirect=function isValidPortalRedirect(redirectUrl){return!!redirectUrl&&(redirectUrl.includes('courses')||redirectUrl.includes('paths')||redirectUrl.includes('learn')||redirectUrl.includes('catalog'));};export var isProMembershipRedirect=function isProMembershipRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return(redirectValues[0]==='pro'||redirectValues[1]==='pro')&&(redirectValues[1].split('?')[0]==='membership'||redirectValues[2].split('?')[0]==='membership');};export var isCareerPathPageRedirect=function isCareerPathPageRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return isValidPortalRedirect(redirectUrl)&&redirectValues[1]==='learn'&&redirectValues[2]==='paths'&&existingCareerPaths.has(redirectValues[3]);};export var isSkillPathPageRedirect=function isSkillPathPageRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return isValidPortalRedirect(redirectUrl)&&redirectValues[1]==='learn'&&redirectValues[2]==='paths'&&!existingCareerPaths.has(redirectValues[3]);};export var isHomePageRedirect=function isHomePageRedirect(redirectUrl){var redirectValues=redirectUrl.split('?')[0].split('/');return redirectUrl===''||redirectUrl[1]===''||redirectValues[1]==='register'||redirectValues[1]==='login';};export var isCoursePageRedirect=function isCoursePageRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return isValidPortalRedirect(redirectUrl)&&redirectValues[1]==='learn'&&!isCareerPathPageRedirect(redirectUrl)&&!isSkillPathPageRedirect(redirectUrl);};export var isLeRedirect=function isLeRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return isValidPortalRedirect(redirectUrl)&&redirectValues[1]==='courses';};export var isAltEntryPointRedirect=function isAltEntryPointRedirect(redirectUrl){return isCareerPathPageRedirect(redirectUrl)||isCoursePageRedirect(redirectUrl)||isLeRedirect(redirectUrl);};export var isCatalogPageRedirect=function isCatalogPageRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return isValidPortalRedirect(redirectUrl)&&redirectValues[1]==='catalog';};var isJobsPageRedict=function isJobsPageRedict(redirectUrl){var redirectValues=redirectUrl.split('/');return redirectValues[1]==='about'&&redirectValues[2]==='careers';};var isTermsOfServiceRedirect=function isTermsOfServiceRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return redirectValues[1]==='terms';};var isPrivacyPolicyRedirect=function isPrivacyPolicyRedirect(redirectUrl){var redirectValues=redirectUrl.split('/');return redirectValues[1]==='policy';};export var isValidRecommendationLocation=function isValidRecommendationLocation(redirectUrl){return!!redirectUrl&&(isCareerPathPageRedirect(redirectUrl)||isCoursePageRedirect(redirectUrl)||isLeRedirect(redirectUrl));};export var getRedirectSlug=function getRedirectSlug(redirectUrl){var redirectValues=!!redirectUrl&&redirectUrl.split('/');var slug=isLeRedirect(redirectUrl)?redirectUrl.split('/')[2]:redirectValues[redirectValues.length-1];return isValidRecommendationLocation(redirectUrl)&&slug;};export var getEntryPoint=function getEntryPoint(redirectUrl){if(isHomePageRedirect(redirectUrl)){return'home_page';}if(isCareerPathPageRedirect(redirectUrl)){return'careerpath_page';}if(isSkillPathPageRedirect(redirectUrl)){return'skillpath_page';}if(isCoursePageRedirect(redirectUrl)){return'course_page';}if(isLeRedirect(redirectUrl)){return'learning_environment';}if(isCatalogPageRedirect(redirectUrl)){return'catalog';}if(isJobsPageRedict(redirectUrl)){return'jobs_page';}if(isPrivacyPolicyRedirect(redirectUrl)){return'privacy_policy_page';}if(isTermsOfServiceRedirect(redirectUrl)){return'terms_of_service_page';}if(isProMembershipRedirect(redirectUrl)){return'pro_membership_page';}return undefined;};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/libs/redirectHelpers.ts"],"names":["existingCareerPaths","Set","isValidPortalRedirect","redirectUrl","includes","isProMembershipRedirect","redirectValues","split","isCareerPathPageRedirect","has","isSkillPathPageRedirect","isHomePageRedirect","isCoursePageRedirect","isLeRedirect","isAltEntryPointRedirect","isCatalogPageRedirect","isJobsPageRedict","isTermsOfServiceRedirect","isPrivacyPolicyRedirect","isValidRecommendationLocation","getRedirectSlug","slug","length","getEntryPoint","undefined"],"mappings":"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","sourcesContent":["const existingCareerPaths = new Set([\n  'web-development',\n  'data-science',\n  'code-foundations',\n  'computer-science',\n]);\n\nexport const isValidPortalRedirect = (redirectUrl?: string) =>\n  !!redirectUrl &&\n  (redirectUrl.includes('courses') ||\n    redirectUrl.includes('paths') ||\n    redirectUrl.includes('learn') ||\n    redirectUrl.includes('catalog'));\n\nexport const isProMembershipRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    (redirectValues[0] === 'pro' || redirectValues[1] === 'pro') &&\n    (redirectValues[1].split('?')[0] === 'membership' ||\n      redirectValues[2].split('?')[0] === 'membership')\n  );\n};\n\nexport const isCareerPathPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    redirectValues[2] === 'paths' &&\n    existingCareerPaths.has(redirectValues[3])\n  );\n};\n\nexport const isSkillPathPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    redirectValues[2] === 'paths' &&\n    !existingCareerPaths.has(redirectValues[3])\n  );\n};\n\nexport const isHomePageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('?')[0].split('/');\n  return (\n    redirectUrl === '' ||\n    redirectUrl[1] === '' ||\n    redirectValues[1] === 'register' ||\n    redirectValues[1] === 'login'\n  );\n};\n\nexport const isCoursePageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    !isCareerPathPageRedirect(redirectUrl) &&\n    !isSkillPathPageRedirect(redirectUrl)\n  );\n};\n\nexport const isLeRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'courses';\n};\n\nexport const isAltEntryPointRedirect = (redirectUrl: string) => {\n  return (\n    isCareerPathPageRedirect(redirectUrl) ||\n    isCoursePageRedirect(redirectUrl) ||\n    isLeRedirect(redirectUrl)\n  );\n};\n\nexport const isCatalogPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'catalog';\n};\n\nconst isJobsPageRedict = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'about' && redirectValues[2] === 'careers';\n};\n\nconst isTermsOfServiceRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'terms';\n};\n\nconst isPrivacyPolicyRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'policy';\n};\n\nexport const isValidRecommendationLocation = (redirectUrl: string) =>\n  !!redirectUrl &&\n  (isCareerPathPageRedirect(redirectUrl) ||\n    isCoursePageRedirect(redirectUrl) ||\n    isLeRedirect(redirectUrl));\n\nexport const getRedirectSlug = (redirectUrl: string) => {\n  const redirectValues: any = !!redirectUrl && redirectUrl.split('/');\n  const slug = isLeRedirect(redirectUrl)\n    ? redirectUrl.split('/')[2]\n    : redirectValues[redirectValues.length - 1];\n  return isValidRecommendationLocation(redirectUrl) && slug;\n};\n\nexport const getEntryPoint = (redirectUrl: string) => {\n  if (isHomePageRedirect(redirectUrl)) {\n    return 'home_page';\n  }\n  if (isCareerPathPageRedirect(redirectUrl)) {\n    return 'careerpath_page';\n  }\n  if (isSkillPathPageRedirect(redirectUrl)) {\n    return 'skillpath_page';\n  }\n  if (isCoursePageRedirect(redirectUrl)) {\n    return 'course_page';\n  }\n  if (isLeRedirect(redirectUrl)) {\n    return 'learning_environment';\n  }\n  if (isCatalogPageRedirect(redirectUrl)) {\n    return 'catalog';\n  }\n  if (isJobsPageRedict(redirectUrl)) {\n    return 'jobs_page';\n  }\n  if (isPrivacyPolicyRedirect(redirectUrl)) {\n    return 'privacy_policy_page';\n  }\n  if (isTermsOfServiceRedirect(redirectUrl)) {\n    return 'terms_of_service_page';\n  }\n  if (isProMembershipRedirect(redirectUrl)) {\n    return 'pro_membership_page';\n  }\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"module"}