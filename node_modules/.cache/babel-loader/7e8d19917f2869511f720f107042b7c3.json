{"ast":null,"code":"/*\nNOTE: https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n*/\nexport default function polyfillElementClosest() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = // @ts-ignore: vendor specific method\n    Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n\n      do {\n        // @ts-ignore: not typing polyfill\n        if (Element.prototype.matches.call(el, s)) return el; // @ts-ignore: not typing polyfill\n\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  }\n}","map":{"version":3,"sources":["../../../src/js/polyfill-element-closest.ts"],"names":[],"mappings":"AAAA;;AAEE;AAEF,eAAc,SAAU,sBAAV,GAAgC;AAC5C,MAAI,CAAC,OAAO,CAAC,SAAR,CAAkB,OAAvB,EAAgC;AAC9B,IAAA,OAAO,CAAC,SAAR,CAAkB,OAAlB,GACE;AACA,IAAA,OAAO,CAAC,SAAR,CAAkB,iBAAlB,IACA,OAAO,CAAC,SAAR,CAAkB,qBAHpB;AAID;;AAED,MAAI,CAAC,OAAO,CAAC,SAAR,CAAkB,OAAvB,EAAgC;AAC9B,IAAA,OAAO,CAAC,SAAR,CAAkB,OAAlB,GAA4B,UAAU,CAAV,EAAoB;AAC9C,UAAI,EAAE,GAAG,IAAT;;AAEA,SAAG;AACD;AACA,YAAI,OAAO,CAAC,SAAR,CAAkB,OAAlB,CAA0B,IAA1B,CAA+B,EAA/B,EAAmC,CAAnC,CAAJ,EAA2C,OAAO,EAAP,CAF1C,CAGD;;AACA,QAAA,EAAE,GAAG,EAAE,CAAC,aAAH,IAAoB,EAAE,CAAC,UAA5B;AACD,OALD,QAKS,EAAE,KAAK,IAAP,IAAe,EAAE,CAAC,QAAH,KAAgB,CALxC;;AAMA,aAAO,IAAP;AACD,KAVD;AAWD;AACF","sourceRoot":"","sourcesContent":["/*\nNOTE: https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n*/\nexport default function polyfillElementClosest() {\n    if (!Element.prototype.matches) {\n        Element.prototype.matches =\n            // @ts-ignore: vendor specific method\n            Element.prototype.msMatchesSelector ||\n                Element.prototype.webkitMatchesSelector;\n    }\n    if (!Element.prototype.closest) {\n        Element.prototype.closest = function (s) {\n            var el = this;\n            do {\n                // @ts-ignore: not typing polyfill\n                if (Element.prototype.matches.call(el, s))\n                    return el;\n                // @ts-ignore: not typing polyfill\n                el = el.parentElement || el.parentNode;\n            } while (el !== null && el.nodeType === 1);\n            return null;\n        };\n    }\n}\n//# sourceMappingURL=polyfill-element-closest.js.map"]},"metadata":{},"sourceType":"module"}