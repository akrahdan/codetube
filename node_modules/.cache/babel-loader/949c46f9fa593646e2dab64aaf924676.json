{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Projects/ProjectDetail/CTAButton/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ButtonDeprecated } from '@codecademy/gamut';\nimport React, { useContext } from 'react';\nimport { TrackLink } from 'components/TrackLink';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTAButton = ({\n  isPaidLanding,\n  pathId,\n  onClick,\n  showTrialCTA,\n  useContentfulCTA,\n  context,\n  ...otherProps\n}) => {\n  _s();\n\n  const {\n    cta_section,\n    header,\n    syllabus\n  } = useContext(CMSContext);\n  let cmsContext = cta_section;\n\n  switch (context) {\n    case 'header':\n      cmsContext = header;\n      break;\n\n    case 'syllabus':\n      cmsContext = syllabus;\n      break;\n  }\n\n  const onClickWithContentful = () => {\n    onClick();\n  };\n\n  const getText = () => {\n    var _cmsContext;\n\n    const ctaText = (_cmsContext = cmsContext) === null || _cmsContext === void 0 ? void 0 : _cmsContext.call_to_action;\n\n    if (useContentfulCTA && ctaText) {\n      return ctaText;\n    }\n\n    return 'Get Started';\n  };\n\n  return /*#__PURE__*/_jsxDEV(TrackLink, {\n    data: {\n      context,\n      page_name: 'marketingpathlandingpage',\n      target: isPaidLanding ? 'paid_trial_landing_upgradetopro' : 'start',\n      content_ids: {\n        path_id: pathId\n      }\n    },\n    onClick: onClickWithContentful,\n    ...otherProps,\n    children: /*#__PURE__*/_jsxDEV(ButtonDeprecated, {\n      className: styles.cta,\n      theme: \"brand-red\",\n      size: \"large\",\n      round: true,\n      children: getText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CTAButton, \"fOOCbEFljJVdDrWqiXholmlPYpQ=\");\n\n_c = CTAButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTAButton\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Projects/ProjectDetail/CTAButton/index.tsx"],"names":["ButtonDeprecated","React","useContext","TrackLink","CMSContext","styles","CTAButton","isPaidLanding","pathId","onClick","showTrialCTA","useContentfulCTA","context","otherProps","cta_section","header","syllabus","cmsContext","onClickWithContentful","getText","ctaText","call_to_action","page_name","target","content_ids","path_id","cta"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAaA,OAAO,MAAMC,SAAmC,GAAG,CAAC;AAClDC,EAAAA,aADkD;AAElDC,EAAAA,MAFkD;AAGlDC,EAAAA,OAHkD;AAIlDC,EAAAA,YAJkD;AAKlDC,EAAAA,gBALkD;AAMlDC,EAAAA,OANkD;AAOlD,KAAGC;AAP+C,CAAD,KAQ7C;AAAA;;AACJ,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAoCd,UAAU,CAACE,UAAD,CAApD;AACA,MAAIa,UAAU,GAAGH,WAAjB;;AAEA,UAAQF,OAAR;AACE,SAAK,QAAL;AACEK,MAAAA,UAAU,GAAGF,MAAb;AACA;;AACF,SAAK,UAAL;AACEE,MAAAA,UAAU,GAAGD,QAAb;AACA;AANJ;;AASA,QAAME,qBAAqB,GAAG,MAAM;AAClCT,IAAAA,OAAO;AAGR,GAJD;;AAMA,QAAMU,OAAO,GAAG,MAAM;AAAA;;AACpB,UAAMC,OAAO,kBAAGH,UAAH,gDAAG,YAAYI,cAA5B;;AACA,QAAIV,gBAAgB,IAAIS,OAAxB,EAAiC;AAC/B,aAAOA,OAAP;AACD;;AAED,WAAO,aAAP;AACD,GAPD;;AASA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAE;AACJR,MAAAA,OADI;AAEJU,MAAAA,SAAS,EAAE,0BAFP;AAGJC,MAAAA,MAAM,EAAEhB,aAAa,GAAG,iCAAH,GAAuC,OAHxD;AAIJiB,MAAAA,WAAW,EAAE;AAAEC,QAAAA,OAAO,EAAEjB;AAAX;AAJT,KADR;AAQE,IAAA,OAAO,EAAEU,qBARX;AAAA,OASML,UATN;AAAA,2BAWE,QAAC,gBAAD;AACE,MAAA,SAAS,EAAER,MAAM,CAACqB,GADpB;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,MAJP;AAAA,gBAMGP,OAAO;AANV;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1DM;;GAAMb,S;;KAAAA,S","sourcesContent":["import { ButtonDeprecated } from '@codecademy/gamut';\nimport React, { useContext } from 'react';\n\nimport { TrackLink } from 'components/TrackLink';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\n\nimport styles from './styles.module.scss';\n\nexport type CTAButtonProps = {\n  'data-testid'?: string;\n  className?: string;\n  context: string;\n  isPaidLanding: boolean;\n  onClick: () => void;\n  pathId: string;\n  showTrialCTA: boolean;\n  useContentfulCTA: boolean;\n};\n\nexport const CTAButton: React.FC<CTAButtonProps> = ({\n  isPaidLanding,\n  pathId,\n  onClick,\n  showTrialCTA,\n  useContentfulCTA,\n  context,\n  ...otherProps\n}) => {\n  const { cta_section, header, syllabus } = useContext(CMSContext);\n  let cmsContext = cta_section;\n\n  switch (context) {\n    case 'header':\n      cmsContext = header;\n      break;\n    case 'syllabus':\n      cmsContext = syllabus;\n      break;\n  }\n\n  const onClickWithContentful = () => {\n    onClick();\n    \n   \n  };\n\n  const getText = () => {\n    const ctaText = cmsContext?.call_to_action;\n    if (useContentfulCTA && ctaText) {\n      return ctaText;\n    }\n   \n    return 'Get Started';\n  };\n\n  return (\n    <TrackLink\n      data={{\n        context,\n        page_name: 'marketingpathlandingpage',\n        target: isPaidLanding ? 'paid_trial_landing_upgradetopro' : 'start',\n        content_ids: { path_id: pathId },\n      }}\n     \n      onClick={onClickWithContentful}\n      {...otherProps}\n    >\n      <ButtonDeprecated\n        className={styles.cta}\n        theme=\"brand-red\"\n        size=\"large\"\n        round\n      >\n        {getText()}\n      </ButtonDeprecated>\n    </TrackLink>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}