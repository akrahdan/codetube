{"ast":null,"code":"import React from 'react';\nimport { TextArea } from '../../../Form';\nexport var GridFormTextArea = function GridFormTextArea(_ref) {\n  var className = _ref.className,\n      error = _ref.error,\n      field = _ref.field,\n      register = _ref.register,\n      showRequired = _ref.showRequired;\n  return /*#__PURE__*/React.createElement(TextArea, {\n    className: className,\n    disabled: field.disabled,\n    error: error,\n    htmlFor: field.name,\n    name: field.name,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      return (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, event.target.value);\n    },\n    ref: register(field.validation),\n    id: field.id,\n    \"aria-invalid\": error,\n    \"aria-required\": showRequired,\n    placeholder: field.placeholder\n  });\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut/dist/GridForm/GridFormInputGroup/GridFormTextArea/index.js"],"names":["React","TextArea","GridFormTextArea","_ref","className","error","field","register","showRequired","createElement","disabled","htmlFor","name","onChange","event","_field$onUpdate","onUpdate","call","target","value","ref","validation","id","placeholder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5D,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,YAAY,GAAGL,IAAI,CAACK,YAJxB;AAKA,SAAO,aAAaR,KAAK,CAACS,aAAN,CAAoBR,QAApB,EAA8B;AAChDG,IAAAA,SAAS,EAAEA,SADqC;AAEhDM,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAFgC;AAGhDL,IAAAA,KAAK,EAAEA,KAHyC;AAIhDM,IAAAA,OAAO,EAAEL,KAAK,CAACM,IAJiC;AAKhDA,IAAAA,IAAI,EAAEN,KAAK,CAACM,IALoC;AAMhDC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC,UAAIC,eAAJ;;AAEA,aAAO,CAACA,eAAe,GAAGT,KAAK,CAACU,QAAzB,MAAuC,IAAvC,IAA+CD,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqFA,eAAe,CAACE,IAAhB,CAAqBX,KAArB,EAA4BQ,KAAK,CAACI,MAAN,CAAaC,KAAzC,CAA5F;AACD,KAV+C;AAWhDC,IAAAA,GAAG,EAAEb,QAAQ,CAACD,KAAK,CAACe,UAAP,CAXmC;AAYhDC,IAAAA,EAAE,EAAEhB,KAAK,CAACgB,EAZsC;AAahD,oBAAgBjB,KAbgC;AAchD,qBAAiBG,YAd+B;AAehDe,IAAAA,WAAW,EAAEjB,KAAK,CAACiB;AAf6B,GAA9B,CAApB;AAiBD,CAvBM","sourcesContent":["import React from 'react';\nimport { TextArea } from '../../../Form';\nexport var GridFormTextArea = function GridFormTextArea(_ref) {\n  var className = _ref.className,\n      error = _ref.error,\n      field = _ref.field,\n      register = _ref.register,\n      showRequired = _ref.showRequired;\n  return /*#__PURE__*/React.createElement(TextArea, {\n    className: className,\n    disabled: field.disabled,\n    error: error,\n    htmlFor: field.name,\n    name: field.name,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      return (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, event.target.value);\n    },\n    ref: register(field.validation),\n    id: field.id,\n    \"aria-invalid\": error,\n    \"aria-required\": showRequired,\n    placeholder: field.placeholder\n  });\n};"]},"metadata":{},"sourceType":"module"}