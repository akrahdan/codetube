{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from\"@reduxjs/toolkit\";import{clamp}from\"portal/scenes/CoursePlayer/utilities/clamp\";import{InteractionModes,Defaults,FullscreenState,DefaultResolutions}from\"portal/scenes/CoursePlayer/constants\";import{buildClipProgress}from\"portal/scenes/CoursePlayer/utilities/sync-clip-progress\";import{calculateAspectRatio}from\"portal/scenes/CoursePlayer/utilities/aspect-ratio\";import{findBreakpoint}from\"portal/scenes/CoursePlayer/utilities/find-breakpoint\";import{selectVideoFormat}from\"portal/scenes/CoursePlayer/utilities/video-format-support\";var validModes=Object.values(InteractionModes);var mediaType=selectVideoFormat();console.log(\"VideoFormat: \",DefaultResolutions[mediaType][0]);function includes(modes,mode){return!!~modes.indexOf(mode);}export var initialState=_objectSpread(_objectSpread({playing:false,playbackSpeed:1.0,activeMenu:null,volumeSliderActive:false,muted:false,previousVolume:null,time:0,duration:0,bufferedTime:0,playheadStart:0,overlay:null,videoPlayer:null,seekedEvent:null,seekingEvent:null,clipProgress:0,buffering:false,containerSize:null,breakpoint:null,playerSize:null,layout:null,loading:false,userAutoplaySetting:false},Defaults),{},{currentResolution:DefaultResolutions[mediaType][0],supportedResolutions:null,mediaType:mediaType,settings:null});export var playerSlice=createSlice({name:\"player\",initialState:initialState,reducers:{play:function play(state,action){var icon=\"PLAY\";if(action.payload){state.overlay={icon:icon,key:Math.random(),fade:true};console.log(\"Play: \",state.overlay);}state.playing=true;state.playheadStart=state.time;},pause:function pause(state,action){var icon=\"PAUSE\";if(action.payload){state.overlay={icon:icon,key:Math.random(),fade:true};console.log(\"Pause: \",state.overlay);}state.playing=false;state.playheadStart=state.time;},setPlaybackSpeed:function setPlaybackSpeed(state,action){state.playbackSpeed=action.payload;},setPlaying:function setPlaying(state,action){state.playing=action.payload;},syncSettings:function syncSettings(state,action){state.settings=action.payload;},setMediaType:function setMediaType(state,action){state.mediaType=action.payload;},setPreferredResolutions:function setPreferredResolutions(state,action){state.preferredResolutions=action.payload;},setCurrentResolution:function setCurrentResolution(state,action){state.currentResolution=action.payload;},setSupportedResolutions:function setSupportedResolutions(state,action){state.supportedResolutions=action.payload;},setActiveMenu:function setActiveMenu(state,action){state.activeMenu=action.payload;},setVolumeSliderActive:function setVolumeSliderActive(state,action){state.volumeSliderActive=action.payload;},setVolume:function setVolume(state,action){var clamped=clamp(action.payload,0,1);var muted=clamped===0;state.volume=clamped;state.muted=muted;},setPreviousVolume:function setPreviousVolume(state,action){var clamped=clamp(action.payload,0,1);var muted=clamped===0;state.volume=clamped;state.muted=muted;},setInteractionMode:function setInteractionMode(state,action){if(!includes(validModes,action.payload)){throw new Error(\"\".concat(action.payload,\" not in valid list: \").concat(validModes.join()));}state.interactionMode=action.payload;},showUI:function showUI(state,action){state.visible=true;},toggleFullscreen:function toggleFullscreen(state,action){state.fullscreenState=state.fullscreenState===FullscreenState.FULLSCREEN?FullscreenState.NORMAL:FullscreenState.FULLSCREEN;},hideUI:function hideUI(state,action){state.visible=false;},setDuration:function setDuration(state,action){state.duration=action.payload;},setTime:function setTime(state,action){state.time=action.payload;},setContainerSize:function setContainerSize(state,action){var containerSize=action.payload;console.log(\"Container: \",containerSize);if(containerSize.width===0&&containerSize.height===0&&state.containerSize){containerSize=state.containerSize;}var breakpoint=findBreakpoint(containerSize);state.breakpoint=breakpoint;state.playerSize=calculateAspectRatio(containerSize);state.containerSize=containerSize;state.layout=\"\".concat(breakpoint.height,\"p\");},setBufferedTime:function setBufferedTime(state,action){state.bufferedTime=action.payload;},ready:function ready(state,action){state.playheadStart=state.time;state.duration=action.payload;},registerPlayer:function registerPlayer(state,action){state.seekedEvent=new Event(\"ps-seeked\");state.seekingEvent=new Event(\"ps-seeking\");state.videoPlayer=action.payload;},seekStart:function seekStart(state,action){var seekingEvent=state.seekingEvent,videoPlayer=state.videoPlayer;videoPlayer&&videoPlayer.dispatchEvent(seekingEvent);},seekEnd:function seekEnd(state,action){var seekedEvent=state.seekedEvent,videoPlayer=state.videoPlayer;videoPlayer&&videoPlayer.dispatchEvent(seekedEvent);},seek:function seek(state,action){state.playheadStart=action.payload*state.duration;},setOverlay:function setOverlay(state,action){state.overlay=action.payload;},setBuffering:function setBuffering(state,action){state.buffering=action.payload;},setLoading:function setLoading(state,action){state.loading=action.payload;},setAutoplay:function setAutoplay(state,action){state.userAutoplaySetting=action.payload;},setClipProgress:function setClipProgress(state,action){state.clipProgress=buildClipProgress(state.clipProgress,action.payload,state.duration);},setFullscreen:function setFullscreen(state,action){var validFullscreenStates=Object.values(FullscreenState);if(!includes(validFullscreenStates,action.payload)){throw new Error(\"\".concat(action.payload,\" not in valid list: \").concat(validFullscreenStates.join()));}state.fullscreenState=action.payload;},fastForward:function fastForward(state,action){var time=state.time,duration=state.duration;var forwardTime=time+10;var newTime=forwardTime>duration?duration:forwardTime;state.playheadStart=newTime;state.time=newTime;state.overlay={icon:\"FWD\",key:Math.random(),fade:true};},fastRewind:function fastRewind(state,action){var time=state.time,duration=state.duration;var startTime=0;var rewindTime=time-10;var newTime=rewindTime<startTime?startTime:rewindTime;state.playheadStart=newTime;state.time=newTime;state.overlay={icon:\"BACK\",key:Math.random(),fade:true};},toggleMute:function toggleMute(state,action){if(state.muted){var clamped=state.previousVolume||Defaults.volume;var muted=clamped===0;state.volume=clamped;state.muted=muted;}else{state.muted=true;state.previousVolume=state.volume;state.volume=0;}}}});export var selectPlayer=function selectPlayer(state){return state.player;};var _playerSlice$actions=playerSlice.actions,play=_playerSlice$actions.play,pause=_playerSlice$actions.pause,setPlaybackSpeed=_playerSlice$actions.setPlaybackSpeed,setActiveMenu=_playerSlice$actions.setActiveMenu,setVolumeSliderActive=_playerSlice$actions.setVolumeSliderActive,setVolume=_playerSlice$actions.setVolume,setPreviousVolume=_playerSlice$actions.setPreviousVolume,toggleMute=_playerSlice$actions.toggleMute,setDuration=_playerSlice$actions.setDuration,setTime=_playerSlice$actions.setTime,ready=_playerSlice$actions.ready,fastForward=_playerSlice$actions.fastForward,fastRewind=_playerSlice$actions.fastRewind,seekEnd=_playerSlice$actions.seekEnd,seekStart=_playerSlice$actions.seekStart,registerPlayer=_playerSlice$actions.registerPlayer,showUI=_playerSlice$actions.showUI,hideUI=_playerSlice$actions.hideUI,setInteractionMode=_playerSlice$actions.setInteractionMode,toggleFullscreen=_playerSlice$actions.toggleFullscreen,setFullscreen=_playerSlice$actions.setFullscreen,seek=_playerSlice$actions.seek,setBufferedTime=_playerSlice$actions.setBufferedTime,setBuffering=_playerSlice$actions.setBuffering,setClipProgress=_playerSlice$actions.setClipProgress,setOverlay=_playerSlice$actions.setOverlay,setContainerSize=_playerSlice$actions.setContainerSize,setAutoplay=_playerSlice$actions.setAutoplay,setLoading=_playerSlice$actions.setLoading,setPlaying=_playerSlice$actions.setPlaying,setCurrentResolution=_playerSlice$actions.setCurrentResolution,setPreferredResolutions=_playerSlice$actions.setPreferredResolutions,setSupportedResolutions=_playerSlice$actions.setSupportedResolutions,setMediaType=_playerSlice$actions.setMediaType,syncSettings=_playerSlice$actions.syncSettings;export{play,pause,setPlaybackSpeed,setActiveMenu,setVolumeSliderActive,setVolume,setPreviousVolume,toggleMute,setDuration,setTime,ready,fastForward,fastRewind,seekEnd,seekStart,registerPlayer,showUI,hideUI,setInteractionMode,toggleFullscreen,setFullscreen,seek,setBufferedTime,setBuffering,setClipProgress,setOverlay,setContainerSize,setAutoplay,setLoading,setPlaying,setCurrentResolution,setPreferredResolutions,setSupportedResolutions,setMediaType,syncSettings};export var togglePlayPause=function togglePlayPause(){return function(dispatch,getState){var state=getState().player;if(state.playing){dispatch(pause());}else{dispatch(play());}};};export default playerSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/player/playerSlice.ts"],"names":["createSlice","clamp","InteractionModes","Defaults","FullscreenState","DefaultResolutions","buildClipProgress","calculateAspectRatio","findBreakpoint","selectVideoFormat","validModes","Object","values","mediaType","console","log","includes","modes","mode","indexOf","initialState","playing","playbackSpeed","activeMenu","volumeSliderActive","muted","previousVolume","time","duration","bufferedTime","playheadStart","overlay","videoPlayer","seekedEvent","seekingEvent","clipProgress","buffering","containerSize","breakpoint","playerSize","layout","loading","userAutoplaySetting","currentResolution","supportedResolutions","settings","playerSlice","name","reducers","play","state","action","icon","payload","key","Math","random","fade","pause","setPlaybackSpeed","setPlaying","syncSettings","setMediaType","setPreferredResolutions","preferredResolutions","setCurrentResolution","setSupportedResolutions","setActiveMenu","setVolumeSliderActive","setVolume","clamped","volume","setPreviousVolume","setInteractionMode","Error","join","interactionMode","showUI","visible","toggleFullscreen","fullscreenState","FULLSCREEN","NORMAL","hideUI","setDuration","setTime","setContainerSize","width","height","setBufferedTime","ready","registerPlayer","Event","seekStart","dispatchEvent","seekEnd","seek","setOverlay","setBuffering","setLoading","setAutoplay","setClipProgress","setFullscreen","validFullscreenStates","fastForward","forwardTime","newTime","fastRewind","startTime","rewindTime","toggleMute","selectPlayer","player","actions","togglePlayPause","dispatch","getState","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { StringChain, stubFalse, without } from \"lodash\";\nimport { AppThunk, RootState } from \"store\";\nimport { clamp } from \"portal/scenes/CoursePlayer/utilities/clamp\";\nimport {\n  InteractionModes,\n  Defaults,\n  FullscreenState,\n  DefaultResolutions\n} from \"portal/scenes/CoursePlayer/constants\";\nimport { buildClipProgress } from \"portal/scenes/CoursePlayer/utilities/sync-clip-progress\";\nimport { calculateAspectRatio } from \"portal/scenes/CoursePlayer/utilities/aspect-ratio\";\nimport { findBreakpoint } from \"portal/scenes/CoursePlayer/utilities/find-breakpoint\";\nimport { selectVideoFormat } from \"portal/scenes/CoursePlayer/utilities/video-format-support\";\n\nconst validModes = Object.values(InteractionModes);\nconst mediaType = selectVideoFormat()\nconsole.log(\"VideoFormat: \", DefaultResolutions[mediaType][0])\nfunction includes(modes, mode) {\n  return !!~modes.indexOf(mode);\n}\n\nexport interface PlayerState {\n  playing: boolean;\n  playbackSpeed: number;\n  activeMenu: string;\n  volumeSliderActive: boolean;\n  volume: number;\n  muted: boolean;\n  previousVolume: number;\n  interactionMode: string;\n  resolution: ResolutionH;\n  time: number;\n  bufferedTime: number;\n  duration: number;\n  playheadStart: number;\n  overlay: Overlay;\n  videoPlayer: any;\n  seekedEvent: Event;\n  seekingEvent: Event;\n  visible: boolean;\n  fullscreenState: string;\n  clipProgress: number;\n  buffering: boolean;\n  containerSize: ContainerSize;\n  breakpoint: ContainerSize;\n  playerSize: ContainerSize;\n  layout: string;\n  loading: boolean;\n  userAutoplaySetting: boolean;\n  preferredResolutions: any;\n  currentResolution: any;\n  supportedResolutions: Resolution[],\n  mediaType: string,\n  settings: any\n}\n\nexport interface Overlay {\n  icon: string;\n  key: number;\n  fade: boolean;\n}\n\ninterface ContainerSize {\n  width: number;\n  height: number;\n}\n\ninterface ResolutionH {\n  width: number;\n  height: number;\n  index: number;\n}\ninterface Resolution {\n    width?: string;\n    height: string;\n    index: number;\n  }\n\nexport const initialState: PlayerState = {\n  playing: false,\n  playbackSpeed: 1.0,\n  activeMenu: null,\n  volumeSliderActive: false,\n \n  muted: false,\n  previousVolume: null,\n\n  time: 0,\n  duration: 0,\n  bufferedTime: 0,\n  playheadStart: 0,\n  overlay: null,\n  videoPlayer: null,\n  seekedEvent: null,\n  seekingEvent: null,\n\n  clipProgress: 0,\n  buffering: false,\n  containerSize: null,\n  breakpoint: null,\n  playerSize: null,\n  layout: null,\n  loading: false,\n  userAutoplaySetting: false,\n  ...Defaults,\n  currentResolution: DefaultResolutions[mediaType][0],\n  supportedResolutions: null,\n  mediaType,\n  settings: null\n};\nexport const playerSlice = createSlice({\n  name: \"player\",\n  initialState,\n  reducers: {\n    play: (state, action: PayloadAction<boolean>) => {\n      const icon = \"PLAY\";\n\n      if (action.payload) {\n        state.overlay = { icon, key: Math.random(), fade: true };\n        console.log(\"Play: \", state.overlay)\n      }\n      state.playing = true;\n      state.playheadStart = state.time;\n    },\n\n    pause: (state, action: PayloadAction<boolean>) => {\n      const icon = \"PAUSE\";\n\n      if (action.payload) {\n        state.overlay = { icon, key: Math.random(), fade: true };\n        console.log(\"Pause: \", state.overlay)\n      }\n      state.playing = false;\n      state.playheadStart = state.time;\n    },\n\n    setPlaybackSpeed: (state, action: PayloadAction<number>) => {\n      state.playbackSpeed = action.payload;\n    },\n\n    setPlaying: (state, action: PayloadAction<boolean>) => {\n        state.playing = action.payload;\n    },\n\n    syncSettings: (state, action: PayloadAction<any>) => {\n      state.settings = action.payload;\n    },\n\n    setMediaType: (state, action: PayloadAction<string>) => {\n      state.mediaType = action.payload;\n  },\n\n    setPreferredResolutions: (state, action: PayloadAction<any>) => {\n        state.preferredResolutions = action.payload;\n    },\n\n    setCurrentResolution: (state, action: PayloadAction<any>) => {\n        state.currentResolution = action.payload;\n    },\n\n    setSupportedResolutions: (state, action: PayloadAction<Resolution[]>) => {\n        state.supportedResolutions = action.payload;\n    },\n\n    setActiveMenu: (state, action: PayloadAction<string>) => {\n      state.activeMenu = action.payload;\n    },\n    setVolumeSliderActive: (state, action: PayloadAction<boolean>) => {\n      state.volumeSliderActive = action.payload;\n    },\n    setVolume: (state, action: PayloadAction<number>) => {\n      const clamped = clamp(action.payload, 0, 1);\n      const muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setPreviousVolume: (state, action: PayloadAction<number>) => {\n      const clamped = clamp(action.payload, 0, 1);\n      const muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setInteractionMode: (state, action: PayloadAction<string>) => {\n      if (!includes(validModes, action.payload)) {\n        throw new Error(\n          `${action.payload} not in valid list: ${validModes.join()}`\n        );\n      }\n      state.interactionMode = action.payload;\n    },\n\n    showUI: (state, action: PayloadAction<void>) => {\n      state.visible = true;\n    },\n\n    toggleFullscreen: (state, action: PayloadAction<void>) => {\n      state.fullscreenState =\n        state.fullscreenState === FullscreenState.FULLSCREEN\n          ? FullscreenState.NORMAL\n          : FullscreenState.FULLSCREEN;\n    },\n\n    hideUI: (state, action: PayloadAction<void>) => {\n      state.visible = false;\n    },\n\n    setDuration: (state, action: PayloadAction<number>) => {\n      state.duration = action.payload;\n    },\n    setTime: (state, action: PayloadAction<number>) => {\n      state.time = action.payload;\n    },\n\n    setContainerSize: (state, action: PayloadAction<ContainerSize>) => {\n      var containerSize = action.payload;\n      console.log(\"Container: \", containerSize)\n      if (\n        containerSize.width === 0 &&\n        containerSize.height === 0 &&\n        state.containerSize\n      ) {\n        containerSize = state.containerSize;\n      }\n      const breakpoint = findBreakpoint(containerSize);\n      state.breakpoint = breakpoint\n      state.playerSize = calculateAspectRatio(containerSize);\n      state.containerSize = containerSize;\n      state.layout = `${breakpoint.height}p`;\n    },\n\n    setBufferedTime: (state, action: PayloadAction<number>) => {\n      state.bufferedTime = action.payload;\n    },\n\n    ready: (state, action: PayloadAction<number>) => {\n      state.playheadStart = state.time;\n      state.duration = action.payload;\n    },\n    registerPlayer: (state, action: PayloadAction<HTMLVideoElement>) => {\n      state.seekedEvent = new Event(\"ps-seeked\");\n      state.seekingEvent = new Event(\"ps-seeking\");\n      state.videoPlayer = action.payload;\n    },\n\n    seekStart: (state, action: PayloadAction<void>) => {\n      const { seekingEvent, videoPlayer } = state;\n\n      videoPlayer && videoPlayer.dispatchEvent(seekingEvent);\n    },\n\n    seekEnd: (state, action: PayloadAction<void>) => {\n      const { seekedEvent, videoPlayer } = state;\n\n      videoPlayer && videoPlayer.dispatchEvent(seekedEvent);\n    },\n\n    seek: (state, action: PayloadAction<number>) => {\n      state.playheadStart = action.payload * state.duration;\n    },\n\n    setOverlay: (state, action: PayloadAction<Overlay>) => {\n      state.overlay = action.payload;\n    },\n\n    setBuffering: (state, action: PayloadAction<boolean>) => {\n      state.buffering = action.payload;\n    },\n\n    setLoading: (state, action: PayloadAction<boolean>) => {\n        state.loading = action.payload;\n    },\n\n    setAutoplay: (state, action: PayloadAction<boolean>) => {\n        state.userAutoplaySetting = action.payload;\n    },\n\n    setClipProgress: (state, action: PayloadAction<number>) => {\n      state.clipProgress = buildClipProgress(\n        state.clipProgress,\n        action.payload,\n        state.duration\n      );\n    },\n\n    setFullscreen: (state, action: PayloadAction<string>) => {\n      const validFullscreenStates = Object.values(FullscreenState);\n\n      if (!includes(validFullscreenStates, action.payload)) {\n        throw new Error(\n          `${action.payload} not in valid list: ${validFullscreenStates.join()}`\n        );\n      }\n      state.fullscreenState = action.payload;\n    },\n\n    fastForward: (state, action: PayloadAction<void>) => {\n      const { time, duration } = state;\n\n      const forwardTime = time + 10;\n\n      const newTime = forwardTime > duration ? duration : forwardTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"FWD\",\n        key: Math.random(),\n        fade: true,\n      };\n    },\n\n    fastRewind: (state, action: PayloadAction<void>) => {\n      const { time, duration } = state;\n\n      const startTime = 0;\n      const rewindTime = time - 10;\n\n      const newTime = rewindTime < startTime ? startTime : rewindTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"BACK\",\n        key: Math.random(),\n        fade: true,\n      };\n    },\n\n    toggleMute: (state, action: PayloadAction<void>) => {\n      if (state.muted) {\n        const clamped = state.previousVolume || Defaults.volume;\n        const muted = clamped === 0;\n        state.volume = clamped;\n        state.muted = muted;\n      } else {\n        state.muted = true;\n        state.previousVolume = state.volume;\n        state.volume = 0;\n      }\n    },\n  },\n});\n\nexport const selectPlayer = (state: RootState) => state.player;\n\nexport const {\n  play,\n  pause,\n  setPlaybackSpeed,\n  setActiveMenu,\n  setVolumeSliderActive,\n  setVolume,\n  setPreviousVolume,\n  toggleMute,\n  setDuration,\n  setTime,\n  ready,\n  fastForward,\n  fastRewind,\n  seekEnd,\n  seekStart,\n  registerPlayer,\n  showUI,\n  hideUI,\n  setInteractionMode,\n  toggleFullscreen,\n  setFullscreen,\n  seek,\n  setBufferedTime,\n  setBuffering,\n  setClipProgress,\n  setOverlay,\n  setContainerSize,\n  setAutoplay,\n  setLoading,\n  setPlaying,\n  setCurrentResolution,\n  setPreferredResolutions,\n  setSupportedResolutions,\n  setMediaType,\n  syncSettings\n} = playerSlice.actions;\n\nexport const togglePlayPause = (): AppThunk => (dispatch, getState) => {\n  const state = getState().player;\n  if (state.playing) {\n    dispatch(pause());\n  } else {\n    dispatch(play());\n  }\n};\n\nexport default playerSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}