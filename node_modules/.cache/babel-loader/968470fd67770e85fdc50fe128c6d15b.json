{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * DeferredRender\n *\n * This is a simple component that just ensures that it's children don't render\n * until this component is mounted.\n *\n * This is mainly used to prevent a component from rendering serverside.\n */export var DeferredRender=function DeferredRender(_ref){var children=_ref.children,fallback=_ref.fallback;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),mounted=_useState2[0],setMounted=_useState2[1];useEffect(function(){setMounted(true);},[]);return/*#__PURE__*/_jsx(_Fragment,{children:mounted?children:fallback||null});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/DeferredRender/index.tsx"],"names":["React","useEffect","useState","DeferredRender","children","fallback","mounted","setMounted"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,gGAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAGvD,IAFJC,CAAAA,QAEI,MAFJA,QAEI,CADJC,QACI,MADJA,QACI,eAC0BH,QAAQ,CAAC,KAAD,CADlC,wCACGI,OADH,eACYC,UADZ,eAGJN,SAAS,CAAC,UAAM,CACdM,UAAU,CAAC,IAAD,CAAV,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBAAO,yBAAGD,OAAO,CAAGF,QAAH,CAAcC,QAAQ,EAAI,IAApC,EAAP,CACD,CAXM","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport type DeferredRenderProps = {\n  fallback?: React.ReactNode;\n};\n\n/**\n * DeferredRender\n *\n * This is a simple component that just ensures that it's children don't render\n * until this component is mounted.\n *\n * This is mainly used to prevent a component from rendering serverside.\n */\nexport const DeferredRender: React.FC<DeferredRenderProps> = ({\n  children,\n  fallback,\n}) => {\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return <>{mounted ? children : fallback || null}</>;\n};\n"]},"metadata":{},"sourceType":"module"}