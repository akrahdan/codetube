{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Box, GridBox, Text } from '@codecademy/gamut';\nimport { FacebookIcon, LinkedinIcon, TwitterIcon } from '@codecademy/gamut-icons';\nimport React from 'react';\nimport { SocialShareIconLink } from './SocialShareIconLink';\nexport var createShareLink = function createShareLink(formatter, baseUri, payload) {\n  var params = formatter(payload);\n  var url = new URL(baseUri);\n  Object.keys(params).forEach(function (key) {\n    url.searchParams.append(key, params[key]);\n  });\n  return url.toString();\n}; // https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/overview\n// https://developers.facebook.com/docs/sharing/reference/share-dialog\n// https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/share-on-linkedin?context=linkedin/consumer/context#create-an-article-or-url-share\n\nexport var SOCIAL_SHARING_PLATFORMS = [{\n  id: 'facebook',\n  icon: FacebookIcon,\n  baseUrl: 'https://www.facebook.com/dialog/share?app_id=212500508799908',\n  formatShare: function formatShare(_ref) {\n    var url = _ref.url,\n        message = _ref.message;\n    return _objectSpread(_objectSpread(_objectSpread({}, url && {\n      href: url\n    }), message && {\n      quote: message\n    }), {}, {\n      hashtag: '#codecademy'\n    });\n  }\n}, {\n  id: 'twitter',\n  icon: TwitterIcon,\n  baseUrl: 'https://twitter.com/intent/tweet?',\n  formatShare: function formatShare(_ref2) {\n    var url = _ref2.url,\n        message = _ref2.message,\n        hashtags = _ref2.hashtags,\n        mention = _ref2.mention;\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, url && {\n      url: url\n    }), message && {\n      text: message\n    }), hashtags && {\n      hashtags: hashtags.join(',')\n    }), mention && {\n      via: mention\n    });\n  }\n}, {\n  id: 'linkedin',\n  icon: LinkedinIcon,\n  baseUrl: 'https://www.linkedin.com/shareArticle',\n  formatShare: function formatShare(_ref3) {\n    var url = _ref3.url;\n    return {\n      url: url\n    };\n  }\n}];\nexport var SocialMediaSharing = function SocialMediaSharing(_ref4) {\n  var url = _ref4.url,\n      message = _ref4.message,\n      hashtags = _ref4.hashtags,\n      mention = _ref4.mention,\n      action = _ref4.action,\n      label = _ref4.label,\n      sectionId = _ref4.sectionId,\n      _ref4$size = _ref4.size,\n      size = _ref4$size === void 0 ? 'normal' : _ref4$size,\n      _ref4$variant = _ref4.variant,\n      variant = _ref4$variant === void 0 ? 'black' : _ref4$variant,\n      iconStyles = _ref4.iconStyles;\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }, label && /*#__PURE__*/React.createElement(Text, {\n    fontSize: size === 'small' ? 14 : 16,\n    textColor: \"gray-900\",\n    mb: 16,\n    \"data-testid\": \"social-sharing-label\"\n  }, label), /*#__PURE__*/React.createElement(GridBox, {\n    gridAutoColumns: \"max-content\",\n    gridAutoFlow: \"column\",\n    gap: 16,\n    className: iconStyles\n  }, SOCIAL_SHARING_PLATFORMS.map(function (_ref5) {\n    var id = _ref5.id,\n        icon = _ref5.icon,\n        formatShare = _ref5.formatShare,\n        baseUrl = _ref5.baseUrl;\n    return /*#__PURE__*/React.createElement(SocialShareIconLink, {\n      key: id,\n      id: id,\n      sectionId: sectionId,\n      href: createShareLink(formatShare, baseUrl, {\n        url: url,\n        message: message,\n        hashtags: hashtags,\n        mention: mention\n      }),\n      icon: icon,\n      size: size,\n      onClick: function onClick(e) {\n        return action === null || action === void 0 ? void 0 : action(e, \"\".concat(id, \"_share\"));\n      },\n      variant: variant\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut-labs/dist/SocialMediaSharing/index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Box","GridBox","Text","FacebookIcon","LinkedinIcon","TwitterIcon","React","SocialShareIconLink","createShareLink","formatter","baseUri","payload","params","url","URL","searchParams","append","toString","SOCIAL_SHARING_PLATFORMS","id","icon","baseUrl","formatShare","_ref","message","href","quote","hashtag","_ref2","hashtags","mention","text","join","via","_ref3","SocialMediaSharing","_ref4","action","label","sectionId","_ref4$size","size","_ref4$variant","variant","iconStyles","createElement","display","flexDirection","alignItems","fontSize","textColor","mb","gridAutoColumns","gridAutoFlow","gap","className","map","_ref5","onClick","e","concat"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, GridBox, Text } from '@codecademy/gamut';\nimport { FacebookIcon, LinkedinIcon, TwitterIcon } from '@codecademy/gamut-icons';\nimport React from 'react';\nimport { SocialShareIconLink } from './SocialShareIconLink';\nexport var createShareLink = function createShareLink(formatter, baseUri, payload) {\n  var params = formatter(payload);\n  var url = new URL(baseUri);\n  Object.keys(params).forEach(function (key) {\n    url.searchParams.append(key, params[key]);\n  });\n  return url.toString();\n}; // https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/overview\n// https://developers.facebook.com/docs/sharing/reference/share-dialog\n// https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/share-on-linkedin?context=linkedin/consumer/context#create-an-article-or-url-share\n\nexport var SOCIAL_SHARING_PLATFORMS = [{\n  id: 'facebook',\n  icon: FacebookIcon,\n  baseUrl: 'https://www.facebook.com/dialog/share?app_id=212500508799908',\n  formatShare: function formatShare(_ref) {\n    var url = _ref.url,\n        message = _ref.message;\n    return _objectSpread(_objectSpread(_objectSpread({}, url && {\n      href: url\n    }), message && {\n      quote: message\n    }), {}, {\n      hashtag: '#codecademy'\n    });\n  }\n}, {\n  id: 'twitter',\n  icon: TwitterIcon,\n  baseUrl: 'https://twitter.com/intent/tweet?',\n  formatShare: function formatShare(_ref2) {\n    var url = _ref2.url,\n        message = _ref2.message,\n        hashtags = _ref2.hashtags,\n        mention = _ref2.mention;\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, url && {\n      url: url\n    }), message && {\n      text: message\n    }), hashtags && {\n      hashtags: hashtags.join(',')\n    }), mention && {\n      via: mention\n    });\n  }\n}, {\n  id: 'linkedin',\n  icon: LinkedinIcon,\n  baseUrl: 'https://www.linkedin.com/shareArticle',\n  formatShare: function formatShare(_ref3) {\n    var url = _ref3.url;\n    return {\n      url: url\n    };\n  }\n}];\nexport var SocialMediaSharing = function SocialMediaSharing(_ref4) {\n  var url = _ref4.url,\n      message = _ref4.message,\n      hashtags = _ref4.hashtags,\n      mention = _ref4.mention,\n      action = _ref4.action,\n      label = _ref4.label,\n      sectionId = _ref4.sectionId,\n      _ref4$size = _ref4.size,\n      size = _ref4$size === void 0 ? 'normal' : _ref4$size,\n      _ref4$variant = _ref4.variant,\n      variant = _ref4$variant === void 0 ? 'black' : _ref4$variant,\n      iconStyles = _ref4.iconStyles;\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }, label && /*#__PURE__*/React.createElement(Text, {\n    fontSize: size === 'small' ? 14 : 16,\n    textColor: \"gray-900\",\n    mb: 16,\n    \"data-testid\": \"social-sharing-label\"\n  }, label), /*#__PURE__*/React.createElement(GridBox, {\n    gridAutoColumns: \"max-content\",\n    gridAutoFlow: \"column\",\n    gap: 16,\n    className: iconStyles\n  }, SOCIAL_SHARING_PLATFORMS.map(function (_ref5) {\n    var id = _ref5.id,\n        icon = _ref5.icon,\n        formatShare = _ref5.formatShare,\n        baseUrl = _ref5.baseUrl;\n    return /*#__PURE__*/React.createElement(SocialShareIconLink, {\n      key: id,\n      id: id,\n      sectionId: sectionId,\n      href: createShareLink(formatShare, baseUrl, {\n        url: url,\n        message: message,\n        hashtags: hashtags,\n        mention: mention\n      }),\n      icon: icon,\n      size: size,\n      onClick: function onClick(e) {\n        return action === null || action === void 0 ? void 0 : action(e, \"\".concat(id, \"_share\"));\n      },\n      variant: variant\n    });\n  })));\n};"]},"metadata":{},"sourceType":"module"}