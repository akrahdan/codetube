{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormButtons/index.tsx\";\nimport React from 'react';\nimport { Box } from '../../Box';\nimport { CTAButton, FillButton, TextButton } from '../../Button';\nimport { ButtonDeprecated } from '../../ButtonDeprecated';\nimport { Column } from '../../Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch'\n};\nexport const GridFormButtons = props => {\n  const getButton = () => {\n    switch (props.type) {\n      case 'cta':\n        return /*#__PURE__*/_jsxDEV(CTAButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled,\n          children: props.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n\n      case 'business':\n        /**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */\n        return /*#__PURE__*/_jsxDEV(ButtonDeprecated, {\n          disabled: props.disabled,\n          outline: props.outline,\n          theme: props.theme,\n          type: \"submit\",\n          children: props.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(FillButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled,\n          children: props.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Column, {\n    size: props.size,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: 8,\n      alignSelf: \"center\",\n      justifySelf: positions[props.position || 'left'],\n      children: [props.cancel && /*#__PURE__*/_jsxDEV(TextButton, { ...props.cancel,\n        mr: 32,\n        \"data-testid\": \"cancel-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), getButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c = GridFormButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridFormButtons\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormButtons/index.tsx"],"names":["React","Box","CTAButton","FillButton","TextButton","ButtonDeprecated","Column","positions","left","center","right","stretch","GridFormButtons","props","getButton","type","mode","disabled","contents","outline","theme","size","position","cancel"],"mappings":";AAAA,OAAOA,KAAP,MAAsC,OAAtC;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,UAAhC,QAAkD,cAAlD;AAEA,SACEC,gBADF,QAGO,wBAHP;AAIA,SAASC,MAAT,QAAuB,cAAvB;;AAwCA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,YADU;AAEhBC,EAAAA,MAAM,EAAE,QAFQ;AAGhBC,EAAAA,KAAK,EAAE,UAHS;AAIhBC,EAAAA,OAAO,EAAE;AAJO,CAAlB;AAOA,OAAO,MAAMC,eAEZ,GAAIC,KAAD,IAAW;AACb,QAAMC,SAAS,GAAG,MAAM;AACtB,YAAQD,KAAK,CAACE,IAAd;AACE,WAAK,KAAL;AACE,4BACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAyB,UAAA,IAAI,EAAEF,KAAK,CAACG,IAArC;AAA2C,UAAA,QAAQ,EAAEH,KAAK,CAACI,QAA3D;AAAA,oBACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,UAAL;AACE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,4BACE,QAAC,gBAAD;AACE,UAAA,QAAQ,EAAEL,KAAK,CAACI,QADlB;AAEE,UAAA,OAAO,EAAEJ,KAAK,CAACM,OAFjB;AAGE,UAAA,KAAK,EAAEN,KAAK,CAACO,KAHf;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA,oBAMGP,KAAK,CAACK;AANT;AAAA;AAAA;AAAA;AAAA,gBADF;;AAUF;AACE,4BACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAEL,KAAK,CAACG,IAAtC;AAA4C,UAAA,QAAQ,EAAEH,KAAK,CAACI,QAA5D;AAAA,oBACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,gBADF;AA3BJ;AAiCD,GAlCD;;AAoCA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,KAAK,CAACQ,IAApB;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,WAAW,EAAEd,SAAS,CAACM,KAAK,CAACS,QAAN,IAAkB,MAAnB,CAHxB;AAAA,iBAKGT,KAAK,CAACU,MAAN,iBACC,QAAC,UAAD,OAAgBV,KAAK,CAACU,MAAtB;AAA8B,QAAA,EAAE,EAAE,EAAlC;AAAsC,uBAAY;AAAlD;AAAA;AAAA;AAAA;AAAA,cANJ,EAQGT,SAAS,EARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArDM;KAAMF,e","sourcesContent":["import React, { ComponentProps } from 'react';\n\nimport { Box } from '../../Box';\nimport { CTAButton, FillButton, TextButton } from '../../Button';\nimport { ButtonProps } from '../../Button/shared';\nimport {\n  ButtonDeprecated,\n  ButtonDeprecatedProps,\n} from '../../ButtonDeprecated';\nimport { Column } from '../../Layout';\nimport { VisualTheme } from '../../theming/VisualTheme';\n\nexport type GridFormButtonsPosition = keyof typeof positions;\n\nexport type SubmitButtonType = 'cta' | 'fill';\nexport type SubmitButtonDeprecatedType = 'business';\n\ntype GridFormBase = {\n  contents: React.ReactNode;\n  position?: GridFormButtonsPosition;\n  size: ComponentProps<typeof Column>['size'];\n  disabled?: ButtonDeprecatedProps['disabled'];\n  mode?: VisualTheme;\n};\n\ntype GridFormButtonSubmitPropsDeprecated = GridFormBase & {\n  type?: SubmitButtonDeprecatedType;\n  theme?: ButtonDeprecatedProps['theme'];\n  outline?: ButtonDeprecatedProps['outline'];\n};\n\ntype GridFormSubmitPropsStandard = GridFormBase & {\n  type?: SubmitButtonType;\n};\n\nexport type GridFormSubmitProps =\n  | GridFormButtonSubmitPropsDeprecated\n  | GridFormSubmitPropsStandard;\n\nexport type GridFormCancelButtonProps = {\n  children: React.ReactNode;\n  href?: 'string';\n  onClick?: () => void;\n};\n\ntype CancelButtonProps = {\n  cancel?: ButtonProps;\n};\n\nconst positions = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch',\n};\n\nexport const GridFormButtons: React.FC<\n  GridFormSubmitProps & CancelButtonProps\n> = (props) => {\n  const getButton = () => {\n    switch (props.type) {\n      case 'cta':\n        return (\n          <CTAButton type=\"submit\" mode={props.mode} disabled={props.disabled}>\n            {props.contents}\n          </CTAButton>\n        );\n      case 'business':\n        /**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */\n        return (\n          <ButtonDeprecated\n            disabled={props.disabled}\n            outline={props.outline}\n            theme={props.theme}\n            type=\"submit\"\n          >\n            {props.contents}\n          </ButtonDeprecated>\n        );\n      default:\n        return (\n          <FillButton type=\"submit\" mode={props.mode} disabled={props.disabled}>\n            {props.contents}\n          </FillButton>\n        );\n    }\n  };\n\n  return (\n    <Column size={props.size}>\n      <Box\n        mb={8}\n        alignSelf=\"center\"\n        justifySelf={positions[props.position || 'left']}\n      >\n        {props.cancel && (\n          <TextButton {...props.cancel} mr={32} data-testid=\"cancel-button\" />\n        )}\n        {getButton()}\n      </Box>\n    </Column>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}