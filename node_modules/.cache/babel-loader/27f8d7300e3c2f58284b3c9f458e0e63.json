{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{Box,FlexBox,ProgressBar}from'@codecademy/gamut';import{pxRem}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{LoadingBox}from'components/LoadingBox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PercentageBox=styled(Box)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: \",\";\\n\"])),pxRem(2));export var PercentageLoading=styled(LoadingBox)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: 1.25rem;\\n  margin-bottom: \",\";\\n\"])),pxRem(38),pxRem(6));export var ProgressBarLoading=styled(LoadingBox)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: 0.5rem;\\n\"])),pxRem(96));export var ContainerProgressBar=function ContainerProgressBar(_ref){var containerProgress=_ref.containerProgress,className=_ref.className;var renderProgressLoading=function renderProgressLoading(){return/*#__PURE__*/_jsxs(FlexBox,{alignItems:\"flex-end\",flexDirection:\"column\",\"data-testid\":\"progress-loading\",children:[/*#__PURE__*/_jsx(PercentageLoading,{}),/*#__PURE__*/_jsx(ProgressBarLoading,{})]});};var percentComplete=(containerProgress===null||containerProgress===void 0?void 0:containerProgress.percent_complete)||0;var renderProgress=function renderProgress(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PercentageBox,{as:\"span\",fontSize:16,fontWeight:\"title\",fontFamily:\"accent\",textAlign:\"right\",\"aria-hidden\":\"true\",children:\"\".concat(containerProgress.percent_complete,\"%\")}),/*#__PURE__*/_jsx(Box,{width:{_:pxRem(96),sm:pxRem(72)},height:pxRem(8),children:/*#__PURE__*/_jsx(ProgressBar,{percent:percentComplete,pattern:\"diagonalStripesDense\",variant:\"yellow\",size:\"medium\"})})]});};return/*#__PURE__*/_jsx(FlexBox,{flexDirection:\"column\",alignItems:\"flex-end\",className:className,children:containerProgress?renderProgress():renderProgressLoading()});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Dashboard/ProgressBar.tsx"],"names":["Box","FlexBox","ProgressBar","pxRem","styled","React","LoadingBox","PercentageBox","PercentageLoading","ProgressBarLoading","ContainerProgressBar","containerProgress","className","renderProgressLoading","percentComplete","percent_complete","renderProgress","_","sm"],"mappings":"6OAAA,OAASA,GAAT,CAAcC,OAAd,CAAuBC,WAAvB,KAA0C,mBAA1C,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,uBAA3B,C,6IAOA,GAAMC,CAAAA,aAAa,CAAGH,MAAM,CAACJ,GAAD,CAAT,0FACAG,KAAK,CAAC,CAAD,CADL,CAAnB,CAIA,MAAO,IAAMK,CAAAA,iBAAiB,CAAGJ,MAAM,CAACE,UAAD,CAAT,+HACnBH,KAAK,CAAC,EAAD,CADc,CAGXA,KAAK,CAAC,CAAD,CAHM,CAAvB,CAMP,MAAO,IAAMM,CAAAA,kBAAkB,CAAGL,MAAM,CAACE,UAAD,CAAT,uGACpBH,KAAK,CAAC,EAAD,CADe,CAAxB,CAUP,MAAO,IAAMO,CAAAA,oBAAyD,CAAG,QAA5DA,CAAAA,oBAA4D,MAGnE,IAFJC,CAAAA,iBAEI,MAFJA,iBAEI,CADJC,SACI,MADJA,SACI,CACJ,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,sBAC5B,MAAC,OAAD,EACE,UAAU,CAAC,UADb,CAEE,aAAa,CAAC,QAFhB,CAGE,cAAY,kBAHd,wBAKE,KAAC,iBAAD,IALF,cAME,KAAC,kBAAD,IANF,GAD4B,EAA9B,CAWA,GAAMC,CAAAA,eAAe,CAAG,CAAAH,iBAAiB,OAAjB,EAAAA,iBAAiB,SAAjB,QAAAA,iBAAiB,CAAEI,gBAAnB,GAAuC,CAA/D,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,sBACrB,wCACE,KAAC,aAAD,EACE,EAAE,CAAC,MADL,CAEE,QAAQ,CAAE,EAFZ,CAGE,UAAU,CAAC,OAHb,CAIE,UAAU,CAAC,QAJb,CAKE,SAAS,CAAC,OALZ,CAME,cAAY,MANd,oBAQML,iBAAiB,CAAEI,gBARzB,OADF,cAWE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEE,CAAC,CAAEd,KAAK,CAAC,EAAD,CAAV,CAAgBe,EAAE,CAAEf,KAAK,CAAC,EAAD,CAAzB,CAAZ,CAA6C,MAAM,CAAEA,KAAK,CAAC,CAAD,CAA1D,uBACE,KAAC,WAAD,EACE,OAAO,CAAEW,eADX,CAEE,OAAO,CAAC,sBAFV,CAGE,OAAO,CAAC,QAHV,CAIE,IAAI,CAAC,QAJP,EADF,EAXF,GADqB,EAAvB,CAuBA,mBACE,KAAC,OAAD,EAAS,aAAa,CAAC,QAAvB,CAAgC,UAAU,CAAC,UAA3C,CAAsD,SAAS,CAAEF,SAAjE,UACGD,iBAAiB,CAAGK,cAAc,EAAjB,CAAsBH,qBAAqB,EAD/D,EADF,CAKD,CA7CM","sourcesContent":["import { Box, FlexBox, ProgressBar } from '@codecademy/gamut';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { LoadingBox } from 'components/LoadingBox';\n\n\n\ninterface ContainerProgress {\n    percent_complete: number\n}\nconst PercentageBox = styled(Box)`\n  margin-bottom: ${pxRem(2)};\n`;\n\nexport const PercentageLoading = styled(LoadingBox)`\n  width: ${pxRem(38)};\n  height: 1.25rem;\n  margin-bottom: ${pxRem(6)};\n`;\n\nexport const ProgressBarLoading = styled(LoadingBox)`\n  width: ${pxRem(96)};\n  height: 0.5rem;\n`;\n\nexport type ContainerProgressBarProps = {\n  containerProgress?: ContainerProgress;\n  className?: string;\n};\n\nexport const ContainerProgressBar: React.FC<ContainerProgressBarProps> = ({\n  containerProgress,\n  className,\n}) => {\n  const renderProgressLoading = () => (\n    <FlexBox\n      alignItems=\"flex-end\"\n      flexDirection=\"column\"\n      data-testid=\"progress-loading\"\n    >\n      <PercentageLoading />\n      <ProgressBarLoading />\n    </FlexBox>\n  );\n\n  const percentComplete = containerProgress?.percent_complete || 0;\n\n  const renderProgress = () => (\n    <>\n      <PercentageBox\n        as=\"span\"\n        fontSize={16}\n        fontWeight=\"title\"\n        fontFamily=\"accent\"\n        textAlign=\"right\"\n        aria-hidden=\"true\"\n      >\n        {`${containerProgress!.percent_complete}%`}\n      </PercentageBox>\n      <Box width={{ _: pxRem(96), sm: pxRem(72) }} height={pxRem(8)}>\n        <ProgressBar\n          percent={percentComplete}\n          pattern=\"diagonalStripesDense\"\n          variant=\"yellow\"\n          size=\"medium\"\n        />\n      </Box>\n    </>\n  );\n\n  return (\n    <FlexBox flexDirection=\"column\" alignItems=\"flex-end\" className={className}>\n      {containerProgress ? renderProgress() : renderProgressLoading()}\n    </FlexBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}