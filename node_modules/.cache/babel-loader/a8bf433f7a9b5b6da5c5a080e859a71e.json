{"ast":null,"code":"import React from'react';import{Select}from'../../../Form';import{jsx as _jsx}from\"react/jsx-runtime\";export var GridFormSelectInput=function GridFormSelectInput(_ref){var className=_ref.className,error=_ref.error,field=_ref.field,register=_ref.register,showRequired=_ref.showRequired;return/*#__PURE__*/_jsx(Select,{defaultValue:field.defaultValue,disabled:field.disabled,className:className,error:error,htmlFor:field.name,name:field.name,onChange:function onChange(event){var _field$onUpdate;return(_field$onUpdate=field.onUpdate)===null||_field$onUpdate===void 0?void 0:_field$onUpdate.call(field,event.target.value);},ref:register(field.validation),options:field.options,id:field.id,\"aria-invalid\":error,\"aria-required\":showRequired});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormSelectInput/index.tsx"],"names":["React","Select","GridFormSelectInput","className","error","field","register","showRequired","defaultValue","disabled","name","event","onUpdate","target","value","validation","options","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,MAAT,KAAuB,eAAvB,C,2CAWA,MAAO,IAAMC,CAAAA,mBAAuD,CAAG,QAA1DA,CAAAA,mBAA0D,MAMjE,IALJC,CAAAA,SAKI,MALJA,SAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,YACI,MADJA,YACI,CACJ,mBACE,KAAC,MAAD,EACE,YAAY,CAAEF,KAAK,CAACG,YADtB,CAEE,QAAQ,CAAEH,KAAK,CAACI,QAFlB,CAGE,SAAS,CAAEN,SAHb,CAIE,KAAK,CAAEC,KAJT,CAKE,OAAO,CAAEC,KAAK,CAACK,IALjB,CAME,IAAI,CAAEL,KAAK,CAACK,IANd,CAOE,QAAQ,CAAE,kBAACC,KAAD,6CAAWN,KAAK,CAACO,QAAjB,0CAAW,qBAAAP,KAAK,CAAYM,KAAK,CAACE,MAAN,CAAaC,KAAzB,CAAhB,EAPZ,CAQE,GAAG,CAAER,QAAQ,CAACD,KAAK,CAACU,UAAP,CARf,CASE,OAAO,CAAEV,KAAK,CAACW,OATjB,CAUE,EAAE,CAAEX,KAAK,CAACY,EAVZ,CAWE,eAAcb,KAXhB,CAYE,gBAAeG,YAZjB,EADF,CAgBD,CAvBM","sourcesContent":["import React from 'react';\nimport { UseFormMethods } from 'react-hook-form';\n\nimport { Select } from '../../../Form';\nimport { GridFormSelectField } from '../../types';\n\nexport type GridFormSelectInputProps = {\n  className?: string;\n  error?: boolean;\n  showRequired?: boolean;\n  field: Omit<GridFormSelectField, 'label'>;\n  register: UseFormMethods['register'];\n};\n\nexport const GridFormSelectInput: React.FC<GridFormSelectInputProps> = ({\n  className,\n  error,\n  field,\n  register,\n  showRequired,\n}) => {\n  return (\n    <Select\n      defaultValue={field.defaultValue}\n      disabled={field.disabled}\n      className={className}\n      error={error}\n      htmlFor={field.name}\n      name={field.name}\n      onChange={(event) => field.onUpdate?.(event.target.value)}\n      ref={register(field.validation)}\n      options={field.options}\n      id={field.id}\n      aria-invalid={error}\n      aria-required={showRequired}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}