{"ast":null,"code":"import { css, Global } from '@emotion/react';\nimport React from 'react';\nimport { coreTheme as theme } from '../themes';\nvar rebootStyles = /*#__PURE__*/css(\"/**\\n  * https://raw.githubusercontent.com/twbs/bootstrap/v4-dev/scss/_reboot.scss\\n  * Reboot\\n  * Normalization of HTML elements, manually forked from Normalize.css to remove\\n  * styles targeting irrelevant browsers while applying new styles.\\n  * Normalize is licensed MIT. https://github.com/necolas/normalize.css\\n  * Document\\n  * 1 Change from 'box-sizing: content-box' so that 'width' is affected by 'padding' and 'border'.\\n  * 2 Change the default font family in all browsers.\\n  * 3 Correct the line height in all browsers.\\n  * 4 Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.\\n  * 5 Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so\\n  *    we force a non-overlapping, non-auto-hiding scrollbar to counteract.\\n  * 6 Change the default tap highlight to be completely transparent in iOS.\\n*/*,*::before,*::after{box-sizing:border-box;}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block;}body{margin:0;font-family:\", theme.fontFamily.base, \";font-weight:\", theme.fontWeight.base, \";line-height:\", theme.lineHeight.base, \";color:\", theme.colors.text, \";text-align:left;background-color:\", theme.colors.background, \";}[tabindex='-1']:focus{outline:0!important;}hr{box-sizing:content-box;height:0;overflow:visible;}h1,h2,h3,h4,h5,h6{margin-top:0;}p{margin-top:0;margin-bottom:\", theme.spacing[16], \";}abbr[title],abbr[data-original-title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0;}address{margin-bottom:1rem;font-style:normal;line-height:inherit;}ol,ul,dl{margin-top:0;margin-bottom:1rem;}ol ol,ul ul,ol ul,ul ol{margin-bottom:0;}dt{font-weight:\", theme.fontWeight.title, \";}dd{margin-bottom:0.5rem;margin-left:0;}blockquote{margin:0 0 1rem;}dfn{font-style:italic;}b,strong{font-weight:\", theme.fontWeight.title, \";}small{font-size:\", theme.fontSize[14], \";}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline;}sub{bottom:-0.25em;}sup{top:-0.5em;}a{color:\", theme.colors.primary, \";text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects;&:hover{text-decoration:underline;}}a:not([href]):not([tabindex]){color:inherit;text-decoration:none;&:hover,&:focus{color:inherit;text-decoration:none;}&:focus{outline:0;}}pre,code,kbd,samp{font-family:monospace,monospace;font-size:1em;}pre{margin-top:0;margin-bottom:1rem;overflow:auto;/* We have @viewport set which causes scrollbars to overlap content in IE11 and Edge, so */-ms-overflow-style:scrollbar;}figure{margin:0 0 1rem;}img{vertical-align:middle;border-style:none;}svg:not(:root){overflow:hidden;}table{border-collapse:collapse;}caption{padding-top:\", theme.spacing[16], \";padding-bottom:\", theme.spacing[16], \";color:\", theme.spacing[16], \";text-align:left;caption-side:bottom;}th{text-align:inherit;}label{display:inline-block;margin-bottom:0;}button{border-radius:0;}button:focus-visible{outline:1px dotted;outline:5px auto -webkit-focus-ring-color;}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit;}button,input{overflow:visible;}button,select{text-transform:none;}button,html [type='button'],[type='reset'],[type='submit']{-webkit-appearance:button;}input[type='radio'],input[type='checkbox']{box-sizing:border-box;padding:0;}input[type='date'],input[type='time'],input[type='datetime-local'],input[type='month']{-webkit-appearance:listbox;}textarea{overflow:auto;resize:vertical;}fieldset{min-width:0;padding:0;margin:0;border:0;}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:0.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal;}progress{vertical-align:baseline;}[type='number']::-webkit-inner-spin-button,[type='number']::-webkit-outer-spin-button{height:auto;}[type='search']{outline-offset:-2px;-webkit-appearance:none;}[type='search']::-webkit-search-cancel-button,[type='search']::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button;}output{display:inline-block;}summary{display:list-item;cursor:pointer;}template{display:none;}[hidden]{display:none!important;};label:rebootStyles;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nbG9iYWxzL1JlYm9vdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS3dCIiwiZmlsZSI6Ii4uLy4uL3NyYy9nbG9iYWxzL1JlYm9vdC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIEdsb2JhbCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGNvcmVUaGVtZSBhcyB0aGVtZSB9IGZyb20gJy4uL3RoZW1lcyc7XG5cbmNvbnN0IHJlYm9vdFN0eWxlcyA9IGNzc2BcbiAgLyoqXG4gICogaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3R3YnMvYm9vdHN0cmFwL3Y0LWRldi9zY3NzL19yZWJvb3Quc2Nzc1xuICAqIFJlYm9vdFxuICAqIE5vcm1hbGl6YXRpb24gb2YgSFRNTCBlbGVtZW50cywgbWFudWFsbHkgZm9ya2VkIGZyb20gTm9ybWFsaXplLmNzcyB0byByZW1vdmVcbiAgKiBzdHlsZXMgdGFyZ2V0aW5nIGlycmVsZXZhbnQgYnJvd3NlcnMgd2hpbGUgYXBwbHlpbmcgbmV3IHN0eWxlcy5cbiAgKiBOb3JtYWxpemUgaXMgbGljZW5zZWQgTUlULiBodHRwczovL2dpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzXG4gICogRG9jdW1lbnRcbiAgKiAxIENoYW5nZSBmcm9tICdib3gtc2l6aW5nOiBjb250ZW50LWJveCcgc28gdGhhdCAnd2lkdGgnIGlzIGFmZmVjdGVkIGJ5ICdwYWRkaW5nJyBhbmQgJ2JvcmRlcicuXG4gICogMiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzLlxuICAqIDMgQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICAqIDQgUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gICogNSBTZXR0aW5nIEB2aWV3cG9ydCBjYXVzZXMgc2Nyb2xsYmFycyB0byBvdmVybGFwIGNvbnRlbnQgaW4gSUUxMSBhbmQgRWRnZSwgc29cbiAgKiAgICB3ZSBmb3JjZSBhIG5vbi1vdmVybGFwcGluZywgbm9uLWF1dG8taGlkaW5nIHNjcm9sbGJhciB0byBjb3VudGVyYWN0LlxuICAqIDYgQ2hhbmdlIHRoZSBkZWZhdWx0IHRhcCBoaWdobGlnaHQgdG8gYmUgY29tcGxldGVseSB0cmFuc3BhcmVudCBpbiBpT1MuXG4qL1xuXG4gICosXG4gICo6OmJlZm9yZSxcbiAgKjo6YWZ0ZXIge1xuICAgIC8qIFRoaXMgaXMgY2hhbmdlZCBmcm9tIGNvbnRlbnQtYm94IHRvIGJvcmRlci1ib3ggYXMgYWxsIG9mIG91ciBjc3MgcmVsaWVzIG9uIGl0ICovXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyoqIDEgKi9cbiAgfVxuXG4gIGh0bWwge1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiogMiAqL1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiogMyAqL1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyoqIDQgKi9cbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyoqIDQgKi9cbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IHNjcm9sbGJhcjsgLyoqIDUgKi9cbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7IC8qKiA2ICovXG4gIH1cblxuICAvKipTaGltIGZvciBcIm5ld1wiIEhUTUw1IHN0cnVjdHVyYWwgZWxlbWVudHMgdG8gZGlzcGxheSBjb3JyZWN0bHkgKElFMTAsIG9sZGVyIGJyb3dzZXJzKSAqL1xuXG4gIGFydGljbGUsXG4gIGFzaWRlLFxuICBkaWFsb2csXG4gIGZpZ2NhcHRpb24sXG4gIGZpZ3VyZSxcbiAgZm9vdGVyLFxuICBoZWFkZXIsXG4gIGhncm91cCxcbiAgbWFpbixcbiAgbmF2LFxuICBzZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAvKiogQm9keVxuICAgMS4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICAgMi4gQXMgYSBiZXN0IHByYWN0aWNlLCBhcHBseSBhIGRlZmF1bHQgXFxgYmFja2dyb3VuZC1jb2xvclxcYC5cbiAgIDMuIFNldCBhbiBleHBsaWNpdCBpbml0aWFsIHRleHQtYWxpZ24gdmFsdWUgc28gdGhhdCB3ZSBjYW4gbGF0ZXIgdXNlIHRoZVxuICAgICAgdGhlIFxcYGluaGVyaXRcXGAgdmFsdWUgb24gdGhpbmdzIGxpa2UgXFxgPHRoPlxcYCBlbGVtZW50cy5cbiAgICovXG5cbiAgYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke3RoZW1lLmZvbnRGYW1pbHkuYmFzZX07XG4gICAgZm9udC13ZWlnaHQ6ICR7dGhlbWUuZm9udFdlaWdodC5iYXNlfTtcbiAgICBsaW5lLWhlaWdodDogJHt0aGVtZS5saW5lSGVpZ2h0LmJhc2V9O1xuICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy50ZXh0fTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmJhY2tncm91bmR9O1xuICB9XG5cbiAgLyogU3VwcHJlc3MgdGhlIGZvY3VzIG91dGxpbmUgb24gZWxlbWVudHMgdGhhdCBjYW5ub3QgYmUgYWNjZXNzZWQgdmlhIGtleWJvYXJkLlxuICBUaGlzIHByZXZlbnRzIGFuIHVud2FudGVkIGZvY3VzIG91dGxpbmUgZnJvbSBhcHBlYXJpbmcgYXJvdW5kIGVsZW1lbnRzIHRoYXRcbiAgbWlnaHQgc3RpbGwgcmVzcG9uZCB0byBwb2ludGVyIGV2ZW50cy5cbiBDcmVkaXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2Jhc2UgKi9cblxuICBbdGFiaW5kZXg9Jy0xJ106Zm9jdXMge1xuICAgIG91dGxpbmU6IDAgIWltcG9ydGFudDtcbiAgfVxuXG4gIC8qXG4gIENvbnRlbnQgZ3JvdXBpbmdcbiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiovXG5cbiAgaHIge1xuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgIC8qIDEgKi9cbiAgICBoZWlnaHQ6IDA7XG4gICAgLyogMiAqL1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG4gIC8qIFR5cG9ncmFwaHkgKi9cbiAgLypcbiAgUmVtb3ZlIHRvcCBtYXJnaW5zIGZyb20gaGVhZGluZ3NcbiAgIEJ5IGRlZmF1bHQsIFxcYDxoMT5cXGAtXFxgPGg2PlxcYCBhbGwgcmVjZWl2ZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW5zLiBXZSBudWtlIHRoZSB0b3BcbiAgbWFyZ2luIGZvciBlYXNpZXIgY29udHJvbCB3aXRoaW4gdHlwZSBzY2FsZXMgYXMgaXQgYXZvaWRzIG1hcmdpbiBjb2xsYXBzaW5nLlxuKi9cblxuICBoMSxcbiAgaDIsXG4gIGgzLFxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG5cbiAgLypcbiAgUmVzZXQgbWFyZ2lucyBvbiBwYXJhZ3JhcGhzXG4gIFNpbWlsYXJseSwgdGhlIHRvcCBtYXJnaW4gb24gXFxgPHA+XFxgcyBnZXQgcmVzZXQuIEhvd2V2ZXIsIHdlIGFsc28gcmVzZXQgdGhlXG4gIGJvdHRvbSBtYXJnaW4gdG8gdXNlIFxcYHJlbVxcYCB1bml0cyBpbnN0ZWFkIG9mIFxcYGVtXFxgLlxuICAqL1xuXG4gIHAge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gIH1cblxuICAvKlxuICBBYmJyZXZpYXRpb25zXG4gIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAgMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAgMy4gQWRkIGV4cGxpY2l0IGN1cnNvciB0byBpbmRpY2F0ZSBjaGFuZ2VkIGJlaGF2aW9yLlxuICA0LiBEdXBsaWNhdGUgYmVoYXZpb3IgdG8gdGhlIGRhdGEtKiBhdHRyaWJ1dGUgZm9yIG91ciB0b29sdGlwIHBsdWdpblxuICAqL1xuXG4gIGFiYnJbdGl0bGVdLFxuICBhYmJyW2RhdGEtb3JpZ2luYWwtdGl0bGVdIHtcbiAgICAvKiA0ICovXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAgIGN1cnNvcjogaGVscDtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICB9XG5cbiAgYWRkcmVzcyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIH1cblxuICBvbCxcbiAgdWwsXG4gIGRsIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIH1cblxuICBvbCBvbCxcbiAgdWwgdWwsXG4gIG9sIHVsLFxuICB1bCBvbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIGR0IHtcbiAgICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0LnRpdGxlfTtcbiAgfVxuXG4gIGRkIHtcbiAgICAvKiBVbmRvIGJyb3dzZXIgZGVmYXVsdCAqL1xuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxuXG4gIGJsb2NrcXVvdGUge1xuICAgIG1hcmdpbjogMCAwIDFyZW07XG4gIH1cblxuICBkZm4ge1xuICAgIC8qIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLSAqL1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgfVxuXG4gIGIsXG4gIHN0cm9uZyB7XG4gICAgLyogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaSAqL1xuICAgIGZvbnQtd2VpZ2h0OiAke3RoZW1lLmZvbnRXZWlnaHQudGl0bGV9O1xuICB9XG5cbiAgc21hbGwge1xuICAgIC8qIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzICovXG4gICAgZm9udC1zaXplOiAke3RoZW1lLmZvbnRTaXplWzE0XX07XG4gIH1cblxuICAvKlxuIFByZXZlbnQgXFxgc3ViXFxgIGFuZCBcXGBzdXBcXGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gIGFsbCBicm93c2Vycy5cbiovXG4gIHN1YixcbiAgc3VwIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICB9XG5cbiAgc3ViIHtcbiAgICBib3R0b206IC0wLjI1ZW07XG4gIH1cbiAgc3VwIHtcbiAgICB0b3A6IC0wLjVlbTtcbiAgfVxuXG4gIC8qXG4gTGlua3NcbiAgUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4qL1xuXG4gIGEge1xuICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cblxuICAvKlxuICBBbmQgdW5kbyB0aGVzZSBzdHlsZXMgZm9yIHBsYWNlaG9sZGVyIGxpbmtzL25hbWVkIGFuY2hvcnMgKHdpdGhvdXQgaHJlZilcbiAgd2hpY2ggaGF2ZSBub3QgYmVlbiBtYWRlIGV4cGxpY2l0bHkga2V5Ym9hcmQtZm9jdXNhYmxlICh3aXRob3V0IHRhYmluZGV4KS5cbiAgSXQgd291bGQgYmUgbW9yZSBzdHJhaWdodGZvcndhcmQgdG8ganVzdCB1c2UgYVtocmVmXSBpbiBwcmV2aW91cyBibG9jaywgYnV0IHRoYXRcbiAgY2F1c2VzIHNwZWNpZmljaXR5IGlzc3VlcyBpbiBtYW55IG90aGVyIHN0eWxlcyB0aGF0IGFyZSB0b28gY29tcGxleCB0byBmaXguXG4gICovXG5cbiAgYTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSkge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxuICB9XG5cbiAgLyogQ29kZSAqL1xuXG4gIHByZSxcbiAgY29kZSxcbiAga2JkLFxuICBzYW1wIHtcbiAgICAvKiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLiAqL1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgICAvKiBDb3JyZWN0IHRoZSBvZGQgXFxgZW1cXGAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLiovXG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cbiAgLyogc3R5bGVsaW50LWVuYWJsZSBmb250LWZhbWlseS1uby1kdXBsaWNhdGUtbmFtZXMgKi9cblxuICBwcmUge1xuICAgIC8qIFJlbW92ZSBicm93c2VyIGRlZmF1bHQgdG9wIG1hcmdpbiAqL1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgLyogUmVzZXQgYnJvd3NlciBkZWZhdWx0IG9mIFxcYDFlbVxcYCB0byB1c2UgXFxgcmVtXFxgcyAqL1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgLyogRG9uJ3QgYWxsb3cgY29udGVudCB0byBicmVhayBvdXRzaWRlICovXG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgLyogV2UgaGF2ZSBAdmlld3BvcnQgc2V0IHdoaWNoIGNhdXNlcyBzY3JvbGxiYXJzIHRvIG92ZXJsYXAgY29udGVudCBpbiBJRTExIGFuZCBFZGdlLCBzbyAqL1xuICAgIC8qIHdlIGZvcmNlIGEgbm9uLW92ZXJsYXBwaW5nLCBub24tYXV0by1oaWRpbmcgc2Nyb2xsYmFyIHRvIGNvdW50ZXJhY3QuICovXG4gICAgLW1zLW92ZXJmbG93LXN0eWxlOiBzY3JvbGxiYXI7XG4gIH1cblxuICAvKlxuRmlndXJlc1xuKi9cbiAgZmlndXJlIHtcbiAgICAvKiBBcHBseSBhIGNvbnNpc3RlbnQgbWFyZ2luIHN0cmF0ZWd5IChtYXRjaGVzIG91ciB0eXBlIHN0eWxlcykuICovXG4gICAgbWFyZ2luOiAwIDAgMXJlbTtcbiAgfVxuXG4gIC8qIEltYWdlcyBhbmQgY29udGVudCAqL1xuICBpbWcge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLyogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uICovXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xuICB9XG5cbiAgc3ZnOm5vdCg6cm9vdCkge1xuICAgIC8qIEhpZGUgdGhlIG92ZXJmbG93IGluIElFICovXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuXG4gIC8qIFRhYmxlcyAgKi9cbiAgdGFibGUge1xuICAgIC8qICogIFByZXZlbnQgZG91YmxlIGJvcmRlcnMgKi9cbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB9XG5cbiAgY2FwdGlvbiB7XG4gICAgcGFkZGluZy10b3A6ICR7dGhlbWUuc3BhY2luZ1sxNl19O1xuICAgIHBhZGRpbmctYm90dG9tOiAke3RoZW1lLnNwYWNpbmdbMTZdfTtcbiAgICBjb2xvcjogJHt0aGVtZS5zcGFjaW5nWzE2XX07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBjYXB0aW9uLXNpZGU6IGJvdHRvbTtcbiAgfVxuXG4gIHRoIHtcbiAgICAvKiAgTWF0Y2hlcyBkZWZhdWx0IFxcYDx0ZD5cXGAgYWxpZ25tZW50IGJ5IGluaGVyaXRpbmcgZnJvbSB0aGUgXFxgPGJvZHk+XFxgLCBvciB0aGVcbiAgY2xvc2VzdCBwYXJlbnQgd2l0aCBhIHNldCBcXGB0ZXh0LWFsaWduXFxgLiAqL1xuICAgIHRleHQtYWxpZ246IGluaGVyaXQ7XG4gIH1cblxuICAvKiBGb3JtcyAqL1xuXG4gIGxhYmVsIHtcbiAgICAvKiBBbGxvdyBsYWJlbHMgdG8gdXNlIFxcYG1hcmdpblxcYCBmb3Igc3BhY2luZy4gKi9cbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIC8qIFJlbW92ZSB0aGUgZGVmYXVsdCBcXGBib3JkZXItcmFkaXVzXFxgIHRoYXQgbWFjT1MgQ2hyb21lIGFkZHMuXG4gRGV0YWlscyBhdCBodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvaXNzdWVzLzI0MDkzICAgICAqL1xuXG4gIGJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxuXG4gIC8qXG4gIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IFxcYGJ1dHRvblxcYCBiYWNrZ3JvdW5kXG4gIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IFxcYGJ1dHRvblxcYCBmb2N1cyBzdHlsZXMuXG4gIENyZWRpdDogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvYmFzZS9cbiAgKi9cblxuICBidXR0b246Zm9jdXMtdmlzaWJsZSB7XG4gICAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG4gIH1cblxuICBpbnB1dCxcbiAgYnV0dG9uLFxuICBzZWxlY3QsXG4gIG9wdGdyb3VwLFxuICB0ZXh0YXJlYSB7XG4gICAgLyogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpICovXG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgfVxuXG4gIGJ1dHRvbixcbiAgaW5wdXQge1xuICAgIC8qIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgKi9cbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgfVxuXG4gIGJ1dHRvbixcbiAgc2VsZWN0IHtcbiAgICAvKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3ggKi9cbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgfVxuXG4gIC8qXG4gIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgXFxgYXVkaW9cXGAgYW5kIFxcYHZpZGVvXFxgXG4gICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAqL1xuICBidXR0b24sXG4gIGh0bWwgW3R5cGU9J2J1dHRvbiddLFxuICBbdHlwZT0ncmVzZXQnXSxcbiAgW3R5cGU9J3N1Ym1pdCddIHtcbiAgICAvKiAyICovXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIH1cblxuICBpbnB1dFt0eXBlPSdyYWRpbyddLFxuICBpbnB1dFt0eXBlPSdjaGVja2JveCddIHtcbiAgICAvKiAgMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtICovXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAvKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtICovXG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gIGlucHV0W3R5cGU9J2RhdGUnXSxcbiAgaW5wdXRbdHlwZT0ndGltZSddLFxuICBpbnB1dFt0eXBlPSdkYXRldGltZS1sb2NhbCddLFxuICBpbnB1dFt0eXBlPSdtb250aCddIHtcbiAgICAvKiBSZW1vdmUgdGhlIGRlZmF1bHQgYXBwZWFyYW5jZSBvZiB0ZW1wb3JhbCBpbnB1dHMgdG8gYXZvaWQgYSBNb2JpbGUgU2FmYXJpXG4gICAgYnVnIHdoZXJlIHNldHRpbmcgYSBjdXN0b20gbGluZS1oZWlnaHQgcHJldmVudHMgdGV4dCBmcm9tIGJlaW5nIHZlcnRpY2FsbHlcbiAgICBjZW50ZXJlZCB3aXRoaW4gdGhlIGlucHV0LlxuICAgIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM5ODQ4XG4gICAgYW5kIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9pc3N1ZXMvMTEyNjYgKi9cbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGxpc3Rib3g7XG4gIH1cblxuICB0ZXh0YXJlYSB7XG4gICAgLyogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS4gKi9cbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICAvKiBUZXh0YXJlYXMgc2hvdWxkIHJlYWxseSBvbmx5IHJlc2l6ZSB2ZXJ0aWNhbGx5IHNvIHRoZXkgZG9uJ3QgYnJlYWsgdGhlaXIgKGhvcml6b250YWwpIGNvbnRhaW5lcnMuICovXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgfVxuXG4gIGZpZWxkc2V0IHtcbiAgICAvKiBCcm93c2VycyBzZXQgYSBkZWZhdWx0IFxcYG1pbi13aWR0aDogbWluLWNvbnRlbnQ7XFxgIG9uIGZpZWxkc2V0cyxcbiAgdW5saWtlIGUuZy4gXFxgPGRpdj5cXGBzLCB3aGljaCBoYXZlIFxcYG1pbi13aWR0aDogMDtcXGAgYnkgZGVmYXVsdC5cbiAgU28gd2UgcmVzZXQgdGhhdCB0byBlbnN1cmUgZmllbGRzZXRzIGJlaGF2ZSBtb3JlIGxpa2UgYSBzdGFuZGFyZCBibG9jayBlbGVtZW50LlxuICBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy8xMjM1OVxuICBhbmQgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvI3RoZS1maWVsZHNldC1hbmQtbGVnZW5kLWVsZW1lbnRzICovXG4gICAgbWluLXdpZHRoOiAwO1xuICAgIC8qIFJlc2V0IHRoZSBkZWZhdWx0IG91dGxpbmUgYmVoYXZpb3Igb2YgZmllbGRzZXRzIHNvIHRoZXkgZG9uJ3QgYWZmZWN0IHBhZ2UgbGF5b3V0LiovXG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAwO1xuICB9XG5cbiAgLyogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS4gKi9cbiAgLyogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBcXGBmaWVsZHNldFxcYCBlbGVtZW50cyBpbiBJRS4gKi9cbiAgbGVnZW5kIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvKiAxICovXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgIC8qIDIgKi9cbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAvKiAxICovXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgfVxuXG4gIHByb2dyZXNzIHtcbiAgICAvKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLiAqL1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgfVxuXG4gIC8qIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS4gKi9cbiAgW3R5cGU9J251bWJlciddOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuICBbdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuXG4gIFt0eXBlPSdzZWFyY2gnXSB7XG4gICAgLypcbiAgICBUaGlzIG92ZXJyaWRlcyB0aGUgZXh0cmEgcm91bmRlZCBjb3JuZXJzIG9uIHNlYXJjaCBpbnB1dHMgaW4gaU9TIHNvIHRoYXQgb3VyXG4gICAgXFxgLmZvcm0tY29udHJvbFxcYCBjbGFzcyBjYW4gcHJvcGVybHkgc3R5bGUgdGhlbS4gTm90ZSB0aGF0IHRoaXMgY2Fubm90IHNpbXBseVxuICAgIGJlIGFkZGVkIHRvIFxcYC5mb3JtLWNvbnRyb2xcXGAgYXMgaXQncyBub3Qgc3BlY2lmaWMgZW5vdWdoLiBGb3IgZGV0YWlscywgc2VlXG4gICAgaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy8xMTU4Ni5cbiAgICAqL1xuICAgIC8qIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLiAqL1xuICAgIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuXG4gIC8qIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuICovXG5cbiAgW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuICBbdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxuXG4gIC8qXG4gIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gXFxgaW5oZXJpdFxcYCBpbiBTYWZhcmkuXG4gICovXG4gIDo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAgIC8qIDIgKi9cbiAgICBmb250OiBpbmhlcml0O1xuICAgIC8qIDEgKi9cbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgfVxuXG4gIC8qIENvcnJlY3QgZWxlbWVudCBkaXNwbGF5cyAqL1xuXG4gIG91dHB1dCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG5cbiAgc3VtbWFyeSB7XG4gICAgLyogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzICovXG4gICAgZGlzcGxheTogbGlzdC1pdGVtO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIHRlbXBsYXRlIHtcbiAgICAvKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAqL1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAvKlxuICBBbHdheXMgaGlkZSBhbiBlbGVtZW50IHdpdGggdGhlIFxcYGhpZGRlblxcYCBIVE1MIGF0dHJpYnV0ZSAoZnJvbSBQdXJlQ1NTKS5cbiAgTmVlZGVkIGZvciBwcm9wZXIgZGlzcGxheSBpbiBJRSAxMC0uXG4gICovXG4gIFtoaWRkZW5dIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBSZWJvb3QgPSAoKSA9PiA8R2xvYmFsIHN0eWxlcz17cmVib290U3R5bGVzfSAvPjtcbiJdfQ== */\"));\nexport var Reboot = function Reboot() {\n  return /*#__PURE__*/React.createElement(Global, {\n    styles: rebootStyles\n  });\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/@codecademy/gamut-styles/dist/globals/Reboot.js"],"names":["css","Global","React","coreTheme","theme","rebootStyles","fontFamily","base","fontWeight","lineHeight","colors","text","background","spacing","title","fontSize","primary","process","env","NODE_ENV","Reboot","createElement","styles"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,WAAnC;AACA,IAAIC,YAAY,GAAG,aAAaL,GAAG,CAAC,isCAAD,EAAosCI,KAAK,CAACE,UAAN,CAAiBC,IAArtC,EAA2tC,eAA3tC,EAA4uCH,KAAK,CAACI,UAAN,CAAiBD,IAA7vC,EAAmwC,eAAnwC,EAAoxCH,KAAK,CAACK,UAAN,CAAiBF,IAAryC,EAA2yC,SAA3yC,EAAszCH,KAAK,CAACM,MAAN,CAAaC,IAAn0C,EAAy0C,oCAAz0C,EAA+2CP,KAAK,CAACM,MAAN,CAAaE,UAA53C,EAAw4C,iKAAx4C,EAA2iDR,KAAK,CAACS,OAAN,CAAc,EAAd,CAA3iD,EAA8jD,sSAA9jD,EAAs2DT,KAAK,CAACI,UAAN,CAAiBM,KAAv3D,EAA83D,mHAA93D,EAAm/DV,KAAK,CAACI,UAAN,CAAiBM,KAApgE,EAA2gE,oBAA3gE,EAAiiEV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAjiE,EAAqjE,+HAArjE,EAAsrEX,KAAK,CAACM,MAAN,CAAaM,OAAnsE,EAA4sE,4oBAA5sE,EAA01FZ,KAAK,CAACS,OAAN,CAAc,EAAd,CAA11F,EAA62F,kBAA72F,EAAi4FT,KAAK,CAACS,OAAN,CAAc,EAAd,CAAj4F,EAAo5F,SAAp5F,EAA+5FT,KAAK,CAACS,OAAN,CAAc,EAAd,CAA/5F,EAAk7F,s5CAAs5CI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,qghBAAn8C,CAAl7F,CAAnC;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,GAAkB;AACpC,SAAO,aAAalB,KAAK,CAACmB,aAAN,CAAoBpB,MAApB,EAA4B;AAC9CqB,IAAAA,MAAM,EAAEjB;AADsC,GAA5B,CAApB;AAGD,CAJM","sourcesContent":["import { css, Global } from '@emotion/react';\nimport React from 'react';\nimport { coreTheme as theme } from '../themes';\nvar rebootStyles = /*#__PURE__*/css(\"/**\\n  * https://raw.githubusercontent.com/twbs/bootstrap/v4-dev/scss/_reboot.scss\\n  * Reboot\\n  * Normalization of HTML elements, manually forked from Normalize.css to remove\\n  * styles targeting irrelevant browsers while applying new styles.\\n  * Normalize is licensed MIT. https://github.com/necolas/normalize.css\\n  * Document\\n  * 1 Change from 'box-sizing: content-box' so that 'width' is affected by 'padding' and 'border'.\\n  * 2 Change the default font family in all browsers.\\n  * 3 Correct the line height in all browsers.\\n  * 4 Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.\\n  * 5 Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so\\n  *    we force a non-overlapping, non-auto-hiding scrollbar to counteract.\\n  * 6 Change the default tap highlight to be completely transparent in iOS.\\n*/*,*::before,*::after{box-sizing:border-box;}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block;}body{margin:0;font-family:\", theme.fontFamily.base, \";font-weight:\", theme.fontWeight.base, \";line-height:\", theme.lineHeight.base, \";color:\", theme.colors.text, \";text-align:left;background-color:\", theme.colors.background, \";}[tabindex='-1']:focus{outline:0!important;}hr{box-sizing:content-box;height:0;overflow:visible;}h1,h2,h3,h4,h5,h6{margin-top:0;}p{margin-top:0;margin-bottom:\", theme.spacing[16], \";}abbr[title],abbr[data-original-title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0;}address{margin-bottom:1rem;font-style:normal;line-height:inherit;}ol,ul,dl{margin-top:0;margin-bottom:1rem;}ol ol,ul ul,ol ul,ul ol{margin-bottom:0;}dt{font-weight:\", theme.fontWeight.title, \";}dd{margin-bottom:0.5rem;margin-left:0;}blockquote{margin:0 0 1rem;}dfn{font-style:italic;}b,strong{font-weight:\", theme.fontWeight.title, \";}small{font-size:\", theme.fontSize[14], \";}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline;}sub{bottom:-0.25em;}sup{top:-0.5em;}a{color:\", theme.colors.primary, \";text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects;&:hover{text-decoration:underline;}}a:not([href]):not([tabindex]){color:inherit;text-decoration:none;&:hover,&:focus{color:inherit;text-decoration:none;}&:focus{outline:0;}}pre,code,kbd,samp{font-family:monospace,monospace;font-size:1em;}pre{margin-top:0;margin-bottom:1rem;overflow:auto;/* We have @viewport set which causes scrollbars to overlap content in IE11 and Edge, so */-ms-overflow-style:scrollbar;}figure{margin:0 0 1rem;}img{vertical-align:middle;border-style:none;}svg:not(:root){overflow:hidden;}table{border-collapse:collapse;}caption{padding-top:\", theme.spacing[16], \";padding-bottom:\", theme.spacing[16], \";color:\", theme.spacing[16], \";text-align:left;caption-side:bottom;}th{text-align:inherit;}label{display:inline-block;margin-bottom:0;}button{border-radius:0;}button:focus-visible{outline:1px dotted;outline:5px auto -webkit-focus-ring-color;}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit;}button,input{overflow:visible;}button,select{text-transform:none;}button,html [type='button'],[type='reset'],[type='submit']{-webkit-appearance:button;}input[type='radio'],input[type='checkbox']{box-sizing:border-box;padding:0;}input[type='date'],input[type='time'],input[type='datetime-local'],input[type='month']{-webkit-appearance:listbox;}textarea{overflow:auto;resize:vertical;}fieldset{min-width:0;padding:0;margin:0;border:0;}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:0.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal;}progress{vertical-align:baseline;}[type='number']::-webkit-inner-spin-button,[type='number']::-webkit-outer-spin-button{height:auto;}[type='search']{outline-offset:-2px;-webkit-appearance:none;}[type='search']::-webkit-search-cancel-button,[type='search']::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button;}output{display:inline-block;}summary{display:list-item;cursor:pointer;}template{display:none;}[hidden]{display:none!important;};label:rebootStyles;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nexport var Reboot = function Reboot() {\n  return /*#__PURE__*/React.createElement(Global, {\n    styles: rebootStyles\n  });\n};"]},"metadata":{},"sourceType":"module"}