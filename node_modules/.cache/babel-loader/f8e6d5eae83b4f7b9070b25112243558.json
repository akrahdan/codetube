{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Tabs/TabList/index.tsx\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { Tab } from '../Tab';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultProps = {\n  createBaseId: i => `${i}`,\n  activeTabIndex: 0,\n  onChange: () => {}\n};\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const TabList = ({\n  activeTabIndex,\n  center,\n  children,\n  className,\n  createBaseId,\n  maxWidth,\n  onChange\n}) => {\n  const classes = cx(styles.tabList, className, {\n    [styles.center]: center\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    role: \"tablist\",\n    style: {\n      maxWidth\n    },\n    children: React.Children.toArray(children).filter(c => c && c.type === Tab).map((tab, index) => {\n      const baseId = createBaseId ? createBaseId(index) : index;\n      return /*#__PURE__*/React.cloneElement(tab, {\n        active: activeTabIndex === index,\n        tabIndex: index,\n        onChange,\n        id: baseId,\n        key: baseId\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = TabList;\nTabList.defaultProps = defaultProps;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabList\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Tabs/TabList/index.tsx"],"names":["cx","React","Tab","styles","defaultProps","createBaseId","i","activeTabIndex","onChange","TabList","center","children","className","maxWidth","classes","tabList","Children","toArray","filter","c","type","map","tab","index","baseId","cloneElement","active","tabIndex","id","key"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkE,OAAlE;AAEA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAGC,CAAD,IAAgB,GAAEA,CAAE,EADf;AAEnBC,EAAAA,cAAc,EAAE,CAFG;AAGnBC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHC,CAArB;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAwC,GAAG,CAAC;AACvDF,EAAAA,cADuD;AAEvDG,EAAAA,MAFuD;AAGvDC,EAAAA,QAHuD;AAIvDC,EAAAA,SAJuD;AAKvDP,EAAAA,YALuD;AAMvDQ,EAAAA,QANuD;AAOvDL,EAAAA;AAPuD,CAAD,KAQlD;AACJ,QAAMM,OAAO,GAAGd,EAAE,CAACG,MAAM,CAACY,OAAR,EAAiBH,SAAjB,EAA4B;AAAE,KAACT,MAAM,CAACO,MAAR,GAAiBA;AAAnB,GAA5B,CAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEI,OAAhB;AAAyB,IAAA,IAAI,EAAC,SAA9B;AAAwC,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA/C;AAAA,cACIZ,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBN,QAAvB,CAAD,CACEO,MADF,CACUC,CAAD,IAAqBA,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWlB,GAD9C,EAEEmB,GAFF,CAEM,CAACC,GAAD,EAAoBC,KAApB,KAAsC;AACzC,YAAMC,MAAM,GAAGnB,YAAY,GAAGA,YAAY,CAACkB,KAAD,CAAf,GAAyBA,KAApD;AACA,0BAAOtB,KAAK,CAACwB,YAAN,CAAmBH,GAAnB,EAAwB;AAC7BI,QAAAA,MAAM,EAAEnB,cAAc,KAAKgB,KADE;AAE7BI,QAAAA,QAAQ,EAAEJ,KAFmB;AAG7Bf,QAAAA,QAH6B;AAI7BoB,QAAAA,EAAE,EAAEJ,MAJyB;AAK7BK,QAAAA,GAAG,EAAEL;AALwB,OAAxB,CAAP;AAOD,KAXF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1BM;KAAMf,O;AA4BbA,OAAO,CAACL,YAAR,GAAuBA,YAAvB","sourcesContent":["import cx from 'classnames';\nimport React, { FunctionComponent, ReactElement, ReactNode } from 'react';\n\nimport { Tab } from '../Tab';\nimport styles from './styles.module.scss';\n\nexport type TabListProps = {\n  activeTabIndex?: number;\n  center?: boolean;\n  children: ReactNode;\n  className?: string;\n  createBaseId?: (index: number) => string;\n  maxWidth?: string;\n  onChange?: () => void;\n};\n\nconst defaultProps = {\n  createBaseId: (i: number) => `${i}`,\n  activeTabIndex: 0,\n  onChange: () => {},\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const TabList: FunctionComponent<TabListProps> = ({\n  activeTabIndex,\n  center,\n  children,\n  className,\n  createBaseId,\n  maxWidth,\n  onChange,\n}) => {\n  const classes = cx(styles.tabList, className, { [styles.center]: center });\n  return (\n    <div className={classes} role=\"tablist\" style={{ maxWidth }}>\n      {(React.Children.toArray(children) as any)\n        .filter((c: ReactElement) => c && c.type === Tab)\n        .map((tab: ReactElement, index: number) => {\n          const baseId = createBaseId ? createBaseId(index) : index;\n          return React.cloneElement(tab, {\n            active: activeTabIndex === index,\n            tabIndex: index,\n            onChange,\n            id: baseId,\n            key: baseId,\n          });\n        })}\n    </div>\n  );\n};\n\nTabList.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}