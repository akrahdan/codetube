{"ast":null,"code":"import{isString}from'lodash';import React from'react';import{Radio,RadioGroup}from'../../../Form';import{jsx as _jsx}from\"react/jsx-runtime\";export var GridFormRadioGroupInput=function GridFormRadioGroupInput(_ref){var _field$ariaLabel;var className=_ref.className,field=_ref.field,register=_ref.register,setValue=_ref.setValue,showRequired=_ref.showRequired;var ariaLabel=(_field$ariaLabel=field.ariaLabel)!==null&&_field$ariaLabel!==void 0?_field$ariaLabel:isString(field.label)?field.label:undefined;return/*#__PURE__*/_jsx(RadioGroup,{className:className,htmlForPrefix:field.name,name:field.name,role:\"radiogroup\",\"aria-label\":ariaLabel,\"aria-required\":showRequired,onChange:function onChange(event){var _field$onUpdate;var value=event.target.value;setValue(field.name,value);(_field$onUpdate=field.onUpdate)===null||_field$onUpdate===void 0?void 0:_field$onUpdate.call(field,value);},children:field.options.map(function(_ref2){var label=_ref2.label,value=_ref2.value;return/*#__PURE__*/_jsx(Radio,{disabled:field.disabled,label:label,ref:register(field.validation),value:value,id:field.id},value);})});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/GridForm/GridFormInputGroup/GridFormRadioGroupInput/index.tsx"],"names":["isString","React","Radio","RadioGroup","GridFormRadioGroupInput","className","field","register","setValue","showRequired","ariaLabel","label","undefined","name","event","value","target","onUpdate","options","map","disabled","validation","id"],"mappings":"AAAA,OAASA,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,eAAlC,C,2CAWA,MAAO,IAAMC,CAAAA,uBAA+D,CAAG,QAAlEA,CAAAA,uBAAkE,MAMzE,yBALJC,CAAAA,SAKI,MALJA,SAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,YACI,MADJA,YACI,CACJ,GAAMC,CAAAA,SAA6B,mBACjCJ,KAAK,CAACI,SAD2B,qDACbV,QAAQ,CAACM,KAAK,CAACK,KAAP,CAAR,CAAwBL,KAAK,CAACK,KAA9B,CAAsCC,SAD5D,CAGA,mBACE,KAAC,UAAD,EACE,SAAS,CAAEP,SADb,CAEE,aAAa,CAAEC,KAAK,CAACO,IAFvB,CAGE,IAAI,CAAEP,KAAK,CAACO,IAHd,CAIE,IAAI,CAAC,YAJP,CAKE,aAAYH,SALd,CAME,gBAAeD,YANjB,CAOE,QAAQ,CAAE,kBAACK,KAAD,CAAW,wBACXC,CAAAA,KADW,CACDD,KAAK,CAACE,MADL,CACXD,KADW,CAEnBP,QAAQ,CAACF,KAAK,CAACO,IAAP,CAAaE,KAAb,CAAR,CACA,iBAAAT,KAAK,CAACW,QAAN,+DAAAX,KAAK,CAAYS,KAAZ,CAAL,CACD,CAXH,UAaGT,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkB,mBAAGR,CAAAA,KAAH,OAAGA,KAAH,CAAUI,KAAV,OAAUA,KAAV,oBACjB,KAAC,KAAD,EACE,QAAQ,CAAET,KAAK,CAACc,QADlB,CAGE,KAAK,CAAET,KAHT,CAIE,GAAG,CAAEJ,QAAQ,CAACD,KAAK,CAACe,UAAP,CAJf,CAKE,KAAK,CAAEN,KALT,CAME,EAAE,CAAET,KAAK,CAACgB,EANZ,EAEOP,KAFP,CADiB,EAAlB,CAbH,EADF,CA0BD,CApCM","sourcesContent":["import { isString } from 'lodash';\nimport React from 'react';\nimport { UseFormMethods } from 'react-hook-form';\n\nimport { Radio, RadioGroup } from '../../../Form';\nimport { GridFormRadioGroupField } from '../../types';\n\nexport type GridFormRadioGroupInputProps = {\n  className?: string;\n  field: GridFormRadioGroupField;\n  register: UseFormMethods['register'];\n  setValue: (name: string, value: string) => void;\n  showRequired?: boolean;\n};\n\nexport const GridFormRadioGroupInput: React.FC<GridFormRadioGroupInputProps> = ({\n  className,\n  field,\n  register,\n  setValue,\n  showRequired,\n}) => {\n  const ariaLabel: string | undefined =\n    field.ariaLabel ?? (isString(field.label) ? field.label : undefined);\n\n  return (\n    <RadioGroup\n      className={className}\n      htmlForPrefix={field.name}\n      name={field.name}\n      role=\"radiogroup\"\n      aria-label={ariaLabel}\n      aria-required={showRequired}\n      onChange={(event) => {\n        const { value } = event.target;\n        setValue(field.name, value);\n        field.onUpdate?.(value);\n      }}\n    >\n      {field.options.map(({ label, value }) => (\n        <Radio\n          disabled={field.disabled}\n          key={value}\n          label={label}\n          ref={register(field.validation)}\n          value={value}\n          id={field.id}\n        />\n      ))}\n    </RadioGroup>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}