{"ast":null,"code":"import Uri from'jsuri';export function createQuery(parameters){var queryString=Object.keys(parameters).filter(function(key){return parameters[key];}).map(function(key){return\"\".concat(key,\"=\").concat(parameters[key]);}).join('&');return queryString?\"?\".concat(queryString):null;}export var addParamsAsHash=function addParamsAsHash(url,paramHash){var uri=new Uri(url);Object.keys(paramHash).forEach(function(k){if(paramHash[k]){uri.deleteQueryParam(k);uri.addQueryParam(k,paramHash[k]);}});return uri.toString();};/**\n * @remarks\n * Trailing slashes can compound across redirects and create invalid paths such as \"/learn//\"\n */function removeTrailingSlashes(path){return path==='/'?path:path.replace(/(\\/+)$/,'');}export function normalizeLocationSearch(search){if(!search)return'';return\"?\".concat(search.replace(/\\?/g,''));}export function createRedirectParam(location){if(!location&&typeof window!=='undefined'&&window.location){// eslint-disable-next-line prefer-destructuring\nlocation=window.location;}if(!location){return undefined;}return encodeURIComponent(removeTrailingSlashes(\"\".concat(location.pathname,\"/\").concat(normalizeLocationSearch(location.search))));}export function safeRedirectUrl(rawUri){if(!rawUri)return'';var uri=new Uri(rawUri);// const currentUri = new Uri(\n//   __SSR__ ? cfdata.get('request_href') : window.location.href\n// );\n// const path = currentUri\n//   .setPath(uri.path())\n//   .setHost(__SSR__ ? cfdata.get('request_host') : window.location.hostname)\n//   .setQuery(uri.query())\n//   .toString();\n// return removeTrailingSlashes(path);\n}export function validUrl(str){var pattern=new RegExp('^(https?:\\\\/\\\\/)?'+// protocol\n'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+// domain name\n'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+// OR ip (v4) address\n'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+// port and path\n'(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+// query string\n'(\\\\#[-a-z\\\\d_]*)?$','i');// fragment locator\nreturn pattern.test(str);}export function youtubeOrVimeoUrl(str){if(!validUrl(str))return false;var pattern=new RegExp('(vimeo|youtu.be|youtube)');return pattern.test(str);}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/libs/url.ts"],"names":["Uri","createQuery","parameters","queryString","Object","keys","filter","key","map","join","addParamsAsHash","url","paramHash","uri","forEach","k","deleteQueryParam","addQueryParam","toString","removeTrailingSlashes","path","replace","normalizeLocationSearch","search","createRedirectParam","location","window","undefined","encodeURIComponent","pathname","safeRedirectUrl","rawUri","validUrl","str","pattern","RegExp","test","youtubeOrVimeoUrl"],"mappings":"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","sourcesContent":["import Uri from 'jsuri';\nimport _ from 'lodash';\n\nimport { cfdata } from 'libs/cfdata';\n\nexport function createQuery(parameters: Record<string, string>) {\n  const queryString = Object.keys(parameters)\n    .filter((key) => parameters[key])\n    .map((key) => `${key}=${parameters[key]}`)\n    .join('&');\n  return queryString ? `?${queryString}` : null;\n}\n\nexport const addParamsAsHash = (\n  url: string,\n  paramHash: Record<string, boolean | number | string>\n) => {\n  const uri = new Uri(url);\n  Object.keys(paramHash).forEach((k) => {\n    if (paramHash[k]) {\n      uri.deleteQueryParam(k);\n      uri.addQueryParam(k, paramHash[k]);\n    }\n  });\n  return uri.toString();\n};\n\n/**\n * @remarks\n * Trailing slashes can compound across redirects and create invalid paths such as \"/learn//\"\n */\nfunction removeTrailingSlashes(path: string) {\n  return path === '/' ? path : path.replace(/(\\/+)$/, '');\n}\n\nexport function normalizeLocationSearch(search?: string) {\n  if (!search) return '';\n  return `?${search.replace(/\\?/g, '')}`;\n}\n\nexport function createRedirectParam(\n  location?: Pick<Location, 'pathname' | 'search'>\n) {\n  if (!location && typeof window !== 'undefined' && window.location) {\n    // eslint-disable-next-line prefer-destructuring\n    location = window.location;\n  }\n\n  if (!location) {\n    return undefined;\n  }\n\n  return encodeURIComponent(\n    removeTrailingSlashes(\n      `${location.pathname}/${normalizeLocationSearch(location.search)}`\n    )\n  );\n}\n\nexport function safeRedirectUrl(rawUri: string | undefined) {\n  if (!rawUri) return '';\n  const uri = new Uri(rawUri);\n  // const currentUri = new Uri(\n  //   __SSR__ ? cfdata.get('request_href') : window.location.href\n  // );\n  // const path = currentUri\n  //   .setPath(uri.path())\n  //   .setHost(__SSR__ ? cfdata.get('request_host') : window.location.hostname)\n  //   .setQuery(uri.query())\n  //   .toString();\n\n  // return removeTrailingSlashes(path);\n}\n\nexport function validUrl(str: string) {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return pattern.test(str);\n}\n\nexport function youtubeOrVimeoUrl(str: string) {\n  if (!validUrl(str)) return false;\n  const pattern = new RegExp('(vimeo|youtu.be|youtube)');\n  return pattern.test(str);\n}\n"]},"metadata":{},"sourceType":"module"}