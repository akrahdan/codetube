{"ast":null,"code":"import { getSDK } from './get-sdk';\nimport { KNOWLEDGE_OWL_URL } from '../constants';\nimport { collapseFullscreen } from '../fullscreen-helper';\n\nconst knowledgeOwlPayloadToString = payload => {\n  return Object.keys(payload).filter(key => payload[key] !== undefined).reduce(function (prev, curr) {\n    prev.push(curr + ': ' + payload[curr]);\n    return prev;\n  }, []).join('\\n');\n};\n\nexport const initKnowledgeOwl = async () => {\n  const KnowledgeOwl = await getSDK(KNOWLEDGE_OWL_URL, 'KnowledgeOwl');\n  KnowledgeOwl.init({\n    disableTriggerElement: true\n  });\n  return KnowledgeOwl;\n};\nlet KnowledgeOwl;\n\nconst startKnowledgOwl = async () => {\n  KnowledgeOwl = await initKnowledgeOwl();\n};\n\nstartKnowledgOwl();\nexport const displayFeedbackForm = async props => {\n  if (!KnowledgeOwl) KnowledgeOwl = await startKnowledgOwl();\n  let payload = {\n    autoplay: props.userAutoplaySetting,\n    bufferedTime: props.bufferedTime,\n    bufferedPercent: props.bufferedTime / props.duration * 100,\n    courseTitle: props.courseTitle,\n    clipTitle: props.clipTitle,\n    clipId: props.clipId,\n    closedCaptioningEnabled: props.closedCaptioningEnabled,\n    closedCaptioningLanguage: props.closedCaptioningLanguage.name,\n    currentResolution: props.currentResolution.height,\n    currentTime: props.time,\n    currentSrc: props.urls[props.currentUrlIndex].url,\n    date: new Date().toGMTString(),\n    embeddablePlayer: true,\n    mediaType: props.mediaType,\n    playbackSpeed: props.playbackSpeed,\n    playedPercent: props.time / props.duration * 100,\n    playing: props.playing ? props.playing : false,\n    sessionId: props.sessionId,\n    subtitle: props.subtitle,\n    title: props.title,\n    versions: JSON.stringify(props.versions),\n    userAgent: navigator.userAgent,\n    volume: props.volume\n  };\n  let details = '\\n---- Enter your message above ----\\n' + knowledgeOwlPayloadToString(payload);\n  let data = {\n    initialForm: 'support-now',\n    fields: {\n      custom_contact_field_0: 'VideoNotes',\n      details,\n      requester: ''\n    }\n  };\n  collapseFullscreen();\n  window.dispatchEvent(new window.CustomEvent('knowledge_owl_show', {\n    detail: data\n  }));\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/utilities/feedback.js"],"names":["getSDK","KNOWLEDGE_OWL_URL","collapseFullscreen","knowledgeOwlPayloadToString","payload","Object","keys","filter","key","undefined","reduce","prev","curr","push","join","initKnowledgeOwl","KnowledgeOwl","init","disableTriggerElement","startKnowledgOwl","displayFeedbackForm","props","autoplay","userAutoplaySetting","bufferedTime","bufferedPercent","duration","courseTitle","clipTitle","clipId","closedCaptioningEnabled","closedCaptioningLanguage","name","currentResolution","height","currentTime","time","currentSrc","urls","currentUrlIndex","url","date","Date","toGMTString","embeddablePlayer","mediaType","playbackSpeed","playedPercent","playing","sessionId","subtitle","title","versions","JSON","stringify","userAgent","navigator","volume","details","data","initialForm","fields","custom_contact_field_0","requester","window","dispatchEvent","CustomEvent","detail"],"mappings":"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","sourcesContent":["import { getSDK } from './get-sdk'\nimport { KNOWLEDGE_OWL_URL } from '../constants'\nimport { collapseFullscreen } from '../fullscreen-helper'\n\nconst knowledgeOwlPayloadToString = payload => {\n  return Object.keys(payload)\n    .filter(key => payload[key] !== undefined)\n    .reduce(function(prev, curr) {\n      prev.push(curr + ': ' + payload[curr])\n      return prev\n    }, [])\n    .join('\\n')\n}\n\nexport const initKnowledgeOwl = async () => {\n  const KnowledgeOwl = await getSDK(KNOWLEDGE_OWL_URL, 'KnowledgeOwl')\n  KnowledgeOwl.init({ disableTriggerElement: true })\n  return KnowledgeOwl\n}\n\nlet KnowledgeOwl\n\nconst startKnowledgOwl = async () => {\n  KnowledgeOwl = await initKnowledgeOwl()\n}\n\nstartKnowledgOwl()\n\nexport const displayFeedbackForm = async props => {\n  if (!KnowledgeOwl) KnowledgeOwl = await startKnowledgOwl()\n\n  let payload = {\n    autoplay: props.userAutoplaySetting,\n    bufferedTime: props.bufferedTime,\n    bufferedPercent: (props.bufferedTime / props.duration) * 100,\n    courseTitle: props.courseTitle,\n    clipTitle: props.clipTitle,\n    clipId: props.clipId,\n    closedCaptioningEnabled: props.closedCaptioningEnabled,\n    closedCaptioningLanguage: props.closedCaptioningLanguage.name,\n    currentResolution: props.currentResolution.height,\n    currentTime: props.time,\n    currentSrc: props.urls[props.currentUrlIndex].url,\n    date: new Date().toGMTString(),\n    embeddablePlayer: true,\n    mediaType: props.mediaType,\n    playbackSpeed: props.playbackSpeed,\n    playedPercent: (props.time / props.duration) * 100,\n    playing: props.playing ? props.playing : false,\n    sessionId: props.sessionId,\n    subtitle: props.subtitle,\n    title: props.title,\n    versions: JSON.stringify(props.versions),\n    userAgent: navigator.userAgent,\n    volume: props.volume,\n  }\n\n  let details = '\\n---- Enter your message above ----\\n' + knowledgeOwlPayloadToString(payload)\n\n  let data = {\n    initialForm: 'support-now',\n    fields: {\n      custom_contact_field_0: 'VideoNotes',\n      details,\n      requester: '',\n    },\n  }\n\n  collapseFullscreen()\n\n  window.dispatchEvent(new window.CustomEvent('knowledge_owl_show', { detail: data }))\n}\n"]},"metadata":{},"sourceType":"module"}