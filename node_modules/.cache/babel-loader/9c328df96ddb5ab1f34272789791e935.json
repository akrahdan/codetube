{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Box,CardShell}from'@codecademy/gamut';import{ProLogo}from'@codecademy/gamut-labs';import cx from'classnames';import React from'react';import{CardDescription,CardTag,CardTagList,CardTitle}from'components/CardElements';import{LOADING_COLORS,LoadingScreen}from'components/LoadingScreen';import{TrackLink}from'components/TrackLink';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ProjectCard=function ProjectCard(_ref){var index=_ref.index,project=_ref.project,onClick=_ref.onClick,hoverShadow=_ref.hoverShadow,className=_ref.className,trackingData=_ref.trackingData;var title=project.title,_project$tags=project.tags,tags=_project$tags===void 0?[]:_project$tags,id=project.id,img=project.url,description=project.description;var loadingColor=LOADING_COLORS[index%LOADING_COLORS.length];return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(LoadingScreen,{hiddenObject:title,stretchToFit:true,loadingColor:loadingColor}),/*#__PURE__*/_jsx(TrackLink,{href:'/',to:\"/\",target:'',asButton:true,className:styles.trackLink,onClick:onClick,data:_objectSpread(_objectSpread({},trackingData),{},{distinct_id:id}),children:/*#__PURE__*/_jsxs(CardShell,{variant:hoverShadow?'hoverable':'flat',className:cx(styles.card,className),children:[/*#__PURE__*/_jsx(\"div\",{className:styles.img,style:{backgroundImage:\"url(\".concat(img,\")\")}}),/*#__PURE__*/_jsxs(Box,{p:16,height:\"11.5rem\",overflow:\"hidden\",children:[/*#__PURE__*/_jsx(ProLogo,{variant:\"cutout\"}),/*#__PURE__*/_jsx(CardTitle,{className:styles.title,as:\"h2\",children:title}),/*#__PURE__*/_jsx(CardDescription,{className:styles.description,truncateLine:2,children:description}),/*#__PURE__*/_jsx(CardTagList,{children:tags.map(function(t){return/*#__PURE__*/_jsx(CardTag,{children:t},t);})})]})]})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/ProjectCard/index.tsx"],"names":["Box","CardShell","ProLogo","cx","React","CardDescription","CardTag","CardTagList","CardTitle","LOADING_COLORS","LoadingScreen","TrackLink","styles","ProjectCard","index","project","onClick","hoverShadow","className","trackingData","title","tags","id","img","url","description","loadingColor","length","container","trackLink","distinct_id","card","backgroundImage","map","t"],"mappings":"sKAAA,OAASA,GAAT,CAAcC,SAAd,KAA+B,mBAA/B,CACA,OAASC,OAAT,KAAwB,wBAAxB,CAEA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACEC,eADF,CAEEC,OAFF,CAGEC,WAHF,CAIEC,SAJF,KAKO,yBALP,CAMA,OAASC,cAAT,CAAyBC,aAAzB,KAA8C,0BAA9C,CACA,OAASC,SAAT,KAA0B,sBAA1B,CAGA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAYA,MAAO,IAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAOjD,IANJC,CAAAA,KAMI,MANJA,KAMI,CALJC,OAKI,MALJA,OAKI,CAJJC,OAII,MAJJA,OAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,SAEI,MAFJA,SAEI,CADJC,YACI,MADJA,YACI,IAEFC,CAAAA,KAFE,CAQAL,OARA,CAEFK,KAFE,eAQAL,OARA,CAGFM,IAHE,CAGFA,IAHE,wBAGK,EAHL,eAIFC,EAJE,CAQAP,OARA,CAIFO,EAJE,CAKGC,GALH,CAQAR,OARA,CAKFS,GALE,CAMFC,WANE,CAQAV,OARA,CAMFU,WANE,CAUJ,GAAMC,CAAAA,YAAY,CAAGjB,cAAc,CAACK,KAAK,CAAGL,cAAc,CAACkB,MAAxB,CAAnC,CAEA,mBACE,aAAK,SAAS,CAAEf,MAAM,CAACgB,SAAvB,wBACE,KAAC,aAAD,EACE,YAAY,CAAER,KADhB,CAEE,YAAY,KAFd,CAGE,YAAY,CAAEM,YAHhB,EADF,cAME,KAAC,SAAD,EACE,IAAI,CAAE,GADR,CAEE,EAAE,CAAE,GAFN,CAGE,MAAM,CAAE,EAHV,CAIE,QAAQ,KAJV,CAKE,SAAS,CAAEd,MAAM,CAACiB,SALpB,CAME,OAAO,CAAEb,OANX,CAOE,IAAI,gCAAOG,YAAP,MAAqBW,WAAW,CAAER,EAAlC,EAPN,uBASE,MAAC,SAAD,EACE,OAAO,CAAEL,WAAW,CAAG,WAAH,CAAiB,MADvC,CAEE,SAAS,CAAEd,EAAE,CAACS,MAAM,CAACmB,IAAR,CAAcb,SAAd,CAFf,wBAIE,YACE,SAAS,CAAEN,MAAM,CAACW,GADpB,CAEE,KAAK,CAAE,CAAES,eAAe,eAAST,GAAT,KAAjB,CAFT,EAJF,cAQE,MAAC,GAAD,EAAK,CAAC,CAAE,EAAR,CAAY,MAAM,CAAC,SAAnB,CAA6B,QAAQ,CAAC,QAAtC,wBACG,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,EADH,cAEE,KAAC,SAAD,EAAW,SAAS,CAAEX,MAAM,CAACQ,KAA7B,CAAoC,EAAE,CAAC,IAAvC,UACGA,KADH,EAFF,cAKE,KAAC,eAAD,EAAiB,SAAS,CAAER,MAAM,CAACa,WAAnC,CAAgD,YAAY,CAAE,CAA9D,UACGA,WADH,EALF,cAQE,KAAC,WAAD,WACGJ,IAAI,CAACY,GAAL,CAAS,SAACC,CAAD,qBACR,KAAC,OAAD,WAAkBA,CAAlB,EAAcA,CAAd,CADQ,EAAT,CADH,EARF,GARF,GATF,EANF,GADF,CA0CD,CA7DM","sourcesContent":["import { Box, CardShell } from '@codecademy/gamut';\nimport { ProLogo } from '@codecademy/gamut-labs';\nimport { UserClickData } from '@codecademy/tracking';\nimport cx from 'classnames';\nimport React from 'react';\n\nimport {\n  CardDescription,\n  CardTag,\n  CardTagList,\n  CardTitle,\n} from 'components/CardElements';\nimport { LOADING_COLORS, LoadingScreen } from 'components/LoadingScreen';\nimport { TrackLink } from 'components/TrackLink';\nimport { ProjectContentItem } from 'typings/entities';\n\nimport styles from './styles.module.scss';\nimport { Course } from 'services/projects';\n\nexport type ProjectCardProps = {\n  className?: string;\n  hoverShadow?: boolean;\n  index: number;\n  onClick?: React.MouseEventHandler;\n  project: Course;\n  trackingData: UserClickData;\n};\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  index,\n  project,\n  onClick,\n  hoverShadow,\n  className,\n  trackingData,\n}) => {\n  const {\n    title,\n    tags = [],\n    id,\n    url: img,\n    description,\n \n  } = project;\n\n  const loadingColor = LOADING_COLORS[index % LOADING_COLORS.length];\n\n  return (\n    <div className={styles.container}>\n      <LoadingScreen\n        hiddenObject={title}\n        stretchToFit\n        loadingColor={loadingColor}\n      />\n      <TrackLink\n        href={'/'}\n        to={\"/\"}\n        target={''}\n        asButton\n        className={styles.trackLink}\n        onClick={onClick}\n        data={{ ...trackingData, distinct_id: id }}\n      >\n        <CardShell\n          variant={hoverShadow ? 'hoverable' : 'flat'}\n          className={cx(styles.card, className)}\n        >\n          <div\n            className={styles.img}\n            style={{ backgroundImage: `url(${img})` }}\n          />\n          <Box p={16} height=\"11.5rem\" overflow=\"hidden\">\n            {<ProLogo variant=\"cutout\" />}\n            <CardTitle className={styles.title} as=\"h2\">\n              {title}\n            </CardTitle>\n            <CardDescription className={styles.description} truncateLine={2}>\n              {description}\n            </CardDescription>\n            <CardTagList>\n              {tags.map((t) => (\n                <CardTag key={t}>{t}</CardTag>\n              ))}\n            </CardTagList>\n          </Box>\n        </CardShell>\n      </TrackLink>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}