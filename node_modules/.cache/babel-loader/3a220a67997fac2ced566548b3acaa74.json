{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport cookie from \"react-cookies\";\nexport const authApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/\",\n    prepareHeaders: headers => {\n      const csrfToken = cookie.load(\"csrftoken\");\n\n      if (csrfToken) {\n        headers.set(\"X-CSRFToken\", csrfToken);\n      }\n\n      headers.set(\"Content-Type\", \"application/json\");\n      return headers;\n    }\n  }),\n  tagTypes: [\"Login\"],\n  endpoints: build => ({\n    login: build.mutation({\n      query: body => ({\n        url: \"accounts/login/\",\n        method: \"POST\",\n        body,\n        responseHandler: response => response.json()\n      })\n    }),\n    signup: build.mutation({\n      query: body => ({\n        url: \"accounts/signup/\",\n        method: \"POST\",\n        body,\n        responseHandler: response => response.json()\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useSignupMutation\n} = authApi;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/services/auth.ts"],"names":["createApi","fetchBaseQuery","cookie","authApi","baseQuery","baseUrl","prepareHeaders","headers","csrfToken","load","set","tagTypes","endpoints","build","login","mutation","query","body","url","method","responseHandler","response","json","signup","useLoginMutation","useSignupMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAaA,OAAO,MAAMC,OAAO,GAAGH,SAAS,CAAC;AAC/BI,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE,GADe;AAExBC,IAAAA,cAAc,EAAGC,OAAD,IAAa;AAC3B,YAAMC,SAAS,GAAGN,MAAM,CAACO,IAAP,CAAY,WAAZ,CAAlB;;AACA,UAAID,SAAJ,EAAe;AACbD,QAAAA,OAAO,CAACG,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACD;;AACDD,MAAAA,OAAO,CAACG,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AAEA,aAAOH,OAAP;AACD;AAVuB,GAAD,CADM;AAa/BI,EAAAA,QAAQ,EAAE,CAAC,OAAD,CAbqB;AAc/BC,EAAAA,SAAS,EAAGC,KAAD,KAAY;AACrBC,IAAAA,KAAK,EAAED,KAAK,CAACE,QAAN,CAAsC;AAC3CC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,iBADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBF,QAAAA,IAHgB;AAIhBG,QAAAA,eAAe,EAAGC,QAAD,IAAcA,QAAQ,CAACC,IAAT;AAJf,OAAX;AADoC,KAAtC,CADc;AASrBC,IAAAA,MAAM,EAAEV,KAAK,CAACE,QAAN,CAAwC;AAC9CC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,kBADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBF,QAAAA,IAHgB;AAIhBG,QAAAA,eAAe,EAAGC,QAAD,IAAcA,QAAQ,CAACC,IAAT;AAJf,OAAX;AADuC,KAAxC;AATa,GAAZ;AAdoB,CAAD,CAAzB;AAkCP,OAAO,MAAM;AAAEE,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAA0CtB,OAAhD","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { head } from \"lodash\";\nimport cookie from \"react-cookies\";\n\nexport interface Login {\n  login: string;\n  password: string;\n}\n\nexport interface Signup {\n  email: string;\n  password: string;\n  password2: string;\n}\n\nexport const authApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/\",\n    prepareHeaders: (headers) => {\n      const csrfToken = cookie.load(\"csrftoken\");\n      if (csrfToken) {\n        headers.set(\"X-CSRFToken\", csrfToken);\n      }\n      headers.set(\"Content-Type\", \"application/json\");\n\n      return headers;\n    },\n  }),\n  tagTypes: [\"Login\"],\n  endpoints: (build) => ({\n    login: build.mutation<Login, Partial<Login>>({\n      query: (body) => ({\n        url: \"accounts/login/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    signup: build.mutation<Signup, Partial<Signup>>({\n      query: (body) => ({\n        url: \"accounts/signup/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n  }),\n});\n\nexport const { useLoginMutation, useSignupMutation } = authApi;\n"]},"metadata":{},"sourceType":"module"}