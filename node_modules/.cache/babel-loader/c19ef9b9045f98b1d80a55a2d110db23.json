{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{Anchor,Box,FlexBox,GridBox,Pattern}from'@codecademy/gamut';import{colors}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import darkQuotes from\"../assets/darkQuotes.svg\";import lightQuotes from\"../assets/lightQuotes.svg\";import{Avatar}from'../Avatar';import{Byline}from'../Byline';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var modes={dark:{cardBackground:colors.navy,textColor:colors.beige,quoteIcon:darkQuotes},light:{cardBackground:colors.beige,textColor:colors.navy,quoteIcon:lightQuotes}};var Shadow=styled(Pattern)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block;\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  height: calc(100% - 1rem);\\n  width: calc(100% - 1rem);\\n  color: \",\";\\n\"])),function(_ref){var mode=_ref.mode;return modes[mode].cardBackground;});var TestimonialCard=styled(GridBox)();var TestimonialWrapper=styled(Box)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 100%;\\n\\n  &:hover {\\n    \",\" {\\n      transform: scale(1.02);\\n    }\\n  }\\n\\n  \",\" {\\n    align-content: center;\\n    height: 100%;\\n    \",\"\\n    clip-path: inset(0 1rem 1rem 0);\\n    overflow-y: hidden;\\n    padding-right: 1rem;\\n    padding-bottom: 1rem;\\n    position: relative;\\n    transition: transform 0.3s ease-in-out;\\n  }\\n\"])),TestimonialCard,TestimonialCard,function(_ref2){var mode=_ref2.mode;return\"\\n      background-color: \".concat(modes[mode].cardBackground,\";\\n      color: \").concat(modes[mode].textColor,\";\\n    \");});var QuoteIcon=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin-bottom: -2.5rem;\\n\"])));var QuoteText=styled.q(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  position: relative;\\n  quotes: none;\\n  font-size: \",\";\\n  line-height: \",\";\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.fontSize[26];},function(_ref4){var theme=_ref4.theme;return theme.lineHeight.base;});export var Testimonial=function Testimonial(_ref5){var firstName=_ref5.firstName,lastName=_ref5.lastName,occupation=_ref5.occupation,quote=_ref5.quote,_ref5$mode=_ref5.mode,mode=_ref5$mode===void 0?'light':_ref5$mode,company=_ref5.company,imageUrl=_ref5.imageUrl,longQuote=_ref5.longQuote,href=_ref5.href,onClick=_ref5.onClick;return/*#__PURE__*/_jsxs(TestimonialWrapper,{position:\"relative\",mode:mode,children:[/*#__PURE__*/_jsx(Shadow,{name:\"checkerDense\",mode:mode}),/*#__PURE__*/_jsx(Anchor,{href:href,variant:\"interface\",display:\"block\",height:\"inherit\",onClick:onClick,children:/*#__PURE__*/_jsx(TestimonialCard,{children:/*#__PURE__*/_jsxs(FlexBox,{px:{_:24},pt:{_:32},pb:{_:48},flexDirection:\"row\",flexWrap:\"wrap\",alignItems:\"start\",textColor:mode==='dark'?'beige':'navy',children:[/*#__PURE__*/_jsxs(FlexBox,{flexWrap:\"wrap\",flexGrow:1,flexBasis:\"0\",children:[imageUrl&&/*#__PURE__*/_jsx(Box,{width:\"77px\",height:\"77px\",mb:16,mr:16,children:/*#__PURE__*/_jsx(Avatar,{alt:\"\",src:imageUrl,mode:mode})}),/*#__PURE__*/_jsx(Box,{mb:16,mr:16,minWidth:\"9.5rem\",children:/*#__PURE__*/_jsx(Byline,{firstName:firstName,occupation:occupation,company:company,lastName:lastName})})]}),/*#__PURE__*/_jsx(Box,{flexGrow:9999,flexShrink:1,flexBasis:\"0\",minWidth:\"70%\",children:/*#__PURE__*/_jsxs(Box,{position:\"relative\",children:[/*#__PURE__*/_jsx(QuoteIcon,{alt:\"\",width:\"109px\",height:\"74px\",src:modes[mode].quoteIcon}),/*#__PURE__*/_jsx(QuoteText,{children:longQuote?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{as:\"span\",display:{_:'initial',sm:'none'},children:quote}),/*#__PURE__*/_jsx(Box,{as:\"span\",display:{_:'none',sm:'initial'},children:longQuote})]}):quote})]})})]})})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Testimonial/index.tsx"],"names":["Anchor","Box","FlexBox","GridBox","Pattern","colors","styled","React","Avatar","Byline","modes","dark","cardBackground","navy","textColor","beige","quoteIcon","darkQuotes","light","lightQuotes","Shadow","mode","TestimonialCard","TestimonialWrapper","QuoteIcon","img","QuoteText","q","theme","fontSize","lineHeight","base","Testimonial","firstName","lastName","occupation","quote","company","imageUrl","longQuote","href","onClick","_","sm"],"mappings":"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","sourcesContent":["import {\n  Anchor,\n  Box,\n  FlexBox,\n  GridBox,\n  Pattern,\n  VisualTheme,\n} from '@codecademy/gamut';\nimport { colors } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport darkQuotes from '../assets/darkQuotes.svg';\nimport lightQuotes from '../assets/lightQuotes.svg';\nimport { Avatar } from '../Avatar';\nimport { Byline } from '../Byline';\n\nconst modes = {\n  dark: {\n    cardBackground: colors.navy,\n    textColor: colors.beige,\n    quoteIcon: darkQuotes,\n  },\n  light: {\n    cardBackground: colors.beige,\n    textColor: colors.navy,\n    quoteIcon: lightQuotes,\n  },\n};\n\nconst Shadow = styled(Pattern)<{ mode: VisualTheme }>`\n  display: block;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  height: calc(100% - 1rem);\n  width: calc(100% - 1rem);\n  color: ${({ mode }) => modes[mode].cardBackground};\n`;\n\nconst TestimonialCard = styled(GridBox)();\n\nconst TestimonialWrapper = styled(Box)<{ mode: VisualTheme }>`\n  height: 100%;\n\n  &:hover {\n    ${TestimonialCard} {\n      transform: scale(1.02);\n    }\n  }\n\n  ${TestimonialCard} {\n    align-content: center;\n    height: 100%;\n    ${({ mode }) => `\n      background-color: ${modes[mode].cardBackground};\n      color: ${modes[mode].textColor};\n    `}\n    clip-path: inset(0 1rem 1rem 0);\n    overflow-y: hidden;\n    padding-right: 1rem;\n    padding-bottom: 1rem;\n    position: relative;\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n\nconst QuoteIcon = styled.img`\n  display: block;\n  margin-bottom: -2.5rem;\n`;\n\nconst QuoteText = styled.q`\n  position: relative;\n  quotes: none;\n  font-size: ${({ theme }) => theme.fontSize[26]};\n  line-height: ${({ theme }) => theme.lineHeight.base};\n`;\n\nexport type TestimonialProps = {\n  firstName: string;\n  lastName: string;\n  occupation: string;\n  quote: string;\n  mode: VisualTheme;\n  /**\n   * Associated workplace or institution\n   */\n  company?: string;\n  /**\n   * An avatar portrait\n   */\n  imageUrl?: string;\n  /**\n   * A long quote to replace the text with at SM viewports and higher.\n   */\n  longQuote?: string;\n  href?: string;\n  onClick?: () => void;\n};\n\nexport const Testimonial: React.FC<TestimonialProps> = ({\n  firstName,\n  lastName,\n  occupation,\n  quote,\n  mode = 'light',\n  company,\n  imageUrl,\n  longQuote,\n  href,\n  onClick,\n}) => {\n  return (\n    <TestimonialWrapper position=\"relative\" mode={mode}>\n      <Shadow name=\"checkerDense\" mode={mode} />\n      <Anchor\n        href={href}\n        variant=\"interface\"\n        display=\"block\"\n        height=\"inherit\"\n        onClick={onClick}\n      >\n        <TestimonialCard>\n          <FlexBox\n            px={{ _: 24 }}\n            pt={{ _: 32 }}\n            pb={{ _: 48 }}\n            flexDirection=\"row\"\n            flexWrap=\"wrap\"\n            alignItems=\"start\"\n            textColor={mode === 'dark' ? 'beige' : 'navy'}\n          >\n            <FlexBox flexWrap=\"wrap\" flexGrow={1} flexBasis=\"0\">\n              {imageUrl && (\n                <Box width=\"77px\" height=\"77px\" mb={16} mr={16}>\n                  <Avatar alt=\"\" src={imageUrl} mode={mode} />\n                </Box>\n              )}\n              <Box mb={16} mr={16} minWidth=\"9.5rem\">\n                <Byline\n                  firstName={firstName}\n                  occupation={occupation}\n                  company={company}\n                  lastName={lastName}\n                />\n              </Box>\n            </FlexBox>\n            <Box flexGrow={9999} flexShrink={1} flexBasis=\"0\" minWidth=\"70%\">\n              <Box position=\"relative\">\n                <QuoteIcon\n                  alt=\"\"\n                  width=\"109px\"\n                  height=\"74px\"\n                  src={modes[mode].quoteIcon}\n                />\n                <QuoteText>\n                  {longQuote ? (\n                    <>\n                      <Box as=\"span\" display={{ _: 'initial', sm: 'none' }}>\n                        {quote}\n                      </Box>\n                      <Box as=\"span\" display={{ _: 'none', sm: 'initial' }}>\n                        {longQuote}\n                      </Box>\n                    </>\n                  ) : (\n                    quote\n                  )}\n                </QuoteText>\n              </Box>\n            </Box>\n          </FlexBox>\n        </TestimonialCard>\n      </Anchor>\n    </TestimonialWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}