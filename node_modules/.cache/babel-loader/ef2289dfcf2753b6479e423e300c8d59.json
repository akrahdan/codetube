{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Projects/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ContentContainer, Video } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { useContext, useState } from 'react';\nimport { ProjectCard } from 'components/ProjectCard';\n// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext'; // import { selectUserJWT } from '~/state/currentUser/selectors';\n\nimport { Items, ProjectItems } from './sample';\nimport { HalfCircle } from './icons/HalfCircle';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst byProject = item => item.type === 'project';\n\nconst byVideo = item => item.type === 'video';\n\nexport const Projects = ({\n  courses\n}) => {\n  _s();\n\n  const {\n    content_item_ids: contentIds,\n    side_shapes_color: sideShapesColor,\n    projects_headline: projectsHeadline,\n    video_headline: videoHeadline\n  } = useContext(CMSContext);\n  const [contentItems, setContentItems] = useState([]); // const jwt = useSelector(selectUserJWT);\n  // useEffect(() => {\n  //   (async () => {\n  //     if (contentIds) {\n  //       const { data } = await contentServiceRequest({\n  //         endpoint: 'content-items/search',\n  //         version: 1,\n  //         data: {\n  //           id: contentIds,\n  //           minimal: false,\n  //         },\n  //         method: 'POST',\n  //         jwt,\n  //       });\n  //       setContentItems(data);\n  //     }\n  //   })();\n  // }, [contentIds, jwt]);\n  // const renderProjects = () =>\n  //   contentItems\n  //     .filter(byProject)\n  //     .map((project: ProjectContentItem, index: number) => (\n  //       <ProjectCard\n  //         project={project}\n  //         index={index}\n  //         key={project.id}\n  //         className={styles.projectCard}\n  //         trackingData={{ target: 'path_marketing_page_projects' }}\n  //         hoverShadow\n  //       />\n  //     ));\n\n  const renderProjects = () => ProjectItems.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n    project: project,\n    index: index,\n    className: styles.projectCard,\n    trackingData: {\n      target: 'path_marketing_page_projects'\n    },\n    hoverShadow: true\n  }, project.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this)); // const renderVideos = () =>\n  //   contentItems.filter(byVideo).map((video: VideoContentItem) => (\n  //     <div key={video.id} style={{ width: '100%' }}>\n  //       <Video\n  //         videoUrl={video.video_url}\n  //         videoTitle={video.title}\n  //         className={styles.video}\n  //         onPlay={() =>\n  //           // trackUserClick({\n  //           //   page_name: 'marketingpathlandingpage',\n  //           //   context: 'projects_section',\n  //           //   target: 'play_video',\n  //           //   video_url: video.video_url,\n  //           // })\n  //         console.log()}\n  //       />\n  //       <p className={styles.videoTitle}>{video.title}</p>\n  //     </div>\n  //   ));\n\n\n  const renderVideos = () => Items.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Video, {\n      videoUrl: video.video_url,\n      videoTitle: video.title,\n      className: styles.video,\n      onPlay: () => // trackUserClick({\n      //   page_name: 'marketingpathlandingpage',\n      //   context: 'projects_section',\n      //   target: 'play_video',\n      //   video_url: video.video_url,\n      // })\n      console.log()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.videoTitle,\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this)]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this));\n\n  const projects = renderProjects();\n  const video = renderVideos();\n  if (isEmpty(projects) && isEmpty(video)) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.backgroundHalfCircle,\n      children: /*#__PURE__*/_jsxDEV(HalfCircle, {\n        fill: sideShapesColor !== null && sideShapesColor !== void 0 ? sideShapesColor : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentItemsContainer,\n        children: [!isEmpty(projects) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: projectsHeadline || 'What you need to know'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.displayHorizontal,\n            children: projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), !isEmpty(video) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx(styles.videoContainer, {\n            [styles.videoOnly]: isEmpty(projects)\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: videoHeadline || \"Getting Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.displayHorizontal,\n            children: video\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"F4dnHvFrXugi2gG0LqbxOpcjNJU=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Projects/index.tsx"],"names":["ContentContainer","Video","cx","isEmpty","React","useContext","useState","ProjectCard","CMSContext","Items","ProjectItems","HalfCircle","styles","byProject","item","type","byVideo","Projects","courses","content_item_ids","contentIds","side_shapes_color","sideShapesColor","projects_headline","projectsHeadline","video_headline","videoHeadline","contentItems","setContentItems","renderProjects","map","project","index","projectCard","target","id","renderVideos","video","width","video_url","title","console","log","videoTitle","projects","container","backgroundHalfCircle","contentItemsContainer","projectContainer","displayHorizontal","videoContainer","videoOnly"],"mappings":"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","sourcesContent":["import { ContentContainer, Video } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { ProjectCard } from 'components/ProjectCard';\nimport { contentServiceRequest } from 'libs/contentServiceRequest';\n// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\n// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport { ProjectContentItem, VideoContentItem } from 'typings/entities';\nimport { Items, ProjectItems } from './sample';\nimport { HalfCircle } from './icons/HalfCircle';\nimport styles from './styles.module.scss';\n\ntype ContentItemTypes = VideoContentItem | ProjectContentItem;\n\ninterface Video {\n  id: string;\n  type: string;\n  video_url: string;\n  time: number;\n  title: string;\n}\n\ninterface Course {\n  id: string;\n  url: string;\n  title: string;\n  description:string\n}\n\nexport type ProjectProps = {\n  course: Course\n}\n\nconst byProject = (item: ContentItemTypes): item is ProjectContentItem =>\n  item.type === 'project';\n\nconst byVideo = (item: ContentItemTypes): item is VideoContentItem =>\n  item.type === 'video';\n\nexport const Projects = ({\n courses\n}: ProjectProps) => {\n  const {\n    content_item_ids: contentIds,\n    side_shapes_color: sideShapesColor,\n    projects_headline: projectsHeadline,\n    video_headline: videoHeadline,\n  } = useContext(CMSContext);\n\n  const [contentItems, setContentItems] = useState<ContentItemTypes[]>([]);\n  // const jwt = useSelector(selectUserJWT);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (contentIds) {\n  //       const { data } = await contentServiceRequest({\n  //         endpoint: 'content-items/search',\n  //         version: 1,\n  //         data: {\n  //           id: contentIds,\n  //           minimal: false,\n  //         },\n  //         method: 'POST',\n  //         jwt,\n  //       });\n\n  //       setContentItems(data);\n  //     }\n  //   })();\n  // }, [contentIds, jwt]);\n\n  // const renderProjects = () =>\n  //   contentItems\n  //     .filter(byProject)\n  //     .map((project: ProjectContentItem, index: number) => (\n  //       <ProjectCard\n  //         project={project}\n  //         index={index}\n  //         key={project.id}\n  //         className={styles.projectCard}\n  //         trackingData={{ target: 'path_marketing_page_projects' }}\n  //         hoverShadow\n  //       />\n  //     ));\n\n  const renderProjects = () =>\n      ProjectItems\n      .map((project: ProjectContentItem, index: number) => (\n        <ProjectCard\n          project={project}\n          index={index}\n          key={project.id}\n          className={styles.projectCard}\n          trackingData={{ target: 'path_marketing_page_projects' }}\n          hoverShadow\n        />\n      \n    ));\n\n  // const renderVideos = () =>\n  //   contentItems.filter(byVideo).map((video: VideoContentItem) => (\n  //     <div key={video.id} style={{ width: '100%' }}>\n  //       <Video\n  //         videoUrl={video.video_url}\n  //         videoTitle={video.title}\n  //         className={styles.video}\n  //         onPlay={() =>\n  //           // trackUserClick({\n  //           //   page_name: 'marketingpathlandingpage',\n  //           //   context: 'projects_section',\n  //           //   target: 'play_video',\n  //           //   video_url: video.video_url,\n  //           // })\n  //         console.log()}\n  //       />\n  //       <p className={styles.videoTitle}>{video.title}</p>\n  //     </div>\n  //   ));\n\n    const renderVideos = () =>\n      Items.map((video: VideoContentItem) => (\n        <div key={video.id} style={{ width: '100%' }}>\n          <Video\n            videoUrl={video.video_url}\n            videoTitle={video.title}\n            className={styles.video}\n            onPlay={() =>\n              // trackUserClick({\n              //   page_name: 'marketingpathlandingpage',\n              //   context: 'projects_section',\n              //   target: 'play_video',\n              //   video_url: video.video_url,\n              // })\n            console.log()}\n          />\n          <p className={styles.videoTitle}>{video.title}</p>\n        </div>\n    ));\n\n  const projects = renderProjects();\n  const video = renderVideos();\n\n  if (isEmpty(projects) && isEmpty(video)) return null;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.backgroundHalfCircle}>\n        <HalfCircle fill={sideShapesColor ?? ''} />\n      </div>\n      \n      <ContentContainer>\n        <div className={styles.contentItemsContainer}>\n          {!isEmpty(projects) && (\n            <div className={styles.projectContainer}>\n              <h2>{projectsHeadline || 'What you need to know'}</h2>\n              <div className={styles.displayHorizontal}>{projects}</div>\n            </div>\n          )}\n          {!isEmpty(video) && (\n            <div\n              className={cx(styles.videoContainer, {\n                [styles.videoOnly]: isEmpty(projects),\n              })}\n            >\n              <h2>{videoHeadline || \"Getting Started\"}</h2>\n              <div className={styles.displayHorizontal}>{video}</div>\n            </div>\n          )}\n        </div>\n      </ContentContainer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}