{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/PathCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { capitalize } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { CurriculumCard } from 'components/CurriculumCard';\nimport { PathCardAssetPath } from 'libs/contentAssetPaths'; // import { trackUserImpression } from '~/libs/eventTracking';\n\nimport { pathPagePath } from 'libs/urlHelpers'; // import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PathCard = ({\n  path,\n  trackingData,\n  useReduxRouter,\n  isFullSize,\n  dataTestId,\n  headingLevel,\n  onClick\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (trackingData.page_name === 'article') {\n      const {\n        page_name,\n        slug,\n        target\n      } = trackingData; // trackUserImpression({ page_name, slug: slug!, target });\n    }\n  }, [trackingData]); // const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\n\n  const pathHref = pathPagePath(path.slug);\n  const linkProps = {\n    href: pathHref,\n    trackingData,\n    onClick,\n    ...(useReduxRouter && {\n      routeTo: pathHref\n    })\n  }; // const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n  // const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n  // const progressState = userCompletedContainerIds?.[path.id]\n  //   ? 'completed'\n  //   : userEnrolledPathIds?.includes(path.id)\n  //   ? 'inProgress'\n  //   : undefined;\n\n  const progressState = 'inProgress';\n  const difficulty = path.difficulty === 'Intermediate' ? 1 : 0;\n  const scope = 'lesson';\n  const scopeCount = 28;\n  return /*#__PURE__*/_jsxDEV(CurriculumCard, {\n    image: PathCardAssetPath(path.slug, progressState),\n    text: `${capitalize(path.goal)} Path`,\n    showProLogo: true,\n    title: path.title,\n    tag: \"React\",\n    tagColor: path.goal === 'skill' ? 'green' : 'pink',\n    difficulty: difficulty,\n    scope: scope,\n    scopeCount: scopeCount,\n    linkProps: linkProps,\n    progressState: progressState,\n    isFullSize: isFullSize,\n    dataTestId: dataTestId || `path-card-${path.slug}`,\n    headingLevel: headingLevel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PathCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PathCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathCard\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/PathCard/index.tsx"],"names":["capitalize","React","useEffect","CurriculumCard","PathCardAssetPath","pathPagePath","PathCard","path","trackingData","useReduxRouter","isFullSize","dataTestId","headingLevel","onClick","page_name","slug","target","pathHref","linkProps","href","routeTo","progressState","difficulty","scope","scopeCount","goal","title"],"mappings":";;;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,iBAAT,QAAkC,wBAAlC,C,CACA;;AACA,SAASC,YAAT,QAA6B,iBAA7B,C,CACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAChDC,EAAAA,IADgD;AAEhDC,EAAAA,YAFgD;AAGhDC,EAAAA,cAHgD;AAIhDC,EAAAA,UAJgD;AAKhDC,EAAAA,UALgD;AAMhDC,EAAAA,YANgD;AAOhDC,EAAAA;AAPgD,CAAD,KAQ3C;AAAA;;AACJX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACM,SAAb,KAA2B,SAA/B,EAA0C;AACxC,YAAM;AAAEA,QAAAA,SAAF;AAAaC,QAAAA,IAAb;AAAmBC,QAAAA;AAAnB,UAA8BR,YAApC,CADwC,CAExC;AACD;AACF,GALQ,EAKN,CAACA,YAAD,CALM,CAAT,CADI,CAQJ;;AAEA,QAAMS,QAAQ,GAAGZ,YAAY,CAACE,IAAI,CAACQ,IAAN,CAA7B;AACA,QAAMG,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAEF,QADU;AAEhBT,IAAAA,YAFgB;AAGhBK,IAAAA,OAHgB;AAIhB,QAAIJ,cAAc,IAAI;AAAEW,MAAAA,OAAO,EAAEH;AAAX,KAAtB;AAJgB,GAAlB,CAXI,CAkBJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,aAAa,GAAG,YAAtB;AAEA,QAAMC,UAAU,GAAGf,IAAI,CAACe,UAAL,KAAoB,cAApB,GAAqC,CAArC,GAAyC,CAA5D;AACA,QAAMC,KAAK,GAAG,QAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAEpB,iBAAiB,CAACG,IAAI,CAACQ,IAAN,EAAYM,aAAZ,CAD1B;AAEE,IAAA,IAAI,EAAG,GAAErB,UAAU,CAACO,IAAI,CAACkB,IAAN,CAAY,OAFjC;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,KAAK,EAAElB,IAAI,CAACmB,KAJd;AAKE,IAAA,GAAG,EAAE,OALP;AAME,IAAA,QAAQ,EAAEnB,IAAI,CAACkB,IAAL,KAAc,OAAd,GAAwB,OAAxB,GAAkC,MAN9C;AAOE,IAAA,UAAU,EAAEH,UAPd;AAQE,IAAA,KAAK,EAAEC,KART;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,SAAS,EAAEN,SAVb;AAWE,IAAA,aAAa,EAAEG,aAXjB;AAYE,IAAA,UAAU,EAAEX,UAZd;AAaE,IAAA,UAAU,EAAEC,UAAU,IAAK,aAAYJ,IAAI,CAACQ,IAAK,EAbnD;AAcE,IAAA,YAAY,EAAEH;AAdhB;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1DM;;GAAMN,Q;;KAAAA,Q","sourcesContent":["import { HeadingTags } from '@codecademy/gamut';\nimport { UserClickData } from '@codecademy/tracking';\nimport { capitalize } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { CurriculumCard } from 'components/CurriculumCard';\nimport type { ProjectEntityResponse } from 'services/projects';\nimport { PathCardAssetPath } from 'libs/contentAssetPaths';\n// import { trackUserImpression } from '~/libs/eventTracking';\nimport { pathPagePath } from 'libs/urlHelpers';\n// import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\nimport { Path } from 'typings/path';\n\nexport type PathCardProps = {\n  path?: Pick<\n    Path,\n    | 'id'\n    | 'slug'\n    | 'title'\n    | 'goal'\n    | 'difficulty'\n    | 'category_ids'\n    | 'content_item_type_counts'\n  >;\n  project: ProjectEntityResponse;\n  trackingData: UserClickData;\n  useReduxRouter?: boolean;\n  isFullSize?: boolean;\n  dataTestId?: string;\n  headingLevel?: HeadingTags;\n  onClick?: () => void;\n};\n\nexport const PathCard: React.FC<PathCardProps> = ({\n  path,\n  trackingData,\n  useReduxRouter,\n  isFullSize,\n  dataTestId,\n  headingLevel,\n  onClick,\n}) => {\n  useEffect(() => {\n    if (trackingData.page_name === 'article') {\n      const { page_name, slug, target } = trackingData;\n      // trackUserImpression({ page_name, slug: slug!, target });\n    }\n  }, [trackingData]);\n\n  // const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\n\n  const pathHref = pathPagePath(path.slug);\n  const linkProps = {\n    href: pathHref,\n    trackingData,\n    onClick,\n    ...(useReduxRouter && { routeTo: pathHref }),\n  };\n\n  // const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n  // const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n  // const progressState = userCompletedContainerIds?.[path.id]\n  //   ? 'completed'\n  //   : userEnrolledPathIds?.includes(path.id)\n  //   ? 'inProgress'\n  //   : undefined;\n\n  const progressState = 'inProgress'\n\n  const difficulty = path.difficulty === 'Intermediate' ? 1 : 0;\n  const scope = 'lesson';\n  const scopeCount = 28;\n\n  return (\n    <CurriculumCard\n      image={PathCardAssetPath(path.slug, progressState)}\n      text={`${capitalize(path.goal)} Path`}\n      showProLogo\n      title={path.title}\n      tag={\"React\"}\n      tagColor={path.goal === 'skill' ? 'green' : 'pink'}\n      difficulty={difficulty}\n      scope={scope}\n      scopeCount={scopeCount}\n      linkProps={linkProps}\n      progressState={progressState}\n      isFullSize={isFullSize}\n      dataTestId={dataTestId || `path-card-${path.slug}`}\n      headingLevel={headingLevel}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}