{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{Box,FlexBox}from'@codecademy/gamut';import{ArrowChevronRightIcon}from'@codecademy/gamut-icons';import styled from'@emotion/styled';import React from'react';import{AppHeaderAvatar}from'../../AppHeader/AppHeaderElements/AppHeaderAvatar';import{focusStyles,hoverStyles,textButtonStyles}from'../../AppHeader/AppHeaderElements/SharedStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AppHeaderTextTargetButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 0;\\n  \",\"\\n  \",\"\\n  \",\"\\n\"])),textButtonStyles,hoverStyles,focusStyles);var AppHeaderLinkButtonInner=styled(Box)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n\"])));var DisplayNameText=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  max-width: 70vw;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n\"])));export var AppHeaderSubMenuTarget=function AppHeaderSubMenuTarget(_ref){var item=_ref.item,openSubMenu=_ref.openSubMenu;var getIcon=function getIcon(){if(item.type==='dropdown'){var Icon=item.icon;return Icon&&/*#__PURE__*/_jsx(Icon,{size:24,\"aria-hidden\":true});}return/*#__PURE__*/_jsx(AppHeaderAvatar,{avatarSize:24,imageUrl:item.avatar});};return/*#__PURE__*/_jsx(AppHeaderTextTargetButton,{\"data-testid\":item.dataTestId,onClick:function onClick(event){return openSubMenu(event,item);},\"aria-label\":\"open \".concat(item,\" submenu\"),children:/*#__PURE__*/_jsxs(AppHeaderLinkButtonInner,{lineHeight:\"base\",minWidth:\"0\",py:16,textAlign:\"left\",display:\"flex\",children:[/*#__PURE__*/_jsxs(FlexBox,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(FlexBox,{mr:16,children:getIcon()}),item.type==='profile-dropdown'?/*#__PURE__*/_jsx(DisplayNameText,{children:item.userDisplayName}):item.text]}),/*#__PURE__*/_jsx(FlexBox,{alignSelf:\"end\",children:/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(ArrowChevronRightIcon,{size:12,\"aria-hidden\":true})})})]})});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuTarget/index.tsx"],"names":["Box","FlexBox","ArrowChevronRightIcon","styled","React","AppHeaderAvatar","focusStyles","hoverStyles","textButtonStyles","AppHeaderTextTargetButton","button","AppHeaderLinkButtonInner","DisplayNameText","div","AppHeaderSubMenuTarget","item","openSubMenu","getIcon","type","Icon","icon","avatar","dataTestId","event","userDisplayName","text"],"mappings":"kOAAA,OAASA,GAAT,CAAcC,OAAd,KAA6B,mBAA7B,CACA,OAASC,qBAAT,KAAsC,yBAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,mDAAhC,CACA,OACEC,WADF,CAEEC,WAFF,CAGEC,gBAHF,KAIO,gDAJP,C,wFAYA,GAAMC,CAAAA,yBAAyB,CAAGN,MAAM,CAACO,MAAV,uGAE3BF,gBAF2B,CAG3BD,WAH2B,CAI3BD,WAJ2B,CAA/B,CAOA,GAAMK,CAAAA,wBAAwB,CAAGR,MAAM,CAACH,GAAD,CAAT,0IAA9B,CAMA,GAAMY,CAAAA,eAAe,CAAGT,MAAM,CAACU,GAAV,0IAArB,CAMA,MAAO,IAAMC,CAAAA,sBAA6D,CAAG,QAAhEA,CAAAA,sBAAgE,MAGvE,IAFJC,CAAAA,IAEI,MAFJA,IAEI,CADJC,WACI,MADJA,WACI,CACJ,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAIF,IAAI,CAACG,IAAL,GAAc,UAAlB,CAA8B,CAC5B,GAAMC,CAAAA,IAAI,CAAGJ,IAAI,CAACK,IAAlB,CACA,MAAOD,CAAAA,IAAI,eAAI,KAAC,IAAD,EAAM,IAAI,CAAE,EAAZ,CAAgB,kBAAhB,EAAf,CACD,CACD,mBAAO,KAAC,eAAD,EAAiB,UAAU,CAAE,EAA7B,CAAiC,QAAQ,CAAEJ,IAAI,CAACM,MAAhD,EAAP,CACD,CAND,CAQA,mBACE,KAAC,yBAAD,EACE,cAAaN,IAAI,CAACO,UADpB,CAEE,OAAO,CAAE,iBAACC,KAAD,QAA6BP,CAAAA,WAAW,CAACO,KAAD,CAAQR,IAAR,CAAxC,EAFX,CAGE,4BAAoBA,IAApB,YAHF,uBAKE,MAAC,wBAAD,EACE,UAAU,CAAC,MADb,CAEE,QAAQ,CAAC,GAFX,CAGE,EAAE,CAAE,EAHN,CAIE,SAAS,CAAC,MAJZ,CAKE,OAAO,CAAC,MALV,wBAOE,MAAC,OAAD,EAAS,UAAU,CAAC,QAApB,wBACE,KAAC,OAAD,EAAS,EAAE,CAAE,EAAb,UAAkBE,OAAO,EAAzB,EADF,CAGGF,IAAI,CAACG,IAAL,GAAc,kBAAd,cACC,KAAC,eAAD,WAAkBH,IAAI,CAACS,eAAvB,EADD,CAGCT,IAAI,CAACU,IANT,GAPF,cAgBE,KAAC,OAAD,EAAS,SAAS,CAAC,KAAnB,uBACE,KAAC,GAAD,wBACE,KAAC,qBAAD,EAAuB,IAAI,CAAE,EAA7B,CAAiC,kBAAjC,EADF,EADF,EAhBF,GALF,EADF,CA8BD,CA1CM","sourcesContent":["import { Box, FlexBox } from '@codecademy/gamut';\nimport { ArrowChevronRightIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { AppHeaderAvatar } from '../../AppHeader/AppHeaderElements/AppHeaderAvatar';\nimport {\n  focusStyles,\n  hoverStyles,\n  textButtonStyles,\n} from '../../AppHeader/AppHeaderElements/SharedStyles';\nimport { AppHeaderDropdownItem } from '../../AppHeader/AppHeaderElements/types';\n\nexport type AppHeaderSubMenuTargetProps = {\n  item: AppHeaderDropdownItem;\n  openSubMenu: (event: React.MouseEvent, item: AppHeaderDropdownItem) => void;\n};\n\nconst AppHeaderTextTargetButton = styled.button`\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n\nconst AppHeaderLinkButtonInner = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst DisplayNameText = styled.div`\n  max-width: 70vw;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AppHeaderSubMenuTarget: React.FC<AppHeaderSubMenuTargetProps> = ({\n  item,\n  openSubMenu,\n}) => {\n  const getIcon = () => {\n    if (item.type === 'dropdown') {\n      const Icon = item.icon;\n      return Icon && <Icon size={24} aria-hidden />;\n    }\n    return <AppHeaderAvatar avatarSize={24} imageUrl={item.avatar} />;\n  };\n\n  return (\n    <AppHeaderTextTargetButton\n      data-testid={item.dataTestId}\n      onClick={(event: React.MouseEvent) => openSubMenu(event, item)}\n      aria-label={`open ${item} submenu`}\n    >\n      <AppHeaderLinkButtonInner\n        lineHeight=\"base\"\n        minWidth=\"0\"\n        py={16}\n        textAlign=\"left\"\n        display=\"flex\"\n      >\n        <FlexBox alignItems=\"center\">\n          <FlexBox mr={16}>{getIcon()}</FlexBox>\n\n          {item.type === 'profile-dropdown' ? (\n            <DisplayNameText>{item.userDisplayName}</DisplayNameText>\n          ) : (\n            item.text\n          )}\n        </FlexBox>\n        <FlexBox alignSelf=\"end\">\n          <Box>\n            <ArrowChevronRightIcon size={12} aria-hidden />\n          </Box>\n        </FlexBox>\n      </AppHeaderLinkButtonInner>\n    </AppHeaderTextTargetButton>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}