{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _VALIDATORS;import{debounce,isArray,isEmpty,mapValues}from'lodash';import request from'superagent';import{csrf}from'libs/superagent-auth';import{ErrorMessages,UserSubmitKey}from'./types';var SERVER_ERRORS={weak:ErrorMessages.WEAK,breach:ErrorMessages.WEAK,// Standard breach error message is confusing for new account creation\nrequired:ErrorMessages.REQUIRED,length:ErrorMessages.LENGTH,invalid:ErrorMessages.VALID_EMAIL};export var extractValidationErrors=function extractValidationErrors(_ref){var errors=_ref.body.errors;if(!errors||isEmpty(Object.values(errors)))return null;return mapValues(errors,function(error){return isArray(error)?SERVER_ERRORS[error[0]]:SERVER_ERRORS[error]||error;});};var createServerValidator=function createServerValidator(key,setIsSubmitting){var currentInput;var validator=debounce(function(input,resolve){return request.post('/register/validate').send({user:_defineProperty({},key,input)}).use(csrf).accept('json').then(function(){return resolve(undefined);}).catch(function(err){var _extractValidationErr;return resolve(currentInput===input?(_extractValidationErr=extractValidationErrors(err.response))===null||_extractValidationErr===void 0?void 0:_extractValidationErr[key]:undefined);});},250,{leading:true,trailing:true});return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(input){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentInput=input;setIsSubmitting===null||setIsSubmitting===void 0?void 0:setIsSubmitting(true);_context.next=4;return new Promise(function(resolve){validator(input,resolve);});case 4:res=_context.sent;setIsSubmitting===null||setIsSubmitting===void 0?void 0:setIsSubmitting(false);return _context.abrupt(\"return\",res);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var VALIDATORS=(_VALIDATORS={},_defineProperty(_VALIDATORS,UserSubmitKey.EMAIL,function(setIsSubmitting){return{required:ErrorMessages.REQUIRED,pattern:{value:/^[^@\\s]+@[^@\\s\\.]+\\.[^@\\s]{2,}$/,message:ErrorMessages.VALID_EMAIL},validate:createServerValidator(UserSubmitKey.EMAIL,setIsSubmitting)};}),_defineProperty(_VALIDATORS,UserSubmitKey.PASSWORD,function(setIsSubmitting){return{required:ErrorMessages.REQUIRED,minLength:{value:6,message:ErrorMessages.LENGTH},maxLength:{value:128,message:ErrorMessages.LENGTH},validate:createServerValidator(UserSubmitKey.PASSWORD,setIsSubmitting)};}),_VALIDATORS);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/Forms/RegistrationForm/validators.ts"],"names":["debounce","isArray","isEmpty","mapValues","request","csrf","ErrorMessages","UserSubmitKey","SERVER_ERRORS","weak","WEAK","breach","required","REQUIRED","length","LENGTH","invalid","VALID_EMAIL","extractValidationErrors","errors","body","Object","values","error","createServerValidator","key","setIsSubmitting","currentInput","validator","input","resolve","post","send","user","use","accept","then","undefined","catch","err","response","leading","trailing","Promise","res","VALIDATORS","EMAIL","pattern","value","message","validate","PASSWORD","minLength","maxLength"],"mappings":"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","sourcesContent":["import { debounce, isArray, isEmpty, mapValues } from 'lodash';\nimport request from 'superagent';\n\nimport { csrf } from 'libs/superagent-auth';\n\nimport { ErrorMessages, UserSubmitKey } from './types';\n\ntype ServerError = keyof typeof SERVER_ERRORS;\ninterface ValidationResponse extends request.Response {\n  body: {\n    errors?: Record<string, ServerError | ServerError[]> | undefined;\n  };\n}\n\ntype disabledHook = (value: boolean) => void;\n\nconst SERVER_ERRORS = {\n  weak: ErrorMessages.WEAK,\n  breach: ErrorMessages.WEAK, // Standard breach error message is confusing for new account creation\n  required: ErrorMessages.REQUIRED,\n  length: ErrorMessages.LENGTH,\n  invalid: ErrorMessages.VALID_EMAIL,\n};\n\nexport const extractValidationErrors = ({\n  body: { errors },\n}: ValidationResponse): Record<string, string> | null => {\n  if (!errors || isEmpty(Object.values(errors))) return null;\n  return mapValues(errors, (error) =>\n    isArray(error) ? SERVER_ERRORS[error[0]] : SERVER_ERRORS[error] || error\n  );\n};\n\nconst createServerValidator = (\n  key: UserSubmitKey,\n  setIsSubmitting?: disabledHook\n) => {\n  let currentInput: string;\n  const validator = debounce(\n    (input: string, resolve: (error: string | undefined) => void) =>\n      request\n        .post('/register/validate')\n        .send({ user: { [key]: input } })\n        .use(csrf)\n        .accept('json')\n        .then(() => resolve(undefined))\n        .catch((err) =>\n          resolve(\n            currentInput === input\n              ? extractValidationErrors(err.response)?.[key]\n              : undefined\n          )\n        ),\n    250,\n    { leading: true, trailing: true }\n  );\n\n  return async (input: string) => {\n    currentInput = input;\n    setIsSubmitting?.(true);\n    const res = await new Promise<string | undefined>((resolve) => {\n      validator(input, resolve);\n    });\n    setIsSubmitting?.(false);\n    return res;\n  };\n};\n\nexport const VALIDATORS = {\n  [UserSubmitKey.EMAIL]: (setIsSubmitting?: disabledHook) => ({\n    required: ErrorMessages.REQUIRED,\n    pattern: {\n      value: /^[^@\\s]+@[^@\\s\\.]+\\.[^@\\s]{2,}$/,\n      message: ErrorMessages.VALID_EMAIL,\n    },\n    validate: createServerValidator(UserSubmitKey.EMAIL, setIsSubmitting),\n  }),\n  [UserSubmitKey.PASSWORD]: (setIsSubmitting?: disabledHook) => ({\n    required: ErrorMessages.REQUIRED,\n    minLength: {\n      value: 6,\n      message: ErrorMessages.LENGTH,\n    },\n    maxLength: {\n      value: 128,\n      message: ErrorMessages.LENGTH,\n    },\n    validate: createServerValidator(UserSubmitKey.PASSWORD, setIsSubmitting),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}