{"ast":null,"code":"import _classCallCheck from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';// import * as actions from '../../actions'\nimport{syncSettings as _syncSettings}from'state/player/playerSlice';export var SyncSettings=/*#__PURE__*/function(_React$Component){_inherits(SyncSettings,_React$Component);var _super=_createSuper(SyncSettings);function SyncSettings(){var _this;_classCallCheck(this,SyncSettings);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleStorage=function(e){if(e.key==SyncSettings.storageKey){_this.syncStorageToLocal();}};return _this;}_createClass(SyncSettings,[{key:\"localSettings\",get:function get(){var _this2=this;return SyncSettings.settingsKeys.reduce(function(settings,key){settings[key]=_this2.props[key];return settings;},{});},set:function set(settings){// this.props.syncSettings(settings)\n}},{key:\"storageSettings\",get:function get(){var settings=localStorage.getItem(SyncSettings.storageKey);try{return JSON.parse(settings||'');}catch(e){return null;}},set:function set(settings){return localStorage.setItem(SyncSettings.storageKey,JSON.stringify(settings));}},{key:\"componentDidMount\",value:function componentDidMount(){var isVersioned=this.isVersioned(this.localSettings,this.storageSettings);if(isVersioned){this.storageSettings=null;}this.syncStorageToLocal();if(this.props.liveSync){window.addEventListener('storage',this.handleStorage);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.props.liveSync){window.removeEventListener('storage',this.handleStorage);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.syncLocalToStorage();}},{key:\"syncLocalToStorage\",value:function syncLocalToStorage(){var isChanged=this.isChanged(this.localSettings,this.storageSettings);if(isChanged){this.storageSettings=this.localSettings;}}},{key:\"syncStorageToLocal\",value:function syncStorageToLocal(){var isChanged=this.isChanged(this.localSettings,this.storageSettings);if(isChanged){this.localSettings=this.storageSettings;}}},{key:\"isChanged\",value:function isChanged(a,b){var aKeys=Object.keys(a||{});var bKeys=Object.keys(b||{});var keys=SyncSettings.settingsKeys;var i=keys.length;var isChanged=!a||!b;while(!isChanged&&i--){var key=keys[i];var aValue=a[key];var bValue=b[key];if(typeof aValue==='object'){aValue=JSON.stringify(aValue);}if(typeof bValue==='object'){bValue=JSON.stringify(bValue);}isChanged=aValue!=bValue;}return isChanged;}},{key:\"isVersioned\",value:function isVersioned(a,b){try{return!a||!b||a.versions.VERSION!=b.versions.VERSION;}catch(e){return false;}}},{key:\"render\",value:function render(){return null;}}],[{key:\"storageKey\",get:function get(){return'ps-embeddable-player-settings';}},{key:\"version\",get:function get(){//return versions\n}},{key:\"settingsKeys\",get:function get(){return['userAutoplaySetting','closedCaptioningEnabled','closedCaptioningLanguage','muted','playbackSpeed','preferredResolutions','previousVolume','versions','volume'];}}]);return SyncSettings;}(React.Component);export default connect(function(state){return{userAutoplaySetting:state.player.userAutoplaySetting,// closedCaptioningEnabled: state.closedCaptioningEnabled,\n// closedCaptioningLanguage: state.closedCaptioningLanguage,\nmuted:state.player.muted,playbackSpeed:state.player.playbackSpeed,previousVolume:state.player.previousVolume,resolution:state.player.resolution,versions:state.versions,volume:state.player.volume,// closedCaptioningLanguage: state.closedCaptioningLanguage,\npreferredResolutions:state.player.preferredResolutions};},function(dispatch){return{syncSettings:function syncSettings(payload){return dispatch(_syncSettings(payload));}};})(SyncSettings);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/sync-settings/sync-settings.js"],"names":["React","connect","syncSettings","SyncSettings","handleStorage","e","key","storageKey","syncStorageToLocal","settingsKeys","reduce","settings","props","localStorage","getItem","JSON","parse","setItem","stringify","isVersioned","localSettings","storageSettings","liveSync","window","addEventListener","removeEventListener","syncLocalToStorage","isChanged","a","b","aKeys","Object","keys","bKeys","i","length","aValue","bValue","versions","VERSION","Component","state","userAutoplaySetting","player","muted","playbackSpeed","previousVolume","resolution","volume","preferredResolutions","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import * as actions from '../../actions'\r\nimport { syncSettings } from 'state/player/playerSlice'\r\nexport class SyncSettings extends React.Component {\r\n  static get storageKey() {\r\n    return 'ps-embeddable-player-settings'\r\n  }\r\n\r\n  static get version() {\r\n    //return versions\r\n  }\r\n\r\n  static get settingsKeys() {\r\n    return [\r\n      'userAutoplaySetting',\r\n      'closedCaptioningEnabled',\r\n      'closedCaptioningLanguage',\r\n      'muted',\r\n      'playbackSpeed',\r\n      'preferredResolutions',\r\n      'previousVolume',\r\n      'versions',\r\n      'volume',\r\n    ]\r\n  }\r\n\r\n  get localSettings() {\r\n    return SyncSettings.settingsKeys.reduce((settings, key) => {\r\n      settings[key] = this.props[key]\r\n      return settings\r\n    }, {})\r\n  }\r\n\r\n  set localSettings(settings) {\r\n   // this.props.syncSettings(settings)\r\n  }\r\n\r\n  get storageSettings() {\r\n    const settings = localStorage.getItem(SyncSettings.storageKey)\r\n\r\n    try {\r\n      return JSON.parse(settings || '')\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n\r\n  set storageSettings(settings) {\r\n    return localStorage.setItem(SyncSettings.storageKey, JSON.stringify(settings))\r\n  }\r\n\r\n  componentDidMount() {\r\n    const isVersioned = this.isVersioned(this.localSettings, this.storageSettings)\r\n\r\n    if (isVersioned) {\r\n      this.storageSettings = null\r\n    }\r\n\r\n    this.syncStorageToLocal()\r\n    if (this.props.liveSync) {\r\n      window.addEventListener('storage', this.handleStorage)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.liveSync) {\r\n      window.removeEventListener('storage', this.handleStorage)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.syncLocalToStorage()\r\n  }\r\n\r\n  handleStorage = e => {\r\n    if (e.key == SyncSettings.storageKey) {\r\n      this.syncStorageToLocal()\r\n    }\r\n  }\r\n\r\n  syncLocalToStorage() {\r\n    const isChanged = this.isChanged(this.localSettings, this.storageSettings)\r\n\r\n    if (isChanged) {\r\n      this.storageSettings = this.localSettings\r\n    }\r\n  }\r\n\r\n  syncStorageToLocal() {\r\n    const isChanged = this.isChanged(this.localSettings, this.storageSettings)\r\n\r\n    if (isChanged) {\r\n      this.localSettings = this.storageSettings\r\n    }\r\n  }\r\n\r\n  isChanged(a, b) {\r\n    const aKeys = Object.keys(a || {})\r\n    const bKeys = Object.keys(b || {})\r\n    const keys = SyncSettings.settingsKeys\r\n    let i = keys.length\r\n    let isChanged = !a || !b\r\n\r\n    while (!isChanged && i--) {\r\n      const key = keys[i]\r\n      let aValue = a[key]\r\n      let bValue = b[key]\r\n\r\n      if (typeof aValue === 'object') {\r\n        aValue = JSON.stringify(aValue)\r\n      }\r\n\r\n      if (typeof bValue === 'object') {\r\n        bValue = JSON.stringify(bValue)\r\n      }\r\n\r\n      isChanged = aValue != bValue\r\n    }\r\n\r\n    return isChanged\r\n  }\r\n\r\n  isVersioned(a, b) {\r\n    try {\r\n      return !a || !b || a.versions.VERSION != b.versions.VERSION\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    userAutoplaySetting: state.player.userAutoplaySetting,\r\n    // closedCaptioningEnabled: state.closedCaptioningEnabled,\r\n    // closedCaptioningLanguage: state.closedCaptioningLanguage,\r\n    muted: state.player.muted,\r\n    playbackSpeed: state.player.playbackSpeed,\r\n    previousVolume: state.player.previousVolume,\r\n    resolution: state.player.resolution,\r\n    versions: state.versions,\r\n    volume: state.player.volume,\r\n    // closedCaptioningLanguage: state.closedCaptioningLanguage,\r\n    preferredResolutions: state.player.preferredResolutions,\r\n  }),\r\n  dispatch => ({\r\n    syncSettings: payload => dispatch(syncSettings(payload)),\r\n  })\r\n)(SyncSettings)\r\n"]},"metadata":{},"sourceType":"module"}