{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  course: null,\n  pricing: null,\n  saveProps: {\n    submit: false,\n    locationPath: null\n  }\n};\nconst projectSplice = createSlice({\n  name: \"project\",\n  initialState: initialState,\n  reducers: {\n    saveCourse: (state, action) => {\n      state.saveProps = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.updateCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.fetchResources.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    }).addMatcher(coursesApi.endpoints.fetchPricing.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.pricing = payload;\n    }).addMatcher(coursesApi.endpoints.createResource.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    }).addMatcher(coursesApi.endpoints.fetchInstructorCourses.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.courses = payload;\n    });\n  }\n});\nexport const {\n  saveCourse\n} = projectSplice.actions;\nexport default projectSplice.reducer;\nexport const selectCourse = state => state.course.course;\nexport const selectCourses = state => state.course.courses;\nexport const selectResources = state => state.course.resources;\nexport const selectPricing = state => state.course.pricing;\nexport const selectSave = state => state.course.saveProps;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/project/projectSplice.ts"],"names":["createSlice","initialState","course","pricing","saveProps","submit","locationPath","projectSplice","name","reducers","saveCourse","state","action","payload","extraReducers","builder","addMatcher","coursesApi","endpoints","createCourse","matchFulfilled","updateCourse","fetchResources","resources","fetchPricing","createResource","fetchInstructorCourses","courses","actions","reducer","selectCourse","selectCourses","selectResources","selectPricing","selectSave"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAiBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,YAAY,EAAE;AAFL;AAHQ,CAArB;AAQA,MAAMC,aAAa,GAAGP,WAAW,CAAC;AAChCQ,EAAAA,IAAI,EAAE,SAD0B;AAEhCP,EAAAA,YAAY,EAAEA,YAFkB;AAGhCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA+C;AACzDD,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACC,OAAzB;AACD;AAHO,GAHsB;AAQhCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIC,UAAU,CAACC,SAAX,CAAqBC,YAArB,CAAkCC,cAFtC,EAGI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACT,MAAN,GAAeW,OAAf;AACD,KALL,EAOGG,UAPH,CAQIC,UAAU,CAACC,SAAX,CAAqBG,YAArB,CAAkCD,cARtC,EASI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACT,MAAN,GAAeW,OAAf;AACD,KAXL,EAaGG,UAbH,CAcIC,UAAU,CAACC,SAAX,CAAqBI,cAArB,CAAoCF,cAdxC,EAeI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACY,SAAN,GAAkBV,OAAlB;AACD,KAjBL,EAmBGG,UAnBH,CAoBIC,UAAU,CAACC,SAAX,CAAqBM,YAArB,CAAkCJ,cApBtC,EAqBI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACR,OAAN,GAAgBU,OAAhB;AACD,KAvBL,EAyBGG,UAzBH,CA0BIC,UAAU,CAACC,SAAX,CAAqBO,cAArB,CAAoCL,cA1BxC,EA2BI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACY,SAAN,GAAkBV,OAAlB;AACD,KA7BL,EA8BIG,UA9BJ,CA+BIC,UAAU,CAACC,SAAX,CAAqBQ,sBAArB,CAA4CN,cA/BhD,EAgCI,CAACT,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtBF,MAAAA,KAAK,CAACgB,OAAN,GAAgBd,OAAhB;AACD,KAlCL;AAoCD;AA7C+B,CAAD,CAAjC;AAgDA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBH,aAAa,CAACqB,OAArC;AAEP,eAAerB,aAAa,CAACsB,OAA7B;AAEA,OAAO,MAAMC,YAAY,GAAInB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaA,MAAxD;AACP,OAAO,MAAM6B,aAAa,GAAIpB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAayB,OAAzD;AACP,OAAO,MAAMK,eAAe,GAAIrB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaqB,SAA3D;AACP,OAAO,MAAMU,aAAa,GAAItB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaC,OAAzD;AACP,OAAO,MAAM+B,UAAU,GAAIvB,KAAD,IAAsBA,KAAK,CAACT,MAAN,CAAaE,SAAtD","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport type { TitleDescription, HeaderDescription, ProjectEntityResponse, Pricing } from 'services/projects';\n\n\ninterface submitProps {\n  submit: boolean;\n  locationPath: string;\n}\ntype ProjectState = {\n  project: ProjectEntityResponse | null;\n  projects: ProjectEntityResponse\n  saveProps: submitProps | null;\n  pricing: Pricing | null;\n};\nconst initialState = {\n  course: null,\n  pricing: null,\n  saveProps: {\n    submit: false,\n    locationPath: null,\n  },\n};\nconst projectSplice = createSlice({\n  name: \"project\",\n  initialState: initialState as CourseState,\n  reducers: {\n    saveCourse: (state, action: PayloadAction<submitProps>) => {\n      state.saveProps = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.course = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.updateCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.course = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.fetchResources.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.fetchPricing.matchFulfilled,\n        (state, { payload }) => {\n          state.pricing = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.createResource.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload;\n        }\n      ).addMatcher(\n        coursesApi.endpoints.fetchInstructorCourses.matchFulfilled,\n        (state, { payload }) => {\n          state.courses = payload;\n        }\n      );\n  },\n});\n\nexport const { saveCourse } = projectSplice.actions;\n\nexport default projectSplice.reducer;\n\nexport const selectCourse = (state: RootState) => state.course.course;\nexport const selectCourses = (state: RootState) => state.course.courses;\nexport const selectResources = (state: RootState) => state.course.resources;\nexport const selectPricing = (state: RootState) => state.course.pricing;\nexport const selectSave = (state: RootState) => state.course.saveProps;\n"]},"metadata":{},"sourceType":"module"}