{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/control-bar-button/control-bar-button.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport css from './control-bar-button.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ControlBarButton extends Component {\n  constructor() {\n    super();\n\n    this.handleMouseEnter = () => {\n      this.setState({\n        hovering: true\n      });\n    };\n\n    this.handleMouseLeave = () => {\n      this.setState({\n        hovering: false\n      });\n    };\n\n    this.handleAction = e => {\n      const {\n        onAction\n      } = this.props;\n      onAction && onAction(e);\n    };\n\n    this.cancelEvent = e => {\n      e && e.preventDefault && e.preventDefault();\n    };\n\n    this.state = {\n      hovering: true\n    };\n  }\n\n  render() {\n    const {\n      active,\n      ariaLabel,\n      activeClassName,\n      className,\n      hidden,\n      ariaPressed,\n      ariaHaspopup,\n      ariaOwns,\n      ariaExpanded\n    } = this.props;\n    const {\n      hovering\n    } = this.state;\n    const isActive = hovering || active; // prettier-ignore\n\n    return !hidden ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(className, css.wrapper),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"is-control-bar-button\": \"true\",\n        className: classnames(css.icon, {\n          [activeClassName]: isActive\n        }),\n        active: isActive ? 'true' : null,\n        onFocus: this.handleMouseEnter,\n        onBlur: this.handleMouseLeave,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onClick: this.handleAction,\n        onTouchStart: this.handleAction,\n        onTouchEnd: this.cancelEvent,\n        \"aria-label\": ariaLabel,\n        \"aria-pressed\": ariaPressed,\n        \"aria-haspopup\": ariaHaspopup,\n        \"aria-owns\": ariaOwns,\n        \"aria-expanded\": ariaExpanded,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n}\nexport default ControlBarButton;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/control-bar-button/control-bar-button.js"],"names":["React","Component","classnames","css","ControlBarButton","constructor","handleMouseEnter","setState","hovering","handleMouseLeave","handleAction","e","onAction","props","cancelEvent","preventDefault","state","render","active","ariaLabel","activeClassName","className","hidden","ariaPressed","ariaHaspopup","ariaOwns","ariaExpanded","isActive","wrapper","icon","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,GAAP,MAAgB,iCAAhB;;AAEA,OAAO,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAC9CI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,gBAPc,GAOK,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KATa;;AAAA,SAWdC,gBAXc,GAWK,MAAM;AACvB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAba;;AAAA,SAedE,YAfc,GAeEC,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AAEAD,MAAAA,QAAQ,IAAIA,QAAQ,CAACD,CAAD,CAApB;AACD,KAnBa;;AAAA,SAqBdG,WArBc,GAqBCH,CAAD,IAAO;AACnBA,MAAAA,CAAC,IAAIA,CAAC,CAACI,cAAP,IAAyBJ,CAAC,CAACI,cAAF,EAAzB;AACD,KAvBa;;AAEZ,SAAKC,KAAL,GAAa;AACXR,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAoBDS,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,eAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA,MALI;AAMJC,MAAAA,WANI;AAOJC,MAAAA,YAPI;AAQJC,MAAAA,QARI;AASJC,MAAAA;AATI,QAUF,KAAKb,KAVT;AAWA,UAAM;AAAEL,MAAAA;AAAF,QAAe,KAAKQ,KAA1B;AAEA,UAAMW,QAAQ,GAAGnB,QAAQ,IAAIU,MAA7B,CAdO,CAgBP;;AACA,WAAO,CAACI,MAAD,gBACL;AAAK,MAAA,SAAS,EAAEpB,UAAU,CAACmB,SAAD,EAAYlB,GAAG,CAACyB,OAAhB,CAA1B;AAAA,6BACE;AACE,iCAAsB,MADxB;AAEE,QAAA,SAAS,EAAE1B,UAAU,CAACC,GAAG,CAAC0B,IAAL,EAAW;AAAE,WAACT,eAAD,GAAmBO;AAArB,SAAX,CAFvB;AAGE,QAAA,MAAM,EAAEA,QAAQ,GAAG,MAAH,GAAY,IAH9B;AAIE,QAAA,OAAO,EAAE,KAAKrB,gBAJhB;AAKE,QAAA,MAAM,EAAE,KAAKG,gBALf;AAME,QAAA,YAAY,EAAE,KAAKH,gBANrB;AAOE,QAAA,YAAY,EAAE,KAAKG,gBAPrB;AAQE,QAAA,OAAO,EAAE,KAAKC,YARhB;AASE,QAAA,YAAY,EAAE,KAAKA,YATrB;AAUE,QAAA,UAAU,EAAE,KAAKI,WAVnB;AAWE,sBAAYK,SAXd;AAYE,wBAAcI,WAZhB;AAaE,yBAAeC,YAbjB;AAcE,qBAAWC,QAdb;AAeE,yBAAeC,YAfjB;AAAA,kBAiBG,KAAKb,KAAL,CAAWiB;AAjBd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,GAsBH,IAtBJ;AAuBD;;AAlE6C;AAqEhD,eAAe1B,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n\nimport css from './control-bar-button.module.css'\n\nexport class ControlBarButton extends Component {\n  constructor() {\n    super()\n    this.state = {\n      hovering: true,\n    }\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ hovering: true })\n  }\n\n  handleMouseLeave = () => {\n    this.setState({ hovering: false })\n  }\n\n  handleAction = (e) => {\n    const { onAction } = this.props\n    \n    onAction && onAction(e)\n  }\n\n  cancelEvent = (e) => {\n    e && e.preventDefault && e.preventDefault()\n  }\n\n  render() {\n    const {\n      active,\n      ariaLabel,\n      activeClassName,\n      className,\n      hidden,\n      ariaPressed,\n      ariaHaspopup,\n      ariaOwns,\n      ariaExpanded,\n    } = this.props\n    const { hovering } = this.state\n\n    const isActive = hovering || active\n\n    // prettier-ignore\n    return !hidden ? (\n      <div className={classnames(className, css.wrapper)}>\n        <button\n          is-control-bar-button=\"true\"\n          className={classnames(css.icon, { [activeClassName]: isActive })}\n          active={isActive ? 'true' : null}\n          onFocus={this.handleMouseEnter}\n          onBlur={this.handleMouseLeave}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          onClick={this.handleAction}\n          onTouchStart={this.handleAction}\n          onTouchEnd={this.cancelEvent}\n          aria-label={ariaLabel}\n          aria-pressed={ariaPressed}\n          aria-haspopup={ariaHaspopup}\n          aria-owns={ariaOwns}\n          aria-expanded={ariaExpanded}\n        >\n          {this.props.children}\n        </button>\n      </div>\n    ) : null\n  }\n}\n\nexport default ControlBarButton\n"]},"metadata":{},"sourceType":"module"}