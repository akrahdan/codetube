{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/ListSection/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { Children, useState } from 'react';\nimport { PageSection } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnstyledUnorderedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n_c = UnstyledUnorderedList;\nconst StyledListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${theme.spacing[24]};\n  }\n`;\n_c2 = StyledListItem;\nexport const ListSection = ({\n  title,\n  headerButton,\n  headerSecondaryButton,\n  initialDisplayAmount = 3,\n  onShowAllOrLessClick,\n  children\n}) => {\n  _s();\n\n  const [showAll, setShowAll] = useState(false);\n\n  const handleShowAll = () => {\n    onShowAllOrLessClick === null || onShowAllOrLessClick === void 0 ? void 0 : onShowAllOrLessClick(!showAll);\n    setShowAll(!showAll);\n  };\n\n  const renderListItems = () => {\n    const listItems = Children.map(children, child => /*#__PURE__*/_jsxDEV(StyledListItem, {\n      children: child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this));\n    if (!listItems) return null;\n    if (showAll) return listItems;\n    return listItems.slice(0, initialDisplayAmount);\n  };\n\n  const renderFooterButton = () => {\n    if (Children.toArray(children).length <= initialDisplayAmount) return null;\n    const buttonText = `Show ${showAll ? 'Less' : 'All'}`;\n    return {\n      text: buttonText,\n      onClick: handleShowAll,\n      'aria-label': `${buttonText}, ${title}`\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageSection, {\n    title: title,\n    footerButton: renderFooterButton(),\n    headerButton: headerButton,\n    headerSecondaryButton: headerSecondaryButton,\n    children: /*#__PURE__*/_jsxDEV(UnstyledUnorderedList, {\n      \"aria-label\": title,\n      \"aria-live\": \"polite\",\n      children: renderListItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListSection, \"XC0nqMp5RnZIWkiCcJL//MdTvak=\");\n\n_c3 = ListSection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UnstyledUnorderedList\");\n$RefreshReg$(_c2, \"StyledListItem\");\n$RefreshReg$(_c3, \"ListSection\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/ListSection/index.tsx"],"names":["theme","styled","React","Children","useState","PageSection","UnstyledUnorderedList","ul","StyledListItem","li","spacing","ListSection","title","headerButton","headerSecondaryButton","initialDisplayAmount","onShowAllOrLessClick","children","showAll","setShowAll","handleShowAll","renderListItems","listItems","map","child","slice","renderFooterButton","toArray","length","buttonText","text","onClick"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,WAAT,QAA2C,IAA3C;;AAqBA,MAAMC,qBAAqB,GAAGL,MAAM,CAACM,EAAG;AACxC;AACA;AACA;AACA,CAJA;KAAMD,qB;AAMN,MAAME,cAAc,GAAGP,MAAM,CAACQ,EAAG;AACjC;AACA,qBAAqBT,KAAK,CAACU,OAAN,CAAc,EAAd,CAAkB;AACvC;AACA,CAJA;MAAMF,c;AAMN,OAAO,MAAMG,WAAuC,GAAG,CAAC;AACtDC,EAAAA,KADsD;AAEtDC,EAAAA,YAFsD;AAGtDC,EAAAA,qBAHsD;AAItDC,EAAAA,oBAAoB,GAAG,CAJ+B;AAKtDC,EAAAA,oBALsD;AAMtDC,EAAAA;AANsD,CAAD,KAOjD;AAAA;;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,oBAAoB,SAApB,IAAAA,oBAAoB,WAApB,YAAAA,oBAAoB,CAAG,CAACE,OAAJ,CAApB;AACAC,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAG,MAAM;AAC5B,UAAMC,SAAS,GAAGnB,QAAQ,CAACoB,GAAT,CAAaN,QAAb,EAAwBO,KAAD,iBACvC,QAAC,cAAD;AAAA,gBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAIA,QAAI,CAACF,SAAL,EAAgB,OAAO,IAAP;AAChB,QAAIJ,OAAJ,EAAa,OAAOI,SAAP;AACb,WAAOA,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmBV,oBAAnB,CAAP;AACD,GARD;;AAUA,QAAMW,kBAAkB,GAAG,MAAM;AAC/B,QAAIvB,QAAQ,CAACwB,OAAT,CAAiBV,QAAjB,EAA2BW,MAA3B,IAAqCb,oBAAzC,EAA+D,OAAO,IAAP;AAC/D,UAAMc,UAAU,GAAI,QAAOX,OAAO,GAAG,MAAH,GAAY,KAAM,EAApD;AACA,WAAO;AACLY,MAAAA,IAAI,EAAED,UADD;AAELE,MAAAA,OAAO,EAAEX,aAFJ;AAGL,oBAAe,GAAES,UAAW,KAAIjB,KAAM;AAHjC,KAAP;AAKD,GARD;;AAUA,sBACE,QAAC,WAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,YAAY,EAAEc,kBAAkB,EAFlC;AAGE,IAAA,YAAY,EAAEb,YAHhB;AAIE,IAAA,qBAAqB,EAAEC,qBAJzB;AAAA,2BAME,QAAC,qBAAD;AAAuB,oBAAYF,KAAnC;AAA0C,mBAAU,QAApD;AAAA,gBACGS,eAAe;AADlB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/CM;;GAAMV,W;;MAAAA,W","sourcesContent":["import { theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { Children, useState } from 'react';\n\nimport { PageSection, SectionButton } from '..';\n\nexport type ListSectionProps = {\n  title: string;\n  headerButton?: SectionButton;\n  headerSecondaryButton?: SectionButton;\n  /**\n   * Number of items to be initally displayed\n   *\n   * @remarks\n   * If the initial display amount matches the number of list items, Show All button will not appear.\n   */\n  initialDisplayAmount?: number;\n\n  /**\n   * Optional callback function that will be called when the user clicks the \"Show All\" / \"Show less\" button.\n   * This is usually used for things like metrics tracking.\n   */\n  onShowAllOrLessClick?: (showAll: boolean) => void;\n};\n\nconst UnstyledUnorderedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${theme.spacing[24]};\n  }\n`;\n\nexport const ListSection: React.FC<ListSectionProps> = ({\n  title,\n  headerButton,\n  headerSecondaryButton,\n  initialDisplayAmount = 3,\n  onShowAllOrLessClick,\n  children,\n}) => {\n  const [showAll, setShowAll] = useState(false);\n\n  const handleShowAll = () => {\n    onShowAllOrLessClick?.(!showAll);\n    setShowAll(!showAll);\n  };\n\n  const renderListItems = () => {\n    const listItems = Children.map(children, (child) => (\n      <StyledListItem>{child}</StyledListItem>\n    ));\n\n    if (!listItems) return null;\n    if (showAll) return listItems;\n    return listItems.slice(0, initialDisplayAmount);\n  };\n\n  const renderFooterButton = () => {\n    if (Children.toArray(children).length <= initialDisplayAmount) return null;\n    const buttonText = `Show ${showAll ? 'Less' : 'All'}`;\n    return {\n      text: buttonText,\n      onClick: handleShowAll,\n      'aria-label': `${buttonText}, ${title}`,\n    };\n  };\n\n  return (\n    <PageSection\n      title={title}\n      footerButton={renderFooterButton()}\n      headerButton={headerButton}\n      headerSecondaryButton={headerSecondaryButton}\n    >\n      <UnstyledUnorderedList aria-label={title} aria-live=\"polite\">\n        {renderListItems()}\n      </UnstyledUnorderedList>\n    </PageSection>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}