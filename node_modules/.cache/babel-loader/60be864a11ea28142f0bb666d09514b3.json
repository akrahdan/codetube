{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation, useEditLectureMutation } from \"services/courses\";\nimport { useCreateHeadingMutation, useCreateIncludedMutation, useCreateLearningOutcomeMutation, useCreateSyllabusMutation, useEditSyllabusMutation, useEditIncludedMutation, useDeleteOutcomeMutation, useEditLearningOutcomeMutation, useFetchIncludedQuery, useDeleteSyllabusMutation, useDeleteIncludedMutation, useFetchSyllabusQuery } from 'services/projects';\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { selectOutcomes, selectIncluded, selectSyllabuses } from 'state/project/projectSplice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: syllabusQuery\n  } = useFetchSyllabusQuery();\n  const {\n    data: learningQuery\n  } = useFetchL;\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [goals, setGoals] = useState([{\n    id: \"goalList--0\",\n    name: \"\"\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: \"reqList--0\",\n    name: \"\"\n  }]);\n  const [experience, setExperience] = useState([{\n    id: \"expList--0\",\n    name: \"\"\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n  useEffect(() => {\n    const goalResults = goals;\n    goalResults && goalResults.forEach(goal => {\n      if (goal.name) {\n        createGoal({\n          name: goal.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = goalResults.filter(item => item.id != goal.id);\n          setGoals(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const experienceResults = experience;\n    experienceResults && experienceResults.forEach(exp => {\n      if (exp.name) {\n        createExperience({\n          name: exp.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = experienceResults.filter(item => item.id != exp.id);\n          setExperience(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const reqResults = requirements;\n    reqResults && reqResults.forEach(req => {\n      if (req.name) {\n        createRequirement({\n          name: req.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = reqResults.filter(item => item.id != req.id);\n          setRequirements(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    requirementsUpdate && requirementsUpdate.forEach(req => {\n      if (req.name) {\n        console.log(\"Req: \", req);\n        editRequirement({ ...req,\n          course: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    experienceUpdate && experienceUpdate.forEach((req, index) => {\n      if (req.name) {\n        editExperience({ ...req,\n          course: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    goalsUpdate && goalsUpdate.forEach(item => {\n      if (item.name) {\n        editGoal({ ...item,\n          course: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      let gUpdate = [...goalsUpdate];\n                      let index = gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setGoalsUpdate(gUpdate);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {\n                      const updatedGoals = goals.filter(result => result.id != value.id);\n                      setGoals(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newGoals = [...goals];\n                      let index = newGoals.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newGoals[index] = obj;\n                      setGoals(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const goalItem = {\n                  id: `goalList--${goals.length}`,\n                  name: \"\"\n                };\n                const newGoals = [...goals, goalItem];\n                const emptyValue = goals.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      let reqUpdates = [...requirementsUpdate];\n                      let index = reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setRequirementsUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      const updatedReqs = requirements.filter(result => result.id != value.id);\n                      setRequirements(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...requirements];\n                      let index = reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setRequirements(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: `reqList--${requirements.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...requirements, reqItem];\n                const emptyValue = requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(Experience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      let expUpdate = [...experienceUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setExperienceUpdate(expUpdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 25\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      const updatedExperience = experience.filter(result => result.id != value.id);\n                      setExperience(updatedExperience);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...experience];\n                      let index = expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setExperience(expdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: `expList--${experience.length}`,\n                  value: \"\"\n                };\n                const newExps = [...experience, expItem];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"WFN9INxr19o3TsLmkeR+YycQIRY=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateSyllabusMutation, useCreateLearningOutcomeMutation, useCreateIncludedMutation, useEditSyllabusMutation, useEditLearningOutcomeMutation, useEditIncludedMutation, useDeleteSyllabusMutation, useDeleteOutcomeMutation, useDeleteIncludedMutation, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchSyllabusQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js"],"names":["useEffect","useState","useAlert","Goal","Requirements","Experience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","useEditLectureMutation","useCreateHeadingMutation","useCreateIncludedMutation","useCreateLearningOutcomeMutation","useCreateSyllabusMutation","useEditSyllabusMutation","useEditIncludedMutation","useDeleteOutcomeMutation","useEditLearningOutcomeMutation","useFetchIncludedQuery","useDeleteSyllabusMutation","useDeleteIncludedMutation","useFetchSyllabusQuery","selectRequirements","selectGoals","selectExperience","selectOutcomes","selectIncluded","selectSyllabuses","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","selectedOutcomes","selectedIncluded","selectedSyllabuses","createSyllabus","createLearningOutcome","createIncluded","editSyllabus","editLearningOutcome","editIncluded","deleteSyllabus","deleteOutcome","deleteIncluded","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","syllabusQuery","learningQuery","useFetchL","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","goals","setGoals","name","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","goalResults","forEach","course","then","results","filter","item","show","experienceResults","exp","reqResults","console","log","index","map","obj","gUpdate","findIndex","value","updatedGoals","result","newGoals","goalItem","length","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","expUpdate","updatedExperience","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { selectSave } from \"state/course/courseSplice\";\n\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  useEditLectureMutation,\n} from \"services/courses\";\n\nimport { \n  useCreateHeadingMutation,\n  useCreateIncludedMutation,\n  useCreateLearningOutcomeMutation,\n  useCreateSyllabusMutation,\n  useEditSyllabusMutation,\n  useEditIncludedMutation,\n  useDeleteOutcomeMutation,\n  useEditLearningOutcomeMutation,\n  useFetchIncludedQuery,\n  useDeleteSyllabusMutation,\n  useDeleteIncludedMutation,\n  useFetchSyllabusQuery\n} from 'services/projects'\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nimport { selectOutcomes, selectIncluded, selectSyllabuses} from 'state/project/projectSplice'\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus ] = useEditSyllabusMutation();\n  const [editLearningOutcome ] = useEditLearningOutcomeMutation();\n  const [editIncluded ] = useEditIncludedMutation();\n  const [ deleteSyllabus] = useDeleteSyllabusMutation()\n  const [deleteOutcome] = useDeleteOutcomeMutation()\n  const [ deleteIncluded ] = useDeleteIncludedMutation()\n\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: syllabusQuery } = useFetchSyllabusQuery();\n  const { data: learningQuery } = useFetchL\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n\n  const [goals, setGoals] = useState([{ id: \"goalList--0\", name: \"\" }]);\n  const [requirements, setRequirements] = useState([\n    { id: \"reqList--0\", name: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState([\n    { id: \"expList--0\", name: \"\" },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n\n  useEffect(() => {\n    const goalResults = goals;\n    goalResults &&\n      goalResults.forEach((goal) => {\n        if (goal.name) {\n          createGoal({\n            name: goal.name,\n            course: locationPayload.id,\n          }).then(() => {\n            const results = goalResults.filter((item) => item.id != goal.id);\n            setGoals(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n\n    const experienceResults = experience;\n    experienceResults &&\n      experienceResults.forEach((exp) => {\n        if (exp.name) {\n          createExperience({\n            name: exp.name,\n            course: locationPayload.id,\n          }).then(() => {\n            const results = experienceResults.filter(\n              (item) => item.id != exp.id\n            );\n            setExperience(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n\n    const reqResults = requirements;\n    reqResults &&\n      reqResults.forEach((req) => {\n        if (req.name) {\n          createRequirement({\n            name: req.name,\n            course: locationPayload.id,\n          }).then(() => {\n            const results = reqResults.filter((item) => item.id != req.id);\n            setRequirements(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n    requirementsUpdate &&\n      requirementsUpdate.forEach((req) => {\n        if (req.name) {\n          console.log(\"Req: \", req);\n          editRequirement({\n            ...req,\n            course: locationPayload.id,\n          }).then(() => {\n           \n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    experienceUpdate &&\n      experienceUpdate.forEach((req, index) => {\n        if (req.name) {\n          editExperience({\n            ...req,\n            course: locationPayload.id,\n          }).then(() => {\n           \n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    goalsUpdate &&\n      goalsUpdate.forEach((item) => {\n        if (item.name) {\n          editGoal({\n            ...item,\n            course: locationPayload.id,\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate &&\n                      goalsUpdate.map((goal) => (\n                        <Goal\n                          key={goal.id}\n                          goal={goal}\n                          handleRemove={removeGoal}\n                          handleChange={(obj) => {\n                            let gUpdate = [...goalsUpdate];\n                            let index = gUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setGoalsUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {goals.map((goal) => (\n                      <GoalCreate\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={(value) => {\n                          const updatedGoals = goals.filter(\n                            (result) => result.id != value.id\n                          );\n                          setGoals(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newGoals = [...goals];\n                          let index = newGoals.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newGoals[index] = obj;\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const goalItem = {\n                    id: `goalList--${goals.length}`,\n                    name: \"\",\n                  };\n                  const newGoals = [...goals, goalItem];\n                  const emptyValue = goals.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate &&\n                      requirementsUpdate.map((req) => (\n                        <Requirements\n                          req={req}\n                          key={req.id}\n                          handleRemove={removeReq}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...requirementsUpdate];\n                            let index = reqUpdates.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setRequirementsUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = requirements.filter(\n                            (result) => result.id != value.id\n                          );\n                          setRequirements(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...requirements];\n                          let index = reqs.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setRequirements(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: `reqList--${requirements.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...requirements, reqItem];\n                  const emptyValue = requirements.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate &&\n                      experienceUpdate.map((exp) => (\n                        <Experience\n                          key={exp.id}\n                          experience={exp}\n                          handleRemove={removeExp}\n                          handleChange={(obj) => {\n                            let expUpdate = [...experienceUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setExperienceUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp.id}\n                        experience={exp}\n                        handleRemove={(value) => {\n                          const updatedExperience = experience.filter(\n                            (result) => result.id != value.id\n                          );\n                          setExperience(updatedExperience);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...experience];\n\n                          let index = expdate.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setExperience(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: `expList--${experience.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...experience, expItem];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}