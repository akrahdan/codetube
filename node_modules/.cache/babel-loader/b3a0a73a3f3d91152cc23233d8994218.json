{"ast":null,"code":"/**\n * Takes a prop/style configuration and templates the classes\n * to match the styleMaps classes returning a concatenated classname string\n */\nexport const generateResponsiveClassnames = (config, styleMap) => {\n  const styleList = [];\n  Object.entries(config).forEach(([propName, propValue]) => {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n        {\n          const mappedClass = styleMap[`${propName}_${propValue}__xs`];\n\n          if (mappedClass) {\n            styleList.push(mappedClass);\n          }\n        }\n\n      case 'object':\n        {\n          if (propValue !== null) {\n            Object.entries(propValue).forEach(([mediaSize, mediaPropValue]) => {\n              const mappedClass = styleMap[`${propName}_${mediaPropValue}__${mediaSize}`];\n\n              if (mappedClass) {\n                styleList.push(mappedClass);\n              }\n            });\n          }\n        }\n\n      default:\n    }\n  });\n  return styleList;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/utils/generateResponsiveClassnames.ts"],"names":["generateResponsiveClassnames","config","styleMap","styleList","Object","entries","forEach","propName","propValue","mappedClass","push","mediaSize","mediaPropValue"],"mappings":"AAAA;AACA;AACA;AACA;AAOA,OAAO,MAAMA,4BAA4B,GAAG,CAC1CC,MAD0C,EAI1CC,QAJ0C,KAK7B;AACb,QAAMC,SAAmB,GAAG,EAA5B;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeJ,MAAf,EAAuBK,OAAvB,CAA+B,CAAC,CAACC,QAAD,EAAWC,SAAX,CAAD,KAA2B;AACxD,YAAQ,OAAOA,SAAf;AACE,WAAK,QAAL;AACA,WAAK,QAAL;AAAe;AACb,gBAAMC,WAAW,GAAGP,QAAQ,CAAE,GAAEK,QAAS,IAAGC,SAAU,MAA1B,CAA5B;;AACA,cAAIC,WAAJ,EAAiB;AACfN,YAAAA,SAAS,CAACO,IAAV,CAAeD,WAAf;AACD;AACF;;AACD,WAAK,QAAL;AAAe;AACb,cAAID,SAAS,KAAK,IAAlB,EAAwB;AACtBJ,YAAAA,MAAM,CAACC,OAAP,CAAeG,SAAf,EAA0BF,OAA1B,CAAkC,CAAC,CAACK,SAAD,EAAYC,cAAZ,CAAD,KAAiC;AACjE,oBAAMH,WAAW,GACfP,QAAQ,CAAE,GAAEK,QAAS,IAAGK,cAAe,KAAID,SAAU,EAA7C,CADV;;AAEA,kBAAIF,WAAJ,EAAiB;AACfN,gBAAAA,SAAS,CAACO,IAAV,CAAeD,WAAf;AACD;AACF,aAND;AAOD;AACF;;AACD;AAnBF;AAqBD,GAtBD;AAuBA,SAAON,SAAP;AACD,CAhCM","sourcesContent":["/**\n * Takes a prop/style configuration and templates the classes\n * to match the styleMaps classes returning a concatenated classname string\n */\n\nimport {\n  OptionalResponsiveProperty,\n  ResponsiveProperty,\n} from '../typings/responsive-properties';\n\nexport const generateResponsiveClassnames = (\n  config:\n    | ResponsiveProperty<Record<string, unknown>>\n    | OptionalResponsiveProperty<Record<string, unknown>>,\n  styleMap: Record<string, string>\n): string[] => {\n  const styleList: string[] = [];\n\n  Object.entries(config).forEach(([propName, propValue]) => {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string': {\n        const mappedClass = styleMap[`${propName}_${propValue}__xs`];\n        if (mappedClass) {\n          styleList.push(mappedClass);\n        }\n      }\n      case 'object': {\n        if (propValue !== null) {\n          Object.entries(propValue).forEach(([mediaSize, mediaPropValue]) => {\n            const mappedClass =\n              styleMap[`${propName}_${mediaPropValue}__${mediaSize}`];\n            if (mappedClass) {\n              styleList.push(mappedClass);\n            }\n          });\n        }\n      }\n      default:\n    }\n  });\n  return styleList;\n};\n"]},"metadata":{},"sourceType":"module"}