{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{cloneElement}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var RadioGroup=function RadioGroup(_ref){var children=_ref.children,onChange=_ref.onChange,htmlForPrefix=_ref.htmlForPrefix,name=_ref.name,rest=_objectWithoutProperties(_ref,[\"children\",\"onChange\",\"htmlForPrefix\",\"name\"]);return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},rest),{},{children:React.Children.map(children,function(child,index){return/*#__PURE__*/cloneElement(child,{onChange:onChange,htmlFor:\"\".concat(htmlForPrefix,\"-\").concat(index),name:name});})}));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/RadioGroup.tsx"],"names":["React","cloneElement","RadioGroup","children","onChange","htmlForPrefix","name","rest","Children","map","child","index","htmlFor"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EACEC,YADF,KAIO,OAJP,C,2CAiBA,MAAO,IAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,UACnDC,CAAAA,QADmD,MACnDA,QADmD,CAEnDC,QAFmD,MAEnDA,QAFmD,CAGnDC,aAHmD,MAGnDA,aAHmD,CAInDC,IAJmD,MAInDA,IAJmD,CAKhDC,IALgD,kGAOnD,0CAASA,IAAT,eACGP,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,CAA6B,SAACO,KAAD,CAAQC,KAAR,qBAC5BV,YAAY,CAACS,KAAD,CAAQ,CAClBN,QAAQ,CAARA,QADkB,CAElBQ,OAAO,WAAKP,aAAL,aAAsBM,KAAtB,CAFW,CAGlBL,IAAI,CAAJA,IAHkB,CAAR,CADgB,EAA7B,CADH,GAPmD,EAA9C","sourcesContent":["import React, {\n  cloneElement,\n  HTMLAttributes,\n  InputHTMLAttributes,\n} from 'react';\n\nexport type RadioGroupProps = Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> &\n  Pick<InputHTMLAttributes<HTMLInputElement>, 'onChange'> & {\n    /**\n     * @remarks This is meant to be `Radio`s.\n     */\n    children: any[];\n    htmlForPrefix?: string;\n    name?: string;\n    selected?: string;\n  };\n\nexport const RadioGroup: React.FC<RadioGroupProps> = ({\n  children,\n  onChange,\n  htmlForPrefix,\n  name,\n  ...rest\n}) => (\n  <div {...rest}>\n    {React.Children.map(children, (child, index) =>\n      cloneElement(child, {\n        onChange,\n        htmlFor: `${htmlForPrefix}-${index}`,\n        name,\n      })\n    )}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}