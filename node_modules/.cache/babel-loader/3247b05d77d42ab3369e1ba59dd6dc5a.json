{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmojiActor = void 0;\n\nconst range_1 = require(\"./range\");\n\nconst utils_1 = require(\"./utils\");\n/**\r\n * Pixel distance out of the screen bounds to treat actors as out-of-bounds.\r\n */\n\n\nconst outOfBounds = 350;\n/**\r\n * Contains the position state and DOM element for a single displayed emoji.\r\n *\r\n * @remarks\r\n * This creates and keeps a single DOM element span in the DOM.\r\n * Text content for the span is determined by the provided actors.\r\n *\r\n * On each game tick, this actor will:\r\n *  1. Dispose itself if it's moved past out of the game screen\r\n *  2. Reduce opacity a little bit\r\n *  3. Dispose itself if it's no longer visible at all\r\n *  4. Adjust position and velocity as per its physics constants\r\n *  5. Update the DOM element's opacity and position to reflect those changes\r\n *\r\n * \"Disposing\" an actor means removing its element from the document.\r\n */\n\nclass EmojiActor {\n  constructor(settings) {\n    /**\r\n     * CSS opacity style, starting at 1 for fully visible.\r\n     */\n    this.opacity = 1;\n    this.element = document.createElement(settings.tagName);\n    this.element.className = settings.className;\n    this.element.style.transition = \"16ms opacity, 16ms transform\";\n    this.element.textContent = utils_1.randomArrayMember(settings.emojis); // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/accessible-emoji.md\n\n    this.element.setAttribute(\"aria-label\", \"Random emoji\");\n    this.element.setAttribute(\"role\", \"img\");\n    this.element.style.fontSize = `${range_1.randomInRange(settings.physics.fontSize)}px`;\n    this.physics = settings.physics;\n    this.position = {\n      rotation: range_1.randomInRange(settings.physics.rotation),\n      x: settings.position.x,\n      y: settings.position.y\n    };\n    this.velocity = {\n      rotation: range_1.randomInRange(settings.physics.initialVelocities.rotation),\n      x: range_1.randomInRange(settings.physics.initialVelocities.x),\n      y: range_1.randomInRange(settings.physics.initialVelocities.y)\n    };\n    this.updateElement();\n    settings.process(this.element);\n    settings.container.appendChild(this.element);\n  }\n  /**\r\n   * Moves the actor forward one tick.\r\n   *\r\n   * @param timeElapsed   How many milliseconds have passed since the last action.\r\n   * @returns Whether this is now dead.\r\n   */\n\n\n  act(timeElapsed) {\n    if (this.physics.opacityDecay) {\n      this.opacity -= timeElapsed / (this.physics.opacityDecay * this.physics.framerate);\n\n      if (this.opacity <= 0) {\n        return true;\n      }\n    }\n\n    this.velocity.rotation *= this.physics.rotationDeceleration;\n    this.velocity.y += this.physics.gravity;\n    this.position.rotation += this.velocity.rotation;\n    this.position.x += this.velocity.x * timeElapsed / this.physics.framerate;\n    this.position.y += this.velocity.y * timeElapsed / this.physics.framerate;\n    const windowHeight = window.outerHeight || document.documentElement.clientHeight;\n    const windowWidth = window.outerWidth || document.documentElement.clientWidth;\n\n    if (!this.physics.preserveOutOfBounds) {\n      if (this.position.y - this.element.clientHeight > windowHeight + outOfBounds) {\n        return true;\n      }\n\n      if (this.position.y + this.element.clientHeight < -outOfBounds) {\n        return true;\n      }\n\n      if (this.position.x - this.element.clientWidth > windowWidth + outOfBounds) {\n        return true;\n      }\n\n      if (this.position.x + this.element.clientWidth < -outOfBounds) {\n        return true;\n      }\n    }\n\n    this.updateElement();\n    return false;\n  }\n  /**\r\n   * Disposes of the attached DOM element upon actor death.\r\n   */\n\n\n  dispose() {\n    if (this.element.parentElement !== null) {\n      this.element.parentElement.removeChild(this.element);\n    }\n  }\n  /**\r\n   * Updates the attached DOM element to match tracking position.\r\n   */\n\n\n  updateElement() {\n    this.element.style.opacity = `${this.opacity}`;\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px) rotate(${Math.round(this.position.rotation)}deg)`;\n  }\n\n}\n\nexports.EmojiActor = EmojiActor;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/emojisplosion/src/actor.js"],"names":["Object","defineProperty","exports","value","EmojiActor","range_1","require","utils_1","outOfBounds","constructor","settings","opacity","element","document","createElement","tagName","className","style","transition","textContent","randomArrayMember","emojis","setAttribute","fontSize","randomInRange","physics","position","rotation","x","y","velocity","initialVelocities","updateElement","process","container","appendChild","act","timeElapsed","opacityDecay","framerate","rotationDeceleration","gravity","windowHeight","window","outerHeight","documentElement","clientHeight","windowWidth","outerWidth","clientWidth","preserveOutOfBounds","dispose","parentElement","removeChild","transform","Math","round"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EmojiActor = void 0;\r\nconst range_1 = require(\"./range\");\r\nconst utils_1 = require(\"./utils\");\r\n/**\r\n * Pixel distance out of the screen bounds to treat actors as out-of-bounds.\r\n */\r\nconst outOfBounds = 350;\r\n/**\r\n * Contains the position state and DOM element for a single displayed emoji.\r\n *\r\n * @remarks\r\n * This creates and keeps a single DOM element span in the DOM.\r\n * Text content for the span is determined by the provided actors.\r\n *\r\n * On each game tick, this actor will:\r\n *  1. Dispose itself if it's moved past out of the game screen\r\n *  2. Reduce opacity a little bit\r\n *  3. Dispose itself if it's no longer visible at all\r\n *  4. Adjust position and velocity as per its physics constants\r\n *  5. Update the DOM element's opacity and position to reflect those changes\r\n *\r\n * \"Disposing\" an actor means removing its element from the document.\r\n */\r\nclass EmojiActor {\r\n    constructor(settings) {\r\n        /**\r\n         * CSS opacity style, starting at 1 for fully visible.\r\n         */\r\n        this.opacity = 1;\r\n        this.element = document.createElement(settings.tagName);\r\n        this.element.className = settings.className;\r\n        this.element.style.transition = \"16ms opacity, 16ms transform\";\r\n        this.element.textContent = utils_1.randomArrayMember(settings.emojis);\r\n        // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/accessible-emoji.md\r\n        this.element.setAttribute(\"aria-label\", \"Random emoji\");\r\n        this.element.setAttribute(\"role\", \"img\");\r\n        this.element.style.fontSize = `${range_1.randomInRange(settings.physics.fontSize)}px`;\r\n        this.physics = settings.physics;\r\n        this.position = {\r\n            rotation: range_1.randomInRange(settings.physics.rotation),\r\n            x: settings.position.x,\r\n            y: settings.position.y,\r\n        };\r\n        this.velocity = {\r\n            rotation: range_1.randomInRange(settings.physics.initialVelocities.rotation),\r\n            x: range_1.randomInRange(settings.physics.initialVelocities.x),\r\n            y: range_1.randomInRange(settings.physics.initialVelocities.y),\r\n        };\r\n        this.updateElement();\r\n        settings.process(this.element);\r\n        settings.container.appendChild(this.element);\r\n    }\r\n    /**\r\n     * Moves the actor forward one tick.\r\n     *\r\n     * @param timeElapsed   How many milliseconds have passed since the last action.\r\n     * @returns Whether this is now dead.\r\n     */\r\n    act(timeElapsed) {\r\n        if (this.physics.opacityDecay) {\r\n            this.opacity -= timeElapsed / (this.physics.opacityDecay * this.physics.framerate);\r\n            if (this.opacity <= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        this.velocity.rotation *= this.physics.rotationDeceleration;\r\n        this.velocity.y += this.physics.gravity;\r\n        this.position.rotation += this.velocity.rotation;\r\n        this.position.x += this.velocity.x * timeElapsed / this.physics.framerate;\r\n        this.position.y += this.velocity.y * timeElapsed / this.physics.framerate;\r\n        const windowHeight = window.outerHeight || document.documentElement.clientHeight;\r\n        const windowWidth = window.outerWidth || document.documentElement.clientWidth;\r\n        if (!this.physics.preserveOutOfBounds) {\r\n            if (this.position.y - this.element.clientHeight >\r\n                windowHeight + outOfBounds) {\r\n                return true;\r\n            }\r\n            if (this.position.y + this.element.clientHeight < -outOfBounds) {\r\n                return true;\r\n            }\r\n            if (this.position.x - this.element.clientWidth >\r\n                windowWidth + outOfBounds) {\r\n                return true;\r\n            }\r\n            if (this.position.x + this.element.clientWidth < -outOfBounds) {\r\n                return true;\r\n            }\r\n        }\r\n        this.updateElement();\r\n        return false;\r\n    }\r\n    /**\r\n     * Disposes of the attached DOM element upon actor death.\r\n     */\r\n    dispose() {\r\n        if (this.element.parentElement !== null) {\r\n            this.element.parentElement.removeChild(this.element);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the attached DOM element to match tracking position.\r\n     */\r\n    updateElement() {\r\n        this.element.style.opacity = `${this.opacity}`;\r\n        this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px) rotate(${Math.round(this.position.rotation)}deg)`;\r\n    }\r\n}\r\nexports.EmojiActor = EmojiActor;\r\n"]},"metadata":{},"sourceType":"script"}