{"ast":null,"code":"import{theme}from\"@codecademy/gamut-styles\";import React from'react';import{createRootComponent}from\"components/createRootComponent\";import{setCredentials}from'state/auth/authSlice';import{useAppDispatch}from'store/hooks';import{useGetCurrentUserQuery}from'services/auth';import PathRouteSwitcher from\"./scenes/Paths\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PortalRouter=function PortalRouter(_ref){var portalData=_ref.portalData,statusCode=_ref.statusCode;var dispatch=useAppDispatch();var _useGetCurrentUserQue=useGetCurrentUserQuery(),data=_useGetCurrentUserQue.data;if(data){var token=localStorage.getItem('token');var userResponse={user:data,token:token};dispatch(setCredentials(userResponse));}return/*#__PURE__*/_jsx(PathRouteSwitcher,{});};export default createRootComponent(PortalRouter,{theme:theme});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/index.tsx"],"names":["theme","React","createRootComponent","setCredentials","useAppDispatch","useGetCurrentUserQuery","PathRouteSwitcher","PortalRouter","portalData","statusCode","dispatch","data","token","localStorage","getItem","userResponse","user"],"mappings":"AAAA,OAASA,KAAT,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,KAAP,KAAiC,OAAjC,CACA,OAASC,mBAAT,KAAoC,gCAApC,CAIA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,cAAT,KAA+C,aAA/C,CACA,OAASC,sBAAT,KAAuC,eAAvC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gBAA9B,C,2CAOA,MAAO,IAAMC,CAAAA,YAAmC,CAAG,QAAtCA,CAAAA,YAAsC,MAI7C,IAHFC,CAAAA,UAGE,MAHFA,UAGE,CAFFC,UAEE,MAFFA,UAEE,CACF,GAAMC,CAAAA,QAAQ,CAAGN,cAAc,EAA/B,CADE,0BAEeC,sBAAsB,EAFrC,CAEMM,IAFN,uBAEMA,IAFN,CAGF,GAAIA,IAAJ,CAAW,CACV,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAEL,IADa,CAEnBC,KAAK,CAALA,KAFmB,CAArB,CAIAF,QAAQ,CAACP,cAAc,CAACY,YAAD,CAAf,CAAR,CACA,CAED,mBACI,KAAC,iBAAD,IADJ,CAGH,CAnBM,CAuBP,cAAeb,CAAAA,mBAAmB,CAACK,YAAD,CAAc,CAAEP,KAAK,CAALA,KAAF,CAAd,CAAlC","sourcesContent":["import { theme } from \"@codecademy/gamut-styles\"\nimport React, { useEffect } from 'react'\nimport { createRootComponent } from \"components/createRootComponent\";\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { createReduxBinder } from \"libs/reduxBinder\";\nimport { configureStore } from \"./store/configureStore\";\nimport { setCredentials } from 'state/auth/authSlice';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { useGetCurrentUserQuery } from 'services/auth';\nimport PathRouteSwitcher from \"./scenes/Paths\"\n\nexport type PortalProps = {\n    portalData: unknown,\n    statusCode: number\n}\n\nexport const PortalRouter: React.FC<PortalProps> = ({\n    portalData,\n    statusCode\n   \n}) => {\n    const dispatch = useAppDispatch();\n    const { data } = useGetCurrentUserQuery()\n    if (data ) {\n     const token = localStorage.getItem('token');\n     const userResponse = {\n       user: data,\n       token\n     }\n     dispatch(setCredentials(userResponse))\n    }\n\n    return(\n        <PathRouteSwitcher />\n    )\n}\n\n\n\nexport default createRootComponent(PortalRouter,{ theme });\n \n"]},"metadata":{},"sourceType":"module"}