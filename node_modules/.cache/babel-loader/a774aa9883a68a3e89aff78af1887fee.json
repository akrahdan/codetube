{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\nimport { Outcome } from \"./Outcome\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateIncludedMutation, useCreateLearningOutcomeMutation, useCreateSyllabusMutation, useEditSyllabusMutation, useEditIncludedMutation, useDeleteOutcomeMutation, useEditLearningOutcomeMutation, useFetchIncludedQuery, useDeleteSyllabusMutation, useDeleteIncludedMutation, useFetchSyllabusQuery, useFetchOutcomesQuery } from \"services/projects\";\nimport { selectOutcomes, selectIncluded, selectSyllabuses } from \"state/project/projectSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n  const {\n    data: syllabusQuery\n  } = useFetchSyllabusQuery(locationPayload.id);\n  const {\n    data: learningQuery\n  } = useFetchOutcomesQuery(locationPayload.id);\n  const {\n    data: IncludedQuery\n  } = useFetchIncludedQuery(locationPayload.id);\n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses);\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes);\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded);\n  const alert = useAlert();\n  const [syllabuses, setSyllabuses] = useState([{\n    id: -1,\n    title: \"\",\n    description: \"\",\n    project: locationPayload.id\n  }]);\n  const [outcomes, setOutcomes] = useState([{\n    id: -1,\n    title: \"\",\n    description: '',\n    project: locationPayload.id\n  }]);\n  const [included, setIncluded] = useState([{\n    id: -1,\n    title: '',\n    description: '',\n    project: locationPayload.id\n  }]);\n\n  const removeSyllabus = syllabus => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = req => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = req => {\n    deleteIncluded(req.id);\n  };\n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n  useEffect(() => {\n    if (selectedSave.submit) {}\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your project is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your project?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [syllabusUpdate && syllabusUpdate.map(syllabus => /*#__PURE__*/_jsxDEV(Syllabus, {\n                    syllabus: syllabus,\n                    handleRemove: removeSyllabus,\n                    handleChange: obj => {\n                      let gUpdate = [...syllabusUpdate];\n                      let index = gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setSyllabusUpdate(gUpdate);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this)), syllabuses.map(syllabus => /*#__PURE__*/_jsxDEV(SyllabusCreate, {\n                    syllabus: syllabus,\n                    handleRemove: value => {\n                      const updatedGoals = syllabuses.filter(result => result.id != value.id);\n                      setSyllabuses(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newSyllabus = [...syllabuses];\n                      let index = newSyllabus.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newSyllabus[index] = obj;\n                      setSyllabuses(newSyllabus);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const syllabusItem = {\n                  id: +syllabuses.length,\n                  title: \"\",\n                  description: \"\",\n                  project: locationPayload.id\n                };\n                const newSyllabus = [...syllabuses, syllabusItem];\n                const emptyValue = syllabuses.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setSyllabuses(newSyllabus);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"What will be the important takeaways?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [learningUpdate && learningUpdate.map(req => /*#__PURE__*/_jsxDEV(Outcome, {\n                    outcome: req,\n                    handleRemove: removeOutcome,\n                    handleChange: obj => {\n                      let reqUpdates = [...learningUpdate];\n                      let index = reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setLearningUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this)), outcomes.map(req => /*#__PURE__*/_jsxDEV(CreateOutcome, {\n                    outcome: req,\n                    handleRemove: value => {\n                      const updatedReqs = outcomes.filter(result => result.id != value.id);\n                      setOutcomes(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...outcomes];\n                      let index = reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setOutcomes(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: -1 + outcomes.length,\n                  title: \"\",\n                  description: \"\",\n                  project: locationPayload.id\n                };\n                const newReqs = [...outcomes, reqItem];\n                const emptyValue = outcomes.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setOutcomes(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Let your students know what is included in this project?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [includeUpdate && includeUpdate.map(exp => /*#__PURE__*/_jsxDEV(Included, {\n                    inc: exp,\n                    handleRemove: removeIncluded,\n                    handleChange: obj => {\n                      let expUpdate = [...includeUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setIncludeUpdate(expUpdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)), included.map(exp => /*#__PURE__*/_jsxDEV(CreateIncluded, {\n                    inc: exp,\n                    handleRemove: value => {\n                      const updatedIncluded = included.filter(result => result.id != value.id);\n                      setIncluded(updatedIncluded);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...included];\n                      let index = expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setIncluded(expdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: included.length,\n                  title: \"\",\n                  description: \"\",\n                  project: locationPayload.id\n                };\n                const newExps = [...included, expItem];\n                const emptyValue = included.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setIncluded(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"6kqu5e/2cRVRU2T27DmSF+KvItI=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateSyllabusMutation, useCreateLearningOutcomeMutation, useCreateIncludedMutation, useEditSyllabusMutation, useEditLearningOutcomeMutation, useEditIncludedMutation, useDeleteSyllabusMutation, useDeleteOutcomeMutation, useDeleteIncludedMutation, useFetchSyllabusQuery, useFetchOutcomesQuery, useFetchIncludedQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.tsx"],"names":["useEffect","useState","useAlert","Included","CreateIncluded","Syllabus","SyllabusCreate","CreateOutcome","Outcome","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateIncludedMutation","useCreateLearningOutcomeMutation","useCreateSyllabusMutation","useEditSyllabusMutation","useEditIncludedMutation","useDeleteOutcomeMutation","useEditLearningOutcomeMutation","useFetchIncludedQuery","useDeleteSyllabusMutation","useDeleteIncludedMutation","useFetchSyllabusQuery","useFetchOutcomesQuery","selectOutcomes","selectIncluded","selectSyllabuses","Target","locationPath","selectedSave","locationPayload","selectedOutcomes","selectedIncluded","selectedSyllabuses","createSyllabus","createLearningOutcome","createIncluded","editSyllabus","editLearningOutcome","editIncluded","deleteSyllabus","deleteOutcome","deleteIncluded","data","syllabusQuery","id","learningQuery","IncludedQuery","syllabusUpdate","setSyllabusUpdate","learningUpdate","setLearningUpdate","includeUpdate","setIncludeUpdate","alert","syllabuses","setSyllabuses","title","description","project","outcomes","setOutcomes","included","setIncluded","removeSyllabus","syllabus","removeOutcome","req","removeIncluded","submit","map","obj","gUpdate","index","findIndex","item","value","updatedGoals","filter","result","newSyllabus","syllabusItem","length","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","exp","expUpdate","updatedIncluded","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\n\n\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\n\nimport { Outcome } from \"./Outcome\";\n\nimport { selectSave } from \"state/course/courseSplice\";\n\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\n\nimport {\n  useCreateIncludedMutation,\n  useCreateLearningOutcomeMutation,\n  useCreateSyllabusMutation,\n  useEditSyllabusMutation,\n  useEditIncludedMutation,\n  useDeleteOutcomeMutation,\n  useEditLearningOutcomeMutation,\n  useFetchIncludedQuery,\n  useDeleteSyllabusMutation,\n  useDeleteIncludedMutation,\n  useFetchSyllabusQuery,\n  useFetchOutcomesQuery,\n  TitleDescription,\n} from \"services/projects\";\n\nimport {\n  selectOutcomes,\n  selectIncluded,\n  selectSyllabuses,\n} from \"state/project/projectSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n\n  const { data: syllabusQuery } = useFetchSyllabusQuery(locationPayload.id);\n  const { data: learningQuery } = useFetchOutcomesQuery(locationPayload.id);\n  const { data: IncludedQuery } = useFetchIncludedQuery(locationPayload.id);\n\n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses);\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes);\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded);\n\n  const alert = useAlert();\n\n  const [syllabuses, setSyllabuses] = useState<TitleDescription[]>([\n    { id: -1, title: \"\", description: \"\", project: locationPayload.id },\n  ]);\n  const [outcomes, setOutcomes] = useState<TitleDescription[]>([\n    { id: -1, title: \"\", description: '', project: locationPayload.id },\n  ]);\n\n  const [included, setIncluded] = useState<TitleDescription[]>([{ id: -1, title: '', description: '', project: locationPayload.id }]);\n\n  const removeSyllabus = (syllabus) => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = (req) => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = (req) => {\n    deleteIncluded(req.id);\n  };\n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n\n  useEffect(() => {\n    if(selectedSave.submit) {\n\n    }\n   \n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            project is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your project?\n                </label>\n                <div>\n                  <div>\n                    {syllabusUpdate &&\n                      syllabusUpdate.map((syllabus) => (\n                        <Syllabus\n                          key={syllabus.id}\n                          syllabus={syllabus}\n                          handleRemove={removeSyllabus}\n                          handleChange={(obj) => {\n                            let gUpdate = [...syllabusUpdate];\n                            let index = gUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setSyllabusUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {syllabuses.map((syllabus) => (\n                      <SyllabusCreate\n                        key={syllabus.id}\n                        syllabus={syllabus}\n                        handleRemove={(value) => {\n                          const updatedGoals = syllabuses.filter(\n                            (result) => result.id != value.id\n                          );\n                          setSyllabuses(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newSyllabus = [...syllabuses];\n                          let index = newSyllabus.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newSyllabus[index] = obj;\n                          setSyllabuses(newSyllabus);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const syllabusItem = {\n                    id: + syllabuses.length,\n                    title: \"\",\n                    description: \"\",\n                    project: locationPayload.id\n\n                  };\n                  const newSyllabus = [...syllabuses, syllabusItem];\n                  const emptyValue = syllabuses.filter(\n                    (item) => item.title == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setSyllabuses(newSyllabus);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  What will be the important takeaways?\n                </label>\n                <div>\n                  <div>\n                    {learningUpdate &&\n                      learningUpdate.map((req) => (\n                        <Outcome\n                          outcome={req}\n                          key={req.id}\n                          handleRemove={removeOutcome}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...learningUpdate];\n                            let index = reqUpdates.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setLearningUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {outcomes.map((req) => (\n                      <CreateOutcome\n                        outcome={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = outcomes.filter(\n                            (result) => result.id != value.id\n                          );\n                          setOutcomes(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...outcomes];\n                          let index = reqs.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setOutcomes(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: -1 + outcomes.length,\n                    title: \"\",\n                    description: \"\",\n                    project: locationPayload.id\n                  };\n                  const newReqs = [...outcomes, reqItem];\n                  const emptyValue = outcomes.filter((item) => item.title == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setOutcomes(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Let your students know what is included in this project?\n                </label>\n                <div>\n                  <div>\n                    {includeUpdate &&\n                      includeUpdate.map((exp) => (\n                        <Included\n                          key={exp.id}\n                          inc={exp}\n                          handleRemove={removeIncluded}\n                          handleChange={(obj) => {\n                            let expUpdate = [...includeUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setIncludeUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {included.map((exp) => (\n                      <CreateIncluded\n                        key={exp.id}\n                        inc={exp}\n                        handleRemove={(value) => {\n                          const updatedIncluded = included.filter(\n                            (result) => result.id != value.id\n                          );\n                          setIncluded(updatedIncluded);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...included];\n\n                          let index = expdate.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setIncluded(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: included.length,\n                    title: \"\",\n                    description: \"\",\n                    project: locationPayload.id\n                  };\n                  const newExps = [...included, expItem];\n                  const emptyValue = included.filter(\n                    (item) => item.title == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setIncluded(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}