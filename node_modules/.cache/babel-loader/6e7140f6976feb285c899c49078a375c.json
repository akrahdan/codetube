{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/FormGroupLabel.tsx\";\nimport { MiniInfoOutlineIcon } from '@codecademy/gamut-icons';\nimport { theme, variant } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { ToolTip } from '../ToolTip';\nimport { formBaseStyles } from './styles/shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledToolTipContainer = styled.span`\n  position: absolute;\n  left: calc(100% - 1.1rem);\n`;\n_c = StyledToolTipContainer;\nconst StyledToolTip = styled(ToolTip)`\n  z-index: 1;\n`;\n_c2 = StyledToolTip;\nconst labelSizeVariants = variant({\n  defaultVariant: 'small',\n  prop: 'size',\n  variants: {\n    small: {\n      lineHeight: 'title',\n      mb: 4\n    },\n    large: {\n      fontSize: 22,\n      lineHeight: 'base',\n      fontWeight: 'title'\n    }\n  }\n});\n\nconst disabledLabelStyle = ({\n  disabled\n}) => {\n  if (disabled) {\n    return css`\n      color: ${theme.colors['gray-600']};\n    `;\n  }\n};\n\nconst formLabelStyles = ({\n  size,\n  disabled\n}) => css`\n  ${formBaseStyles}\n  ${disabledLabelStyle({\n  disabled\n})}\n  ${labelSizeVariants({\n  size\n})}\n  display: block;\n`;\n\nconst Label = styled.label(formLabelStyles).withComponent(_c3 = props => {\n  if (props.htmlFor) {\n    return /*#__PURE__*/_jsxDEV(\"label\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n});\n_c4 = Label;\nexport const FormGroupLabel = ({\n  children,\n  className,\n  disabled,\n  htmlFor,\n  tooltip,\n  showRequired,\n  size,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Label, { ...rest,\n    htmlFor: htmlFor,\n    disabled: disabled,\n    className: className,\n    size: size,\n    children: [children, showRequired ? ' *' : '', tooltip && /*#__PURE__*/_jsxDEV(StyledToolTipContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledToolTip, {\n        alignment: \"bottom-right\",\n        target: /*#__PURE__*/_jsxDEV(MiniInfoOutlineIcon, {\n          size: \"0.8rem\",\n          \"aria-hidden\": \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this),\n        ...tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c5 = FormGroupLabel;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledToolTipContainer\");\n$RefreshReg$(_c2, \"StyledToolTip\");\n$RefreshReg$(_c3, \"Label$styled\\n  .label(formLabelStyles)\\n  .withComponent\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"FormGroupLabel\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/FormGroupLabel.tsx"],"names":["MiniInfoOutlineIcon","theme","variant","css","styled","React","ToolTip","formBaseStyles","StyledToolTipContainer","span","StyledToolTip","labelSizeVariants","defaultVariant","prop","variants","small","lineHeight","mb","large","fontSize","fontWeight","disabledLabelStyle","disabled","colors","formLabelStyles","size","Label","label","withComponent","props","htmlFor","FormGroupLabel","children","className","tooltip","showRequired","rest"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,yBAApC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,0BAA/B;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAsC,OAAtC;AAEA,SAASC,OAAT,QAAsC,YAAtC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,MAAMC,sBAAsB,GAAGJ,MAAM,CAACK,IAAK;AAC3C;AACA;AACA,CAHA;KAAMD,sB;AAKN,MAAME,aAAa,GAAGN,MAAM,CAACE,OAAD,CAAU;AACtC;AACA,CAFA;MAAMI,a;AAoBN,MAAMC,iBAAiB,GAAGT,OAAO,CAAC;AAChCU,EAAAA,cAAc,EAAE,OADgB;AAEhCC,EAAAA,IAAI,EAAE,MAF0B;AAGhCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,OADP;AAELC,MAAAA,EAAE,EAAE;AAFC,KADC;AAKRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELH,MAAAA,UAAU,EAAE,MAFP;AAGLI,MAAAA,UAAU,EAAE;AAHP;AALC;AAHsB,CAAD,CAAjC;;AAgBA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AACpE,MAAIA,QAAJ,EAAc;AACZ,WAAOnB,GAAI;AACf,eAAeF,KAAK,CAACsB,MAAN,CAAa,UAAb,CAAyB;AACxC,KAFI;AAGD;AACF,CAND;;AAQA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQH,EAAAA;AAAR,CAAD,KAA6CnB,GAAI;AACzE,IAAII,cAAe;AACnB,IAAIc,kBAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAAe;AACrC,IAAIX,iBAAiB,CAAC;AAAEc,EAAAA;AAAF,CAAD,CAAW;AAChC;AACA,CALA;;AAOA,MAAMC,KAAK,GAAGtB,MAAM,CACjBuB,KADW,CACLH,eADK,EAEXI,aAFW,OAEIC,KAAD,IAAgC;AAC7C,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,wBAAO,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,oBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPW,CAAd;MAAMH,K;AASN,OAAO,MAAMK,cAA6C,GAAG,CAAC;AAC5DC,EAAAA,QAD4D;AAE5DC,EAAAA,SAF4D;AAG5DX,EAAAA,QAH4D;AAI5DQ,EAAAA,OAJ4D;AAK5DI,EAAAA,OAL4D;AAM5DC,EAAAA,YAN4D;AAO5DV,EAAAA,IAP4D;AAQ5D,KAAGW;AARyD,CAAD,KASvD;AACJ,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,QAAQ,EAAER,QAHZ;AAIE,IAAA,SAAS,EAAEW,SAJb;AAKE,IAAA,IAAI,EAAER,IALR;AAAA,eAOGO,QAPH,EAQGG,YAAY,GAAG,IAAH,GAAU,EARzB,EASGD,OAAO,iBACN,QAAC,sBAAD;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,MAAM,eAAE,QAAC,mBAAD;AAAqB,UAAA,IAAI,EAAC,QAA1B;AAAmC,yBAAY;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFV;AAAA,WAGMA;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/BM;MAAMH,c","sourcesContent":["import { MiniInfoOutlineIcon } from '@codecademy/gamut-icons';\nimport { theme, variant } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { HTMLAttributes } from 'react';\n\nimport { ToolTip, ToolTipProps } from '../ToolTip';\nimport { formBaseStyles } from './styles/shared';\n\nconst StyledToolTipContainer = styled.span`\n  position: absolute;\n  left: calc(100% - 1.1rem);\n`;\n\nconst StyledToolTip = styled(ToolTip)`\n  z-index: 1;\n`;\n\nexport type FormGroupLabelProps = HTMLAttributes<HTMLDivElement> &\n  HTMLAttributes<HTMLLabelElement> & {\n    disabled?: boolean;\n    /**\n     * [The for/id string of a label or labelable form-related element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor). The outer FormGroup or FormLabel should have an identical string as the inner FormElement for accessibility purposes.\n     */\n    htmlFor?: string;\n    tooltip?: ToolTipProps;\n    showRequired?: boolean;\n    size?: 'small' | 'large';\n  };\n\ntype disabledLabelStyleProps = {\n  disabled?: boolean;\n};\n\nconst labelSizeVariants = variant({\n  defaultVariant: 'small',\n  prop: 'size',\n  variants: {\n    small: {\n      lineHeight: 'title',\n      mb: 4,\n    },\n    large: {\n      fontSize: 22,\n      lineHeight: 'base',\n      fontWeight: 'title',\n    },\n  },\n});\n\nconst disabledLabelStyle = ({ disabled }: disabledLabelStyleProps) => {\n  if (disabled) {\n    return css`\n      color: ${theme.colors['gray-600']};\n    `;\n  }\n};\n\nconst formLabelStyles = ({ size, disabled }: FormGroupLabelProps) => css`\n  ${formBaseStyles}\n  ${disabledLabelStyle({ disabled })}\n  ${labelSizeVariants({ size })}\n  display: block;\n`;\n\nconst Label = styled\n  .label(formLabelStyles)\n  .withComponent((props: FormGroupLabelProps) => {\n    if (props.htmlFor) {\n      return <label {...props} />;\n    }\n    return <div {...props} />;\n  });\n\nexport const FormGroupLabel: React.FC<FormGroupLabelProps> = ({\n  children,\n  className,\n  disabled,\n  htmlFor,\n  tooltip,\n  showRequired,\n  size,\n  ...rest\n}) => {\n  return (\n    <Label\n      {...rest}\n      htmlFor={htmlFor}\n      disabled={disabled}\n      className={className}\n      size={size}\n    >\n      {children}\n      {showRequired ? ' *' : ''}\n      {tooltip && (\n        <StyledToolTipContainer>\n          <StyledToolTip\n            alignment=\"bottom-right\"\n            target={<MiniInfoOutlineIcon size=\"0.8rem\" aria-hidden=\"false\" />}\n            {...tooltip}\n          />\n        </StyledToolTipContainer>\n      )}\n    </Label>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}