{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/EmptySection/index.tsx\";\nimport { FlexBox, Pattern, Text } from '@codecademy/gamut';\nimport { pxRem, styledOptions, variant } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmptyContainer = styled(FlexBox)(variant({\n  prop: 'stretchDirection',\n  defaultVariant: 'left',\n  base: {\n    justifySelf: 'center',\n    position: 'relative',\n    px: 32,\n    py: {\n      _: 64,\n      lg: 96\n    },\n    width: 1\n  },\n  variants: {\n    left: {\n      pl: {\n        sm: 0\n      },\n      pr: {\n        sm: 64,\n        lg: 96\n      }\n    },\n    right: {\n      pr: {\n        sm: 0\n      },\n      pl: {\n        sm: 64,\n        lg: 96\n      }\n    }\n  }\n}));\nconst Dots = styled(Pattern)(variant({\n  prop: 'stretchDirection',\n  defaultVariant: 'left',\n  base: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: '-6rem',\n    right: '-6rem'\n  },\n  variants: {\n    left: {\n      right: {\n        sm: 0\n      }\n    },\n    right: {\n      left: {\n        sm: 0\n      }\n    }\n  }\n}));\nconst illustrationPositionVariants = variant({\n  prop: 'illustrationPosition',\n  defaultVariant: 'right',\n  base: {\n    mx: {\n      _: 'auto',\n      sm: 0\n    },\n    mb: {\n      _: 32,\n      sm: 0\n    }\n  },\n  variants: {\n    left: {\n      mr: {\n        sm: 48\n      }\n    },\n    right: {\n      ml: {\n        sm: 48\n      }\n    }\n  }\n});\nconst IllustrationContainer = styled('div', styledOptions)(illustrationPositionVariants);\nexport const EmptySection = ({\n  bodyText,\n  children,\n  headingText,\n  illustration: Illustration,\n  stretchDirection,\n  illustrationPosition = stretchDirection === 'right' ? 'left' : 'right',\n  innerBGColor\n}) => {\n  const flexDirection = illustrationPosition === 'right' ? 'row-reverse' : 'row';\n  return /*#__PURE__*/_jsxDEV(EmptyContainer, {\n    stretchDirection: stretchDirection,\n    children: [/*#__PURE__*/_jsxDEV(Dots, {\n      name: \"dotLoose\",\n      stretchDirection: stretchDirection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n      maxWidth: \"822px\",\n      flexBasis: \"100%\",\n      position: \"relative\",\n      bg: innerBGColor,\n      py: 48,\n      px: {\n        _: 16,\n        sm: 48,\n        md: 64\n      },\n      zIndex: 1,\n      flexDirection: {\n        _: 'column',\n        sm: flexDirection\n      },\n      justifyContent: {\n        _: 'space-around',\n        md: 'space-between'\n      },\n      alignItems: \"center\",\n      textAlign: {\n        _: 'center',\n        sm: 'start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IllustrationContainer, {\n        illustrationPosition: illustrationPosition,\n        children: /*#__PURE__*/_jsxDEV(Illustration, {\n          width: pxRem(100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n        flexDirection: \"column\",\n        alignItems: {\n          _: 'center',\n          sm: 'start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"h2\",\n          fontSize: 22,\n          mb: 8,\n          children: headingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: 32,\n          children: bodyText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_c = EmptySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptySection\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/EmptySection/index.tsx"],"names":["FlexBox","Pattern","Text","pxRem","styledOptions","variant","styled","React","EmptyContainer","prop","defaultVariant","base","justifySelf","position","px","py","_","lg","width","variants","left","pl","sm","pr","right","Dots","top","bottom","illustrationPositionVariants","mx","mb","mr","ml","IllustrationContainer","EmptySection","bodyText","children","headingText","illustration","Illustration","stretchDirection","illustrationPosition","innerBGColor","flexDirection","md"],"mappings":"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","sourcesContent":["import { ButtonProps, FlexBox, Pattern, Text } from '@codecademy/gamut';\nimport { IllustrationProps } from '@codecademy/gamut-illustrations';\nimport {\n  Colors,\n  pxRem,\n  styledOptions,\n  variant,\n} from '@codecademy/gamut-styles';\nimport { StyleProps } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { DropdownButtonProps } from '..';\n\nexport type EmptySectionProps = {\n  /**\n   * Paragraph text that displays beneath the heading text\n   */\n  bodyText: string;\n  /**\n   * Button or dropdown button with an action for the user to take\n   */\n  children: React.ReactElement<ButtonProps | DropdownButtonProps>;\n  /**\n   * The larger heading text that appears over the body text\n   */\n  headingText: string;\n  illustration: React.ComponentType<IllustrationProps>;\n  /**\n   * Whether the illustration appears to the left or right of the rest of the section's content\n   */\n  illustrationPosition?: 'left' | 'right';\n  /**\n   * This should be the same as the background color in order to create a patterned border effect\n   */\n  innerBGColor: Colors;\n  /**\n   * Whether the pattern background stretches to the end of the left or right of the viewport\n   */\n  stretchDirection: 'left' | 'right';\n};\n\nconst EmptyContainer = styled(FlexBox)(\n  variant({\n    prop: 'stretchDirection',\n    defaultVariant: 'left',\n    base: {\n      justifySelf: 'center',\n      position: 'relative',\n      px: 32,\n      py: { _: 64, lg: 96 },\n      width: 1,\n    },\n    variants: {\n      left: {\n        pl: { sm: 0 },\n        pr: { sm: 64, lg: 96 },\n      },\n      right: {\n        pr: { sm: 0 },\n        pl: { sm: 64, lg: 96 },\n      },\n    },\n  })\n);\n\nconst Dots = styled(Pattern)(\n  variant({\n    prop: 'stretchDirection',\n    defaultVariant: 'left',\n    base: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: '-6rem',\n      right: '-6rem',\n    },\n    variants: {\n      left: {\n        right: { sm: 0 },\n      },\n      right: {\n        left: { sm: 0 },\n      },\n    },\n  })\n);\n\nconst illustrationPositionVariants = variant({\n  prop: 'illustrationPosition',\n  defaultVariant: 'right',\n  base: {\n    mx: { _: 'auto', sm: 0 },\n    mb: { _: 32, sm: 0 },\n  },\n  variants: {\n    left: {\n      mr: { sm: 48 },\n    },\n    right: {\n      ml: { sm: 48 },\n    },\n  },\n});\n\ntype IllustrationContainerProps = StyleProps<\n  typeof illustrationPositionVariants\n>;\n\nconst IllustrationContainer = styled(\n  'div',\n  styledOptions\n)<IllustrationContainerProps>(illustrationPositionVariants);\n\nexport const EmptySection: React.FC<EmptySectionProps> = ({\n  bodyText,\n  children,\n  headingText,\n  illustration: Illustration,\n  stretchDirection,\n  illustrationPosition = stretchDirection === 'right' ? 'left' : 'right',\n  innerBGColor,\n}) => {\n  const flexDirection =\n    illustrationPosition === 'right' ? 'row-reverse' : 'row';\n\n  return (\n    <EmptyContainer stretchDirection={stretchDirection}>\n      <Dots name=\"dotLoose\" stretchDirection={stretchDirection} />\n      <FlexBox\n        maxWidth=\"822px\"\n        flexBasis=\"100%\"\n        position=\"relative\"\n        bg={innerBGColor}\n        py={48}\n        px={{ _: 16, sm: 48, md: 64 }}\n        zIndex={1}\n        flexDirection={{ _: 'column', sm: flexDirection }}\n        justifyContent={{ _: 'space-around', md: 'space-between' }}\n        alignItems=\"center\"\n        textAlign={{ _: 'center', sm: 'start' }}\n      >\n        <IllustrationContainer illustrationPosition={illustrationPosition}>\n          <Illustration width={pxRem(100)} />\n        </IllustrationContainer>\n        <FlexBox\n          flexDirection=\"column\"\n          alignItems={{ _: 'center', sm: 'start' }}\n        >\n          <Text as=\"h2\" fontSize={22} mb={8}>\n            {headingText}\n          </Text>\n          <Text mb={32}>{bodyText}</Text>\n          {children}\n        </FlexBox>\n      </FlexBox>\n    </EmptyContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}