{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi, Lecture } from \"services/courses\";\nexport const initialState = {\n  sections: null,\n  lectures: null\n};\nexport const curriculumSplice = createSlice({\n  name: \"curriculum\",\n  initialState,\n  reducers: {// addSection: (state, action: PayloadAction<Section>) => {\n    //   state.sections.push(action.payload);\n    // },\n    // addLecture: (state, action: PayloadAction<Lecture>) => {\n    //   state.lectures = action.payload;\n    // },\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = payload;\n    }).addMatcher(coursesApi.endpoints.fetchSections.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = payload;\n    }).addMatcher(coursesApi.endpoints.createLecture.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.lectures = payload;\n    }).addMatcher(coursesApi.endpoints.editSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      const sections = state.sections.map(section => {\n        if (section.id == payload.id) {\n          return payload;\n        }\n\n        return section;\n      });\n      state.sections = sections;\n    }).addMatcher(coursesApi.endpoints.deleteSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = state.sections.filter(section => section.id != payload.id);\n    });\n  }\n}); // export const { addSection, addLecture } = curriculumSplice.actions;\n\nexport default curriculumSplice.reducer;\nexport const selectSections = state => state.curriculum.sections;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/curriculum/currriculumSplice.ts"],"names":["createSlice","coursesApi","Lecture","initialState","sections","lectures","curriculumSplice","name","reducers","extraReducers","builder","addMatcher","endpoints","createSection","matchFulfilled","state","payload","fetchSections","createLecture","editSection","map","section","id","deleteSection","filter","reducer","selectSections","curriculum"],"mappings":"AAAA,SAA2BA,WAA3B,QAA6D,kBAA7D;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,kBAApC;AA4BA,OAAO,MAAMC,YAA6B,GAAG;AAC3CC,EAAAA,QAAQ,EAAE,IADiC;AAE3CC,EAAAA,QAAQ,EAAE;AAFiC,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;AAC1CO,EAAAA,IAAI,EAAE,YADoC;AAE1CJ,EAAAA,YAF0C;AAG1CK,EAAAA,QAAQ,EAAE,CACR;AACA;AACA;AAEA;AACA;AACA;AAPQ,GAHgC;AAY1CC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIV,UAAU,CAACW,SAAX,CAAqBC,aAArB,CAAmCC,cAFvC,EAGI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACX,QAAN,GAAiBY,OAAjB;AACD,KALL,EAMIL,UANJ,CAOIV,UAAU,CAACW,SAAX,CAAqBK,aAArB,CAAmCH,cAPvC,EAQI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACX,QAAN,GAAiBY,OAAjB;AACD,KAVL,EAYGL,UAZH,CAaIV,UAAU,CAACW,SAAX,CAAqBM,aAArB,CAAmCJ,cAbvC,EAcI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACV,QAAN,GAAiBW,OAAjB;AACD,KAhBL,EAiBIL,UAjBJ,CAkBIV,UAAU,CAACW,SAAX,CAAqBO,WAArB,CAAiCL,cAlBrC,EAmBI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtB,YAAMZ,QAAQ,GAAGW,KAAK,CAACX,QAAN,CAAegB,GAAf,CAAmBC,OAAO,IAAI;AAC3C,YAAIA,OAAO,CAACC,EAAR,IAAcN,OAAO,CAACM,EAA1B,EAA8B;AAC1B,iBAAON,OAAP;AACH;;AACD,eAAOK,OAAP;AACH,OALgB,CAAjB;AAMAN,MAAAA,KAAK,CAACX,QAAN,GAAiBA,QAAjB;AACD,KA3BL,EA4BIO,UA5BJ,CA6BIV,UAAU,CAACW,SAAX,CAAqBW,aAArB,CAAmCT,cA7BvC,EA8BI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACX,QAAN,GAAiBW,KAAK,CAACX,QAAN,CAAeoB,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACC,EAAR,IAAcN,OAAO,CAACM,EAAvD,CAAjB;AACD,KAhCL;AAkCD;AA/CyC,CAAD,CAApC,C,CAkDP;;AAEA,eAAehB,gBAAgB,CAACmB,OAAhC;AACA,OAAO,MAAMC,cAAc,GAAKX,KAAD,IAAsBA,KAAK,CAACY,UAAN,CAAiBvB,QAA/D","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { coursesApi, Lecture } from \"services/courses\";\nimport { AppThunk, RootState } from \"store\";\n\nexport interface CurriculumState {\n  sections: Section[];\n  lectures: Lecture[];\n}\n\nexport interface Section {\n  title: string;\n  id: number;\n  course: number;\n  description?: string;\n  order: number;\n}\n\n\n\nexport interface Lecture {\n  title: string;\n  id: number;\n  section: number\n  description?: string;\n  video_url?: string;\n  resources: string[]\n  order: number\n}\n\nexport const initialState: CurriculumState = {\n  sections: null,\n  lectures: null,\n};\n\nexport const curriculumSplice = createSlice({\n  name: \"curriculum\",\n  initialState,\n  reducers: {\n    // addSection: (state, action: PayloadAction<Section>) => {\n    //   state.sections.push(action.payload);\n    // },\n\n    // addLecture: (state, action: PayloadAction<Lecture>) => {\n    //   state.lectures = action.payload;\n    // },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createSection.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = payload;\n        }\n      ).addMatcher(\n        coursesApi.endpoints.fetchSections.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = payload\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.createLecture.matchFulfilled,\n        (state, { payload }) => {\n          state.lectures = payload\n        }\n      ).addMatcher(\n        coursesApi.endpoints.editSection.matchFulfilled,\n        (state, { payload }) => {\n          const sections = state.sections.map(section => {\n              if (section.id == payload.id) {\n                  return payload\n              }\n              return section\n          });\n          state.sections = sections\n        }\n      ).addMatcher(\n        coursesApi.endpoints.deleteSection.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = state.sections.filter(section => section.id != payload.id)\n        }\n      );\n  },\n});\n\n// export const { addSection, addLecture } = curriculumSplice.actions;\n\nexport default curriculumSplice.reducer;\nexport const selectSections  = (state: RootState) => state.curriculum.sections"]},"metadata":{},"sourceType":"module"}