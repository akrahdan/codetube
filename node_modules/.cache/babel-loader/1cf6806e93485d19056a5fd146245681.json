{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { invariant } from '@algolia/autocomplete-shared';\nimport { flatten, mapToAlgoliaResponse } from './utils';\n\nfunction isDescription(item) {\n  return Boolean(item.execute);\n}\n\nfunction isRequesterDescription(description) {\n  return Boolean(description === null || description === void 0 ? void 0 : description.execute);\n}\n\nexport function preResolve(itemsOrDescription, sourceId) {\n  if (isRequesterDescription(itemsOrDescription)) {\n    return _objectSpread(_objectSpread({}, itemsOrDescription), {}, {\n      requests: itemsOrDescription.queries.map(function (query) {\n        return {\n          query: query,\n          sourceId: sourceId,\n          transformResponse: itemsOrDescription.transformResponse\n        };\n      })\n    });\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId: sourceId\n  };\n}\nexport function resolve(items) {\n  var packed = items.reduce(function (acc, current) {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    var searchClient = current.searchClient,\n        execute = current.execute,\n        requests = current.requests;\n    var container = acc.find(function (item) {\n      return isDescription(current) && isDescription(item) && item.searchClient === searchClient && item.execute === execute;\n    });\n\n    if (container) {\n      var _container$items;\n\n      (_container$items = container.items).push.apply(_container$items, _toConsumableArray(requests));\n    } else {\n      var request = {\n        execute: execute,\n        items: requests,\n        searchClient: searchClient\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n  var values = packed.map(function (maybeDescription) {\n    if (!isDescription(maybeDescription)) {\n      return Promise.resolve(maybeDescription);\n    }\n\n    var _ref = maybeDescription,\n        execute = _ref.execute,\n        items = _ref.items,\n        searchClient = _ref.searchClient;\n    return execute({\n      searchClient: searchClient,\n      requests: items\n    });\n  });\n  return Promise.all(values).then(function (responses) {\n    return flatten(responses);\n  });\n}\nexport function postResolve(responses, sources) {\n  return sources.map(function (source) {\n    var matches = responses.filter(function (response) {\n      return response.sourceId === source.sourceId;\n    });\n    var results = matches.map(function (_ref2) {\n      var items = _ref2.items;\n      return items;\n    });\n    var transform = matches[0].transformResponse;\n    var items = transform ? transform(mapToAlgoliaResponse(results)) : results;\n    invariant(Array.isArray(items), \"The `getItems` function from source \\\"\".concat(source.sourceId, \"\\\" must return an array of items but returned type \").concat(JSON.stringify(_typeof(items)), \":\\n\\n\").concat(JSON.stringify(items, null, 2), \".\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\"));\n    invariant(items.every(Boolean), \"The `getItems` function from source \\\"\".concat(source.sourceId, \"\\\" must return an array of items but returned \").concat(JSON.stringify(undefined), \".\\n\\nDid you forget to return items?\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\"));\n    return {\n      source: source,\n      items: items\n    };\n  });\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-core/dist/esm/resolve.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","invariant","flatten","mapToAlgoliaResponse","isDescription","item","Boolean","execute","isRequesterDescription","description","preResolve","itemsOrDescription","sourceId","requests","queries","map","query","transformResponse","items","resolve","packed","reduce","acc","current","searchClient","container","find","_container$items","request","values","maybeDescription","Promise","_ref","all","then","responses","postResolve","sources","matches","response","results","_ref2","transform","concat","JSON","stringify","every","undefined"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { invariant } from '@algolia/autocomplete-shared';\nimport { flatten, mapToAlgoliaResponse } from './utils';\n\nfunction isDescription(item) {\n  return Boolean(item.execute);\n}\n\nfunction isRequesterDescription(description) {\n  return Boolean(description === null || description === void 0 ? void 0 : description.execute);\n}\n\nexport function preResolve(itemsOrDescription, sourceId) {\n  if (isRequesterDescription(itemsOrDescription)) {\n    return _objectSpread(_objectSpread({}, itemsOrDescription), {}, {\n      requests: itemsOrDescription.queries.map(function (query) {\n        return {\n          query: query,\n          sourceId: sourceId,\n          transformResponse: itemsOrDescription.transformResponse\n        };\n      })\n    });\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId: sourceId\n  };\n}\nexport function resolve(items) {\n  var packed = items.reduce(function (acc, current) {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    var searchClient = current.searchClient,\n        execute = current.execute,\n        requests = current.requests;\n    var container = acc.find(function (item) {\n      return isDescription(current) && isDescription(item) && item.searchClient === searchClient && item.execute === execute;\n    });\n\n    if (container) {\n      var _container$items;\n\n      (_container$items = container.items).push.apply(_container$items, _toConsumableArray(requests));\n    } else {\n      var request = {\n        execute: execute,\n        items: requests,\n        searchClient: searchClient\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n  var values = packed.map(function (maybeDescription) {\n    if (!isDescription(maybeDescription)) {\n      return Promise.resolve(maybeDescription);\n    }\n\n    var _ref = maybeDescription,\n        execute = _ref.execute,\n        items = _ref.items,\n        searchClient = _ref.searchClient;\n    return execute({\n      searchClient: searchClient,\n      requests: items\n    });\n  });\n  return Promise.all(values).then(function (responses) {\n    return flatten(responses);\n  });\n}\nexport function postResolve(responses, sources) {\n  return sources.map(function (source) {\n    var matches = responses.filter(function (response) {\n      return response.sourceId === source.sourceId;\n    });\n    var results = matches.map(function (_ref2) {\n      var items = _ref2.items;\n      return items;\n    });\n    var transform = matches[0].transformResponse;\n    var items = transform ? transform(mapToAlgoliaResponse(results)) : results;\n    invariant(Array.isArray(items), \"The `getItems` function from source \\\"\".concat(source.sourceId, \"\\\" must return an array of items but returned type \").concat(JSON.stringify(_typeof(items)), \":\\n\\n\").concat(JSON.stringify(items, null, 2), \".\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\"));\n    invariant(items.every(Boolean), \"The `getItems` function from source \\\"\".concat(source.sourceId, \"\\\" must return an array of items but returned \").concat(JSON.stringify(undefined), \".\\n\\nDid you forget to return items?\\n\\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems\"));\n    return {\n      source: source,\n      items: items\n    };\n  });\n}"]},"metadata":{},"sourceType":"module"}