{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [goals, setGoals] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [experience, setExperience] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n  useEffect(() => {\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults && (goalResults === null || goalResults === void 0 ? void 0 : goalResults.forEach(goal => {\n        if (goal.name) {\n          createGoal({\n            name: goal.name,\n            course: locationPayload.id\n          }).then(() => {\n            const results = goalResults === null || goalResults === void 0 ? void 0 : goalResults.filter(item => item.id != goal.id);\n            setGoals(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      }));\n      const experienceResults = experience;\n      experienceResults && (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.forEach(async (exp, index) => {\n        if (exp === null || exp === void 0 ? void 0 : exp.name) {\n          const awaitExperience = await createExperience({\n            name: exp.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.length) - 1) {\n            if (awaitExperience) {\n              setExperience(awaitExperience);\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        }\n      }));\n      const reqResults = requirements;\n      reqResults && reqResults.forEach(async (req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          const awaitReqs = await createRequirement({\n            name: req === null || req === void 0 ? void 0 : req.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index = (reqResults === null || reqResults === void 0 ? void 0 : reqResults.length) - 1) {\n            setRequirements(awaitReqs);\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      });\n      requirementsUpdate && requirementsUpdate.forEach(req => {\n        if (req.name) {\n          console.log(\"Req: \", req);\n          editRequirement({ ...req,\n            course: locationPayload.id\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n      experienceUpdate && (experienceUpdate === null || experienceUpdate === void 0 ? void 0 : experienceUpdate.forEach(async (req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          const awaitEditExp = await editExperience({ ...req,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == experienceUpdate.length - 1) {\n            if (awaitEditExp === null || awaitEditExp === void 0 ? void 0 : awaitEditExp.name) {}\n          }\n        }\n      }));\n      goalsUpdate && (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.forEach(item => {\n        if (item.name) {\n          editGoal({ ...item,\n            course: locationPayload === null || locationPayload === void 0 ? void 0 : locationPayload.id\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      }));\n    }\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(CourseGoal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      let gUpdate = [...goalsUpdate];\n                      let index = gUpdate === null || gUpdate === void 0 ? void 0 : gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setGoalsUpdate(gUpdate);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this)), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {\n                      const updatedGoals = goals.filter(result => result.id != value.id);\n                      setGoals(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newGoals = [...goals];\n                      let index = newGoals === null || newGoals === void 0 ? void 0 : newGoals.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newGoals[index] = obj;\n                      setGoals(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const goalItem = {\n                  id: goals === null || goals === void 0 ? void 0 : goals.length,\n                  name: \"\",\n                  course: locationPayload.id\n                };\n                const newGoals = [...goals, goalItem];\n                const emptyValue = goals === null || goals === void 0 ? void 0 : goals.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      let reqUpdates = [...requirementsUpdate];\n                      let index = reqUpdates === null || reqUpdates === void 0 ? void 0 : reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setRequirementsUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      const updatedReqs = requirements.filter(result => result.id != value.id);\n                      setRequirements(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...requirements];\n                      let index = reqs === null || reqs === void 0 ? void 0 : reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setRequirements(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: requirements === null || requirements === void 0 ? void 0 : requirements.length,\n                  name: \"\",\n                  course: locationPayload.id\n                };\n                const newReqs = [...requirements, reqItem];\n                const emptyValue = requirements === null || requirements === void 0 ? void 0 : requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(CourseExperience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      let expUpdate = [...experienceUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setExperienceUpdate(expUpdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 25\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      const updatedExperience = experience.filter(result => result.id != value.id);\n                      setExperience(updatedExperience);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...experience];\n                      let index = expdate === null || expdate === void 0 ? void 0 : expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setExperience(expdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: experience.length,\n                  name: \"\",\n                  course: locationPayload.id\n                };\n                const newExps = [...experience, expItem];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"veoRa4N0niTYUM1FY/+HWPyGIKU=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx"],"names":["useEffect","useState","useAlert","CourseGoal","Requirements","CourseExperience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","goals","setGoals","name","course","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","submit","goalResults","forEach","then","results","filter","item","show","experienceResults","exp","index","awaitExperience","unwrap","length","reqResults","awaitReqs","console","log","awaitEditExp","map","obj","gUpdate","findIndex","value","updatedGoals","result","newGoals","goalItem","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","expUpdate","updatedExperience","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  Experience,\n  Requirement,\n  Goal\n\n} from \"services/courses\";\n\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n\n  const [goals, setGoals] = useState<Goal[]>([{ id: 0, name: \"\", course: locationPayload.id }]);\n  const [requirements, setRequirements] = useState<Requirement[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n\n  const [experience, setExperience] = useState<Experience[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n\n  useEffect(() => {\n\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults &&\n        goalResults?.forEach((goal) => {\n          if (goal.name) {\n            createGoal({\n              name: goal.name,\n              course: locationPayload.id,\n            }).then(() => {\n              const results = goalResults?.filter((item) => item.id != goal.id);\n              setGoals(results);\n              alert.show(\"Your data has been saved successfully\")\n            });\n          }\n        });\n\n      const experienceResults = experience;\n      experienceResults &&\n        experienceResults?.forEach(async (exp, index) => {\n          if (exp?.name) {\n            const awaitExperience = await createExperience({\n              name: exp.name,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index == experienceResults?.length - 1) {\n              if (awaitExperience) {\n                setExperience(awaitExperience);\n                alert.show(\"Your data has been saved successfully\")\n              }\n\n            }\n\n          }\n        });\n\n      const reqResults = requirements;\n      reqResults &&\n        reqResults.forEach(async (req, index) => {\n          if (req?.name) {\n            const awaitReqs = await createRequirement({\n              name: req?.name,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index = reqResults?.length - 1) {\n\n              setRequirements(awaitReqs);\n              alert.show(\"Your data has been saved successfully\")\n            }\n\n          }\n        });\n      requirementsUpdate &&\n        requirementsUpdate.forEach((req) => {\n          if (req.name) {\n            console.log(\"Req: \", req);\n            editRequirement({\n              ...req,\n              course: locationPayload.id,\n            }).then(() => {\n\n              alert.show(\"Your data has been saved successfully\");\n            });\n          }\n        });\n\n      experienceUpdate &&\n        experienceUpdate?.forEach(async (req, index) => {\n          if (req?.name) {\n           const awaitEditExp =  await editExperience({\n              ...req,\n              course: locationPayload.id,\n            }).unwrap()\n            if(index == experienceUpdate.length - 1) {\n              if(awaitEditExp?.name) {\n                \n              }\n            }\n          }\n        });\n\n      goalsUpdate &&\n        goalsUpdate?.forEach((item) => {\n          if (item.name) {\n            editGoal({\n              ...item,\n              course: locationPayload?.id,\n            }).then(() => {\n              alert.show(\"Your data has been saved successfully\");\n            });\n          }\n        });\n    }\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate &&\n                      goalsUpdate.map((goal) => (\n                        <CourseGoal\n                          key={goal.id}\n                          goal={goal}\n                          handleRemove={removeGoal}\n                          handleChange={(obj) => {\n                            let gUpdate = [...goalsUpdate];\n                            let index = gUpdate?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setGoalsUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {goals.map((goal) => (\n                      <GoalCreate\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={(value) => {\n                          const updatedGoals = goals.filter(\n                            (result) => result.id != value.id\n                          );\n                          setGoals(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newGoals = [...goals];\n                          let index = newGoals?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newGoals[index] = obj;\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const goalItem = {\n                    id: goals?.length,\n                    name: \"\",\n                    course: locationPayload.id\n                  };\n                  const newGoals = [...goals, goalItem];\n                  const emptyValue = goals?.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate &&\n                      requirementsUpdate.map((req) => (\n                        <Requirements\n                          req={req}\n                          key={req.id}\n                          handleRemove={removeReq}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...requirementsUpdate];\n                            let index = reqUpdates?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setRequirementsUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = requirements.filter(\n                            (result) => result.id != value.id\n                          );\n                          setRequirements(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...requirements];\n                          let index = reqs?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setRequirements(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: requirements?.length,\n                    name: \"\",\n                    course: locationPayload.id\n                  };\n                  const newReqs = [...requirements, reqItem];\n                  const emptyValue = requirements?.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate &&\n                      experienceUpdate.map((exp) => (\n                        <CourseExperience\n                          key={exp?.id}\n                          experience={exp}\n                          handleRemove={removeExp}\n                          handleChange={(obj) => {\n                            let expUpdate = [...experienceUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setExperienceUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp?.id}\n                        experience={exp}\n                        handleRemove={(value) => {\n                          const updatedExperience = experience.filter(\n                            (result) => result.id != value.id\n                          );\n                          setExperience(updatedExperience);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...experience];\n\n                          let index = expdate?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setExperience(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: experience.length,\n                    name: \"\",\n                    course: locationPayload.id\n                  };\n                  const newExps = [...experience, expItem];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}