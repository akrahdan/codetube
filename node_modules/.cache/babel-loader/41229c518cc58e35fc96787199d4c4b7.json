{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [showGoal, setShowGoal] = useState(true);\n  const [showReq, setShowReq] = useState(true);\n  const [showExp, setShowExp] = useState(true);\n  const [goal, setGoal] = useState();\n  const [req, setReq] = useState();\n  const [exp, setExp] = useState();\n  const [goals, setGoals] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n  const [experience, setExperience] = useState([{\n    id: 0,\n    name: \"\",\n    course: locationPayload.id\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n  useEffect(async () => {\n    if (selectedSave.submit) {\n      if (goal) {\n        const awaitGoal = await createGoal({\n          name: goal.name,\n          course: locationPayload.id\n        }).unwrap();\n\n        if (awaitGoal === null || awaitGoal === void 0 ? void 0 : awaitGoal.length) {\n          alert.show(\"Your data has been saved successfully\");\n        }\n      }\n\n      if (exp) {\n        const awaitExperience = await createExperience({\n          name: exp.name,\n          course: locationPayload.id\n        }).unwrap();\n\n        if (awaitExperience === null || awaitExperience === void 0 ? void 0 : awaitExperience.length) {\n          alert.show(\"Your data has been saved successfully\");\n        }\n      }\n\n      if (req === null || req === void 0 ? void 0 : req.name) {\n        const awaitReqs = await createRequirement({\n          name: req === null || req === void 0 ? void 0 : req.name,\n          course: locationPayload.id\n        }).unwrap();\n\n        if (awaitReqs) {\n          alert.show(\"Your data has been saved successfully\");\n        }\n      }\n\n      requirementsUpdate && requirementsUpdate.forEach(async (req, index) => {\n        if (req.name) {\n          const awaitReq = await editRequirement({ ...req,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (requirementsUpdate === null || requirementsUpdate === void 0 ? void 0 : requirementsUpdate.length) - 1) {\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      });\n      experienceUpdate && (experienceUpdate === null || experienceUpdate === void 0 ? void 0 : experienceUpdate.forEach(async (req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          const awaitEditExp = await editExperience({ ...req,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == experienceUpdate.length - 1) {\n            if (awaitEditExp === null || awaitEditExp === void 0 ? void 0 : awaitEditExp.name) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        }\n      }));\n      goalsUpdate && (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.forEach(async (item, index) => {\n        if (item.name) {\n          const awaitEditGoal = await editGoal({ ...item,\n            course: locationPayload === null || locationPayload === void 0 ? void 0 : locationPayload.id\n          }).unwrap();\n\n          if (index == (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.length) - 1) {\n            alert.show(\"Your data has been saved successfully\");\n          }\n        }\n      }));\n    }\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(CourseGoal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      let gUpdate = [...goalsUpdate];\n                      let index = gUpdate === null || gUpdate === void 0 ? void 0 : gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setGoalsUpdate(gUpdate);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this)), showGoal && /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {\n                      setGoal(null);\n                      setShowGoal(!showGoal);\n                    },\n                    handleChange: obj => {\n                      setGoal({\n                        name: obj === null || obj === void 0 ? void 0 : obj.name,\n                        id: obj === null || obj === void 0 ? void 0 : obj.id,\n                        course: locationPayload.id\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                if (!showGoal) {\n                  setGoal(null);\n                  setShowGoal(!showGoal);\n                }\n\n                if (goal) {\n                  createGoal({\n                    name: goal.name,\n                    course: goal.course\n                  }).then(res => {\n                    var _res$data;\n\n                    if (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.length) {\n                      setGoal(null);\n\n                      if (!showGoal) {\n                        setShowGoal(!showGoal);\n                      }\n                    }\n                  });\n                } else {\n                  return;\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      let reqUpdates = [...requirementsUpdate];\n                      let index = reqUpdates === null || reqUpdates === void 0 ? void 0 : reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setRequirementsUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)), showReq && /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      setReq(null);\n                      setShowReq(!showReq);\n                    },\n                    handleChange: obj => {\n                      setReq({\n                        name: obj.name,\n                        course: locationPayload.id,\n                        id: obj.id\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!showReq) {\n                  setReq(null);\n                  setShowReq(!showReq);\n                }\n\n                if (req) {\n                  createRequirement({\n                    name: req.name,\n                    course: req.course\n                  }).then(res => {\n                    var _res$data2;\n\n                    if (res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.length) {\n                      setReq(null);\n\n                      if (!showReq) {\n                        setShowReq(!showReq);\n                      }\n                    }\n                  });\n                } else {\n                  return;\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(CourseExperience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      let expUpdate = [...experienceUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setExperienceUpdate(expUpdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this)), showExp && /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      setExp(null);\n                      setShowExp(!showExp);\n                    },\n                    handleChange: obj => {\n                      setExp({\n                        name: obj.name,\n                        course: locationPayload.id,\n                        id: obj.id\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (!showExp) {\n                  setExp(null);\n                  setShowExp(!showExp);\n                }\n\n                if (exp) {\n                  createExperience({\n                    name: exp.name,\n                    course: exp.course\n                  }).then(res => {\n                    var _res$data3;\n\n                    if (res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.length) {\n                      setExp(null);\n\n                      if (!showExp) {\n                        setShowExp(!showExp);\n                      }\n                    }\n                  });\n                } else {\n                  return;\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"xDqxXnXu+Z9fISa/TBmf2/uVv3I=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx"],"names":["useEffect","useState","useAlert","CourseGoal","Requirements","CourseExperience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","showGoal","setShowGoal","showReq","setShowReq","showExp","setShowExp","goal","setGoal","req","setReq","exp","setExp","goals","setGoals","name","course","requirements","setRequirements","experience","setExperience","removeGoal","removeReq","removeExp","submit","awaitGoal","unwrap","length","show","awaitExperience","awaitReqs","forEach","index","awaitReq","awaitEditExp","item","awaitEditGoal","map","obj","gUpdate","findIndex","value","then","res","reqUpdates","expUpdate"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { CourseGoal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  Experience,\n  Requirement,\n  Goal\n\n} from \"services/courses\";\n\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n\n  const [showGoal, setShowGoal] = useState(true)\n  const [showReq, setShowReq] = useState(true)\n  const [showExp, setShowExp] = useState(true)\n  const [goal, setGoal] = useState<Goal>()\n  const [req, setReq] = useState<Requirement>()\n  const [exp, setExp] = useState<Experience>()\n\n  const [goals, setGoals] = useState<Goal[]>([{ id: 0, name: \"\", course: locationPayload.id }]);\n  const [requirements, setRequirements] = useState<Requirement[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n\n  const [experience, setExperience] = useState<Experience[]>([\n    { id: 0, name: \"\", course: locationPayload.id },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n\n  useEffect( async () => {\n\n    if (selectedSave.submit) {\n      if (goal) {\n        const awaitGoal = await createGoal({\n          name: goal.name,\n          course: locationPayload.id,\n        }).unwrap()\n\n        if (awaitGoal?.length) {\n          alert.show(\"Your data has been saved successfully\")\n        }\n      }\n\n\n      if (exp) {\n        const awaitExperience = await createExperience({\n          name: exp.name,\n          course: locationPayload.id,\n        }).unwrap()\n        if (awaitExperience?.length) {\n          alert.show(\"Your data has been saved successfully\")\n        }\n      }\n\n      if (req?.name) {\n        const awaitReqs = await createRequirement({\n          name: req?.name,\n          course: locationPayload.id,\n        }).unwrap()\n        if (awaitReqs) {\n\n          alert.show(\"Your data has been saved successfully\")\n        }\n\n      }\n      requirementsUpdate &&\n        requirementsUpdate.forEach(async (req, index) => {\n          if (req.name) {\n\n            const awaitReq = await editRequirement({\n              ...req,\n              course: locationPayload.id,\n            }).unwrap()\n\n            if (index == requirementsUpdate?.length - 1) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        });\n\n      experienceUpdate &&\n        experienceUpdate?.forEach(async (req, index) => {\n          if (req?.name) {\n            const awaitEditExp = await editExperience({\n              ...req,\n              course: locationPayload.id,\n            }).unwrap()\n            if (index == experienceUpdate.length - 1) {\n              if (awaitEditExp?.name) {\n                alert.show(\"Your data has been saved successfully\");\n              }\n            }\n          }\n        });\n\n      goalsUpdate &&\n        goalsUpdate?.forEach(async (item, index) => {\n          if (item.name) {\n            const awaitEditGoal = await editGoal({\n              ...item,\n              course: locationPayload?.id,\n            }).unwrap()\n            if (index == goalsUpdate?.length - 1) {\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        });\n    }\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate &&\n                      goalsUpdate.map((goal) => (\n                        <CourseGoal\n                          key={goal.id}\n                          goal={goal}\n                          handleRemove={removeGoal}\n                          handleChange={(obj) => {\n                            let gUpdate = [...goalsUpdate];\n                            let index = gUpdate?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setGoalsUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {showGoal && <GoalCreate\n                      goal={goal}\n                      handleRemove={(value) => {\n                        setGoal(null)\n                        setShowGoal(!showGoal)\n                      }}\n                      handleChange={(obj) => {\n\n                        setGoal({\n                          name: obj?.name,\n                          id: obj?.id,\n                          course: locationPayload.id\n                        })\n                      }}\n                    />}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={async () => {\n                  if (!showGoal) {\n                    setGoal(null)\n                    setShowGoal(!showGoal)\n                  }\n                  if (goal) {\n                    createGoal({\n                      name: goal.name,\n                      course: goal.course,\n                    }).then((res: { data: Goal[] }) => {\n                      if (res?.data?.length) {\n\n                        setGoal(null)\n                        if (!showGoal) {\n                          setShowGoal(!showGoal)\n                        }\n\n                      }\n                    })\n                  } else {\n                    return;\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate &&\n                      requirementsUpdate.map((req) => (\n                        <Requirements\n                          req={req}\n                          key={req.id}\n                          handleRemove={removeReq}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...requirementsUpdate];\n                            let index = reqUpdates?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setRequirementsUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {showReq && <ReqCreate\n                      req={req}\n\n                      handleRemove={(value) => {\n                        setReq(null)\n                        setShowReq(!showReq)\n                      }}\n                      handleChange={(obj) => {\n                        setReq({\n                          name: obj.name,\n                          course: locationPayload.id,\n                          id: obj.id\n                        })\n                      }}\n                    />}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  if (!showReq) {\n                    setReq(null)\n                    setShowReq(!showReq)\n                  }\n                  if (req) {\n                    createRequirement({\n                      name: req.name,\n                      course: req.course,\n                    }).then((res: { data: Requirement[] }) => {\n                      if (res?.data?.length) {\n\n                        setReq(null)\n                        if (!showReq) {\n                          setShowReq(!showReq)\n                        }\n\n                      }\n                    })\n                  } else {\n                    return;\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate &&\n                      experienceUpdate.map((exp) => (\n                        <CourseExperience\n                          key={exp?.id}\n                          experience={exp}\n                          handleRemove={removeExp}\n                          handleChange={(obj) => {\n                            let expUpdate = [...experienceUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setExperienceUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {showExp && <ExperienceCreate\n                      experience={exp}\n                      handleRemove={(value) => {\n                        setExp(null)\n                        setShowExp(!showExp)\n                      }}\n                      handleChange={(obj) => {\n\n                        setExp({\n                          name: obj.name,\n                          course: locationPayload.id,\n                          id: obj.id\n                        });\n                      }}\n                    />}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  if (!showExp) {\n                    setExp(null)\n                    setShowExp(!showExp)\n                  }\n                  if (exp) {\n                    createExperience({\n                      name: exp.name,\n                      course: exp.course,\n                    }).then((res: { data: Experience[] }) => {\n                      if (res?.data?.length) {\n                        setExp(null)\n                        if (!showExp) {\n                          setShowExp(!showExp)\n                        }\n\n                      }\n                    })\n                  } else {\n                    return;\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}