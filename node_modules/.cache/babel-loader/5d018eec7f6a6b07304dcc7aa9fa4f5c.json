{"ast":null,"code":"var TOKENIZE_POLICY = {\n  characters: {\n    tokenizeString: null,\n    isAtomic: function isAtomic(str) {\n      return str.length <= 1;\n    }\n  },\n  words: {\n    tokenizeString: function tokenizeString(str) {\n      return str.match(/(\\s*\\S[\\S\\xA0]*)/g);\n    },\n    isAtomic: function isAtomic(str) {\n      return /^\\s*[\\S\\xA0]*\\s*$/.test(str);\n    }\n  }\n};\nexport default TOKENIZE_POLICY;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/react-truncate-markup/es/tokenize-rules.js"],"names":["TOKENIZE_POLICY","characters","tokenizeString","isAtomic","str","length","words","match","test"],"mappings":"AAAA,IAAIA,eAAe,GAAG;AACpBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,cAAc,EAAE,IADN;AAEVC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC/B,aAAOA,GAAG,CAACC,MAAJ,IAAc,CAArB;AACD;AAJS,GADQ;AAOpBC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBE,GAAxB,EAA6B;AAC3C,aAAOA,GAAG,CAACG,KAAJ,CAAU,mBAAV,CAAP;AACD,KAHI;AAILJ,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC/B,aAAQ,oBAAoBI,IAApB,CAAyBJ,GAAzB,CAAR;AAED;AAPI;AAPa,CAAtB;AAkBA,eAAeJ,eAAf","sourcesContent":["var TOKENIZE_POLICY = {\n  characters: {\n    tokenizeString: null,\n    isAtomic: function isAtomic(str) {\n      return str.length <= 1;\n    }\n  },\n  words: {\n    tokenizeString: function tokenizeString(str) {\n      return str.match(/(\\s*\\S[\\S\\xA0]*)/g);\n    },\n    isAtomic: function isAtomic(str) {\n      return (/^\\s*[\\S\\xA0]*\\s*$/.test(str)\n      );\n    }\n  }\n};\n\nexport default TOKENIZE_POLICY;"]},"metadata":{},"sourceType":"module"}