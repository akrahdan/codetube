{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{MediaTypes}from'../constants';var requestNewUrls=function requestNewUrls(props){var setLoading=props.setLoading,requestUrls=props.requestUrls;setLoading&&setLoading(true);requestUrls&&requestUrls();};var onResolutionChange=function onResolutionChange(currentResolution,props){var setCurrentResolution=props.setCurrentResolution,setPreferredResolutions=props.setPreferredResolutions,mediaType=props.mediaType,preferredResolutions=props.preferredResolutions;if(currentResolution!==props.currentResolution)setCurrentResolution&&setCurrentResolution(currentResolution);if(preferredResolutions&&currentResolution!==preferredResolutions[mediaType])setPreferredResolutions&&setPreferredResolutions(_defineProperty({},mediaType,currentResolution));if(mediaType!==MediaTypes.HLS)requestNewUrls(props);};var getQualityFromHeight=function getQualityFromHeight(height){return typeof height==='number'?\"\".concat(height,\"p\"):height;};var getQualityAriaLabel=function getQualityAriaLabel(height,currentResolution){return currentResolution&&height===currentResolution.height?\"quality is \".concat(getQualityFromHeight(height)):\"set to \".concat(getQualityFromHeight(height));};// LANGUAGE\nvar onKeyPressLanguage=function onKeyPressLanguage(language,props){return function(e){var setClosedCaptioningLanguage=props.setClosedCaptioningLanguage;var keycode=e.keyCode||e.which;if(keycode===13){e.preventDefault();e.stopPropagation();setClosedCaptioningLanguage&&setClosedCaptioningLanguage(language);return true;}};};var onKeyDownLanguage=function onKeyDownLanguage(language,props){return function(e){var setClosedCaptioningLanguage=props.setClosedCaptioningLanguage;var keycode=e.keyCode||e.which;if(keycode===13||e.key==' '){e.preventDefault();e.stopPropagation();e.nativeEvent.stopImmediatePropagation();setClosedCaptioningLanguage&&setClosedCaptioningLanguage(language);return true;}};};export{requestNewUrls,onResolutionChange,getQualityFromHeight,getQualityAriaLabel,onKeyPressLanguage,onKeyDownLanguage};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/settings-menu/settings-menu-utils.js"],"names":["MediaTypes","requestNewUrls","props","setLoading","requestUrls","onResolutionChange","currentResolution","setCurrentResolution","setPreferredResolutions","mediaType","preferredResolutions","HLS","getQualityFromHeight","height","getQualityAriaLabel","onKeyPressLanguage","language","e","setClosedCaptioningLanguage","keycode","keyCode","which","preventDefault","stopPropagation","onKeyDownLanguage","key","nativeEvent","stopImmediatePropagation"],"mappings":"yKAAA,OAASA,UAAT,KAA2B,cAA3B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,IACtBC,CAAAA,UADsB,CACMD,KADN,CACtBC,UADsB,CACVC,WADU,CACMF,KADN,CACVE,WADU,CAE9BD,UAAU,EAAIA,UAAU,CAAC,IAAD,CAAxB,CACAC,WAAW,EAAIA,WAAW,EAA1B,CACD,CAJD,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,iBAAD,CAAoBJ,KAApB,CAA8B,IAC/CK,CAAAA,oBAD+C,CACoCL,KADpC,CAC/CK,oBAD+C,CACzBC,uBADyB,CACoCN,KADpC,CACzBM,uBADyB,CACAC,SADA,CACoCP,KADpC,CACAO,SADA,CACWC,oBADX,CACoCR,KADpC,CACWQ,oBADX,CAEvD,GAAIJ,iBAAiB,GAAKJ,KAAK,CAACI,iBAAhC,CAAmDC,oBAAoB,EAAIA,oBAAoB,CAACD,iBAAD,CAA5C,CACnD,GAAII,oBAAoB,EAAIJ,iBAAiB,GAAKI,oBAAoB,CAACD,SAAD,CAAtE,CACED,uBAAuB,EAAIA,uBAAuB,oBAAIC,SAAJ,CAAgBH,iBAAhB,EAAlD,CACF,GAAIG,SAAS,GAAKT,UAAU,CAACW,GAA7B,CAAkCV,cAAc,CAACC,KAAD,CAAd,CACnC,CAND,CAQA,GAAMU,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAC,MAAM,QAAK,OAAOA,CAAAA,MAAP,GAAkB,QAAlB,WAAgCA,MAAhC,MAA4CA,MAAjD,EAAnC,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACD,MAAD,CAASP,iBAAT,CAA+B,CACzD,MAAOA,CAAAA,iBAAiB,EAAIO,MAAM,GAAKP,iBAAiB,CAACO,MAAlD,sBACWD,oBAAoB,CAACC,MAAD,CAD/B,mBAEOD,oBAAoB,CAACC,MAAD,CAF3B,CAAP,CAGD,CAJD,CAMA;AAEA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWd,KAAX,QAAqB,UAAAe,CAAC,CAAI,IAC3CC,CAAAA,2BAD2C,CACXhB,KADW,CAC3CgB,2BAD2C,CAGnD,GAAMC,CAAAA,OAAO,CAAGF,CAAC,CAACG,OAAF,EAAaH,CAAC,CAACI,KAA/B,CAEA,GAAIF,OAAO,GAAK,EAAhB,CAAoB,CAClBF,CAAC,CAACK,cAAF,GACAL,CAAC,CAACM,eAAF,GACAL,2BAA2B,EAAIA,2BAA2B,CAACF,QAAD,CAA1D,CACA,MAAO,KAAP,CACD,CACF,CAX0B,EAA3B,CAaA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACR,QAAD,CAAWd,KAAX,QAAqB,UAAAe,CAAC,CAAI,IAC1CC,CAAAA,2BAD0C,CACVhB,KADU,CAC1CgB,2BAD0C,CAGlD,GAAMC,CAAAA,OAAO,CAAGF,CAAC,CAACG,OAAF,EAAaH,CAAC,CAACI,KAA/B,CAEA,GAAIF,OAAO,GAAK,EAAZ,EAAkBF,CAAC,CAACQ,GAAF,EAAS,GAA/B,CAAoC,CAClCR,CAAC,CAACK,cAAF,GACAL,CAAC,CAACM,eAAF,GACAN,CAAC,CAACS,WAAF,CAAcC,wBAAd,GACAT,2BAA2B,EAAIA,2BAA2B,CAACF,QAAD,CAA1D,CACA,MAAO,KAAP,CACD,CACF,CAZyB,EAA1B,CAcA,OACEf,cADF,CAEEI,kBAFF,CAGEO,oBAHF,CAIEE,mBAJF,CAKEC,kBALF,CAMES,iBANF","sourcesContent":["import { MediaTypes } from '../constants'\n\nconst requestNewUrls = props => {\n  const { setLoading, requestUrls } = props\n  setLoading && setLoading(true)\n  requestUrls && requestUrls()\n}\n\nconst onResolutionChange = (currentResolution, props) => {\n  const { setCurrentResolution, setPreferredResolutions, mediaType, preferredResolutions } = props\n  if (currentResolution !== props.currentResolution) setCurrentResolution && setCurrentResolution(currentResolution)\n  if (preferredResolutions && currentResolution !== preferredResolutions[mediaType])\n    setPreferredResolutions && setPreferredResolutions({ [mediaType]: currentResolution })\n  if (mediaType !== MediaTypes.HLS) requestNewUrls(props)\n}\n\nconst getQualityFromHeight = height => (typeof height === 'number' ? `${height}p` : height)\n\nconst getQualityAriaLabel = (height, currentResolution) => {\n  return currentResolution && height === currentResolution.height\n    ? `quality is ${getQualityFromHeight(height)}`\n    : `set to ${getQualityFromHeight(height)}`\n}\n\n// LANGUAGE\n\nconst onKeyPressLanguage = (language, props) => e => {\n  const { setClosedCaptioningLanguage } = props\n\n  const keycode = e.keyCode || e.which\n\n  if (keycode === 13) {\n    e.preventDefault()\n    e.stopPropagation()\n    setClosedCaptioningLanguage && setClosedCaptioningLanguage(language)\n    return true\n  }\n}\n\nconst onKeyDownLanguage = (language, props) => e => {\n  const { setClosedCaptioningLanguage } = props\n\n  const keycode = e.keyCode || e.which\n\n  if (keycode === 13 || e.key == ' ') {\n    e.preventDefault()\n    e.stopPropagation()\n    e.nativeEvent.stopImmediatePropagation()\n    setClosedCaptioningLanguage && setClosedCaptioningLanguage(language)\n    return true\n  }\n}\n\nexport {\n  requestNewUrls,\n  onResolutionChange,\n  getQualityFromHeight,\n  getQualityAriaLabel,\n  onKeyPressLanguage,\n  onKeyDownLanguage,\n}\n"]},"metadata":{},"sourceType":"module"}