{"ast":null,"code":"import cx from 'classnames';\n\n/**\n * Preprocessing Instructions:\n *\n * Runs through each named tag in the html and adds a class name\n * to it based on the tag name. This means all `<pre>` tags will\n * actually output `<pre class=\"pre\" />`\n * The class name will only be applied if it exists in the stylesheet for this component.\n *\n * @remarks\n * This is done instead of styling the elements directly to prevent styles from interfering\n * with component overrides\n */\nexport const createPreprocessingInstructions = styles => {\n  return [{\n    shouldPreprocessNode(node) {\n      return Boolean(node.name);\n    },\n\n    preprocessNode(node) {\n      var _node$attribs;\n\n      const classname = cx(styles[node.name], (_node$attribs = node.attribs) === null || _node$attribs === void 0 ? void 0 : _node$attribs.class);\n      const attrs = { ...node.attribs\n      };\n      if (classname) attrs.class = classname;\n      node.attribs = attrs;\n    }\n\n  }];\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Markdown/libs/preprocessing.ts"],"names":["cx","createPreprocessingInstructions","styles","shouldPreprocessNode","node","Boolean","name","preprocessNode","classname","attribs","class","attrs"],"mappings":"AAAA,OAAOA,EAAP,MAAe,YAAf;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,+BAA+B,GAAIC,MAAD,IAA0B;AACvE,SAAO,CACL;AACEC,IAAAA,oBAAoB,CAACC,IAAD,EAAwB;AAC1C,aAAOC,OAAO,CAACD,IAAI,CAACE,IAAN,CAAd;AACD,KAHH;;AAIEC,IAAAA,cAAc,CAACH,IAAD,EAAwB;AAAA;;AACpC,YAAMI,SAAS,GAAGR,EAAE,CAACE,MAAM,CAACE,IAAI,CAACE,IAAN,CAAP,mBAAqBF,IAAI,CAACK,OAA1B,kDAAqB,cAAcC,KAAnC,CAApB;AAEA,YAAMC,KAAK,GAAG,EAAE,GAAGP,IAAI,CAACK;AAAV,OAAd;AACA,UAAID,SAAJ,EAAeG,KAAK,CAACD,KAAN,GAAcF,SAAd;AACfJ,MAAAA,IAAI,CAACK,OAAL,GAAeE,KAAf;AACD;;AAVH,GADK,CAAP;AAcD,CAfM","sourcesContent":["import cx from 'classnames';\n\nimport { HTMLToReactNode } from './overrides';\n\ntype StylesObject = {\n  [className: string]: string;\n};\n\n/**\n * Preprocessing Instructions:\n *\n * Runs through each named tag in the html and adds a class name\n * to it based on the tag name. This means all `<pre>` tags will\n * actually output `<pre class=\"pre\" />`\n * The class name will only be applied if it exists in the stylesheet for this component.\n *\n * @remarks\n * This is done instead of styling the elements directly to prevent styles from interfering\n * with component overrides\n */\nexport const createPreprocessingInstructions = (styles: StylesObject) => {\n  return [\n    {\n      shouldPreprocessNode(node: HTMLToReactNode) {\n        return Boolean(node.name);\n      },\n      preprocessNode(node: HTMLToReactNode) {\n        const classname = cx(styles[node.name!], node.attribs?.class);\n\n        const attrs = { ...node.attribs };\n        if (classname) attrs.class = classname;\n        node.attribs = attrs;\n      },\n    },\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}