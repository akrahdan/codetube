{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Tabs/Tab/index.tsx\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { omitProps } from '../../utils/omitProps';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\nexport const Tab = ({\n  active,\n  children,\n  activeClassName,\n  className,\n  disabled,\n  id,\n  defaultTheme = true,\n  onChange = () => {},\n  tabIndex = 0,\n  ...rest\n}) => {\n  const tabClasses = cx(styles.tab, className, {\n    [styles.tab_default]: defaultTheme,\n    [styles.active]: active,\n    [styles.tab_default__active]: defaultTheme && active,\n    [activeClassName]: active && activeClassName,\n    [styles.disabled]: disabled\n  });\n  const dataPropsToTransfer = omitProps([], rest);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: id,\n    className: tabClasses,\n    \"aria-selected\": active,\n    \"aria-controls\": `${id}-panel`,\n    onClick: e => {\n      e.preventDefault();\n\n      if (disabled) {\n        return;\n      }\n\n      onChange(tabIndex);\n    },\n    onKeyDown: e => {\n      if (disabled) {\n        return;\n      } // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_link_role\n\n\n      if (e.key === ' ' || e.key === 'Enter') {\n        e.preventDefault();\n        onChange(tabIndex);\n      }\n    },\n    role: \"tab\",\n    tabIndex: disabled ? -1 : 0,\n    type: \"button\",\n    ...dataPropsToTransfer,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Tab;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tab\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Tabs/Tab/index.tsx"],"names":["cx","React","omitProps","styles","Tab","active","children","activeClassName","className","disabled","id","defaultTheme","onChange","tabIndex","rest","tabClasses","tab","tab_default","tab_default__active","dataPropsToTransfer","e","preventDefault","key"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAoD,OAApD;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,GAAgC,GAAG,CAAC;AAC/CC,EAAAA,MAD+C;AAE/CC,EAAAA,QAF+C;AAG/CC,EAAAA,eAH+C;AAI/CC,EAAAA,SAJ+C;AAK/CC,EAAAA,QAL+C;AAM/CC,EAAAA,EAN+C;AAO/CC,EAAAA,YAAY,GAAG,IAPgC;AAQ/CC,EAAAA,QAAQ,GAAG,MAAM,CAAE,CAR4B;AAS/CC,EAAAA,QAAQ,GAAG,CAToC;AAU/C,KAAGC;AAV4C,CAAD,KAWhC;AACd,QAAMC,UAAU,GAAGf,EAAE,CAACG,MAAM,CAACa,GAAR,EAAaR,SAAb,EAAwB;AAC3C,KAACL,MAAM,CAACc,WAAR,GAAsBN,YADqB;AAE3C,KAACR,MAAM,CAACE,MAAR,GAAiBA,MAF0B;AAG3C,KAACF,MAAM,CAACe,mBAAR,GAA8BP,YAAY,IAAIN,MAHH;AAI3C,KAACE,eAAD,GAAoBF,MAAM,IAAIE,eAJa;AAK3C,KAACJ,MAAM,CAACM,QAAR,GAAmBA;AALwB,GAAxB,CAArB;AAOA,QAAMU,mBAAmB,GAAGjB,SAAS,CAAC,EAAD,EAAKY,IAAL,CAArC;AAEA,sBACE;AACE,IAAA,EAAE,EAAEJ,EADN;AAEE,IAAA,SAAS,EAAEK,UAFb;AAGE,qBAAeV,MAHjB;AAIE,qBAAgB,GAAEK,EAAG,QAJvB;AAKE,IAAA,OAAO,EAAGU,CAAD,IAAyB;AAChCA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAIZ,QAAJ,EAAc;AACZ;AACD;;AAEDG,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,KAbH;AAcE,IAAA,SAAS,EAAGO,CAAD,IAA4B;AACrC,UAAIX,QAAJ,EAAc;AACZ;AACD,OAHoC,CAKrC;;;AACA,UAAIW,CAAC,CAACE,GAAF,KAAU,GAAV,IAAiBF,CAAC,CAACE,GAAF,KAAU,OAA/B,EAAwC;AACtCF,QAAAA,CAAC,CAACC,cAAF;AACAT,QAAAA,QAAQ,CAACC,QAAD,CAAR;AACD;AACF,KAxBH;AAyBE,IAAA,IAAI,EAAC,KAzBP;AA0BE,IAAA,QAAQ,EAAEJ,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CA1B5B;AA2BE,IAAA,IAAI,EAAC,QA3BP;AAAA,OA4BMU,mBA5BN;AAAA,cA8BGb;AA9BH;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAvDM;KAAMF,G","sourcesContent":["import cx from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { omitProps } from '../../utils/omitProps';\nimport styles from './styles.module.scss';\n\nexport type TabProps = {\n  active?: boolean;\n  activeClassName?: string;\n  children?: ReactNode;\n  className?: string;\n  id?: string;\n  disabled?: boolean;\n  onChange?: (newTabIndex: number) => void;\n  tabIndex?: number;\n  defaultTheme?: boolean;\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  active,\n  children,\n  activeClassName,\n  className,\n  disabled,\n  id,\n  defaultTheme = true,\n  onChange = () => {},\n  tabIndex = 0,\n  ...rest\n}: TabProps) => {\n  const tabClasses = cx(styles.tab, className, {\n    [styles.tab_default]: defaultTheme,\n    [styles.active]: active,\n    [styles.tab_default__active]: defaultTheme && active,\n    [activeClassName!]: active && activeClassName,\n    [styles.disabled]: disabled,\n  });\n  const dataPropsToTransfer = omitProps([], rest);\n\n  return (\n    <button\n      id={id}\n      className={tabClasses}\n      aria-selected={active}\n      aria-controls={`${id}-panel`}\n      onClick={(e: React.MouseEvent) => {\n        e.preventDefault();\n\n        if (disabled) {\n          return;\n        }\n\n        onChange(tabIndex);\n      }}\n      onKeyDown={(e: React.KeyboardEvent) => {\n        if (disabled) {\n          return;\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_link_role\n        if (e.key === ' ' || e.key === 'Enter') {\n          e.preventDefault();\n          onChange(tabIndex);\n        }\n      }}\n      role=\"tab\"\n      tabIndex={disabled ? -1 : 0}\n      type=\"button\"\n      {...dataPropsToTransfer}\n    >\n      {children}\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}