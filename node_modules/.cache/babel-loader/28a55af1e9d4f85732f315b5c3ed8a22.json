{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuMobile/index.tsx\";\nimport { Box, Text } from '@codecademy/gamut';\nimport { ArrowChevronLeftIcon } from '@codecademy/gamut-icons';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { AppHeaderLinkSections } from '../../AppHeader/AppHeaderElements/AppHeaderLinkSections';\nimport { focusStyles, hoverStyles, textButtonStyles } from '../../AppHeader/AppHeaderElements/SharedStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullMenuButton = styled.button`\n  margin-bottom: ${pxRem(24)};\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n_c = FullMenuButton;\nexport const AppHeaderSubMenuMobile = ({\n  action,\n  handleClose,\n  item\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"aria-labelledby\": `${item.text} menu`,\n    children: [/*#__PURE__*/_jsxDEV(FullMenuButton, {\n      onClick: handleClose,\n      type: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowChevronLeftIcon, {\n        size: 12,\n        \"aria-hidden\": true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontSize: 16,\n        ml: 8,\n        children: \"Full Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"h1\",\n      fontSize: 22,\n      mb: 16,\n      children: item.type === 'profile-dropdown' ? item.userDisplayName : item.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppHeaderLinkSections, {\n      action: action,\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AppHeaderSubMenuMobile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FullMenuButton\");\n$RefreshReg$(_c2, \"AppHeaderSubMenuMobile\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuMobile/index.tsx"],"names":["Box","Text","ArrowChevronLeftIcon","pxRem","styled","React","AppHeaderLinkSections","focusStyles","hoverStyles","textButtonStyles","FullMenuButton","button","AppHeaderSubMenuMobile","action","handleClose","item","text","type","userDisplayName"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,mBAA1B;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,qBAAT,QAAsC,yDAAtC;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,gDAJP;;AAUA,MAAMC,cAAc,GAAGN,MAAM,CAACO,MAAO;AACrC,mBAAmBR,KAAK,CAAC,EAAD,CAAK;AAC7B;AACA,IAAIM,gBAAiB;AACrB,IAAID,WAAY;AAChB,IAAID,WAAY;AAChB,CANA;KAAMG,c;AAQN,OAAO,MAAME,sBAA6D,GAAG,CAAC;AAC5EC,EAAAA,MAD4E;AAE5EC,EAAAA,WAF4E;AAG5EC,EAAAA;AAH4E,CAAD,KAIvE;AACJ,sBACE,QAAC,GAAD;AAAK,uBAAkB,GAAEA,IAAI,CAACC,IAAK,OAAnC;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEF,WAAzB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA,8BACE,QAAC,oBAAD;AAAsB,QAAA,IAAI,EAAE,EAA5B;AAAgC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,IAAT;AAAc,MAAA,QAAQ,EAAE,EAAxB;AAA4B,MAAA,EAAE,EAAE,EAAhC;AAAA,gBACGC,IAAI,CAACE,IAAL,KAAc,kBAAd,GAAmCF,IAAI,CAACG,eAAxC,GAA0DH,IAAI,CAACC;AADlE;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,qBAAD;AAAuB,MAAA,MAAM,EAAEH,MAA/B;AAAuC,MAAA,IAAI,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBM;MAAMH,sB","sourcesContent":["import { Box, Text } from '@codecademy/gamut';\nimport { ArrowChevronLeftIcon } from '@codecademy/gamut-icons';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { AppHeaderDropdownProps } from '../../AppHeader/AppHeaderElements/AppHeaderDropdown';\nimport { AppHeaderLinkSections } from '../../AppHeader/AppHeaderElements/AppHeaderLinkSections';\nimport {\n  focusStyles,\n  hoverStyles,\n  textButtonStyles,\n} from '../../AppHeader/AppHeaderElements/SharedStyles';\n\nexport type AppHeaderSubMenuMobileProps = AppHeaderDropdownProps & {\n  handleClose: () => void;\n};\n\nconst FullMenuButton = styled.button`\n  margin-bottom: ${pxRem(24)};\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n\nexport const AppHeaderSubMenuMobile: React.FC<AppHeaderSubMenuMobileProps> = ({\n  action,\n  handleClose,\n  item,\n}) => {\n  return (\n    <Box aria-labelledby={`${item.text} menu`}>\n      <FullMenuButton onClick={handleClose} type=\"button\">\n        <ArrowChevronLeftIcon size={12} aria-hidden />\n        <Box fontSize={16} ml={8}>\n          Full Menu\n        </Box>\n      </FullMenuButton>\n      <Text as=\"h1\" fontSize={22} mb={16}>\n        {item.type === 'profile-dropdown' ? item.userDisplayName : item.text}\n      </Text>\n      <AppHeaderLinkSections action={action} item={item} />\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}