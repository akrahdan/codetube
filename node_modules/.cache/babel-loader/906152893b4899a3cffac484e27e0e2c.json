{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/EditorialImage/index.tsx\";\nimport React from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditorialImage = ({\n  image,\n  alt,\n  caption\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.imageContainer,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.image,\n      alt: alt,\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), caption && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: styles.caption,\n    children: caption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n_c = EditorialImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorialImage\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/EditorialImage/index.tsx"],"names":["React","styles","EditorialImage","image","alt","caption","imageContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAWA,OAAO,MAAMC,cAA6C,GAAG,CAAC;AAC5DC,EAAAA,KAD4D;AAE5DC,EAAAA,GAF4D;AAG5DC,EAAAA;AAH4D,CAAD,kBAK3D;AAAA,0BACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACK,cAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACE,KAAvB;AAA8B,MAAA,GAAG,EAAEC,GAAnC;AAAwC,MAAA,GAAG,EAAED;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAIGE,OAAO,iBAAI;AAAM,IAAA,SAAS,EAAEJ,MAAM,CAACI,OAAxB;AAAA,cAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA,QALK;KAAMH,c","sourcesContent":["import React from 'react';\n\nimport styles from './styles.module.scss';\n\nexport type EditorialImageProps = {\n  /** The URL used for the image src */\n  image: string;\n  /** Alternative text for the image  */\n  alt: string;\n  /** An optional caption that will display below the image  */\n  caption?: string;\n};\n\nexport const EditorialImage: React.FC<EditorialImageProps> = ({\n  image,\n  alt,\n  caption,\n}) => (\n  <div>\n    <div className={styles.imageContainer}>\n      <img className={styles.image} alt={alt} src={image} />\n    </div>\n    {caption && <span className={styles.caption}>{caption}</span>}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}