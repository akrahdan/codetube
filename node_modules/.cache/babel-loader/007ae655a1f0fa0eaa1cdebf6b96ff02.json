{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Box } from '../../Box';\nimport { CTAButton, FillButton, TextButton } from '../../Button';\nimport { ButtonDeprecated } from '../../ButtonDeprecated';\nimport { Column } from '../../Layout';\nvar positions = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch'\n};\nexport var GridFormButtons = function GridFormButtons(props) {\n  var getButton = function getButton() {\n    switch (props.type) {\n      case 'cta':\n        return /*#__PURE__*/React.createElement(CTAButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled\n        }, props.contents);\n\n      case 'business':\n        /**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */\n        return /*#__PURE__*/React.createElement(ButtonDeprecated, {\n          disabled: props.disabled,\n          outline: props.outline,\n          theme: props.theme,\n          type: \"submit\"\n        }, props.contents);\n\n      default:\n        return /*#__PURE__*/React.createElement(FillButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled\n        }, props.contents);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Column, {\n    size: props.size\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 8,\n    alignSelf: \"center\",\n    justifySelf: positions[props.position || 'left']\n  }, props.cancel && /*#__PURE__*/React.createElement(TextButton, _extends({}, props.cancel, {\n    mr: 32,\n    \"data-testid\": \"cancel-button\"\n  })), getButton()));\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut/dist/GridForm/GridFormButtons/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Box","CTAButton","FillButton","TextButton","ButtonDeprecated","Column","positions","left","center","right","stretch","GridFormButtons","props","getButton","type","createElement","mode","disabled","contents","outline","theme","size","mb","alignSelf","justifySelf","position","cancel","mr"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Box } from '../../Box';\nimport { CTAButton, FillButton, TextButton } from '../../Button';\nimport { ButtonDeprecated } from '../../ButtonDeprecated';\nimport { Column } from '../../Layout';\nvar positions = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch'\n};\nexport var GridFormButtons = function GridFormButtons(props) {\n  var getButton = function getButton() {\n    switch (props.type) {\n      case 'cta':\n        return /*#__PURE__*/React.createElement(CTAButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled\n        }, props.contents);\n\n      case 'business':\n        /**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */\n        return /*#__PURE__*/React.createElement(ButtonDeprecated, {\n          disabled: props.disabled,\n          outline: props.outline,\n          theme: props.theme,\n          type: \"submit\"\n        }, props.contents);\n\n      default:\n        return /*#__PURE__*/React.createElement(FillButton, {\n          type: \"submit\",\n          mode: props.mode,\n          disabled: props.disabled\n        }, props.contents);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Column, {\n    size: props.size\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 8,\n    alignSelf: \"center\",\n    justifySelf: positions[props.position || 'left']\n  }, props.cancel && /*#__PURE__*/React.createElement(TextButton, _extends({}, props.cancel, {\n    mr: 32,\n    \"data-testid\": \"cancel-button\"\n  })), getButton()));\n};"]},"metadata":{},"sourceType":"module"}