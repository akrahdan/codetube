{"ast":null,"code":"import cx from'classnames';import React from'react';import{generateResponsiveClassnames}from'../utils/generateResponsiveClassnames';import styles from'./styles/Text.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */export var TextDeprecated=function TextDeprecated(_ref){var children=_ref.children,_ref$as=_ref.as,Element=_ref$as===void 0?'p':_ref$as,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?'md':_ref$fontSize,className=_ref.className,testId=_ref.testId,style=_ref.style;return/*#__PURE__*/_jsx(Element,{className:cx(styles.text,className,generateResponsiveClassnames({fontSize:fontSize},styles)),\"data-testid\":testId,style:style,children:children});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Typography/TextDeprecated.tsx"],"names":["cx","React","generateResponsiveClassnames","styles","TextDeprecated","children","as","Element","fontSize","className","testId","style","text"],"mappings":"AAAA,MAAOA,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,4BAAT,KAA6C,uCAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,C,2CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAOvD,IANJC,CAAAA,QAMI,MANJA,QAMI,cALJC,EAKI,CALAC,OAKA,kBALU,GAKV,4BAJJC,QAII,CAJJA,QAII,wBAJO,IAIP,eAHJC,SAGI,MAHJA,SAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,KACI,MADJA,KACI,CACJ,mBACE,KAAC,OAAD,EACE,SAAS,CAAEX,EAAE,CACXG,MAAM,CAACS,IADI,CAEXH,SAFW,CAGXP,4BAA4B,CAAC,CAAEM,QAAQ,CAARA,QAAF,CAAD,CAAeL,MAAf,CAHjB,CADf,CAME,cAAaO,MANf,CAOE,KAAK,CAAEC,KAPT,UASGN,QATH,EADF,CAaD,CArBM","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\n\nimport { ResponsiveProperty } from '../typings/responsive-properties';\nimport { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';\nimport styles from './styles/Text.module.scss';\nimport { AllowedStyles } from './types';\n\nexport type TextTags = 'p' | 'span' | 'div';\nexport type TextSizes = 'sm' | 'md' | 'lg';\n\ntype TextDeprecatedProps = {\n  className?: string;\n  testId?: string;\n  /** Text based tags */\n  as?: TextTags;\n  /** A font-size/font-family pair */\n  fontSize?: ResponsiveProperty<TextSizes>;\n  /** Allows you to pass color attributes directly to the tag */\n  style?: AllowedStyles;\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */\n\nexport const TextDeprecated: React.FC<TextDeprecatedProps> = ({\n  children,\n  as: Element = 'p',\n  fontSize = 'md',\n  className,\n  testId,\n  style,\n}) => {\n  return (\n    <Element\n      className={cx(\n        styles.text,\n        className,\n        generateResponsiveClassnames({ fontSize }, styles)\n      )}\n      data-testid={testId}\n      style={style}\n    >\n      {children}\n    </Element>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}