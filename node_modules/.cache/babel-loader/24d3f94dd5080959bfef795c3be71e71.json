{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{ArrowChevronDownIcon}from'@codecademy/gamut-icons';import cx from'classnames';import React from'react';import{ButtonDeprecated}from'../ButtonDeprecated';import{ButtonDeprecatedBase}from'../ButtonDeprecatedBase';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var buttonThemes={blue:{component:ButtonDeprecated,props:{flat:true,theme:'white'}},plain:{component:ButtonDeprecated,props:{flat:true,theme:'brand-dark-blue'}},yellow:{component:ButtonDeprecatedBase,props:{}}};/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */export var AccordionButton=function AccordionButton(_ref){var children=_ref.children,className=_ref.className,expanded=_ref.expanded,_ref$size=_ref.size,size=_ref$size===void 0?'normal':_ref$size,_ref$theme=_ref.theme,theme=_ref$theme===void 0?'plain':_ref$theme,baseProps=_objectWithoutProperties(_ref,[\"children\",\"className\",\"expanded\",\"size\",\"theme\"]);var _buttonThemes$theme=buttonThemes[theme],ButtonComponent=_buttonThemes$theme.component,props=_buttonThemes$theme.props;var iconSize=size==='large'?30:undefined;return/*#__PURE__*/_jsxs(ButtonComponent,_objectSpread(_objectSpread(_objectSpread({\"aria-expanded\":expanded,className:cx(styles.accordionButton,styles[theme],styles[size],className)},baseProps),props),{},{children:[/*#__PURE__*/_jsx(\"span\",{className:styles.children,children:children}),/*#__PURE__*/_jsx(ArrowChevronDownIcon,{className:cx(styles.expansionIcon,expanded&&styles.expansionIconExpanded),height:iconSize,width:iconSize,\"aria-hidden\":true})]}));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/AccordionButton/index.tsx"],"names":["ArrowChevronDownIcon","cx","React","ButtonDeprecated","ButtonDeprecatedBase","styles","buttonThemes","blue","component","props","flat","theme","plain","yellow","AccordionButton","children","className","expanded","size","baseProps","ButtonComponent","iconSize","undefined","accordionButton","expansionIcon","expansionIconExpanded"],"mappings":"2UAAA,OAASA,oBAAT,KAAqC,yBAArC,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OACEC,oBADF,KAGO,yBAHP,CAIA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAuBA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,CACJC,SAAS,CAAEL,gBADP,CAEJM,KAAK,CAAE,CACLC,IAAI,CAAE,IADD,CAELC,KAAK,CAAE,OAFF,CAFH,CADa,CAQnBC,KAAK,CAAE,CACLJ,SAAS,CAAEL,gBADN,CAELM,KAAK,CAAE,CACLC,IAAI,CAAE,IADD,CAELC,KAAK,CAAE,iBAFF,CAFF,CARY,CAenBE,MAAM,CAAE,CACNL,SAAS,CAAEJ,oBADL,CAENK,KAAK,CAAE,EAFD,CAfW,CAArB,CAqBA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMK,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAOzD,IANJC,CAAAA,QAMI,MANJA,QAMI,CALJC,SAKI,MALJA,SAKI,CAJJC,QAII,MAJJA,QAII,gBAHJC,IAGI,CAHJA,IAGI,oBAHG,QAGH,2BAFJP,KAEI,CAFJA,KAEI,qBAFI,OAEJ,YADDQ,SACC,2GAC0Cb,YAAY,CAACK,KAAD,CADtD,CACeS,eADf,qBACIZ,SADJ,CACgCC,KADhC,qBACgCA,KADhC,CAEJ,GAAMY,CAAAA,QAAQ,CAAGH,IAAI,GAAK,OAAT,CAAmB,EAAnB,CAAwBI,SAAzC,CAEA,mBACE,MAAC,eAAD,4CACE,gBAAeL,QADjB,CAEE,SAAS,CAAEhB,EAAE,CACXI,MAAM,CAACkB,eADI,CAEXlB,MAAM,CAACM,KAAD,CAFK,CAGXN,MAAM,CAACa,IAAD,CAHK,CAIXF,SAJW,CAFf,EAQMG,SARN,EASMV,KATN,6BAWE,aAAM,SAAS,CAAEJ,MAAM,CAACU,QAAxB,UAAmCA,QAAnC,EAXF,cAYE,KAAC,oBAAD,EACE,SAAS,CAAEd,EAAE,CACXI,MAAM,CAACmB,aADI,CAEXP,QAAQ,EAAIZ,MAAM,CAACoB,qBAFR,CADf,CAKE,MAAM,CAAEJ,QALV,CAME,KAAK,CAAEA,QANT,CAOE,kBAPF,EAZF,IADF,CAwBD,CAnCM","sourcesContent":["import { ArrowChevronDownIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React from 'react';\n\nimport { ButtonDeprecated } from '../ButtonDeprecated';\nimport {\n  ButtonDeprecatedBase,\n  ButtonDeprecatedBaseProps,\n} from '../ButtonDeprecatedBase';\nimport styles from './styles.module.scss';\n\nexport type AccordionButtonSize = 'normal' | 'large';\n\nexport type AccordionButtonTheme = 'blue' | 'plain' | 'yellow';\n\nexport type AccordionButtonProps = ButtonDeprecatedBaseProps & {\n  /**\n   * Whether the button should display as open or closed.\n   */\n  expanded?: boolean;\n\n  /**\n   * Determines the size of the button.\n   */\n  size?: 'normal' | 'large';\n\n  /**\n   * Visual theme for the clickable header button.\n   */\n  theme?: 'blue' | 'plain' | 'yellow';\n};\n\nconst buttonThemes = {\n  blue: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'white',\n    },\n  },\n  plain: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'brand-dark-blue',\n    },\n  },\n  yellow: {\n    component: ButtonDeprecatedBase,\n    props: {},\n  },\n} as const;\n\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionButton: React.FC<AccordionButtonProps> = ({\n  children,\n  className,\n  expanded,\n  size = 'normal',\n  theme = 'plain',\n  ...baseProps\n}) => {\n  const { component: ButtonComponent, props } = buttonThemes[theme];\n  const iconSize = size === 'large' ? 30 : undefined;\n\n  return (\n    <ButtonComponent\n      aria-expanded={expanded}\n      className={cx(\n        styles.accordionButton,\n        styles[theme],\n        styles[size],\n        className\n      )}\n      {...baseProps}\n      {...props}\n    >\n      <span className={styles.children}>{children}</span>\n      <ArrowChevronDownIcon\n        className={cx(\n          styles.expansionIcon,\n          expanded && styles.expansionIconExpanded\n        )}\n        height={iconSize}\n        width={iconSize}\n        aria-hidden\n      />\n    </ButtonComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}