{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { connectRoutes } from 'redux-first-router';\nimport queryString from 'query-string';\nimport { routesMap } from 'portal/routes';\nimport modalReducer from 'state/modals/modalSlice';\nconst router = connectRoutes(routesMap, {\n  querySerializer: queryString,\n  initialDispatch: false,\n  scrollTop: true\n});\nexport const store = configureStore({\n  reducer: {\n    location: router.reducer,\n    modal: modalReducer\n  }\n});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/store/index.ts"],"names":["configureStore","connectRoutes","queryString","routesMap","modalReducer","router","querySerializer","initialDispatch","scrollTop","store","reducer","location","modal"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAIA,OAAOC,YAAP,MAAyB,yBAAzB;AAgBA,MAAMC,MAAM,GAAGJ,aAAa,CAACE,SAAD,EAAY;AACpCG,EAAAA,eAAe,EAAEJ,WADmB;AAEpCK,EAAAA,eAAe,EAAE,KAFmB;AAGpCC,EAAAA,SAAS,EAAE;AAHyB,CAAZ,CAA5B;AAMA,OAAO,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAChCU,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEN,MAAM,CAACK,OADZ;AAELE,IAAAA,KAAK,EAAER;AAFF;AADuB,CAAD,CAA5B","sourcesContent":["import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { connectRoutes } from 'redux-first-router';\nimport queryString from 'query-string';\nimport { routesMap } from 'portal/routes'\nimport rootReducer, { reduceInitialState } from 'portal/state/reducers';\nimport { SiteState } from 'state/types';\nimport { authApi } from \"services/auth\";\nimport modalReducer from 'state/modals/modalSlice'\nexport type StoreRequestPath = {\n    pathname: string;\n}\n\nexport type ConfigureStoreOptions = {\n    requestPath: StoreRequestPath;\n    initialState: SiteState;\n    reduceInitialState: (initialState: SiteState) => SiteState;\n    routesMap: any;\n    rootReducers: any;\n    rootSaga?: any;\n    hotReloadPath?: string;\n\n}\n\nconst router = connectRoutes(routesMap, {\n    querySerializer: queryString,\n    initialDispatch: false,\n    scrollTop: true,\n});\n\nexport const store = configureStore({\n    reducer: {\n        location: router.reducer,\n        modal: modalReducer,\n        \n    }\n})\n\nexport type AppDispatch = typeof store.dispatch\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n ReturnType, \n RootState,\n unknown,\n Action<string>\n >;"]},"metadata":{},"sourceType":"module"}