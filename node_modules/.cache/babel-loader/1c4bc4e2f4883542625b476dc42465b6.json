{"ast":null,"code":"import loadable from '@loadable/component';\nimport * as routeActions from './state/location/actions';\nconst Path = loadable(_c = () => import('./scenes/Paths'));\n_c2 = Path;\nconst Profile = loadable(_c3 = () => import('./scenes/Profile'));\n_c4 = Profile;\nexport const routesMap = {\n  [`${routeActions.path}`]: '/',\n  [`${routeActions.profile}`]: '/profiles/:id',\n  [`${routeActions.coursePlayer}`]: '/profiles/:id'\n};\nexport const routesMeta = {\n  [`${routeActions.path}`]: {\n    scene: Path,\n    pageName: \"projects\"\n  },\n  [`${routeActions.profile}`]: {\n    scene: Profile,\n    pageName: undefined\n  }\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Path$loadable\");\n$RefreshReg$(_c2, \"Path\");\n$RefreshReg$(_c3, \"Profile$loadable\");\n$RefreshReg$(_c4, \"Profile\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/routes.ts"],"names":["loadable","routeActions","Path","Profile","routesMap","path","profile","coursePlayer","routesMeta","scene","pageName","undefined"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AAEA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AACA,MAAMC,IAAI,GAAGF,QAAQ,MAAC,MAAM,OAAO,gBAAP,CAAP,CAArB;MAAME,I;AACN,MAAMC,OAAO,GAAGH,QAAQ,OAAC,MAAM,OAAO,kBAAP,CAAP,CAAxB;MAAMG,O;AAEN,OAAO,MAAMC,SAAS,GAAG;AACrB,GAAE,GAAEH,YAAY,CAACI,IAAK,EAAtB,GAA0B,GADL;AAErB,GAAE,GAAEJ,YAAY,CAACK,OAAQ,EAAzB,GAA6B,eAFR;AAGrB,GAAE,GAAEL,YAAY,CAACM,YAAa,EAA9B,GAAkC;AAHb,CAAlB;AAMP,OAAO,MAAMC,UAAqC,GAAG;AACjD,GAAE,GAAEP,YAAY,CAACI,IAAK,EAAtB,GAA0B;AACtBI,IAAAA,KAAK,EAAEP,IADe;AAEtBQ,IAAAA,QAAQ,EAAE;AAFY,GADuB;AAKjD,GAAE,GAAET,YAAY,CAACK,OAAQ,EAAzB,GAA6B;AACzBG,IAAAA,KAAK,EAAEN,OADkB;AAEzBO,IAAAA,QAAQ,EAAEC;AAFe;AALoB,CAA9C","sourcesContent":["import loadable from '@loadable/component'\nimport { RouteMeta } from 'libs/location/routing'\nimport * as routeActions from './state/location/actions'\nconst Path = loadable(() => import('./scenes/Paths'));\nconst Profile = loadable(() => import('./scenes/Profile'))\n\nexport const routesMap = {\n    [`${routeActions.path}`]: '/',\n    [`${routeActions.profile}`]: '/profiles/:id',\n    [`${routeActions.coursePlayer}`]: '/profiles/:id',\n}\n\nexport const routesMeta: Record<string, RouteMeta> = {\n    [`${routeActions.path}`]: {\n        scene: Path,\n        pageName: \"projects\"\n    },\n    [`${routeActions.profile}`]: {\n        scene: Profile,\n        pageName: undefined,\n    },\n}"]},"metadata":{},"sourceType":"module"}