{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Testimonial/index.tsx\";\nimport { Anchor, Box, FlexBox, GridBox, Pattern } from '@codecademy/gamut';\nimport { colors } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport darkQuotes from \"../assets/darkQuotes.svg\";\nimport lightQuotes from \"../assets/lightQuotes.svg\";\nimport { Avatar } from '../Avatar';\nimport { Byline } from '../Byline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modes = {\n  dark: {\n    cardBackground: colors.navy,\n    textColor: colors.beige,\n    quoteIcon: darkQuotes\n  },\n  light: {\n    cardBackground: colors.beige,\n    textColor: colors.navy,\n    quoteIcon: lightQuotes\n  }\n};\nconst Shadow = styled(Pattern)`\n  display: block;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  height: calc(100% - 1rem);\n  width: calc(100% - 1rem);\n  color: ${({\n  mode\n}) => modes[mode].cardBackground};\n`;\n_c = Shadow;\nconst TestimonialCard = styled(GridBox)();\nconst TestimonialWrapper = styled(Box)`\n  height: 100%;\n\n  &:hover {\n    ${TestimonialCard} {\n      transform: scale(1.02);\n    }\n  }\n\n  ${TestimonialCard} {\n    align-content: center;\n    height: 100%;\n    ${({\n  mode\n}) => `\n      background-color: ${modes[mode].cardBackground};\n      color: ${modes[mode].textColor};\n    `}\n    clip-path: inset(0 1rem 1rem 0);\n    overflow-y: hidden;\n    padding-right: 1rem;\n    padding-bottom: 1rem;\n    position: relative;\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n_c2 = TestimonialWrapper;\nconst QuoteIcon = styled.img`\n  display: block;\n  margin-bottom: -2.5rem;\n`;\n_c3 = QuoteIcon;\nconst QuoteText = styled.q`\n  position: relative;\n  quotes: none;\n  font-size: ${({\n  theme\n}) => theme.fontSize[26]};\n  line-height: ${({\n  theme\n}) => theme.lineHeight.base};\n`;\n_c4 = QuoteText;\nexport const Testimonial = ({\n  firstName,\n  lastName,\n  occupation,\n  quote,\n  mode = 'light',\n  company,\n  imageUrl,\n  longQuote,\n  href,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(TestimonialWrapper, {\n    position: \"relative\",\n    mode: mode,\n    children: [/*#__PURE__*/_jsxDEV(Shadow, {\n      name: \"checkerDense\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anchor, {\n      href: href,\n      variant: \"interface\",\n      display: \"block\",\n      height: \"inherit\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(TestimonialCard, {\n        children: /*#__PURE__*/_jsxDEV(FlexBox, {\n          px: {\n            _: 24\n          },\n          pt: {\n            _: 32\n          },\n          pb: {\n            _: 48\n          },\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          alignItems: \"start\",\n          textColor: mode === 'dark' ? 'beige' : 'navy',\n          children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n            flexWrap: \"wrap\",\n            flexGrow: 1,\n            flexBasis: \"0\",\n            children: [imageUrl && /*#__PURE__*/_jsxDEV(Box, {\n              width: \"77px\",\n              height: \"77px\",\n              mb: 16,\n              mr: 16,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"\",\n                src: imageUrl,\n                mode: mode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 16,\n              mr: 16,\n              minWidth: \"9.5rem\",\n              children: /*#__PURE__*/_jsxDEV(Byline, {\n                firstName: firstName,\n                occupation: occupation,\n                company: company,\n                lastName: lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            flexGrow: 9999,\n            flexShrink: 1,\n            flexBasis: \"0\",\n            minWidth: \"70%\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              position: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(QuoteIcon, {\n                alt: \"\",\n                width: \"109px\",\n                height: \"74px\",\n                src: modes[mode].quoteIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(QuoteText, {\n                children: longQuote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    as: \"span\",\n                    display: {\n                      _: 'initial',\n                      sm: 'none'\n                    },\n                    children: quote\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    as: \"span\",\n                    display: {\n                      _: 'none',\n                      sm: 'initial'\n                    },\n                    children: longQuote\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : quote\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Testimonial;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Shadow\");\n$RefreshReg$(_c2, \"TestimonialWrapper\");\n$RefreshReg$(_c3, \"QuoteIcon\");\n$RefreshReg$(_c4, \"QuoteText\");\n$RefreshReg$(_c5, \"Testimonial\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Testimonial/index.tsx"],"names":["Anchor","Box","FlexBox","GridBox","Pattern","colors","styled","React","Avatar","Byline","modes","dark","cardBackground","navy","textColor","beige","quoteIcon","darkQuotes","light","lightQuotes","Shadow","mode","TestimonialCard","TestimonialWrapper","QuoteIcon","img","QuoteText","q","theme","fontSize","lineHeight","base","Testimonial","firstName","lastName","occupation","quote","company","imageUrl","longQuote","href","onClick","_","sm"],"mappings":"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","sourcesContent":["import {\n  Anchor,\n  Box,\n  FlexBox,\n  GridBox,\n  Pattern,\n  VisualTheme,\n} from '@codecademy/gamut';\nimport { colors } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport darkQuotes from '../assets/darkQuotes.svg';\nimport lightQuotes from '../assets/lightQuotes.svg';\nimport { Avatar } from '../Avatar';\nimport { Byline } from '../Byline';\n\nconst modes = {\n  dark: {\n    cardBackground: colors.navy,\n    textColor: colors.beige,\n    quoteIcon: darkQuotes,\n  },\n  light: {\n    cardBackground: colors.beige,\n    textColor: colors.navy,\n    quoteIcon: lightQuotes,\n  },\n};\n\nconst Shadow = styled(Pattern)<{ mode: VisualTheme }>`\n  display: block;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  height: calc(100% - 1rem);\n  width: calc(100% - 1rem);\n  color: ${({ mode }) => modes[mode].cardBackground};\n`;\n\nconst TestimonialCard = styled(GridBox)();\n\nconst TestimonialWrapper = styled(Box)<{ mode: VisualTheme }>`\n  height: 100%;\n\n  &:hover {\n    ${TestimonialCard} {\n      transform: scale(1.02);\n    }\n  }\n\n  ${TestimonialCard} {\n    align-content: center;\n    height: 100%;\n    ${({ mode }) => `\n      background-color: ${modes[mode].cardBackground};\n      color: ${modes[mode].textColor};\n    `}\n    clip-path: inset(0 1rem 1rem 0);\n    overflow-y: hidden;\n    padding-right: 1rem;\n    padding-bottom: 1rem;\n    position: relative;\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n\nconst QuoteIcon = styled.img`\n  display: block;\n  margin-bottom: -2.5rem;\n`;\n\nconst QuoteText = styled.q`\n  position: relative;\n  quotes: none;\n  font-size: ${({ theme }) => theme.fontSize[26]};\n  line-height: ${({ theme }) => theme.lineHeight.base};\n`;\n\nexport type TestimonialProps = {\n  firstName: string;\n  lastName: string;\n  occupation: string;\n  quote: string;\n  mode: VisualTheme;\n  /**\n   * Associated workplace or institution\n   */\n  company?: string;\n  /**\n   * An avatar portrait\n   */\n  imageUrl?: string;\n  /**\n   * A long quote to replace the text with at SM viewports and higher.\n   */\n  longQuote?: string;\n  href?: string;\n  onClick?: () => void;\n};\n\nexport const Testimonial: React.FC<TestimonialProps> = ({\n  firstName,\n  lastName,\n  occupation,\n  quote,\n  mode = 'light',\n  company,\n  imageUrl,\n  longQuote,\n  href,\n  onClick,\n}) => {\n  return (\n    <TestimonialWrapper position=\"relative\" mode={mode}>\n      <Shadow name=\"checkerDense\" mode={mode} />\n      <Anchor\n        href={href}\n        variant=\"interface\"\n        display=\"block\"\n        height=\"inherit\"\n        onClick={onClick}\n      >\n        <TestimonialCard>\n          <FlexBox\n            px={{ _: 24 }}\n            pt={{ _: 32 }}\n            pb={{ _: 48 }}\n            flexDirection=\"row\"\n            flexWrap=\"wrap\"\n            alignItems=\"start\"\n            textColor={mode === 'dark' ? 'beige' : 'navy'}\n          >\n            <FlexBox flexWrap=\"wrap\" flexGrow={1} flexBasis=\"0\">\n              {imageUrl && (\n                <Box width=\"77px\" height=\"77px\" mb={16} mr={16}>\n                  <Avatar alt=\"\" src={imageUrl} mode={mode} />\n                </Box>\n              )}\n              <Box mb={16} mr={16} minWidth=\"9.5rem\">\n                <Byline\n                  firstName={firstName}\n                  occupation={occupation}\n                  company={company}\n                  lastName={lastName}\n                />\n              </Box>\n            </FlexBox>\n            <Box flexGrow={9999} flexShrink={1} flexBasis=\"0\" minWidth=\"70%\">\n              <Box position=\"relative\">\n                <QuoteIcon\n                  alt=\"\"\n                  width=\"109px\"\n                  height=\"74px\"\n                  src={modes[mode].quoteIcon}\n                />\n                <QuoteText>\n                  {longQuote ? (\n                    <>\n                      <Box as=\"span\" display={{ _: 'initial', sm: 'none' }}>\n                        {quote}\n                      </Box>\n                      <Box as=\"span\" display={{ _: 'none', sm: 'initial' }}>\n                        {longQuote}\n                      </Box>\n                    </>\n                  ) : (\n                    quote\n                  )}\n                </QuoteText>\n              </Box>\n            </Box>\n          </FlexBox>\n        </TestimonialCard>\n      </Anchor>\n    </TestimonialWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}