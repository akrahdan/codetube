{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import cx from'classnames';import React,{useCallback}from'react';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";export var NonRouterTrackLink=function NonRouterTrackLink(_ref){var data=_ref.data,children=_ref.children,asButton=_ref.asButton,onClick=_ref.onClick,trackUserClickCallback=_ref.trackUserClickCallback,passThroughProps=_objectWithoutProperties(_ref,[\"data\",\"children\",\"asButton\",\"onClick\",\"trackUserClickCallback\"]);var href=passThroughProps.href,target=passThroughProps.target;var nonSPAOnClick=useCallback(function(e){// if (disableTracking || isEmpty(data)) return;\ne.preventDefault();trackUserClickCallback();// onClick?.(e);\n// uses href prop because\n// we ONLY want to do this if it is an anchor link\nif(href){var newTab=e.metaKey||e.ctrlKey||target==='_blank';if(newTab){window.open(href);}else{window.location.href=href;}}},[data,href,target,trackUserClickCallback,onClick]);if(href){return/*#__PURE__*/_jsx(\"a\",_objectSpread(_objectSpread({},passThroughProps),{},{href:href,onClick:nonSPAOnClick,children:children}));}// For accessibility, we prefer to use a button on our trackable components without an href\n// This was added after TrackLink so not everything can safely be converted from span to button\n// When adding or reworking components that use TrackLink, please use either asButton, href, or to(Redux First Router Link)\nif(asButton){return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({},passThroughProps),{},{type:\"button\",className:cx(styles.asButton,passThroughProps.className),onClick:nonSPAOnClick,children:children}));}return/*#__PURE__*/ (// eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n_jsx(\"span\",_objectSpread(_objectSpread({},passThroughProps),{},{onClick:nonSPAOnClick,children:children})));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/TrackLink/NonRouterTrackLink/index.tsx"],"names":["cx","React","useCallback","styles","NonRouterTrackLink","data","children","asButton","onClick","trackUserClickCallback","passThroughProps","href","target","nonSPAOnClick","e","preventDefault","newTab","metaKey","ctrlKey","window","open","location","className"],"mappings":"2UAAA,MAAOA,CAAAA,EAAP,KAAe,YAAf,CAEA,MAAOC,CAAAA,KAAP,EAAoCC,WAApC,KAAuD,OAAvD,CAGA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,2CAMA,MAAO,IAAMC,CAAAA,kBAA+C,CAAG,QAAlDA,CAAAA,kBAAkD,MAOzD,IANJC,CAAAA,IAMI,MANJA,IAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,sBAEI,MAFJA,sBAEI,CADDC,gBACC,qGACIC,CAAAA,IADJ,CACqBD,gBADrB,CACIC,IADJ,CACUC,MADV,CACqBF,gBADrB,CACUE,MADV,CAGJ,GAAMC,CAAAA,aAAa,CAAGX,WAAW,CAC/B,SAACY,CAAD,CAAyB,CACvB;AAEAA,CAAC,CAACC,cAAF,GAEAN,sBAAsB,GAEtB;AAEA;AACA;AACA,GAAIE,IAAJ,CAAU,CACR,GAAMK,CAAAA,MAAM,CAAGF,CAAC,CAACG,OAAF,EAAaH,CAAC,CAACI,OAAf,EAA0BN,MAAM,GAAK,QAApD,CACA,GAAII,MAAJ,CAAY,CACVG,MAAM,CAACC,IAAP,CAAYT,IAAZ,EACD,CAFD,IAEO,CACLQ,MAAM,CAACE,QAAP,CAAgBV,IAAhB,CAAuBA,IAAvB,CACD,CACF,CACF,CApB8B,CAqB/B,CAACN,IAAD,CAAOM,IAAP,CAAaC,MAAb,CAAqBH,sBAArB,CAA6CD,OAA7C,CArB+B,CAAjC,CAwBA,GAAIG,IAAJ,CAAU,CACR,mBACE,wCAAOD,gBAAP,MAAyB,IAAI,CAAEC,IAA/B,CAAqC,OAAO,CAAEE,aAA9C,UACGP,QADH,GADF,CAKD,CAED;AACA;AACA;AACA,GAAIC,QAAJ,CAAc,CACZ,mBACE,6CACMG,gBADN,MAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAEV,EAAE,CAACG,MAAM,CAACI,QAAR,CAAkBG,gBAAgB,CAACY,SAAnC,CAHf,CAIE,OAAO,CAAET,aAJX,UAMGP,QANH,GADF,CAUD,CAED,oBACE;AACA,2CACOI,gBADP,MAEE,OAAO,CAAEG,aAFX,UAIGP,QAJH,GAFF,EASD,CAnEM","sourcesContent":["import cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FC, HTMLAttributes, useCallback } from 'react';\n\nimport { BaseTrackLinkProps } from 'components/TrackLink/types';\nimport styles from './styles.module.scss';\n\ninterface NonRouterTrackLinkProps extends BaseTrackLinkProps {\n  trackUserClickCallback: () => void;\n}\n\nexport const NonRouterTrackLink: FC<NonRouterTrackLinkProps> = ({\n  data,\n  children,\n  asButton,\n  onClick,\n  trackUserClickCallback,\n  ...passThroughProps\n}) => {\n  const { href, target } = passThroughProps;\n\n  const nonSPAOnClick = useCallback(\n    (e: React.MouseEvent) => {\n      // if (disableTracking || isEmpty(data)) return;\n\n      e.preventDefault();\n\n      trackUserClickCallback();\n\n      // onClick?.(e);\n\n      // uses href prop because\n      // we ONLY want to do this if it is an anchor link\n      if (href) {\n        const newTab = e.metaKey || e.ctrlKey || target === '_blank';\n        if (newTab) {\n          window.open(href);\n        } else {\n          window.location.href = href;\n        }\n      }\n    },\n    [data, href, target, trackUserClickCallback, onClick]\n  );\n\n  if (href) {\n    return (\n      <a {...passThroughProps} href={href} onClick={nonSPAOnClick}>\n        {children}\n      </a>\n    );\n  }\n\n  // For accessibility, we prefer to use a button on our trackable components without an href\n  // This was added after TrackLink so not everything can safely be converted from span to button\n  // When adding or reworking components that use TrackLink, please use either asButton, href, or to(Redux First Router Link)\n  if (asButton) {\n    return (\n      <button\n        {...passThroughProps}\n        type=\"button\"\n        className={cx(styles.asButton, passThroughProps.className)}\n        onClick={nonSPAOnClick}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    <span\n      {...(passThroughProps as HTMLAttributes<HTMLSpanElement>)}\n      onClick={nonSPAOnClick}\n    >\n      {children}\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}