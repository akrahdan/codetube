{"ast":null,"code":"export var UserSubmitKey;(function(UserSubmitKey){UserSubmitKey[\"CODING_REMINDERS_COMMS_TIMEZONE\"]=\"coding_reminders_comms_timezone\";UserSubmitKey[\"EMAIL\"]=\"email\";UserSubmitKey[\"LOGIN\"]=\"login\";UserSubmitKey[\"PASSWORD\"]=\"password\";})(UserSubmitKey||(UserSubmitKey={}));export var ErrorMessages;(function(ErrorMessages){ErrorMessages[\"WEAK\"]=\"Password too weak\";ErrorMessages[\"REQUIRED\"]=\"can't be blank\";ErrorMessages[\"LENGTH\"]=\"Password does not meet length requirements\";ErrorMessages[\"VALID_EMAIL\"]=\"Please use a valid email address\";})(ErrorMessages||(ErrorMessages={}));","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/Forms/RegistrationForm/types.ts"],"names":["UserSubmitKey","ErrorMessages"],"mappings":"AAwBA,UAAYA,CAAAA,aAAZ,C,UAAYA,a,EAAAA,a,sEAAAA,a,kBAAAA,a,kBAAAA,a,2BAAAA,a,GAAAA,a,MASZ,UAAYC,CAAAA,aAAZ,C,UAAYA,a,EAAAA,a,6BAAAA,a,8BAAAA,a,wDAAAA,a,sDAAAA,a,GAAAA,a","sourcesContent":["export type SuccessCallbackProp = {\n  redirectTo: string;\n  workerSupportApplicant: boolean;\n  authenticationToken: string;\n};\n\nexport type GetAfterLoginPathProps = {\n  workerSupportApplicant: boolean;\n};\n\nexport type RegistrationFormProps = {\n  captureMarketingEmail?: boolean;\n  currentPage?: string;\n  defaultValues?: {\n    email?: string;\n    password?: string;\n  };\n  hideRecaptchaInfo?: boolean;\n  isStudent?: boolean;\n  locationType?: string;\n  onSuccess?: (body: SuccessCallbackProp) => void;\n  redirectUrl?: string;\n};\n\nexport enum UserSubmitKey {\n  CODING_REMINDERS_COMMS_TIMEZONE = 'coding_reminders_comms_timezone',\n  EMAIL = 'email',\n  LOGIN = 'login',\n  PASSWORD = 'password', // pragma: allowlist secret\n}\n\nexport type UserSubmitValues = Record<UserSubmitKey, string>;\n\nexport enum ErrorMessages {\n  WEAK = 'Password too weak',\n  REQUIRED = \"can't be blank\",\n  LENGTH = 'Password does not meet length requirements',\n  VALID_EMAIL = 'Please use a valid email address',\n}\n\nexport type BaseSubmitValues = {\n  authenticity_token: string;\n  redirect: string;\n  referring_page: string;\n  signing_up_from_exercise: string;\n  sweet_container: boolean;\n};\n\nexport type SubmitValues = UserSubmitValues & BaseSubmitValues;\n\nexport type SerializedValues = BaseSubmitValues & {\n  user: UserSubmitValues;\n};\n"]},"metadata":{},"sourceType":"module"}