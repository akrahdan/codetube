{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const [goals, setGoals] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n  const [experience, setExperience] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      const newGoals = goals.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setGoalsUpdate(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {},\n                    handleChange: obj => {\n                      const newGoals = goals.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setGoals(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${goals.length}`,\n                  name: \"\"\n                };\n                const newGoals = [...goals, answer];\n                const emptyValue = goals.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      const newReqs = requirements.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setRequirementsUpdate(newReqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      const newReqs = requirements.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setRequirements(newReqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${requirements.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...requirements, answer];\n                const emptyValue = requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(Experience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      const newExpex = experience.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setExperienceUpdate(newExpex);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      const newExpex = experience.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setExperience(newExpex);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${experience.length}`,\n                  value: \"\"\n                };\n                const newExps = [...experience, answer];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"UYG8ttrQJKGO6jxWFpyijf71abo=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js"],"names":["useEffect","useState","Goal","Requirements","Experience","ExperienceCreate","GoalCreate","ReqCreate","usePrompt","selectLocationPayload","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","goals","setGoals","name","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","map","obj","newGoals","item","value","answer","length","emptyValue","filter","newReqs","exp","newExpex","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n} from \"services/courses\";\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n\n  const [goals, setGoals] = useState([{ id: \"answerList--0\", name: \"\" }]);\n  const [requirements, setRequirements] = useState([\n    { id: \"answerList--0\", name: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState([\n    { id: \"answerList--0\", name: \"\" },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {}, []);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate && goalsUpdate.map((goal) => (\n                      <Goal\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={removeGoal}\n                        handleChange={(obj) => {\n                          const newGoals = goals.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setGoalsUpdate(newGoals);\n                        }}\n                      />\n                    ))}\n                    {goals.map((goal) => (\n                      <GoalCreate\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={(value)=> {\n\n\n                        }}\n                        handleChange={(obj) => {\n                          const newGoals = goals.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${goals.length}`,\n                    name: \"\",\n                  };\n                  const newGoals = [...goals, answer];\n                  const emptyValue = goals.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate && requirementsUpdate.map((req) => (\n                      <Requirements\n                        req={req}\n                        key={req.id}\n                        handleRemove={removeReq}\n                        handleChange={(obj) => {\n                          const newReqs = requirements.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setRequirementsUpdate(newReqs);\n                        }}\n                      />\n                    ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={removeReq}\n                        handleChange={(obj) => {\n                          const newReqs = requirements.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setRequirements(newReqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${requirements.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...requirements, answer];\n                  const emptyValue = requirements.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate && experienceUpdate.map((exp) => (\n                      <Experience\n                        key={exp.id}\n                        experience={exp}\n                        handleRemove={removeExp}\n                        handleChange={(obj) => {\n                          const newExpex = experience.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setExperienceUpdate(newExpex);\n                        }}\n                      />\n                    ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp.id}\n                        experience={exp}\n                        handleRemove={removeExp}\n                        handleChange={(obj) => {\n                          const newExpex = experience.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setExperience(newExpex);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${experience.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...experience, answer];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}