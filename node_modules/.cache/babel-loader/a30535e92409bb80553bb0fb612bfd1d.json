{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Menus/MenuItem/index.tsx\";\nimport cx from 'classnames';\nimport React from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\nexport const MenuItem = ({\n  as: As = 'a',\n  asProps = {},\n  selected,\n  children,\n  ariaLabel\n}) => {\n  const childClassName = cx(styles.link, asProps.className);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: cx(styles.menuItem, {\n      [styles.selected]: selected\n    }),\n    children: /*#__PURE__*/_jsxDEV(As, { ...asProps,\n      className: childClassName,\n      \"aria-label\": ariaLabel,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = MenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Menus/MenuItem/index.tsx"],"names":["cx","React","styles","MenuItem","as","As","asProps","selected","children","ariaLabel","childClassName","link","className","menuItem"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAChDC,EAAAA,EAAE,EAAEC,EAAE,GAAG,GADuC;AAEhDC,EAAAA,OAAO,GAAG,EAFsC;AAGhDC,EAAAA,QAHgD;AAIhDC,EAAAA,QAJgD;AAKhDC,EAAAA;AALgD,CAAD,KAM3C;AACJ,QAAMC,cAAc,GAAGV,EAAE,CAACE,MAAM,CAACS,IAAR,EAAcL,OAAO,CAACM,SAAtB,CAAzB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAEZ,EAAE,CAACE,MAAM,CAACW,QAAR,EAAkB;AAAE,OAACX,MAAM,CAACK,QAAR,GAAmBA;AAArB,KAAlB,CAAjB;AAAA,2BACE,QAAC,EAAD,OAAQD,OAAR;AAAiB,MAAA,SAAS,EAAEI,cAA5B;AAA4C,oBAAYD,SAAxD;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhBM;KAAML,Q","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\n\nimport { ChildComponentDescriptor } from '../../typings/react';\nimport styles from './styles.module.scss';\n\nexport type AsProps = {\n  className?: string;\n};\n\nexport type MenuItemProps = {\n  /**\n   * Component type to wrap children with.\n   *\n   * @remarks If not the default, it should be a component that returns an `<a>`.\n   * @default \"a\"\n   */\n  as?: ChildComponentDescriptor;\n\n  /**\n   * @remarks We would love to properly type this with generics, but cannot yet.\n   * @see https://github.com/Codecademy/client-modules/pull/270#discussion_r270917147\n   * @see https://github.com/Microsoft/TypeScript/issues/21048\n   */\n  asProps?: any;\n\n  selected?: boolean;\n  ariaLabel?: string;\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const MenuItem: React.FC<MenuItemProps> = ({\n  as: As = 'a',\n  asProps = {},\n  selected,\n  children,\n  ariaLabel,\n}) => {\n  const childClassName = cx(styles.link, asProps.className);\n\n  return (\n    <li className={cx(styles.menuItem, { [styles.selected]: selected })}>\n      <As {...asProps} className={childClassName} aria-label={ariaLabel}>\n        {children}\n      </As>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}