{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import classnames from'classnames';import{debounce}from'../utilities/debounce';import css from'./captions.module.css';/*\n  Available cue properties (at least in Chrome):\n  \n  align: \"center\"\n  endTime: 4.3\n  id: \"2\"\n  line: \"auto\"\n  onenter: null\n  onexit: null\n  pauseOnExit: false\n  position: \"auto\"\n  size: 100\n  snapToLines: true\n  startTime: 2.5\n  text: \"All of it is bad\"\n  track: TextTrack {kind: \"captions\", label: \"bosanski\", language: \"bs\", id: \"\", mode: \"hidden\", …}\n  vertical: \"\"\n*/import{jsx as _jsx}from\"react/jsx-runtime\";function calculateLetterSpacing(fontSize){if(fontSize<14)return'0.02em';if(fontSize<18)return'0.015em';if(fontSize<24)return'0.01em';if(fontSize<30)return'0.005em';return'-0.01em';}export var Captions=function Captions(){// { visible: uiVisible, closedCaptioningEnabled, closedCaptioningCues }\nvar closedCaptioningCues=null;var closedCaptioningEnabled=null;var captionsContainer=useRef(null);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),captionsFontSize=_useState2[0],setCaptionsFontSize=_useState2[1];var _useState3=useState('normal'),_useState4=_slicedToArray(_useState3,2),captionsLetterSpacing=_useState4[0],setCaptionsLetterSpacing=_useState4[1];var uiVisible=true;var cnames=classnames(css.captions,_defineProperty({},css.adjust,!uiVisible));useEffect(function(){var handleResize=debounce(function(){var _captionsContainer$cu;var fontSize=Math.max(((_captionsContainer$cu=captionsContainer.current)===null||_captionsContainer$cu===void 0?void 0:_captionsContainer$cu.clientWidth)/52||0,14);// magic!\nvar letterSpacing=calculateLetterSpacing(fontSize);setCaptionsFontSize(fontSize);setCaptionsLetterSpacing(letterSpacing);},100);handleResize();window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[]);if(!closedCaptioningEnabled)return null;return/*#__PURE__*/_jsx(\"div\",{ref:captionsContainer,className:cnames// aria-live=\"polite\" aria-atomic=\"true\" aria-relevant=\"additions\" //TODO: maybe only use this for assistive/alternate text, doesn't make sense to read the captions out loud\n,children:closedCaptioningCues&&Object.values(closedCaptioningCues).map(function(cue){return/*#__PURE__*/_jsx(\"div\",{className:css.cue,style:{fontSize:\"\".concat(captionsFontSize,\"px\"),letterSpacing:captionsLetterSpacing},children:cue.text},cue.id);})});};export default Captions;// export default connect(\n//   state => ({\n//     visible: state.visible,\n//     closedCaptioningEnabled: state.closedCaptioningEnabled,\n//     closedCaptioningCues: state.closedCaptioningCues,\n//   }),\n//   store => {}\n// )(Captions)","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/captions/captions.js"],"names":["React","useRef","useEffect","useState","classnames","debounce","css","calculateLetterSpacing","fontSize","Captions","closedCaptioningCues","closedCaptioningEnabled","captionsContainer","captionsFontSize","setCaptionsFontSize","captionsLetterSpacing","setCaptionsLetterSpacing","uiVisible","cnames","captions","adjust","handleResize","Math","max","current","clientWidth","letterSpacing","window","addEventListener","removeEventListener","Object","values","map","cue","text","id"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,SAAvB,CAAkCC,QAAlC,KAAiD,OAAjD,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,2CAEA,QAASC,CAAAA,sBAAT,CAAgCC,QAAhC,CAA0C,CACxC,GAAGA,QAAQ,CAAG,EAAd,CAAkB,MAAO,QAAP,CAClB,GAAGA,QAAQ,CAAG,EAAd,CAAkB,MAAO,SAAP,CAClB,GAAGA,QAAQ,CAAG,EAAd,CAAkB,MAAO,QAAP,CAClB,GAAGA,QAAQ,CAAG,EAAd,CAAkB,MAAO,SAAP,CAClB,MAAO,SAAP,CACD,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B;AACA,GAAMC,CAAAA,oBAAoB,CAAG,IAA7B,CACA,GAAMC,CAAAA,uBAAuB,CAAG,IAAhC,CACA,GAAMC,CAAAA,iBAAiB,CAAGX,MAAM,CAAC,IAAD,CAAhC,CAJ4B,cAKoBE,QAAQ,CAAC,CAAD,CAL5B,wCAKrBU,gBALqB,eAKHC,mBALG,8BAM8BX,QAAQ,CAAC,QAAD,CANtC,yCAMrBY,qBANqB,eAMEC,wBANF,eAO5B,GAAMC,CAAAA,SAAS,CAAG,IAAlB,CACA,GAAMC,CAAAA,MAAM,CAAGd,UAAU,CAACE,GAAG,CAACa,QAAL,oBAAkBb,GAAG,CAACc,MAAtB,CAA+B,CAACH,SAAhC,EAAzB,CAEAf,SAAS,CAAC,UAAM,CACd,GAAMmB,CAAAA,YAAY,CAAGhB,QAAQ,CAAC,UAAM,2BAClC,GAAMG,CAAAA,QAAQ,CAAGc,IAAI,CAACC,GAAL,CAAS,wBAAAX,iBAAiB,CAACY,OAAlB,sEAA2BC,WAA3B,EAAyC,EAAzC,EAA+C,CAAxD,CAA2D,EAA3D,CAAjB,CAAgF;AAChF,GAAMC,CAAAA,aAAa,CAAGnB,sBAAsB,CAACC,QAAD,CAA5C,CACAM,mBAAmB,CAACN,QAAD,CAAnB,CACAQ,wBAAwB,CAACU,aAAD,CAAxB,CACD,CAL4B,CAK1B,GAL0B,CAA7B,CAOAL,YAAY,GAEZM,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCP,YAAlC,EACA,MAAO,kBAAMM,CAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCR,YAArC,CAAN,EAAP,CACD,CAZQ,CAYN,EAZM,CAAT,CAcA,GAAI,CAACV,uBAAL,CAA8B,MAAO,KAAP,CAE9B,mBACE,YACE,GAAG,CAAEC,iBADP,CAEE,SAAS,CAAEM,MACX;AAHF,UAKGR,oBAAoB,EAAIoB,MAAM,CAACC,MAAP,CAAcrB,oBAAd,EAAoCsB,GAApC,CAAwC,SAAAC,GAAG,qBACpE,YAAK,SAAS,CAAE3B,GAAG,CAAC2B,GAApB,CAAsC,KAAK,CAAE,CAAEzB,QAAQ,WAAKK,gBAAL,MAAV,CAAqCa,aAAa,CAAEX,qBAApD,CAA7C,UACGkB,GAAG,CAACC,IADP,EAA8BD,GAAG,CAACE,EAAlC,CADoE,EAA3C,CAL3B,EADF,CAaD,CAvCM,CAwCP,cAAe1B,CAAAA,QAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useRef, useEffect, useState} from 'react'\n\nimport classnames from 'classnames'\nimport { debounce } from '../utilities/debounce'\n\nimport css from './captions.module.css'\n\n/*\n  Available cue properties (at least in Chrome):\n  \n  align: \"center\"\n  endTime: 4.3\n  id: \"2\"\n  line: \"auto\"\n  onenter: null\n  onexit: null\n  pauseOnExit: false\n  position: \"auto\"\n  size: 100\n  snapToLines: true\n  startTime: 2.5\n  text: \"All of it is bad\"\n  track: TextTrack {kind: \"captions\", label: \"bosanski\", language: \"bs\", id: \"\", mode: \"hidden\", …}\n  vertical: \"\"\n*/\n\nfunction calculateLetterSpacing(fontSize) {\n  if(fontSize < 14) return '0.02em'\n  if(fontSize < 18) return '0.015em'\n  if(fontSize < 24) return '0.01em'\n  if(fontSize < 30) return '0.005em'\n  return '-0.01em'\n}\n\nexport const Captions = () => {\n  // { visible: uiVisible, closedCaptioningEnabled, closedCaptioningCues }\n  const closedCaptioningCues = null;\n  const closedCaptioningEnabled = null;\n  const captionsContainer = useRef(null)\n  const [captionsFontSize, setCaptionsFontSize] = useState(0)\n  const [captionsLetterSpacing, setCaptionsLetterSpacing] = useState('normal')\n  const uiVisible = true;\n  const cnames = classnames(css.captions, { [css.adjust]: !uiVisible })\n\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      const fontSize = Math.max(captionsContainer.current?.clientWidth / 52 || 0, 14) // magic!\n      const letterSpacing = calculateLetterSpacing(fontSize)\n      setCaptionsFontSize(fontSize)\n      setCaptionsLetterSpacing(letterSpacing)\n    }, 100)\n\n    handleResize()\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  if (!closedCaptioningEnabled) return null\n\n  return (\n    <div\n      ref={captionsContainer}\n      className={cnames}\n      // aria-live=\"polite\" aria-atomic=\"true\" aria-relevant=\"additions\" //TODO: maybe only use this for assistive/alternate text, doesn't make sense to read the captions out loud\n    >\n      {closedCaptioningCues && Object.values(closedCaptioningCues).map(cue =>\n      <div className={css.cue} key={cue.id} style={{ fontSize: `${captionsFontSize}px`, letterSpacing: captionsLetterSpacing }}>\n        {cue.text}\n      </div>\n    )}\n    </div>\n  )\n}\nexport default Captions;\n// export default connect(\n//   state => ({\n//     visible: state.visible,\n//     closedCaptioningEnabled: state.closedCaptioningEnabled,\n//     closedCaptioningCues: state.closedCaptioningCues,\n//   }),\n//   store => {}\n// )(Captions)\n"]},"metadata":{},"sourceType":"module"}