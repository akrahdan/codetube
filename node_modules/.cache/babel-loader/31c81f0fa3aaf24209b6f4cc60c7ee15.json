{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{theme,variant}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var errorSpanVariants=variant({base:{left:0,top:\"calc(100% - \".concat(theme.spacing[8],\")\"),color:'feedback-error',display:'inline-block',fontSize:'small'},defaultVariant:'initial',variants:{initial:{position:'initial'},absolute:{position:'absolute'},inlineCentered:{position:'initial',textAlign:'center'}}});var ErrorSpan=styled.span(errorSpanVariants);export var FormError=function FormError(props){return/*#__PURE__*/_jsx(ErrorSpan,_objectSpread({},props));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Form/FormError.tsx"],"names":["theme","variant","styled","React","errorSpanVariants","base","left","top","spacing","color","display","fontSize","defaultVariant","variants","initial","position","absolute","inlineCentered","textAlign","ErrorSpan","span","FormError","props"],"mappings":"sKAAA,OAASA,KAAT,CAAgBC,OAAhB,KAA+B,0BAA/B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAsC,OAAtC,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAGH,OAAO,CAAC,CAChCI,IAAI,CAAE,CACJC,IAAI,CAAE,CADF,CAEJC,GAAG,uBAAiBP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAjB,KAFC,CAGJC,KAAK,CAAE,gBAHH,CAIJC,OAAO,CAAE,cAJL,CAKJC,QAAQ,CAAE,OALN,CAD0B,CAQhCC,cAAc,CAAE,SARgB,CAShCC,QAAQ,CAAE,CACRC,OAAO,CAAE,CACPC,QAAQ,CAAE,SADH,CADD,CAIRC,QAAQ,CAAE,CACRD,QAAQ,CAAE,UADF,CAJF,CAORE,cAAc,CAAE,CACdF,QAAQ,CAAE,SADI,CAEdG,SAAS,CAAE,QAFG,CAPR,CATsB,CAAD,CAAjC,CAuBA,GAAMC,CAAAA,SAAS,CAAGjB,MAAM,CAACkB,IAAP,CAAYhB,iBAAZ,CAAlB,CAKA,MAAO,IAAMiB,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,CAACC,KAAD,CAAW,CAC5D,mBAAO,KAAC,SAAD,kBAAeA,KAAf,EAAP,CACD,CAFM","sourcesContent":["import { theme, variant } from '@codecademy/gamut-styles';\nimport { StyleProps } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport React, { HTMLAttributes } from 'react';\n\nconst errorSpanVariants = variant({\n  base: {\n    left: 0,\n    top: `calc(100% - ${theme.spacing[8]})`,\n    color: 'feedback-error',\n    display: 'inline-block',\n    fontSize: 'small',\n  },\n  defaultVariant: 'initial',\n  variants: {\n    initial: {\n      position: 'initial',\n    },\n    absolute: {\n      position: 'absolute',\n    },\n    inlineCentered: {\n      position: 'initial',\n      textAlign: 'center',\n    },\n  },\n});\n\nconst ErrorSpan = styled.span(errorSpanVariants);\n\ntype FormErrorProps = StyleProps<typeof errorSpanVariants> &\n  HTMLAttributes<HTMLSpanElement>;\n\nexport const FormError: React.FC<FormErrorProps> = (props) => {\n  return <ErrorSpan {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}