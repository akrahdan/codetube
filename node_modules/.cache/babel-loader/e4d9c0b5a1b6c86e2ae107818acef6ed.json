{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { pxRem, styledOptions, system, theme } from '@codecademy/gamut-styles';\nimport { variance } from '@codecademy/variance';\nimport { pick } from 'lodash';\nvar columns = 12;\nvar gutters = pick(theme.spacing, [8, 16, 24, 32, 48]);\n/** This prevents grid blowout by ensuring that column gaps never exceed the size of their container */\n\nvar gutterGuard = function gutterGuard(gap, property) {\n  if (property === 'columnGap') {\n    return {\n      gridColumnGap: gap,\n      columnGap: \"min(calc(100% / \".concat(columns - 1, \"), \").concat(gap, \")\")\n    };\n  }\n\n  return gap;\n};\n\nvar grid = variance.create({\n  gap: {\n    property: 'gap',\n    properties: ['rowGap', 'columnGap'],\n    scale: gutters,\n    transform: gutterGuard\n  },\n  rowGap: {\n    property: 'rowGap',\n    scale: gutters\n  },\n  columnGap: {\n    property: 'columnGap',\n    scale: gutters,\n    transform: gutterGuard\n  },\n  rowHeight: {\n    property: 'gridAutoRows',\n    transform: function transform(height) {\n      return \"minmax(\".concat(pxRem(height), \", 1fr)\");\n    }\n  }\n});\nvar gridProps = variance.compose(system.space, grid);\nexport var LayoutGrid = /*#__PURE__*/_styled('div', _extends({}, {\n  target: \"e10xj1580\",\n  label: \"LayoutGrid\"\n}, styledOptions(grid.propNames)))(system.css({\n  display: 'grid',\n  width: '100%',\n  gridTemplateColumns: \"repeat(\".concat(columns, \", minmax(0, 1fr))\")\n}), gridProps, process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MYXlvdXQvTGF5b3V0R3JpZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkMwQiIsImZpbGUiOiIuLi8uLi9zcmMvTGF5b3V0L0xheW91dEdyaWQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHhSZW0sIHN0eWxlZE9wdGlvbnMsIHN5c3RlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHsgU3R5bGVQcm9wcywgdmFyaWFuY2UgfSBmcm9tICdAY29kZWNhZGVteS92YXJpYW5jZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBwaWNrIH0gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgY29sdW1ucyA9IDEyO1xuXG5jb25zdCBndXR0ZXJzID0gcGljayh0aGVtZS5zcGFjaW5nLCBbOCwgMTYsIDI0LCAzMiwgNDhdKTtcblxuLyoqIFRoaXMgcHJldmVudHMgZ3JpZCBibG93b3V0IGJ5IGVuc3VyaW5nIHRoYXQgY29sdW1uIGdhcHMgbmV2ZXIgZXhjZWVkIHRoZSBzaXplIG9mIHRoZWlyIGNvbnRhaW5lciAqL1xuY29uc3QgZ3V0dGVyR3VhcmQgPSAoZ2FwOiBzdHJpbmcsIHByb3BlcnR5OiBzdHJpbmcpID0+IHtcbiAgaWYgKHByb3BlcnR5ID09PSAnY29sdW1uR2FwJykge1xuICAgIHJldHVybiB7XG4gICAgICBncmlkQ29sdW1uR2FwOiBnYXAsXG4gICAgICBjb2x1bW5HYXA6IGBtaW4oY2FsYygxMDAlIC8gJHtjb2x1bW5zIC0gMX0pLCAke2dhcH0pYCxcbiAgICB9O1xuICB9XG4gIHJldHVybiBnYXA7XG59O1xuXG5jb25zdCBncmlkID0gdmFyaWFuY2UuY3JlYXRlKHtcbiAgZ2FwOiB7XG4gICAgcHJvcGVydHk6ICdnYXAnLFxuICAgIHByb3BlcnRpZXM6IFsncm93R2FwJywgJ2NvbHVtbkdhcCddLFxuICAgIHNjYWxlOiBndXR0ZXJzLFxuICAgIHRyYW5zZm9ybTogZ3V0dGVyR3VhcmQsXG4gIH0sXG4gIHJvd0dhcDogeyBwcm9wZXJ0eTogJ3Jvd0dhcCcsIHNjYWxlOiBndXR0ZXJzIH0sXG4gIGNvbHVtbkdhcDoge1xuICAgIHByb3BlcnR5OiAnY29sdW1uR2FwJyxcbiAgICBzY2FsZTogZ3V0dGVycyxcbiAgICB0cmFuc2Zvcm06IGd1dHRlckd1YXJkLFxuICB9LFxuICByb3dIZWlnaHQ6IHtcbiAgICBwcm9wZXJ0eTogJ2dyaWRBdXRvUm93cycsXG4gICAgdHJhbnNmb3JtOiAoaGVpZ2h0OiBzdHJpbmcpID0+IGBtaW5tYXgoJHtweFJlbShoZWlnaHQpfSwgMWZyKWAsXG4gIH0sXG59KTtcblxuY29uc3QgZ3JpZFByb3BzID0gdmFyaWFuY2UuY29tcG9zZShzeXN0ZW0uc3BhY2UsIGdyaWQpO1xuXG5leHBvcnQgaW50ZXJmYWNlIExheW91dEdyaWRQcm9wcyBleHRlbmRzIFN0eWxlUHJvcHM8dHlwZW9mIGdyaWRQcm9wcz4ge31cblxuZXhwb3J0IGNvbnN0IExheW91dEdyaWQgPSBzdHlsZWQoXG4gICdkaXYnLFxuICBzdHlsZWRPcHRpb25zKGdyaWQucHJvcE5hbWVzKVxuKTxMYXlvdXRHcmlkUHJvcHM+KFxuICBzeXN0ZW0uY3NzKHtcbiAgICBkaXNwbGF5OiAnZ3JpZCcsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBgcmVwZWF0KCR7Y29sdW1uc30sIG1pbm1heCgwLCAxZnIpKWAsXG4gIH0pLFxuICBncmlkUHJvcHNcbik7XG4iXX0= */\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut/dist/Layout/LayoutGrid.js"],"names":["_styled","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","pxRem","styledOptions","system","theme","variance","pick","columns","gutters","spacing","gutterGuard","gap","property","gridColumnGap","columnGap","concat","grid","create","properties","scale","transform","rowGap","rowHeight","height","gridProps","compose","space","LayoutGrid","label","propNames","css","display","width","gridTemplateColumns","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import _styled from \"@emotion/styled/base\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { pxRem, styledOptions, system, theme } from '@codecademy/gamut-styles';\nimport { variance } from '@codecademy/variance';\nimport { pick } from 'lodash';\nvar columns = 12;\nvar gutters = pick(theme.spacing, [8, 16, 24, 32, 48]);\n/** This prevents grid blowout by ensuring that column gaps never exceed the size of their container */\n\nvar gutterGuard = function gutterGuard(gap, property) {\n  if (property === 'columnGap') {\n    return {\n      gridColumnGap: gap,\n      columnGap: \"min(calc(100% / \".concat(columns - 1, \"), \").concat(gap, \")\")\n    };\n  }\n\n  return gap;\n};\n\nvar grid = variance.create({\n  gap: {\n    property: 'gap',\n    properties: ['rowGap', 'columnGap'],\n    scale: gutters,\n    transform: gutterGuard\n  },\n  rowGap: {\n    property: 'rowGap',\n    scale: gutters\n  },\n  columnGap: {\n    property: 'columnGap',\n    scale: gutters,\n    transform: gutterGuard\n  },\n  rowHeight: {\n    property: 'gridAutoRows',\n    transform: function transform(height) {\n      return \"minmax(\".concat(pxRem(height), \", 1fr)\");\n    }\n  }\n});\nvar gridProps = variance.compose(system.space, grid);\nexport var LayoutGrid = /*#__PURE__*/_styled('div', _extends({}, {\n  target: \"e10xj1580\",\n  label: \"LayoutGrid\"\n}, styledOptions(grid.propNames)))(system.css({\n  display: 'grid',\n  width: '100%',\n  gridTemplateColumns: \"repeat(\".concat(columns, \", minmax(0, 1fr))\")\n}), gridProps, process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9MYXlvdXQvTGF5b3V0R3JpZC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkMwQiIsImZpbGUiOiIuLi8uLi9zcmMvTGF5b3V0L0xheW91dEdyaWQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHhSZW0sIHN0eWxlZE9wdGlvbnMsIHN5c3RlbSwgdGhlbWUgfSBmcm9tICdAY29kZWNhZGVteS9nYW11dC1zdHlsZXMnO1xuaW1wb3J0IHsgU3R5bGVQcm9wcywgdmFyaWFuY2UgfSBmcm9tICdAY29kZWNhZGVteS92YXJpYW5jZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBwaWNrIH0gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgY29sdW1ucyA9IDEyO1xuXG5jb25zdCBndXR0ZXJzID0gcGljayh0aGVtZS5zcGFjaW5nLCBbOCwgMTYsIDI0LCAzMiwgNDhdKTtcblxuLyoqIFRoaXMgcHJldmVudHMgZ3JpZCBibG93b3V0IGJ5IGVuc3VyaW5nIHRoYXQgY29sdW1uIGdhcHMgbmV2ZXIgZXhjZWVkIHRoZSBzaXplIG9mIHRoZWlyIGNvbnRhaW5lciAqL1xuY29uc3QgZ3V0dGVyR3VhcmQgPSAoZ2FwOiBzdHJpbmcsIHByb3BlcnR5OiBzdHJpbmcpID0+IHtcbiAgaWYgKHByb3BlcnR5ID09PSAnY29sdW1uR2FwJykge1xuICAgIHJldHVybiB7XG4gICAgICBncmlkQ29sdW1uR2FwOiBnYXAsXG4gICAgICBjb2x1bW5HYXA6IGBtaW4oY2FsYygxMDAlIC8gJHtjb2x1bW5zIC0gMX0pLCAke2dhcH0pYCxcbiAgICB9O1xuICB9XG4gIHJldHVybiBnYXA7XG59O1xuXG5jb25zdCBncmlkID0gdmFyaWFuY2UuY3JlYXRlKHtcbiAgZ2FwOiB7XG4gICAgcHJvcGVydHk6ICdnYXAnLFxuICAgIHByb3BlcnRpZXM6IFsncm93R2FwJywgJ2NvbHVtbkdhcCddLFxuICAgIHNjYWxlOiBndXR0ZXJzLFxuICAgIHRyYW5zZm9ybTogZ3V0dGVyR3VhcmQsXG4gIH0sXG4gIHJvd0dhcDogeyBwcm9wZXJ0eTogJ3Jvd0dhcCcsIHNjYWxlOiBndXR0ZXJzIH0sXG4gIGNvbHVtbkdhcDoge1xuICAgIHByb3BlcnR5OiAnY29sdW1uR2FwJyxcbiAgICBzY2FsZTogZ3V0dGVycyxcbiAgICB0cmFuc2Zvcm06IGd1dHRlckd1YXJkLFxuICB9LFxuICByb3dIZWlnaHQ6IHtcbiAgICBwcm9wZXJ0eTogJ2dyaWRBdXRvUm93cycsXG4gICAgdHJhbnNmb3JtOiAoaGVpZ2h0OiBzdHJpbmcpID0+IGBtaW5tYXgoJHtweFJlbShoZWlnaHQpfSwgMWZyKWAsXG4gIH0sXG59KTtcblxuY29uc3QgZ3JpZFByb3BzID0gdmFyaWFuY2UuY29tcG9zZShzeXN0ZW0uc3BhY2UsIGdyaWQpO1xuXG5leHBvcnQgaW50ZXJmYWNlIExheW91dEdyaWRQcm9wcyBleHRlbmRzIFN0eWxlUHJvcHM8dHlwZW9mIGdyaWRQcm9wcz4ge31cblxuZXhwb3J0IGNvbnN0IExheW91dEdyaWQgPSBzdHlsZWQoXG4gICdkaXYnLFxuICBzdHlsZWRPcHRpb25zKGdyaWQucHJvcE5hbWVzKVxuKTxMYXlvdXRHcmlkUHJvcHM+KFxuICBzeXN0ZW0uY3NzKHtcbiAgICBkaXNwbGF5OiAnZ3JpZCcsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBgcmVwZWF0KCR7Y29sdW1uc30sIG1pbm1heCgwLCAxZnIpKWAsXG4gIH0pLFxuICBncmlkUHJvcHNcbik7XG4iXX0= */\");"]},"metadata":{},"sourceType":"module"}