{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{Box,GridForm,Markdown,Text}from'@codecademy/gamut';import{delay}from'lodash';import React,{useMemo,useRef,useState}from'react';import{useMountedState}from'react-use';import{v4 as uuid}from'uuid';// import { pushDataLayerEvent, trackUserClick } from '~/libs/eventTracking';\n// import { logger } from '~/libs/logging/logger';\nimport{passwordTips}from'libs/passwordTips';// import { csrf } from '~/libs/superagent-auth';\n// import { safeRedirectUrl } from '~/libs/url';\n// import registrationStrings from '~/localized/registration.json';\n// import { useFeatureFlag } from 'state/features/hooks';\nimport{showModal}from'state/modals/modalSlice';import{useAppDispatch}from'store/hooks';import{redirectAfterLogin,serializeRegistrationValues}from'./helpers';import styles from'./styles/index.module.scss';import{UserSubmitKey}from'./types';import{VALIDATORS}from'./validators';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var RegistrationForm=function RegistrationForm(_ref){var _ref$onSuccess=_ref.onSuccess,onSuccess=_ref$onSuccess===void 0?redirectAfterLogin:_ref$onSuccess,props=_objectWithoutProperties(_ref,[\"onSuccess\"]);var dispatch=useAppDispatch();// const ssoFeatureFlag = useFeatureFlag('enterprise_sso_form');\nvar isMounted=useMountedState();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDisabled=_useState2[0],setDisabled=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),submitLocked=_useState4[0],setSubmitLocked=_useState4[1];var _useState5=useState(uuid()),_useState6=_slicedToArray(_useState5,2),recaptchaInstanceId=_useState6[0],setRecaptchaInstanceId=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),serializedForm=_useState8[0],setSerializedForm=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),recaptchaError=_useState10[0],setRecaptchaError=_useState10[1];var captcha=useRef(null);var _useMemo=useMemo(function(){return{emailValidation:VALIDATORS.email(),passwordValidation:VALIDATORS.password()};},[]),emailValidation=_useMemo.emailValidation,passwordValidation=_useMemo.passwordValidation;// if (ssoFeatureFlag) {\n//   return <RegistrationSSOForm onSuccess={onSuccess} />;\n// }\nvar submitForm=function submitForm(recaptchaToken){setDisabled(true);};var resetRecaptcha=function resetRecaptcha(){setDisabled(false);setRecaptchaInstanceId(uuid());};var onSubmitInitialize=function onSubmitInitialize(values){console.log(values);setDisabled(true);var serializedValues=serializeRegistrationValues(values);setSerializedForm(serializedValues);setDisabled(false);};/**\n   * @description\n   * This unlocks submit a half second after the first input to prevent against bots - subsequent calls have no effect\n   * */var onUpdate=function onUpdate(){delay(function(){return isMounted()&&submitLocked&&setSubmitLocked(false);},500);};var currentPage=props.currentPage,locationType=props.locationType,redirectUrl=props.redirectUrl;var signingUpFromExercise=locationType==='location/EXERCISE';// const safeRedirect = redirectUrl && safeRedirectUrl(redirectUrl);\nreturn/*#__PURE__*/_jsxs(\"div\",{className:styles.registrationContainer,children:[/*#__PURE__*/_jsx(GridForm,{className:styles.loginForm,fields:[{name:UserSubmitKey.EMAIL,label:'Email',type:'email',defaultValue:'',size:12,onUpdate:onUpdate},{name:UserSubmitKey.PASSWORD,label:'Password',type:'password',tooltip:{children:/*#__PURE__*/_jsx(Markdown,{text:passwordTips}),id:'password-tooltip',alignment:'bottom-left',className:styles.tooltipContainer},size:12,onUpdate:onUpdate,defaultValue:''}],submit:{contents:'Create Account',position:'stretch',theme:'brand-red',size:12,disabled:isDisabled||submitLocked},validation:\"all\",onSubmit:function onSubmit(values){return console.log(values);}}),/*#__PURE__*/_jsx(Box,{pt:16,children:recaptchaError&&/*#__PURE__*/_jsx(\"div\",{className:styles.recaptchaError,children:recaptchaError})}),/*#__PURE__*/_jsx(Text,{className:styles.textDisplay,children:/*#__PURE__*/_jsxs(\"p\",{className:styles.textCenter,children:[\"Already have an account?\",\" \",/*#__PURE__*/_jsx(\"a\",{className:styles.textLink,onClick:function onClick(){return dispatch(showModal('login'));},children:\"Sign in\"}),\".\"]})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/Forms/RegistrationForm/index.tsx"],"names":["Box","GridForm","Markdown","Text","delay","React","useMemo","useRef","useState","useMountedState","v4","uuid","passwordTips","showModal","useAppDispatch","redirectAfterLogin","serializeRegistrationValues","styles","UserSubmitKey","VALIDATORS","RegistrationForm","onSuccess","props","dispatch","isMounted","isDisabled","setDisabled","submitLocked","setSubmitLocked","recaptchaInstanceId","setRecaptchaInstanceId","serializedForm","setSerializedForm","recaptchaError","setRecaptchaError","captcha","emailValidation","email","passwordValidation","password","submitForm","recaptchaToken","resetRecaptcha","onSubmitInitialize","values","console","log","serializedValues","onUpdate","currentPage","locationType","redirectUrl","signingUpFromExercise","registrationContainer","loginForm","name","EMAIL","label","type","defaultValue","size","PASSWORD","tooltip","children","id","alignment","className","tooltipContainer","contents","position","theme","disabled","textDisplay","textCenter","textLink"],"mappings":"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","sourcesContent":["import { Box, GridForm, Markdown, Text } from '@codecademy/gamut';\nimport { delay } from 'lodash';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { useMountedState } from 'react-use';\nimport request from 'superagent';\nimport { v4 as uuid } from 'uuid';\n\nimport { OauthButtonGroup } from 'components/Forms/OauthButtonGroup';\nimport { RecaptchaWrapper } from 'components/Forms/RecaptchaWrapper';\nimport { cfdata } from 'libs/cfdata';\n// import { pushDataLayerEvent, trackUserClick } from '~/libs/eventTracking';\n// import { logger } from '~/libs/logging/logger';\nimport { passwordTips } from 'libs/passwordTips';\n// import { csrf } from '~/libs/superagent-auth';\n// import { safeRedirectUrl } from '~/libs/url';\nimport { registerPath } from 'libs/urlHelpers';\n// import registrationStrings from '~/localized/registration.json';\n// import { useFeatureFlag } from 'state/features/hooks';\n\nimport { showModal } from 'state/modals/modalSlice';\nimport { useAppDispatch } from 'store/hooks';\nimport { redirectAfterLogin, serializeRegistrationValues } from './helpers';\nimport { RegistrationSSOForm } from './RegistrationSSOForm';\nimport styles from './styles/index.module.scss';\nimport {\n  RegistrationFormProps,\n  SerializedValues,\n  SubmitValues,\n  UserSubmitKey,\n} from './types';\nimport { extractValidationErrors, VALIDATORS } from './validators';\n\nexport const RegistrationForm: React.FC<RegistrationFormProps> = ({\n  onSuccess = redirectAfterLogin,\n  ...props\n}) => {\n  const dispatch = useAppDispatch()\n  // const ssoFeatureFlag = useFeatureFlag('enterprise_sso_form');\n  const isMounted = useMountedState();\n  const [isDisabled, setDisabled] = useState(false);\n  const [submitLocked, setSubmitLocked] = useState(true);\n  const [recaptchaInstanceId, setRecaptchaInstanceId] = useState(uuid());\n  const [\n    serializedForm,\n    setSerializedForm,\n  ] = useState<SerializedValues | null>();\n  const [recaptchaError, setRecaptchaError] = useState<string | undefined>();\n\n  const captcha = useRef<RecaptchaWrapper | null>(null);\n\n  const { emailValidation, passwordValidation } = useMemo(\n    () => ({\n      emailValidation: VALIDATORS.email(),\n      passwordValidation: VALIDATORS.password(),\n    }),\n    []\n  );\n\n  // if (ssoFeatureFlag) {\n  //   return <RegistrationSSOForm onSuccess={onSuccess} />;\n  // }\n\n  const submitForm = (recaptchaToken: string) => {\n    setDisabled(true);\n    \n  };\n\n  const resetRecaptcha = () => {\n    \n    setDisabled(false);\n    setRecaptchaInstanceId(uuid());\n  };\n\n  const onSubmitInitialize = (values: SubmitValues) => {\n    \n    console.log(values)\n    setDisabled(true);\n    const serializedValues = serializeRegistrationValues(values);\n    setSerializedForm(serializedValues);\n\n\n    setDisabled(false);\n  };\n\n  /**\n   * @description\n   * This unlocks submit a half second after the first input to prevent against bots - subsequent calls have no effect\n   * */\n  const onUpdate = () => {\n    delay(() => isMounted() && submitLocked && setSubmitLocked(false), 500);\n  };\n\n  const { currentPage, locationType, redirectUrl } = props;\n  const signingUpFromExercise = locationType === 'location/EXERCISE';\n  // const safeRedirect = redirectUrl && safeRedirectUrl(redirectUrl);\n\n  return (\n    <div className={styles.registrationContainer}>\n      <GridForm\n        className={styles.loginForm}\n        fields={[\n          {\n            name: UserSubmitKey.EMAIL,\n            label: 'Email',\n            type: 'email',\n            defaultValue: '',\n            size: 12,\n            onUpdate,\n           \n          },\n          {\n            name: UserSubmitKey.PASSWORD,\n            label: 'Password',\n            type: 'password',\n            tooltip: {\n              children: <Markdown text={passwordTips} />,\n              id: 'password-tooltip',\n              alignment: 'bottom-left',\n              className: styles.tooltipContainer,\n            },\n            size: 12,\n            onUpdate,\n            defaultValue: '',\n            \n          },\n           \n        ]}\n        submit={{\n          contents: 'Create Account',\n          position: 'stretch',\n          theme: 'brand-red',\n          size: 12,\n          disabled: isDisabled || submitLocked,\n        }}\n        validation=\"all\"\n        onSubmit={(values) => console.log(values)}\n      />\n      <Box pt={16}>\n        {recaptchaError && (\n          <div className={styles.recaptchaError} >\n            {recaptchaError}\n          </div>\n        )}\n        {/* <RecaptchaWrapper\n          key={recaptchaInstanceId}\n          publicKey={''}\n          size=\"invisible\"\n          ref={captcha}\n          onChange={submitForm}\n          onExpired={resetRecaptcha}\n        /> */}\n      </Box>\n      <Text className={styles.textDisplay} >\n        <p className={styles.textCenter}>\n          Already have an account?{\" \"}\n          <a className={styles.textLink} onClick={() => dispatch(showModal('login')) }>\n            Sign in\n          </a>\n          .\n        </p>\n      </Text>\n\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}