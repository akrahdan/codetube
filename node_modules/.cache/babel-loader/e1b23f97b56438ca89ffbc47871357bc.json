{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Button/IconButton.tsx\";\nimport React, { forwardRef } from 'react';\nimport { createButtonComponent } from './shared';\nimport { iconSizeVariants, textButtonVariants } from './variants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonInner = createButtonComponent(iconSizeVariants, textButtonVariants);\n_c = IconButtonInner;\nexport const IconButton = /*#__PURE__*/forwardRef(_c2 = ({\n  icon: Icon,\n  variant = 'secondary',\n  ...props\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(IconButtonInner, { ...props,\n    variant: variant,\n    ref: ref,\n    children: Icon && /*#__PURE__*/_jsxDEV(Icon, {\n      width: \"calc(100% - 14px)\",\n      height: \"calc(100% - 14px)\",\n      \"aria-hidden\": true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n});\n_c3 = IconButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconButtonInner\");\n$RefreshReg$(_c2, \"IconButton$forwardRef\");\n$RefreshReg$(_c3, \"IconButton\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Button/IconButton.tsx"],"names":["React","forwardRef","createButtonComponent","iconSizeVariants","textButtonVariants","IconButtonInner","IconButton","icon","Icon","variant","props","ref"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAGA,SAAsBC,qBAAtB,QAAmD,UAAnD;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,YAArD;;AAEA,MAAMC,eAAe,GAAGH,qBAAqB,CAC3CC,gBAD2C,EAE3CC,kBAF2C,CAA7C;KAAMC,e;AAWN,OAAO,MAAMC,UAAU,gBAAGL,UAAU,OAClC,CAAC;AAAEM,EAAAA,IAAI,EAAEC,IAAR;AAAcC,EAAAA,OAAO,GAAG,WAAxB;AAAqC,KAAGC;AAAxC,CAAD,EAAkDC,GAAlD,KAA0D;AACxD,sBACE,QAAC,eAAD,OAAqBD,KAArB;AAA4B,IAAA,OAAO,EAAED,OAArC;AAA8C,IAAA,GAAG,EAAEE,GAAnD;AAAA,cACGH,IAAI,iBACH,QAAC,IAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,MAAM,EAAC,mBAFT;AAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbiC,CAA7B;MAAMF,U","sourcesContent":["import { GamutIconProps } from '@codecademy/gamut-icons';\nimport React, { forwardRef } from 'react';\n\nimport { ButtonBaseElements } from '../ButtonBase/ButtonBase';\nimport { ButtonProps, createButtonComponent } from './shared';\nimport { iconSizeVariants, textButtonVariants } from './variants';\n\nconst IconButtonInner = createButtonComponent(\n  iconSizeVariants,\n  textButtonVariants\n);\n\nexport interface IconButtonProps extends ButtonProps {\n  children?: never;\n  'aria-label': string;\n  icon: React.ComponentType<GamutIconProps>;\n}\n\nexport const IconButton = forwardRef<ButtonBaseElements, IconButtonProps>(\n  ({ icon: Icon, variant = 'secondary', ...props }, ref) => {\n    return (\n      <IconButtonInner {...props} variant={variant} ref={ref}>\n        {Icon && (\n          <Icon\n            width=\"calc(100% - 14px)\"\n            height=\"calc(100% - 14px)\"\n            aria-hidden\n          />\n        )}\n      </IconButtonInner>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}