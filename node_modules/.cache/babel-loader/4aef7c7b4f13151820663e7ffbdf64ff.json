{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/DropdownButton/DropdownList.tsx\";\nimport { Anchor, Box, FlexBox } from '@codecademy/gamut';\nimport { theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAnchor = styled(Anchor)`\n  &:hover {\n    color: ${theme.colors.hyper};\n  }\n`;\n_c = StyledAnchor;\nexport const DropdownList = ({\n  dropdownItems,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(FlexBox, {\n    flexDirection: \"column\",\n    borderRadius: \"2px\",\n    bg: \"white\",\n    py: 12,\n    children: dropdownItems.map(item => {\n      const Icon = item.icon;\n      const {\n        id,\n        text,\n        href,\n        clickHandler\n      } = item;\n\n      const onClick = event => {\n        clickHandler === null || clickHandler === void 0 ? void 0 : clickHandler(event);\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      };\n\n      return /*#__PURE__*/_jsxDEV(StyledAnchor, {\n        \"data-testid\": `dropdown-item-${id}`,\n        variant: \"interface\",\n        onClick: onClick,\n        href: href,\n        px: 24,\n        py: 12,\n        children: /*#__PURE__*/_jsxDEV(FlexBox, {\n          children: [Icon && /*#__PURE__*/_jsxDEV(Box, {\n            mr: 12,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              size: 20,\n              \"aria-hidden\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DropdownList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledAnchor\");\n$RefreshReg$(_c2, \"DropdownList\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/DropdownButton/DropdownList.tsx"],"names":["Anchor","Box","FlexBox","theme","styled","React","StyledAnchor","colors","hyper","DropdownList","dropdownItems","onClose","map","item","Icon","icon","id","text","href","clickHandler","onClick","event"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,OAAtB,QAAqC,mBAArC;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAeA,MAAMC,YAAY,GAAGF,MAAM,CAACJ,MAAD,CAAS;AACpC;AACA,aAAaG,KAAK,CAACI,MAAN,CAAaC,KAAM;AAChC;AACA,CAJA;KAAMF,Y;AAMN,OAAO,MAAMG,YAAyC,GAAG,CAAC;AACxDC,EAAAA,aADwD;AAExDC,EAAAA;AAFwD,CAAD,KAGnD;AACJ,sBACE,QAAC,OAAD;AAAS,IAAA,aAAa,EAAC,QAAvB;AAAgC,IAAA,YAAY,EAAC,KAA7C;AAAmD,IAAA,EAAE,EAAC,OAAtD;AAA8D,IAAA,EAAE,EAAE,EAAlE;AAAA,cACGD,aAAa,CAACE,GAAd,CAAmBC,IAAD,IAAU;AAC3B,YAAMC,IAAI,GAAGD,IAAI,CAACE,IAAlB;AACA,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA;AAAlB,UAAmCN,IAAzC;;AAEA,YAAMO,OAAO,GAAIC,KAAD,IAA6B;AAC3CF,QAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGE,KAAH,CAAZ;AACAV,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACR,OAHD;;AAKA,0BACE,QAAC,YAAD;AAEE,uBAAc,iBAAgBK,EAAG,EAFnC;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,OAAO,EAAEI,OAJX;AAKE,QAAA,IAAI,EAAEF,IALR;AAME,QAAA,EAAE,EAAE,EANN;AAOE,QAAA,EAAE,EAAE,EAPN;AAAA,+BASE,QAAC,OAAD;AAAA,qBACGJ,IAAI,iBACH,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE,EAAZ;AAAgB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAMGG,IANH;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,SACOD,EADP;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KA7BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtCM;MAAMP,Y","sourcesContent":["import { Anchor, Box, FlexBox } from '@codecademy/gamut';\nimport { GamutIconProps } from '@codecademy/gamut-icons';\nimport { theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nexport type DropdownItem = {\n  id: string;\n  icon?: React.ComponentType<GamutIconProps>;\n  text: string;\n  clickHandler?: (event: React.MouseEvent) => void;\n  href?: string;\n};\n\nexport type DropdownListProps = {\n  dropdownItems: DropdownItem[];\n  onClose?: () => void;\n};\n\nconst StyledAnchor = styled(Anchor)`\n  &:hover {\n    color: ${theme.colors.hyper};\n  }\n`;\n\nexport const DropdownList: React.FC<DropdownListProps> = ({\n  dropdownItems,\n  onClose,\n}) => {\n  return (\n    <FlexBox flexDirection=\"column\" borderRadius=\"2px\" bg=\"white\" py={12}>\n      {dropdownItems.map((item) => {\n        const Icon = item.icon;\n        const { id, text, href, clickHandler } = item;\n\n        const onClick = (event: React.MouseEvent) => {\n          clickHandler?.(event);\n          onClose?.();\n        };\n\n        return (\n          <StyledAnchor\n            key={id}\n            data-testid={`dropdown-item-${id}`}\n            variant=\"interface\"\n            onClick={onClick}\n            href={href}\n            px={24}\n            py={12}\n          >\n            <FlexBox>\n              {Icon && (\n                <Box mr={12}>\n                  <Icon size={20} aria-hidden />\n                </Box>\n              )}\n              {text}\n            </FlexBox>\n          </StyledAnchor>\n        );\n      })}\n    </FlexBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}