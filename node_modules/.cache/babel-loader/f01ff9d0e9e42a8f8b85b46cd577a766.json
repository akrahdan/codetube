{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/Typography/TextDeprecated.tsx\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';\nimport styles from './styles/Text.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */\nexport const TextDeprecated = ({\n  children,\n  as: Element = 'p',\n  fontSize = 'md',\n  className,\n  testId,\n  style\n}) => {\n  return /*#__PURE__*/_jsxDEV(Element, {\n    className: cx(styles.text, className, generateResponsiveClassnames({\n      fontSize\n    }, styles)),\n    \"data-testid\": testId,\n    style: style,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = TextDeprecated;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextDeprecated\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Typography/TextDeprecated.tsx"],"names":["cx","React","generateResponsiveClassnames","styles","TextDeprecated","children","as","Element","fontSize","className","testId","style","text"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,4BAAT,QAA6C,uCAA7C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,cAA6C,GAAG,CAAC;AAC5DC,EAAAA,QAD4D;AAE5DC,EAAAA,EAAE,EAAEC,OAAO,GAAG,GAF8C;AAG5DC,EAAAA,QAAQ,GAAG,IAHiD;AAI5DC,EAAAA,SAJ4D;AAK5DC,EAAAA,MAL4D;AAM5DC,EAAAA;AAN4D,CAAD,KAOvD;AACJ,sBACE,QAAC,OAAD;AACE,IAAA,SAAS,EAAEX,EAAE,CACXG,MAAM,CAACS,IADI,EAEXH,SAFW,EAGXP,4BAA4B,CAAC;AAAEM,MAAAA;AAAF,KAAD,EAAeL,MAAf,CAHjB,CADf;AAME,mBAAaO,MANf;AAOE,IAAA,KAAK,EAAEC,KAPT;AAAA,cASGN;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBM;KAAMD,c","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\n\nimport { ResponsiveProperty } from '../typings/responsive-properties';\nimport { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';\nimport styles from './styles/Text.module.scss';\nimport { AllowedStyles } from './types';\n\nexport type TextTags = 'p' | 'span' | 'div';\nexport type TextSizes = 'sm' | 'md' | 'lg';\n\ntype TextDeprecatedProps = {\n  className?: string;\n  testId?: string;\n  /** Text based tags */\n  as?: TextTags;\n  /** A font-size/font-family pair */\n  fontSize?: ResponsiveProperty<TextSizes>;\n  /** Allows you to pass color attributes directly to the tag */\n  style?: AllowedStyles;\n};\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */\n\nexport const TextDeprecated: React.FC<TextDeprecatedProps> = ({\n  children,\n  as: Element = 'p',\n  fontSize = 'md',\n  className,\n  testId,\n  style,\n}) => {\n  return (\n    <Element\n      className={cx(\n        styles.text,\n        className,\n        generateResponsiveClassnames({ fontSize }, styles)\n      )}\n      data-testid={testId}\n      style={style}\n    >\n      {children}\n    </Element>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}