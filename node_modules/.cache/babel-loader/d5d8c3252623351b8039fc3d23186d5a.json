{"ast":null,"code":"import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/dist/query/react\";import algoliasearch from\"algoliasearch/lite\";import cookie from\"react-cookies\";var searchClient=algoliasearch(process.env.REACT_APP_ALGOLIA_APP_ID,process.env.REACT_APP_ALGOLIA_SEARCH_KEY);export var autoSearch=function autoSearch(query){searchClient.initIndex(\"tags_index\").search(query).then(function(_ref){var hits=_ref.hits;return console.log(\"Hits: \",hits);}).catch(function(err){return console.log(\"Error: \",err);});};export var coursesApi=createApi({reducerPath:\"courseApi\",baseQuery:fetchBaseQuery({baseUrl:\"/\",prepareHeaders:function prepareHeaders(headers,_ref2){var getState=_ref2.getState;var csrfToken=cookie.load(\"csrftoken\");if(csrfToken){headers.set(\"X-CSRFToken\",csrfToken);}var token=getState().auth.token||localStorage.getItem(\"token\");if(token){headers.set(\"Authorization\",\"Token \".concat(token));}headers.set(\"Content-Type\",\"application/json\");return headers;}}),tagTypes:['Review'],endpoints:function endpoints(build){return{fetchCourse:build.query({query:function query(id){return{url:\"/courses/\".concat(id),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchInstructorCourses:build.query({query:function query(id){return{url:\"/instructors/courses/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),editInstructorInfo:build.mutation({query:function query(body){return{url:\"/instructors/edit-info/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),fetchInstructorInfo:build.query({query:function query(){return{url:\"/instructors/profile/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchCategories:build.query({query:function query(){return{url:\"/api/categories\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchCourseLevel:build.query({query:function query(){return{url:\"/courses/level\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricingTier:build.query({query:function query(){return{url:\"/courses/pricing/tier/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricingCurrency:build.query({query:function query(){return{url:\"/courses/pricing/currency/\",method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchPricing:build.query({query:function query(id){return{url:\"/courses/\".concat(id,\"/pricing/\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchSections:build.query({query:function query(pk){return{url:\"/courses/\".concat(pk,\"/sections\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),searchTags:build.query({query:function query(q){return{url:\"/courses/search?q=\".concat(q),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),createCourse:build.mutation({query:function query(body){return{url:\"/courses/create/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),updateCourse:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/\".concat(id,\"/edit/\"),method:\"PUT\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),uploadLectureVideo:build.mutation({query:function query(body){return{url:\"/courses/lecture/video_upload/\",method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),createSection:build.mutation({query:function query(body){return{url:\"/courses/section/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createGoal:build.mutation({query:function query(body){return{url:\"/courses/goal/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createPricing:build.mutation({query:function query(body){return{url:\"/courses/pricing/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createExperience:build.mutation({query:function query(body){return{url:\"/courses/experience/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),createRequirement:build.mutation({query:function query(body){return{url:\"/courses/requirement/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),editRequirement:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/requirements/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),editExperience:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/experience/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),editGoal:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/goals/\".concat(id,\"/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),submitReview:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/\".concat(id,\"/review/\"),body:body,method:\"PUT\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchExperience:build.query({query:function query(pk){return{url:\"/courses/\".concat(pk,\"/experience\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchGoals:build.query({query:function query(pk){return{url:\"/courses/\".concat(pk,\"/goals\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchRequirements:build.query({query:function query(pk){return{url:\"/courses/\".concat(pk,\"/requirements\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),deleteExperience:build.mutation({query:function query(id){return{url:\"/courses/experience/\".concat(id,\"/\"),method:\"DELETE\"};}}),deleteGoal:build.mutation({query:function query(id){return{url:\"/courses/goals/\".concat(id,\"/\"),method:\"DELETE\"};}}),deleteRequirement:build.mutation({query:function query(id){return{url:\"/courses/requirements/\".concat(id,\"/\"),method:\"DELETE\"};}}),editSection:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/sections/\".concat(id,\"/\"),body:body,method:\"PUT\"};}}),deleteSection:build.mutation({query:function query(id){return{url:\"/courses/sections/\".concat(id,\"/\"),method:\"DELETE\"};}}),createLecture:build.mutation({query:function query(body){return{url:\"/courses/lecture/create/\",body:body,method:\"POST\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchLectures:build.query({query:function query(pk){return{url:\"/courses/section/\".concat(pk,\"/lectures\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),fetchResources:build.query({query:function query(pk){return{url:\"/courses/\".concat(pk,\"/resources/\"),method:\"GET\",responseHandler:function responseHandler(response){return response.json();}};}}),createResource:build.mutation({query:function query(data){var course=data.course,body=_objectWithoutProperties(data,[\"course\"]);return{url:\"/courses/\".concat(course,\"/resources/\"),method:\"POST\",body:body,responseHandler:function responseHandler(response){return response.json();}};}}),editLecture:build.mutation({query:function query(data){var id=data.id,body=_objectWithoutProperties(data,[\"id\"]);return{url:\"/courses/section/lectures/\".concat(id,\"/\"),body:body,method:\"PUT\"};}}),deleteLecture:build.mutation({query:function query(id){return{url:\"/courses/section/lectures/\".concat(id,\"/\"),method:\"DELETE\"};}})};}});var useCreateCourseMutation=coursesApi.useCreateCourseMutation,useCreateLectureMutation=coursesApi.useCreateLectureMutation,useCreateSectionMutation=coursesApi.useCreateSectionMutation,useFetchCourseQuery=coursesApi.useFetchCourseQuery,useFetchCategoriesQuery=coursesApi.useFetchCategoriesQuery,useFetchCourseLevelQuery=coursesApi.useFetchCourseLevelQuery,useSearchTagsQuery=coursesApi.useSearchTagsQuery,useUploadLectureVideoMutation=coursesApi.useUploadLectureVideoMutation,useFetchSectionsQuery=coursesApi.useFetchSectionsQuery,useDeleteSectionMutation=coursesApi.useDeleteSectionMutation,useEditSectionMutation=coursesApi.useEditSectionMutation,useDeleteLectureMutation=coursesApi.useDeleteLectureMutation,useEditLectureMutation=coursesApi.useEditLectureMutation,useFetchLecturesQuery=coursesApi.useFetchLecturesQuery,useFetchResourcesQuery=coursesApi.useFetchResourcesQuery,useCreateResourceMutation=coursesApi.useCreateResourceMutation,useUpdateCourseMutation=coursesApi.useUpdateCourseMutation,useCreateExperienceMutation=coursesApi.useCreateExperienceMutation,useCreateGoalMutation=coursesApi.useCreateGoalMutation,useCreateRequirementMutation=coursesApi.useCreateRequirementMutation,useEditExperienceMutation=coursesApi.useEditExperienceMutation,useEditGoalMutation=coursesApi.useEditGoalMutation,useEditRequirementMutation=coursesApi.useEditRequirementMutation,useFetchExperienceQuery=coursesApi.useFetchExperienceQuery,useFetchGoalsQuery=coursesApi.useFetchGoalsQuery,useFetchRequirementsQuery=coursesApi.useFetchRequirementsQuery,useDeleteExperienceMutation=coursesApi.useDeleteExperienceMutation,useDeleteGoalMutation=coursesApi.useDeleteGoalMutation,useDeleteRequirementMutation=coursesApi.useDeleteRequirementMutation,useFetchPricingCurrencyQuery=coursesApi.useFetchPricingCurrencyQuery,useFetchPricingTierQuery=coursesApi.useFetchPricingTierQuery,useCreatePricingMutation=coursesApi.useCreatePricingMutation,useFetchPricingQuery=coursesApi.useFetchPricingQuery,useSubmitReviewMutation=coursesApi.useSubmitReviewMutation,useFetchInstructorCoursesQuery=coursesApi.useFetchInstructorCoursesQuery,useEditInstructorInfoMutation=coursesApi.useEditInstructorInfoMutation,useFetchInstructorInfoQuery=coursesApi.useFetchInstructorInfoQuery;export{useCreateCourseMutation,useCreateLectureMutation,useCreateSectionMutation,useFetchCourseQuery,useFetchCategoriesQuery,useFetchCourseLevelQuery,useSearchTagsQuery,useUploadLectureVideoMutation,useFetchSectionsQuery,useDeleteSectionMutation,useEditSectionMutation,useDeleteLectureMutation,useEditLectureMutation,useFetchLecturesQuery,useFetchResourcesQuery,useCreateResourceMutation,useUpdateCourseMutation,useCreateExperienceMutation,useCreateGoalMutation,useCreateRequirementMutation,useEditExperienceMutation,useEditGoalMutation,useEditRequirementMutation,useFetchExperienceQuery,useFetchGoalsQuery,useFetchRequirementsQuery,useDeleteExperienceMutation,useDeleteGoalMutation,useDeleteRequirementMutation,useFetchPricingCurrencyQuery,useFetchPricingTierQuery,useCreatePricingMutation,useFetchPricingQuery,useSubmitReviewMutation,useFetchInstructorCoursesQuery,useEditInstructorInfoMutation,useFetchInstructorInfoQuery};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/services/courses.ts"],"names":["createApi","fetchBaseQuery","algoliasearch","cookie","searchClient","process","env","REACT_APP_ALGOLIA_APP_ID","REACT_APP_ALGOLIA_SEARCH_KEY","autoSearch","query","initIndex","search","then","hits","console","log","catch","err","coursesApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","csrfToken","load","set","token","auth","localStorage","getItem","tagTypes","endpoints","build","fetchCourse","id","url","method","responseHandler","response","json","fetchInstructorCourses","editInstructorInfo","mutation","body","fetchInstructorInfo","fetchCategories","fetchCourseLevel","fetchPricingTier","fetchPricingCurrency","fetchPricing","fetchSections","pk","searchTags","q","createCourse","updateCourse","data","uploadLectureVideo","createSection","createGoal","createPricing","createExperience","createRequirement","editRequirement","editExperience","editGoal","submitReview","fetchExperience","fetchGoals","fetchRequirements","deleteExperience","deleteGoal","deleteRequirement","editSection","deleteSection","createLecture","fetchLectures","fetchResources","createResource","course","editLecture","deleteLecture","useCreateCourseMutation","useCreateLectureMutation","useCreateSectionMutation","useFetchCourseQuery","useFetchCategoriesQuery","useFetchCourseLevelQuery","useSearchTagsQuery","useUploadLectureVideoMutation","useFetchSectionsQuery","useDeleteSectionMutation","useEditSectionMutation","useDeleteLectureMutation","useEditLectureMutation","useFetchLecturesQuery","useFetchResourcesQuery","useCreateResourceMutation","useUpdateCourseMutation","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchGoalsQuery","useFetchRequirementsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","useFetchPricingCurrencyQuery","useFetchPricingTierQuery","useCreatePricingMutation","useFetchPricingQuery","useSubmitReviewMutation","useFetchInstructorCoursesQuery","useEditInstructorInfoMutation","useFetchInstructorInfoQuery"],"mappings":"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","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nimport algoliasearch from \"algoliasearch/lite\";\n\nimport { RootState } from \"store\";\nimport cookie from \"react-cookies\";\n\nconst searchClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_SEARCH_KEY\n);\n\nexport interface CourseResponse {\n  title: string;\n  id: number;\n  category: number;\n  description: string;\n  cover_image: string;\n  video_url: string;\n  headline: string;\n  level: string;\n  tags: string[];\n  subcategory: number;\n  price: number;\n  state: string;\n}\n\nexport interface Instructor {\n  id: string;\n  headline: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  description: string;\n  avatar: string\n\n}\n\nexport interface InstructorResponse {\n  id: string;\n  headline: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  avatar: string\n  user: User;\n  description: string;\n\n}\n\nexport interface User {\n  email: string;\n  username: string;\n  first_name: string;\n  last_name: string\n}\n\nexport interface MediaRequest {\n  course: number;\n  name: string;\n  filetype: string;\n  key: string;\n  size: number;\n}\n\nexport interface MediaResponse {\n  course: number;\n  name: string;\n  filetype: string;\n  key: string;\n  id: number;\n  url?: string;\n  size: number;\n  timestamp: string;\n}\n\nexport interface SearchResponse {\n  title: string;\n  tags: string[];\n}\n\nexport interface CourseRequest {\n  id: number;\n  title: string;\n  category: number;\n  description: string;\n  cover_image: string;\n  video_url: string;\n  level: string;\n  tags: string[];\n  headline: string;\n  subcategory: number;\n  price: number;\n}\n\nexport interface Section {\n  title: string;\n  id: number;\n  course: number;\n  instructor: number;\n  description: string;\n  order: number;\n  resources: number[];\n  lectures?: Lecture[];\n}\n\n\nexport interface Experience {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface Goal {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface Requirement {\n  name: string;\n  id: number;\n  course: number;\n}\n\nexport interface SectionRequest {\n  title: string;\n  id: number;\n  course: number;\n  description?: string;\n  position: string;\n  neighbor: number;\n}\n\nexport interface LectureRequest {\n  title: string;\n  id: number;\n  video: number;\n  video_url: string;\n  section: number;\n  resources: number[];\n  description?: string;\n  position: string;\n  neighbor: number;\n}\n\nexport interface Options {\n  name: string;\n  display: string;\n}\n\nexport interface Pricing {\n  amount: string;\n  currency: string;\n  course: number;\n}\n\nexport interface Lecture {\n  title: string;\n  id: number;\n  position: string;\n  neighbor: number;\n  description: string;\n  video: MediaResponse;\n  resources: number[];\n  instructor: number;\n  section: number;\n  video_url: string;\n  order: number;\n}\n\nexport interface Review {\n  id: number;\n  state: string\n}\n\n\n\nexport interface CategoryResponse {\n  title: string;\n  id: number;\n  children: CategoryResponse[];\n}\n\nexport const autoSearch = (query: string) => {\n  searchClient\n    .initIndex(\"tags_index\")\n    .search(query)\n    .then(({ hits }) => console.log(\"Hits: \", hits))\n    .catch((err) => console.log(\"Error: \", err));\n};\n\nexport const coursesApi = createApi({\n  reducerPath: \"courseApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/\",\n    prepareHeaders: (headers, { getState }) => {\n      const csrfToken = cookie.load(\"csrftoken\");\n\n      if (csrfToken) {\n        headers.set(\"X-CSRFToken\", csrfToken);\n      }\n      const token =\n        (getState() as RootState).auth.token || localStorage.getItem(\"token\");\n      if (token) {\n        headers.set(\"Authorization\", `Token ${token}`);\n      }\n\n      headers.set(\"Content-Type\", \"application/json\");\n\n      return headers;\n    },\n  }),\n  tagTypes: ['Review'],\n  endpoints: (build) => ({\n    fetchCourse: build.query<CourseResponse, number>({\n      query: (id) => ({\n        url: `/courses/${id}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchInstructorCourses: build.query<CourseResponse[], void>({\n      query: (id) => ({\n        url: `/instructors/courses/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    editInstructorInfo: build.mutation<InstructorResponse, Partial<Instructor>>({\n      query: (body) => ({\n        url: `/instructors/edit-info/`,\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchInstructorInfo: build.query<InstructorResponse, void>({\n      query: () => ({\n        url: `/instructors/profile/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchCategories: build.query<CategoryResponse[], void>({\n      query: () => ({\n        url: \"/api/categories\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchCourseLevel: build.query<Options[], void>({\n      query: () => ({\n        url: \"/courses/level\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricingTier: build.query<Options[], void>({\n      query: () => ({\n        url: \"/courses/pricing/tier/\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricingCurrency: build.query<Options[], void>({\n      query: () => ({\n        url: \"/courses/pricing/currency/\",\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchPricing: build.query<Pricing, number>({\n      query: (id) => ({\n        url: `/courses/${id}/pricing/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchSections: build.query<Section[], number>({\n      query: (pk) => ({\n        url: `/courses/${pk}/sections`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    searchTags: build.query<SearchResponse[], string>({\n      query: (q) => ({\n        url: `/courses/search?q=${q}`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    createCourse: build.mutation<CourseResponse, Partial<CourseRequest>>({\n      query: (body) => ({\n        url: \"/courses/create/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    updateCourse: build.mutation<CourseResponse, Partial<CourseRequest>>({\n      query: (data) => {\n        const { id, ...body} = data\n        return {\n          url: `/courses/${id}/edit/`,\n          method: \"PUT\",\n          body,\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    uploadLectureVideo: build.mutation<MediaResponse, Partial<MediaRequest>>({\n      query: (body) => ({\n        url: \"/courses/lecture/video_upload/\",\n        method: \"POST\",\n        body,\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    createSection: build.mutation<Section[], Partial<SectionRequest>>({\n      query: (body) => ({\n        url: \"/courses/section/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createGoal: build.mutation<Goal[], Partial<Goal>>({\n      query: (body) => ({\n        url: \"/courses/goal/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createPricing: build.mutation<Pricing[], Partial<Pricing>>({\n      query: (body) => ({\n        url: \"/courses/pricing/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createExperience: build.mutation<Experience[], Partial<Experience>>({\n      query: (body) => ({\n        url: \"/courses/experience/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createRequirement: build.mutation<Requirement[], Partial<Requirement>>({\n      query: (body) => ({\n        url: \"/courses/requirement/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    editRequirement: build.mutation<Requirement, Partial<Requirement>>({\n      query: (data) => {\n       const { id, ...body } = data\n       return  {url: `/courses/requirements/${id}/`,\n        body,\n        method: \"PUT\",\n        responseHandler: (response) => response.json(),\n      }\n      },\n    }),\n\n    editExperience: build.mutation<Experience, Partial<Experience>>({\n      query: (data) => {\n       const { id, ...body } = data\n       return  {url: `/courses/experience/${id}/`,\n        body,\n        method: \"PUT\",\n        responseHandler: (response) => response.json(),\n      }\n      },\n    }),\n\n    editGoal: build.mutation<Goal, Partial<Goal>>({\n      query: (data) => {\n       const { id, ...body } = data\n       return  {url: `/courses/goals/${id}/`,\n        body,\n        method: \"PUT\",\n        responseHandler: (response) => response.json(),\n      }\n      },\n    }),\n\n    submitReview: build.mutation<Review, Partial<Review>>({\n      query: (data) => {\n       const { id, ...body } = data\n       return  {url: `/courses/${id}/review/`,\n        body,\n        method: \"PUT\",\n        responseHandler: (response) => response.json(),\n      }\n      }\n    }),\n\n    fetchExperience: build.query<Experience[], number>({\n      query: (pk) => ({\n        url: `/courses/${pk}/experience`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchGoals: build.query<Goal[], number>({\n      query: (pk) => ({\n        url: `/courses/${pk}/goals`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchRequirements: build.query<Requirement[], number>({\n      query: (pk) => ({\n        url: `/courses/${pk}/requirements`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    deleteExperience: build.mutation<Experience, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/courses/experience/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    deleteGoal: build.mutation<Goal, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/courses/goals/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    deleteRequirement: build.mutation<Requirement, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/courses/requirements/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n\n\n    editSection: build.mutation<Section, Partial<SectionRequest>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/courses/sections/${id}/`,\n          body,\n          method: \"PUT\",\n        };\n      },\n    }),\n\n    deleteSection: build.mutation<Section, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/courses/sections/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n\n    createLecture: build.mutation<Lecture[], Partial<Lecture>>({\n      query: (body) => ({\n        url: \"/courses/lecture/create/\",\n        body,\n        method: \"POST\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n    fetchLectures: build.query<Lecture[], number>({\n      query: (pk) => ({\n        url: `/courses/section/${pk}/lectures`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    fetchResources: build.query<MediaResponse[], number>({\n      query: (pk) => ({\n        url: `/courses/${pk}/resources/`,\n        method: \"GET\",\n        responseHandler: (response) => response.json(),\n      }),\n    }),\n\n    createResource: build.mutation<MediaResponse[], MediaRequest>({\n      query: (data) => {\n        const { course, ...body } = data;\n        return {\n          url: `/courses/${course}/resources/`,\n          method: \"POST\",\n          body,\n          responseHandler: (response) => response.json(),\n        };\n      },\n    }),\n\n    editLecture: build.mutation<Lecture, Partial<LectureRequest>>({\n      query: (data) => {\n        const { id, ...body } = data;\n        return {\n          url: `/courses/section/lectures/${id}/`,\n          body,\n          method: \"PUT\",\n        };\n      },\n    }),\n\n    deleteLecture: build.mutation<Lecture, Partial<number>>({\n      query: (id) => {\n        return {\n          url: `/courses/section/lectures/${id}/`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n  }),\n});\n\nexport const {\n  useCreateCourseMutation,\n  useCreateLectureMutation,\n  useCreateSectionMutation,\n  useFetchCourseQuery,\n  useFetchCategoriesQuery,\n  useFetchCourseLevelQuery,\n  useSearchTagsQuery,\n  useUploadLectureVideoMutation,\n  useFetchSectionsQuery,\n  useDeleteSectionMutation,\n  useEditSectionMutation,\n  useDeleteLectureMutation,\n  useEditLectureMutation,\n  useFetchLecturesQuery,\n  useFetchResourcesQuery,\n  useCreateResourceMutation,\n  useUpdateCourseMutation,\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchGoalsQuery,\n  useFetchRequirementsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  useFetchPricingCurrencyQuery,\n  useFetchPricingTierQuery,\n  useCreatePricingMutation,\n  useFetchPricingQuery,\n  useSubmitReviewMutation,\n  useFetchInstructorCoursesQuery,\n  useEditInstructorInfoMutation,\n  useFetchInstructorInfoQuery\n} = coursesApi;\n"]},"metadata":{},"sourceType":"module"}