{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const [goals, setGoals] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n  const [experience, setExperience] = useState([{\n    id: \"answerList--0\",\n    name: \"\"\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n    setGoalsUpdate(selectedGoals);\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedExperiences, selectedGoals, selectedRequirements]);\n  useEffect(() => {\n    const goalResults = goals;\n    goalResults && goalResults.forEach(goal => {\n      if (goal.name) {\n        createGoal({\n          name: goal.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = goalResults.filter(item => item.id != goal.id);\n          setGoals(results);\n        });\n      }\n    });\n    const experienceResults = experience;\n    experienceResults && experienceResults.forEach(exp => {\n      if (exp.name) {\n        createExperience({\n          name: exp.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = experienceResults.filter(item => item.id != exp.id);\n          setExperience(results);\n        });\n      }\n    });\n    const reqResults = requirements;\n    reqResults && reqResults.forEach(req => {\n      if (req.name) {\n        createRequirement({\n          name: req.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = reqResults.filter(item => item.id != req.id);\n          setRequirements(results);\n        });\n      }\n    });\n    const reqUpdateResults = requirementsUpdate;\n    requirementsUpdate && requirementsUpdate.forEach(req => {\n      if (req.name) {\n        editRequirement({ ...req,\n          id: locationPayload.id\n        }).then();\n      }\n    });\n    experienceUpdate && experienceUpdate.forEach(req => {\n      if (req.name) {\n        editExperience({ ...req,\n          id: locationPayload.id\n        });\n      }\n    });\n    goalsUpdate && goalsUpdate.forEach(item => {\n      if (item.name) {\n        editRequirement({ ...item,\n          id: locationPayload.id\n        });\n      }\n    });\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      const newGoals = goals.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setGoalsUpdate(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this)), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {\n                      const updatedGoals = goals.filter(result => result.id != value.id);\n                      setGoals(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      const newGoals = goals.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setGoals(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${goals.length}`,\n                  name: \"\"\n                };\n                const newGoals = [...goals, answer];\n                const emptyValue = goals.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      const newReqs = requirements.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setRequirementsUpdate(newReqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      const updatedReqs = requirements.filter(result => result.id != value.id);\n                      setRequirements(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      const newReqs = requirements.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setRequirements(newReqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${requirements.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...requirements, answer];\n                const emptyValue = requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(Experience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      const newExpex = experience.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setExperienceUpdate(newExpex);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      const updatedExperience = experience.filter(result => result.id != value.id);\n                      setExperience(updatedExperience);\n                    },\n                    handleChange: obj => {\n                      const newExpex = experience.map(item => {\n                        if (item.id == obj.id) {\n                          item.name = obj.name;\n                        }\n\n                        return item;\n                      });\n                      setExperience(newExpex);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${experience.length}`,\n                  value: \"\"\n                };\n                const newExps = [...experience, answer];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"+TcfzUkFaiIvFY2QYS5Hi4qv6oc=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js"],"names":["useEffect","useState","Goal","Requirements","Experience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","usePrompt","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","goals","setGoals","name","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","goalResults","forEach","course","then","results","filter","item","experienceResults","exp","reqResults","reqUpdateResults","map","obj","newGoals","value","updatedGoals","result","answer","length","emptyValue","newReqs","updatedReqs","newExpex","updatedExperience","newExps"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,0BAA1D;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SACEC,2BADF,EAEEC,qBAFF,EAGEC,4BAHF,EAIEC,yBAJF,EAKEC,mBALF,EAMEC,0BANF,EAOEC,uBAPF,EAQEC,yBARF,EASEC,kBATF,EAUEC,2BAVF,EAWEC,qBAXF,EAYEC,4BAZF,QAaO,kBAbP;AAeA,SACEC,kBADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,2BAJP;;AAMA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAMC,YAAY,GAAGjB,cAAc,CAACD,kBAAD,CAAnC;AACA,QAAMmB,YAAY,GAAGlB,cAAc,CAACJ,UAAD,CAAnC;AACA,QAAMuB,eAAe,GAAGnB,cAAc,CAACF,qBAAD,CAAtC;AACA,QAAMsB,oBAAoB,GAAGpB,cAAc,CAACa,kBAAD,CAA3C;AACA,QAAMQ,aAAa,GAAGrB,cAAc,CAACc,WAAD,CAApC;AACA,QAAMQ,mBAAmB,GAAGtB,cAAc,CAACe,gBAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,IAAerB,qBAAqB,EAA1C;AACA,QAAM,CAACsB,gBAAD,IAAqBvB,2BAA2B,EAAtD;AACA,QAAM,CAACwB,iBAAD,IAAsBtB,4BAA4B,EAAxD;AACA,QAAM,CAACuB,QAAD,IAAarB,mBAAmB,EAAtC;AACA,QAAM,CAACsB,eAAD,IAAoBrB,0BAA0B,EAApD;AACA,QAAM,CAACsB,cAAD,IAAmBxB,yBAAyB,EAAlD;AACA,QAAM,CAACyB,UAAD,IAAelB,qBAAqB,EAA1C;AACA,QAAM,CAACmB,gBAAD,IAAqBpB,2BAA2B,EAAtD;AACA,QAAM,CAACqB,kBAAD,IAAuBnB,4BAA4B,EAAzD;AACA,QAAM;AAAEoB,IAAAA,IAAI,EAAEC;AAAR,MAA8BzB,yBAAyB,CAC3DW,eAAe,CAACe,EAD2C,CAA7D;AAGA,QAAM;AAAEF,IAAAA,IAAI,EAAEG;AAAR,MAAuB1B,kBAAkB,CAACU,eAAe,CAACe,EAAjB,CAA/C;AACA,QAAM;AAAEF,IAAAA,IAAI,EAAEI;AAAR,MAA4B7B,uBAAuB,CAACY,eAAe,CAACe,EAAjB,CAAzD;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAACgC,aAAD,CAA9C;AACA,QAAM,CAACkB,kBAAD,EAAqBC,qBAArB,IACJnD,QAAQ,CAAC+B,oBAAD,CADV;AAGA,QAAM,CAACqB,gBAAD,EAAmBC,mBAAnB,IAA0CrD,QAAQ,CAACiC,mBAAD,CAAxD;AAEA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBvD,QAAQ,CAAC,CAAC;AAAE6C,IAAAA,EAAE,EAAE,eAAN;AAAuBW,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAD,CAAlC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC1D,QAAQ,CAAC,CAC/C;AAAE6C,IAAAA,EAAE,EAAE,eAAN;AAAuBW,IAAAA,IAAI,EAAE;AAA7B,GAD+C,CAAD,CAAhD;AAIA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8B5D,QAAQ,CAAC,CAC3C;AAAE6C,IAAAA,EAAE,EAAE,eAAN;AAAuBW,IAAAA,IAAI,EAAE;AAA7B,GAD2C,CAAD,CAA5C;;AAGA,QAAMK,UAAU,GAAIC,IAAD,IAAU;AAC3BtB,IAAAA,UAAU,CAACsB,IAAI,CAACjB,EAAN,CAAV;AACD,GAFD;;AAIA,QAAMkB,SAAS,GAAIC,GAAD,IAAS;AACzBtB,IAAAA,kBAAkB,CAACsB,GAAG,CAACnB,EAAL,CAAlB;AACD,GAFD;;AAIA,QAAMoB,SAAS,GAAID,GAAD,IAAS;AACzBvB,IAAAA,gBAAgB,CAACuB,GAAG,CAACnB,EAAL,CAAhB;AACD,GAFD;;AAIA9C,EAAAA,SAAS,CAAC,MAAM;AACbsD,IAAAA,mBAAmB,CAACpB,mBAAD,CAAnB;AACAgB,IAAAA,cAAc,CAACjB,aAAD,CAAd;AACAmB,IAAAA,qBAAqB,CAACpB,oBAAD,CAArB;AACF,GAJQ,EAIN,CAACE,mBAAD,EAAsBD,aAAtB,EAAqCD,oBAArC,CAJM,CAAT;AAMAhC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmE,WAAW,GAAGZ,KAApB;AACAY,IAAAA,WAAW,IAAIA,WAAW,CAACC,OAAZ,CAAoBL,IAAI,IAAI;AACzC,UAAGA,IAAI,CAACN,IAAR,EAAc;AACZtB,QAAAA,UAAU,CAAC;AACTsB,UAAAA,IAAI,EAAEM,IAAI,CAACN,IADF;AAETY,UAAAA,MAAM,EAAEtC,eAAe,CAACe;AAFf,SAAD,CAAV,CAGGwB,IAHH,CAGQ,MAAM;AACZ,gBAAMC,OAAO,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAAC3B,EAAL,IAAWiB,IAAI,CAACjB,EAA3C,CAAhB;AACAU,UAAAA,QAAQ,CAACe,OAAD,CAAR;AACD,SAND;AAOD;AACF,KAVc,CAAf;AAYA,UAAMG,iBAAiB,GAAGd,UAA1B;AACAc,IAAAA,iBAAiB,IAAIA,iBAAiB,CAACN,OAAlB,CAA0BO,GAAG,IAAI;AACpD,UAAGA,GAAG,CAAClB,IAAP,EAAa;AACXrB,QAAAA,gBAAgB,CAAC;AACfqB,UAAAA,IAAI,EAAEkB,GAAG,CAAClB,IADK;AAEfY,UAAAA,MAAM,EAAEtC,eAAe,CAACe;AAFT,SAAD,CAAhB,CAGGwB,IAHH,CAGQ,MAAM;AACZ,gBAAMC,OAAO,GAAGG,iBAAiB,CAACF,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAAC3B,EAAL,IAAW6B,GAAG,CAAC7B,EAAhD,CAAhB;AACAe,UAAAA,aAAa,CAACU,OAAD,CAAb;AACD,SAND;AAOD;AACF,KAVoB,CAArB;AAYA,UAAMK,UAAU,GAAGlB,YAAnB;AACAkB,IAAAA,UAAU,IAAIA,UAAU,CAACR,OAAX,CAAmBH,GAAG,IAAI;AACtC,UAAGA,GAAG,CAACR,IAAP,EAAa;AACXpB,QAAAA,iBAAiB,CAAC;AAChBoB,UAAAA,IAAI,EAAEQ,GAAG,CAACR,IADM;AAEhBY,UAAAA,MAAM,EAAEtC,eAAe,CAACe;AAFR,SAAD,CAAjB,CAGGwB,IAHH,CAGQ,MAAM;AACZ,gBAAMC,OAAO,GAAGK,UAAU,CAACJ,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAAC3B,EAAL,IAAWmB,GAAG,CAACnB,EAAzC,CAAhB;AACAa,UAAAA,eAAe,CAACY,OAAD,CAAf;AACD,SAND;AAOD;AACF,KAVa,CAAd;AAYA,UAAMM,gBAAgB,GAAG1B,kBAAzB;AACAA,IAAAA,kBAAkB,IAAIA,kBAAkB,CAACiB,OAAnB,CAA2BH,GAAG,IAAI;AACtD,UAAGA,GAAG,CAACR,IAAP,EAAa;AACXlB,QAAAA,eAAe,CAAC,EACd,GAAG0B,GADW;AAEdnB,UAAAA,EAAE,EAAEf,eAAe,CAACe;AAFN,SAAD,CAAf,CAGGwB,IAHH;AAID;AACF,KAPqB,CAAtB;AASAjB,IAAAA,gBAAgB,IAAIA,gBAAgB,CAACe,OAAjB,CAAyBH,GAAG,IAAI;AAClD,UAAGA,GAAG,CAACR,IAAP,EAAa;AACXjB,QAAAA,cAAc,CAAC,EACb,GAAGyB,GADU;AAEbnB,UAAAA,EAAE,EAAEf,eAAe,CAACe;AAFP,SAAD,CAAd;AAID;AACF,KAPmB,CAApB;AASAG,IAAAA,WAAW,IAAIA,WAAW,CAACmB,OAAZ,CAAoBK,IAAI,IAAI;AACzC,UAAGA,IAAI,CAAChB,IAAR,EAAc;AACZlB,QAAAA,eAAe,CAAC,EACd,GAAGkC,IADW;AAEd3B,UAAAA,EAAE,EAAEf,eAAe,CAACe;AAFN,SAAD,CAAf;AAID;AACF,KAPc,CAAf;AAQD,GAnEQ,EAmEN,CAAChB,YAAD,CAnEM,CAAT;AAoEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,+BACE;AACE,0BAAa,YADf;AAEE,UAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,iBACG,GADH,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,YAAf;AAA4B,gBAAA,SAAS,EAAC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,uCACE;AAAA,6BACGmB,WAAW,IAAIA,WAAW,CAAC6B,GAAZ,CAAiBf,IAAD,iBAC9B,QAAC,IAAD;AAEE,oBAAA,IAAI,EAAEA,IAFR;AAGE,oBAAA,YAAY,EAAED,UAHhB;AAIE,oBAAA,YAAY,EAAGiB,GAAD,IAAS;AACrB,4BAAMC,QAAQ,GAAGzB,KAAK,CAACuB,GAAN,CAAWL,IAAD,IAAU;AACnC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALgB,CAAjB;AAMAvB,sBAAAA,cAAc,CAAC8B,QAAD,CAAd;AACD;AAZH,qBACOjB,IAAI,CAACjB,EADZ;AAAA;AAAA;AAAA;AAAA,0BADc,CADlB,EAiBGS,KAAK,CAACuB,GAAN,CAAWf,IAAD,iBACT,QAAC,UAAD;AAEE,oBAAA,IAAI,EAAEA,IAFR;AAGE,oBAAA,YAAY,EAAGkB,KAAD,IAAU;AACtB,4BAAMC,YAAY,GAAG3B,KAAK,CAACiB,MAAN,CAAaW,MAAM,IAAIA,MAAM,CAACrC,EAAP,IAAamC,KAAK,CAACnC,EAA1C,CAArB;AACAU,sBAAAA,QAAQ,CAAC0B,YAAD,CAAR;AAED,qBAPH;AAQE,oBAAA,YAAY,EAAGH,GAAD,IAAS;AACrB,4BAAMC,QAAQ,GAAGzB,KAAK,CAACuB,GAAN,CAAWL,IAAD,IAAU;AACnC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALgB,CAAjB;AAMAjB,sBAAAA,QAAQ,CAACwB,QAAD,CAAR;AACD;AAhBH,qBACOjB,IAAI,CAACjB,EADZ;AAAA;AAAA;AAAA;AAAA,0BADD,CAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA8CE;AACE,cAAA,OAAO,EAAE,MAAM;AACb,sBAAMsC,MAAM,GAAG;AACbtC,kBAAAA,EAAE,EAAG,eAAcS,KAAK,CAAC8B,MAAO,EADnB;AAEb5B,kBAAAA,IAAI,EAAE;AAFO,iBAAf;AAIA,sBAAMuB,QAAQ,GAAG,CAAC,GAAGzB,KAAJ,EAAW6B,MAAX,CAAjB;AACA,sBAAME,UAAU,GAAG/B,KAAK,CAACiB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAAChB,IAAL,IAAa,EAApC,CAAnB;;AACA,oBAAI6B,UAAU,CAACD,MAAf,EAAuB;AACrB;AACD,iBAFD,MAEO;AACL7B,kBAAAA,QAAQ,CAACwB,QAAD,CAAR;AACD;AACF,eAbH;AAcE,cAAA,IAAI,EAAC,QAdP;AAeE,cAAA,SAAS,EAAC,4CAfZ;AAAA,sCAiBE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAmEE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,cAAf;AAA8B,gBAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,uCACE;AAAA,6BACG7B,kBAAkB,IAAIA,kBAAkB,CAAC2B,GAAnB,CAAwBb,GAAD,iBAC5C,QAAC,YAAD;AACE,oBAAA,GAAG,EAAEA,GADP;AAGE,oBAAA,YAAY,EAAED,SAHhB;AAIE,oBAAA,YAAY,EAAGe,GAAD,IAAS;AACrB,4BAAMQ,OAAO,GAAG7B,YAAY,CAACoB,GAAb,CAAkBL,IAAD,IAAU;AACzC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALe,CAAhB;AAMArB,sBAAAA,qBAAqB,CAACmC,OAAD,CAArB;AACD;AAZH,qBAEOtB,GAAG,CAACnB,EAFX;AAAA;AAAA;AAAA;AAAA,0BADqB,CADzB,EAkBGY,YAAY,CAACoB,GAAb,CAAkBb,GAAD,iBAChB,QAAC,SAAD;AACE,oBAAA,GAAG,EAAEA,GADP;AAGE,oBAAA,YAAY,EAAEgB,KAAK,IAAI;AACrB,4BAAMO,WAAW,GAAG9B,YAAY,CAACc,MAAb,CAAoBW,MAAM,IAAIA,MAAM,CAACrC,EAAP,IAAamC,KAAK,CAACnC,EAAjD,CAApB;AACAa,sBAAAA,eAAe,CAAC6B,WAAD,CAAf;AACD,qBANH;AAOE,oBAAA,YAAY,EAAGT,GAAD,IAAS;AACrB,4BAAMQ,OAAO,GAAG7B,YAAY,CAACoB,GAAb,CAAkBL,IAAD,IAAU;AACzC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALe,CAAhB;AAMAd,sBAAAA,eAAe,CAAC4B,OAAD,CAAf;AACD;AAfH,qBAEOtB,GAAG,CAACnB,EAFX;AAAA;AAAA;AAAA;AAAA,0BADD,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA8CE;AACE,cAAA,OAAO,EAAE,MAAM;AACb,sBAAMsC,MAAM,GAAG;AACbtC,kBAAAA,EAAE,EAAG,eAAcY,YAAY,CAAC2B,MAAO,EAD1B;AAEbJ,kBAAAA,KAAK,EAAE;AAFM,iBAAf;AAIA,sBAAMM,OAAO,GAAG,CAAC,GAAG7B,YAAJ,EAAkB0B,MAAlB,CAAhB;AACA,sBAAME,UAAU,GAAG5B,YAAY,CAACc,MAAb,CAChBC,IAAD,IAAUA,IAAI,CAAChB,IAAL,IAAa,EADN,CAAnB;;AAGA,oBAAI6B,UAAU,CAACD,MAAf,EAAuB;AACrB;AACD,iBAFD,MAEO;AACL1B,kBAAAA,eAAe,CAAC4B,OAAD,CAAf;AACD;AACF,eAfH;AAgBE,cAAA,IAAI,EAAC,QAhBP;AAiBE,cAAA,SAAS,EAAC,4CAjBZ;AAAA,sCAmBE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnEF,eAuIE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,gBAAf;AAAgC,gBAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,uCACE;AAAA,6BACGlC,gBAAgB,IAAIA,gBAAgB,CAACyB,GAAjB,CAAsBH,GAAD,iBACxC,QAAC,UAAD;AAEE,oBAAA,UAAU,EAAEA,GAFd;AAGE,oBAAA,YAAY,EAAET,SAHhB;AAIE,oBAAA,YAAY,EAAGa,GAAD,IAAS;AACrB,4BAAMU,QAAQ,GAAG7B,UAAU,CAACkB,GAAX,CAAgBL,IAAD,IAAU;AACxC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALgB,CAAjB;AAMAnB,sBAAAA,mBAAmB,CAACmC,QAAD,CAAnB;AACD;AAZH,qBACOd,GAAG,CAAC7B,EADX;AAAA;AAAA;AAAA;AAAA,0BADmB,CADvB,EAkBGc,UAAU,CAACkB,GAAX,CAAgBH,GAAD,iBACd,QAAC,gBAAD;AAEE,oBAAA,UAAU,EAAEA,GAFd;AAGE,oBAAA,YAAY,EAAEM,KAAK,IAAI;AACrB,4BAAMS,iBAAiB,GAAG9B,UAAU,CAACY,MAAX,CAAkBW,MAAM,IAAIA,MAAM,CAACrC,EAAP,IAAamC,KAAK,CAACnC,EAA/C,CAA1B;AACAe,sBAAAA,aAAa,CAAC6B,iBAAD,CAAb;AACD,qBANH;AAOE,oBAAA,YAAY,EAAGX,GAAD,IAAS;AACrB,4BAAMU,QAAQ,GAAG7B,UAAU,CAACkB,GAAX,CAAgBL,IAAD,IAAU;AACxC,4BAAIA,IAAI,CAAC3B,EAAL,IAAWiC,GAAG,CAACjC,EAAnB,EAAuB;AACrB2B,0BAAAA,IAAI,CAAChB,IAAL,GAAYsB,GAAG,CAACtB,IAAhB;AACD;;AACD,+BAAOgB,IAAP;AACD,uBALgB,CAAjB;AAMAZ,sBAAAA,aAAa,CAAC4B,QAAD,CAAb;AACD;AAfH,qBACOd,GAAG,CAAC7B,EADX;AAAA;AAAA;AAAA;AAAA,0BADD,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA8CE;AACE,cAAA,OAAO,EAAE,MAAM;AACb,sBAAMsC,MAAM,GAAG;AACbtC,kBAAAA,EAAE,EAAG,eAAcc,UAAU,CAACyB,MAAO,EADxB;AAEbJ,kBAAAA,KAAK,EAAE;AAFM,iBAAf;AAIA,sBAAMU,OAAO,GAAG,CAAC,GAAG/B,UAAJ,EAAgBwB,MAAhB,CAAhB;AACA,sBAAME,UAAU,GAAG1B,UAAU,CAACY,MAAX,CAChBC,IAAD,IAAUA,IAAI,CAAChB,IAAL,IAAa,EADN,CAAnB;;AAGA,oBAAI6B,UAAU,CAACD,MAAf,EAAuB;AACrB;AACD,iBAFD,MAEO;AACLxB,kBAAAA,aAAa,CAAC8B,OAAD,CAAb;AACD;AACF,eAfH;AAgBE,cAAA,IAAI,EAAC,QAhBP;AAiBE,cAAA,SAAS,EAAC,4CAjBZ;AAAA,sCAmBE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvIF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAmNS,GAnNT;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmOD,CA7VM;;GAAM/D,M;UACUhB,c,EACAA,c,EACGA,c,EACKA,c,EACPA,c,EACMA,c,EACPE,qB,EACMD,2B,EACCE,4B,EACTE,mB,EACOC,0B,EACDF,yB,EACJO,qB,EACMD,2B,EACEE,4B,EACOJ,yB,EAGPC,kB,EACKF,uB;;;KApBvBS,M;AA+Vb,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n} from \"services/courses\";\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n\n  const [goals, setGoals] = useState([{ id: \"answerList--0\", name: \"\" }]);\n  const [requirements, setRequirements] = useState([\n    { id: \"answerList--0\", name: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState([\n    { id: \"answerList--0\", name: \"\" },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n     setExperienceUpdate(selectedExperiences)\n     setGoalsUpdate(selectedGoals)\n     setRequirementsUpdate(selectedRequirements)\n  }, [selectedExperiences, selectedGoals, selectedRequirements]);\n\n  useEffect(() => {\n    const goalResults = goals;\n    goalResults && goalResults.forEach(goal => {\n      if(goal.name) {\n        createGoal({\n          name: goal.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = goalResults.filter(item => item.id != goal.id)\n          setGoals(results)\n        } )\n      }\n    })\n\n    const experienceResults = experience;\n    experienceResults && experienceResults.forEach(exp => {\n      if(exp.name) {\n        createExperience({\n          name: exp.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = experienceResults.filter(item => item.id != exp.id)\n          setExperience(results)\n        } )\n      }\n    })\n\n    const reqResults = requirements;\n    reqResults && reqResults.forEach(req => {\n      if(req.name) {\n        createRequirement({\n          name: req.name,\n          course: locationPayload.id\n        }).then(() => {\n          const results = reqResults.filter(item => item.id != req.id)\n          setRequirements(results)\n        } )\n      }\n    })\n\n    const reqUpdateResults = requirementsUpdate;\n    requirementsUpdate && requirementsUpdate.forEach(req => {\n      if(req.name) {\n        editRequirement({\n          ...req,\n          id: locationPayload.id\n        }).then()\n      }\n    })\n\n    experienceUpdate && experienceUpdate.forEach(req => {\n      if(req.name) {\n        editExperience({\n          ...req,\n          id: locationPayload.id\n        })\n      }\n    })\n\n    goalsUpdate && goalsUpdate.forEach(item => {\n      if(item.name) {\n        editRequirement({\n          ...item,\n          id: locationPayload.id\n        })\n      }\n    })\n  }, [selectedSave])\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate && goalsUpdate.map((goal) => (\n                      <Goal\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={removeGoal}\n                        handleChange={(obj) => {\n                          const newGoals = goals.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setGoalsUpdate(newGoals);\n                        }}\n                      />\n                    ))}\n                    {goals.map((goal) => (\n                      <GoalCreate\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={(value)=> {\n                          const updatedGoals = goals.filter(result => result.id != value.id)\n                          setGoals(updatedGoals)\n                          \n                        }}\n                        handleChange={(obj) => {\n                          const newGoals = goals.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${goals.length}`,\n                    name: \"\",\n                  };\n                  const newGoals = [...goals, answer];\n                  const emptyValue = goals.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate && requirementsUpdate.map((req) => (\n                      <Requirements\n                        req={req}\n                        key={req.id}\n                        handleRemove={removeReq}\n                        handleChange={(obj) => {\n                          const newReqs = requirements.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setRequirementsUpdate(newReqs);\n                        }}\n                      />\n                    ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={value => {\n                          const updatedReqs = requirements.filter(result => result.id != value.id)\n                          setRequirements(updatedReqs)\n                        }}\n                        handleChange={(obj) => {\n                          const newReqs = requirements.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setRequirements(newReqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${requirements.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...requirements, answer];\n                  const emptyValue = requirements.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate && experienceUpdate.map((exp) => (\n                      <Experience\n                        key={exp.id}\n                        experience={exp}\n                        handleRemove={removeExp}\n                        handleChange={(obj) => {\n                          const newExpex = experience.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setExperienceUpdate(newExpex);\n                        }}\n                      />\n                    ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp.id}\n                        experience={exp}\n                        handleRemove={value => {\n                          const updatedExperience = experience.filter(result => result.id != value.id)\n                          setExperience(updatedExperience)\n                        }}\n                        handleChange={(obj) => {\n                          const newExpex = experience.map((item) => {\n                            if (item.id == obj.id) {\n                              item.name = obj.name;\n                            }\n                            return item;\n                          });\n                          setExperience(newExpex);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${experience.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...experience, answer];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}