{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport glamorDefault, * as glamorExports from 'glamor';\nimport React from 'react';\nimport { equalColumnLayoutCSS as stylesheet } from '../css/index';\nimport { equalColumnLayout as vars } from '../vars/index';\nvar glamor = glamorDefault || glamorExports;\n\nvar styleLayout = function () {\n  return glamor.css(stylesheet['.psds-equal-column-layout']);\n};\n\nvar styleColumn = function (count) {\n  var label = 'psds-equal-column-layout__column';\n  var labelCount = label + \"--count-\" + count;\n  return glamor.compose(glamor.css(stylesheet[\".\" + label]), glamor.css(stylesheet[\".\" + labelCount]), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)'][\".\" + labelCount])));\n};\n\nvar EqualColumnLayout = function (props) {\n  var _a = props.count,\n      count = _a === void 0 ? vars.counts.four : _a,\n      rest = __rest(props, [\"count\"]);\n\n  var useCustomMarkup = React.Children.count(props.children) === 1;\n\n  var parentProps = __assign(__assign({}, styleLayout()), rest);\n\n  var children = React.Children.map(useCustomMarkup ? props.children.props.children : props.children, function (child) {\n    return React.cloneElement(child, styleColumn(count));\n  });\n  return useCustomMarkup ? React.cloneElement(props.children, parentProps, children) : React.createElement(\"div\", __assign({}, parentProps), children);\n};\n\nEqualColumnLayout.displayName = 'EqualColumnLayout';\nEqualColumnLayout.counts = vars.counts;\nexport var counts = vars.counts;\nexport default EqualColumnLayout;","map":{"version":3,"sources":["../../../src/react/equal-column-layout.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,aAAP,EAAsB,KAAK,aAA3B,MAA8C,QAA9C;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,oBAAoB,IAAI,UAAjC,QAAmD,cAAnD;AACA,SAAS,iBAAiB,IAAI,IAA9B,QAA0C,eAA1C;AAEA,IAAM,MAAM,GAAG,aAAa,IAAI,aAAhC;;AAEA,IAAM,WAAW,GAAG,YAAA;AAAM,SAAA,MAAM,CAAC,GAAP,CAAW,UAAU,CAArB,2BAAqB,CAArB,CAAA;AAAmD,CAA7E;;AAEA,IAAM,WAAW,GAAG,UAAC,KAAD,EAAmC;AACrD,MAAM,KAAK,GAAG,kCAAd;AACA,MAAM,UAAU,GAAM,KAAK,GAAA,UAAL,GAAgB,KAAtC;AAEA,SAAO,MAAM,CAAC,OAAP,CACL,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,MAAI,KAAL,CAArB,CADK,EAEL,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,MAAI,UAAL,CAArB,CAFK,EAIL,MAAM,CAAC,KAAP,CACE,oBADF,EAEE,MAAM,CAAC,GAAP,CAAW,UAAU,CAAC,2BAAD,CAAV,CAAwC,MAAI,UAA5C,CAAX,CAFF,CAJK,CAAP;AASD,CAbD;;AAqBA,IAAM,iBAAiB,GACM,UAAA,KAAA,EAAK;AACxB,MAAA,EAAA,GAAsC,KAAK,CAAnB,KAAxB;AAAA,MAAA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAI,CAAC,MAAL,CAAY,IAAf,GAAmB,EAAxB;AAAA,MAA6B,IAAI,GAAA,MAAA,CAAK,KAAL,EAAnC,CAAA,OAAA,CAAmC,CAAjC;;AACR,MAAM,eAAe,GAAG,KAAK,CAAC,QAAN,CAAe,KAAf,CAAqB,KAAK,CAAC,QAA3B,MAAyC,CAAjE;;AACA,MAAM,WAAW,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACZ,WAAW,EADC,CAAA,EAEZ,IAFY,CAAjB;;AAIA,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CACf,eAAe,GACV,KAAK,CAAC,QAAN,CAAsC,KAAtC,CAA4C,QADlC,GAEX,KAAK,CAAC,QAHK,EAIf,UAAA,KAAA,EAAK;AAAI,WAAA,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B,WAAW,CAArC,KAAqC,CAArC,CAAA;AAA6C,GAJvC,CAAjB;AAMA,SAAO,eAAe,GACpB,KAAK,CAAC,YAAN,CACE,KAAK,CAAC,QADR,EAEE,WAFF,EAGE,QAHF,CADoB,GAOpB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,WAAT,CAAA,EAAuB,QAAvB,CAPF;AASD,CAvBD;;AAwBA,iBAAiB,CAAC,WAAlB,GAAgC,mBAAhC;AACA,iBAAiB,CAAC,MAAlB,GAA2B,IAAI,CAAC,MAAhC;AAEA,OAAO,IAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACP,eAAe,iBAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport glamorDefault, * as glamorExports from 'glamor';\nimport React from 'react';\nimport { equalColumnLayoutCSS as stylesheet } from '../css/index';\nimport { equalColumnLayout as vars } from '../vars/index';\nvar glamor = glamorDefault || glamorExports;\nvar styleLayout = function () { return glamor.css(stylesheet['.psds-equal-column-layout']); };\nvar styleColumn = function (count) {\n    var label = 'psds-equal-column-layout__column';\n    var labelCount = label + \"--count-\" + count;\n    return glamor.compose(glamor.css(stylesheet[\".\" + label]), glamor.css(stylesheet[\".\" + labelCount]), glamor.media('(min-width: 769px)', glamor.css(stylesheet['@media (min-width: 769px)'][\".\" + labelCount])));\n};\nvar EqualColumnLayout = function (props) {\n    var _a = props.count, count = _a === void 0 ? vars.counts.four : _a, rest = __rest(props, [\"count\"]);\n    var useCustomMarkup = React.Children.count(props.children) === 1;\n    var parentProps = __assign(__assign({}, styleLayout()), rest);\n    var children = React.Children.map(useCustomMarkup\n        ? props.children.props.children\n        : props.children, function (child) { return React.cloneElement(child, styleColumn(count)); });\n    return useCustomMarkup ? (React.cloneElement(props.children, parentProps, children)) : (React.createElement(\"div\", __assign({}, parentProps), children));\n};\nEqualColumnLayout.displayName = 'EqualColumnLayout';\nEqualColumnLayout.counts = vars.counts;\nexport var counts = vars.counts;\nexport default EqualColumnLayout;\n//# sourceMappingURL=equal-column-layout.js.map"]},"metadata":{},"sourceType":"module"}