{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeader/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { AppBar, AppBarSection, Box, FillButton, TextButton } from 'components/overrides';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { formatUrlWithRedirect } from '../GlobalHeader/urlHelpers';\nimport { AppHeaderDropdown } from './AppHeaderElements/AppHeaderDropdown';\nimport { AppHeaderLink } from './AppHeaderElements/AppHeaderLink';\nimport { AppHeaderLogo } from './AppHeaderElements/AppHeaderLogo';\nimport { focusStyles, textButtonStyles, hoverStyles } from './AppHeaderElements/SharedStyles';\nimport { useHeaderSearch } from './Search/useHeaderSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const StyledAppBar = styled(AppBar)`\n  padding: 0.75rem 0;\n  box-shadow: none;\n  width: 100%;\n`;\n_c = StyledAppBar;\nexport const AppHeaderTextButton = styled(TextButton)(textButtonStyles);\nexport const AppHeaderFillButton = styled(FillButton)(focusStyles);\nconst AppHeaderLinkButtonOuter = styled.a`\n  text-decoration: none;\n  color: ${({\n  theme\n}) => theme.colors.navy};\n\n  ${hoverStyles}\n \n`;\nexport const mapItemToElement = (action, item, redirectParam) => {\n  switch (item.type) {\n    case 'logo':\n      return /*#__PURE__*/_jsxDEV(AppHeaderLogo, {\n        action: action,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n\n    case 'link':\n      return /*#__PURE__*/_jsxDEV(AppHeaderLink, {\n        action: action,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n\n    case 'dropdown':\n    case 'profile-dropdown':\n      return /*#__PURE__*/_jsxDEV(AppHeaderDropdown, {\n        action: action,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n\n    case 'render-element':\n      return item.renderElement();\n\n    case 'text-button':\n      return /*#__PURE__*/_jsxDEV(AppHeaderTextButton, {\n        onClick: event => action(event, item),\n        \"data-testid\": item.dataTestId,\n        href: item.redirect ? formatUrlWithRedirect(item.href, redirectParam) : item.href,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n\n    case 'fill-button':\n      return /*#__PURE__*/_jsxDEV(AppHeaderFillButton, {\n        \"data-testid\": item.dataTestId,\n        href: item.redirect ? formatUrlWithRedirect(item.href, redirectParam) : item.href,\n        onClick: event => action(event, item),\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n  }\n};\nexport const AppHeader = ({\n  action,\n  items,\n  redirectParam,\n  search\n}) => {\n  _s();\n\n  const mapItemsToElement = items => {\n    return items.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n      ml: index === 0 ? 0 : 8,\n      mr: index === items.length - 1 ? 0 : 8,\n      children: mapItemToElement(action, item, redirectParam)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this));\n  };\n\n  const [searchButton, searchPane] = useHeaderSearch(search);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledAppBar, {\n      children: [/*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"left\",\n        children: mapItemsToElement(items.left)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBarSection, {\n        position: \"right\",\n        children: mapItemsToElement([searchButton, ...items.right])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), searchPane]\n  }, void 0, true);\n};\n\n_s(AppHeader, \"Ib0trXcj4gwCTam1PQ22OoNzqFw=\", false, function () {\n  return [useHeaderSearch];\n});\n\n_c2 = AppHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledAppBar\");\n$RefreshReg$(_c2, \"AppHeader\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeader/index.tsx"],"names":["AppBar","AppBarSection","Box","FillButton","TextButton","styled","React","formatUrlWithRedirect","AppHeaderDropdown","AppHeaderLink","AppHeaderLogo","focusStyles","textButtonStyles","hoverStyles","useHeaderSearch","StyledAppBar","AppHeaderTextButton","AppHeaderFillButton","AppHeaderLinkButtonOuter","a","theme","colors","navy","mapItemToElement","action","item","redirectParam","type","renderElement","event","dataTestId","redirect","href","text","AppHeader","items","search","mapItemsToElement","map","index","length","id","searchButton","searchPane","left","right"],"mappings":"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","sourcesContent":["import {\n  AppBar,\n  AppBarSection,\n  Box,\n  FillButton,\n  TextButton,\n} from 'components/overrides';\nimport styled from '@emotion/styled';\nimport React, { ReactNode } from 'react';\n\nimport { formatUrlWithRedirect } from '../GlobalHeader/urlHelpers';\nimport { AppHeaderDropdown } from './AppHeaderElements/AppHeaderDropdown';\nimport { AppHeaderLink } from './AppHeaderElements/AppHeaderLink';\nimport { AppHeaderLogo } from './AppHeaderElements/AppHeaderLogo';\nimport { focusStyles, textButtonStyles, hoverStyles } from './AppHeaderElements/SharedStyles';\nimport {\n  AppHeaderClickHandler,\n  AppHeaderItem,\n} from './AppHeaderElements/types';\nimport { AppHeaderSearch, useHeaderSearch } from './Search/useHeaderSearch';\nimport { FormattedAppHeaderItems } from './types';\n\nexport type AppHeaderProps = {\n  action: AppHeaderClickHandler;\n  items: FormattedAppHeaderItems;\n  redirectParam?: string;\n  search: AppHeaderSearch;\n};\n\nexport const StyledAppBar = styled(AppBar)`\n  padding: 0.75rem 0;\n  box-shadow: none;\n  width: 100%;\n`;\n\nexport const AppHeaderTextButton = styled(TextButton)(textButtonStyles);\nexport const AppHeaderFillButton = styled(FillButton)(focusStyles);\n\nconst AppHeaderLinkButtonOuter = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.navy};\n\n  ${hoverStyles}\n \n`;\n\nexport const mapItemToElement = (\n  action: AppHeaderClickHandler,\n  item: AppHeaderItem,\n  redirectParam?: string\n): ReactNode => {\n  switch (item.type) {\n    case 'logo':\n      return <AppHeaderLogo action={action} item={item} />;\n    case 'link':\n      return <AppHeaderLink action={action} item={item} />;\n    case 'dropdown':\n    case 'profile-dropdown':\n      return <AppHeaderDropdown action={action} item={item} />;\n    case 'render-element':\n      return item.renderElement();\n    case 'text-button':\n      return (\n        <AppHeaderTextButton\n          onClick={(event: React.MouseEvent) => action(event, item)}\n          data-testid={item.dataTestId}\n          href={\n            item.redirect\n              ? formatUrlWithRedirect(item.href, redirectParam)\n              : item.href\n          }\n        >\n          {item.text}\n        </AppHeaderTextButton>\n      );\n    case 'fill-button':\n      return (\n        <AppHeaderFillButton\n          data-testid={item.dataTestId}\n          href={\n            item.redirect\n              ? formatUrlWithRedirect(item.href, redirectParam)\n              : item.href\n          }\n          onClick={(event: React.MouseEvent) => action(event, item)}\n        >\n          {item.text}\n        </AppHeaderFillButton>\n      );\n  }\n};\n\nexport const AppHeader: React.FC<AppHeaderProps> = ({\n  action,\n  items,\n  redirectParam,\n  search,\n}) => {\n  const mapItemsToElement = <T extends AppHeaderItem[]>(items: T) => {\n    return items.map((item, index) => (\n      <Box\n        key={item.id}\n        ml={index === 0 ? 0 : 8}\n        mr={index === items.length - 1 ? 0 : 8}\n      >\n        {mapItemToElement(action, item, redirectParam)}\n      </Box>\n    ));\n  };\n\n  const [searchButton, searchPane] = useHeaderSearch(search);\n\n  return (\n    <>\n      <StyledAppBar>\n        <AppBarSection position=\"left\">\n          {mapItemsToElement(items.left)}\n        </AppBarSection>\n        <AppBarSection position=\"right\">\n          {mapItemsToElement([searchButton, ...items.right])}\n        </AppBarSection>\n      </StyledAppBar>\n      {searchPane}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}