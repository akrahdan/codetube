{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Portal from './portal';\nimport { store } from 'store'; // import { Router } from 'react-router'\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { positions, Provider as AlertProvider } from \"react-alert\";\nimport { Provider } from 'react-redux';\nimport { AlertMessage } from 'portal/scenes/AlertMessage';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(Router, {\n  forceRefresh: true,\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(AlertProvider, {\n      template: AlertMessage,\n      ...options,\n      children: /*#__PURE__*/_jsxDEV(Portal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/index.tsx"],"names":["React","ReactDOM","Portal","store","BrowserRouter","Router","createBrowserHistory","positions","Provider","AlertProvider","AlertMessage","reportWebVitals","history","options","timeout","position","TOP_CENTER","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,OAAtB,C,CACA;;AAEA,SAASC,aAAa,IAAIC,MAA1B,QAAuC,kBAAvC;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAASC,SAAT,EAAiCC,QAAQ,IAAIC,aAA7C,QAAkE,aAAlE;AAEA,SAASD,QAAT,QAAyB,aAAzB;AACA,SAASE,YAAT,QAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;AACA,MAAMO,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,IADK;AAEdC,EAAAA,QAAQ,EAAER,SAAS,CAACS;AAFN,CAAhB;AAKAf,QAAQ,CAACgB,MAAT,eACE,QAAC,MAAD;AAAQ,EAAA,YAAY,MAApB;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEd,KAAjB;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEO,YAAzB;AAAA,SAA2CG,OAA3C;AAAA,6BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EASEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF,E,CAYA;AACA;AACA;;AACAR,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Portal from './portal'\nimport { store } from 'store'\n// import { Router } from 'react-router'\n\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport {createBrowserHistory} from 'history'\nimport { positions, transitions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { Provider } from 'react-redux'\nimport { AlertMessage } from 'portal/scenes/AlertMessage';\nimport reportWebVitals from './reportWebVitals';\nconst history = createBrowserHistory()\nconst options = {\n  timeout: 5000,\n  position: positions.TOP_CENTER,\n  \n};\nReactDOM.render(\n  <Router forceRefresh >\n    <Provider store={store}>\n      <AlertProvider template={AlertMessage} {...options}>\n       <Portal />\n      </AlertProvider>\n     \n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}