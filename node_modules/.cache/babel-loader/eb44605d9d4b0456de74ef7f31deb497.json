{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getItemsCount, invariant } from '@algolia/autocomplete-shared';\nimport { getCompletion } from './getCompletion';\nimport { getNextActiveItemId } from './utils';\nexport var stateReducer = function stateReducer(state, action) {\n  switch (action.type) {\n    case 'setActiveItemId':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload\n        });\n      }\n\n    case 'setQuery':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          query: action.payload,\n          completion: null\n        });\n      }\n\n    case 'setCollections':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          collections: action.payload\n        });\n      }\n\n    case 'setIsOpen':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isOpen: action.payload\n        });\n      }\n\n    case 'setStatus':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.payload\n        });\n      }\n\n    case 'setContext':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          context: _objectSpread(_objectSpread({}, state.context), action.payload)\n        });\n      }\n\n    case 'ArrowDown':\n      {\n        var nextState = _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload.hasOwnProperty('nextActiveItemId') ? action.payload.nextActiveItemId : getNextActiveItemId(1, state.activeItemId, getItemsCount(state), action.props.defaultActiveItemId)\n        });\n\n        return _objectSpread(_objectSpread({}, nextState), {}, {\n          completion: getCompletion({\n            state: nextState\n          })\n        });\n      }\n\n    case 'ArrowUp':\n      {\n        var _nextState = _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: getNextActiveItemId(-1, state.activeItemId, getItemsCount(state), action.props.defaultActiveItemId)\n        });\n\n        return _objectSpread(_objectSpread({}, _nextState), {}, {\n          completion: getCompletion({\n            state: _nextState\n          })\n        });\n      }\n\n    case 'Escape':\n      {\n        if (state.isOpen) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            activeItemId: null,\n            isOpen: false,\n            completion: null\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: null,\n          query: '',\n          status: 'idle',\n          collections: []\n        });\n      }\n\n    case 'submit':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: null,\n          isOpen: false,\n          status: 'idle'\n        });\n      }\n\n    case 'reset':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true ? action.props.defaultActiveItemId : null,\n          status: 'idle',\n          query: ''\n        });\n      }\n\n    case 'focus':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.props.defaultActiveItemId,\n          isOpen: (action.props.openOnFocus || Boolean(state.query)) && action.props.shouldPanelOpen({\n            state: state\n          })\n        });\n      }\n\n    case 'blur':\n      {\n        if (action.props.debug) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isOpen: false,\n          activeItemId: null\n        });\n      }\n\n    case 'mousemove':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload\n        });\n      }\n\n    case 'mouseleave':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.props.defaultActiveItemId\n        });\n      }\n\n    default:\n      invariant(false, \"The reducer action \".concat(JSON.stringify(action.type), \" is not supported.\"));\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-core/dist/esm/stateReducer.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getItemsCount","invariant","getCompletion","getNextActiveItemId","stateReducer","state","action","type","activeItemId","payload","query","completion","collections","isOpen","status","context","nextState","hasOwnProperty","nextActiveItemId","props","defaultActiveItemId","_nextState","openOnFocus","Boolean","shouldPanelOpen","debug","concat","JSON","stringify"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getItemsCount, invariant } from '@algolia/autocomplete-shared';\nimport { getCompletion } from './getCompletion';\nimport { getNextActiveItemId } from './utils';\nexport var stateReducer = function stateReducer(state, action) {\n  switch (action.type) {\n    case 'setActiveItemId':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload\n        });\n      }\n\n    case 'setQuery':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          query: action.payload,\n          completion: null\n        });\n      }\n\n    case 'setCollections':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          collections: action.payload\n        });\n      }\n\n    case 'setIsOpen':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isOpen: action.payload\n        });\n      }\n\n    case 'setStatus':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.payload\n        });\n      }\n\n    case 'setContext':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          context: _objectSpread(_objectSpread({}, state.context), action.payload)\n        });\n      }\n\n    case 'ArrowDown':\n      {\n        var nextState = _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload.hasOwnProperty('nextActiveItemId') ? action.payload.nextActiveItemId : getNextActiveItemId(1, state.activeItemId, getItemsCount(state), action.props.defaultActiveItemId)\n        });\n\n        return _objectSpread(_objectSpread({}, nextState), {}, {\n          completion: getCompletion({\n            state: nextState\n          })\n        });\n      }\n\n    case 'ArrowUp':\n      {\n        var _nextState = _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: getNextActiveItemId(-1, state.activeItemId, getItemsCount(state), action.props.defaultActiveItemId)\n        });\n\n        return _objectSpread(_objectSpread({}, _nextState), {}, {\n          completion: getCompletion({\n            state: _nextState\n          })\n        });\n      }\n\n    case 'Escape':\n      {\n        if (state.isOpen) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            activeItemId: null,\n            isOpen: false,\n            completion: null\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: null,\n          query: '',\n          status: 'idle',\n          collections: []\n        });\n      }\n\n    case 'submit':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: null,\n          isOpen: false,\n          status: 'idle'\n        });\n      }\n\n    case 'reset':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true ? action.props.defaultActiveItemId : null,\n          status: 'idle',\n          query: ''\n        });\n      }\n\n    case 'focus':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.props.defaultActiveItemId,\n          isOpen: (action.props.openOnFocus || Boolean(state.query)) && action.props.shouldPanelOpen({\n            state: state\n          })\n        });\n      }\n\n    case 'blur':\n      {\n        if (action.props.debug) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isOpen: false,\n          activeItemId: null\n        });\n      }\n\n    case 'mousemove':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.payload\n        });\n      }\n\n    case 'mouseleave':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          activeItemId: action.props.defaultActiveItemId\n        });\n      }\n\n    default:\n      invariant(false, \"The reducer action \".concat(JSON.stringify(action.type), \" is not supported.\"));\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}