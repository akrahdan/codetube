{"ast":null,"code":"import { isString } from 'lodash';\nimport React from 'react';\nimport { Radio, RadioGroup } from '../../../Form';\nexport var GridFormRadioGroupInput = function GridFormRadioGroupInput(_ref) {\n  var _field$ariaLabel;\n\n  var className = _ref.className,\n      field = _ref.field,\n      register = _ref.register,\n      setValue = _ref.setValue,\n      showRequired = _ref.showRequired;\n  var ariaLabel = (_field$ariaLabel = field.ariaLabel) !== null && _field$ariaLabel !== void 0 ? _field$ariaLabel : isString(field.label) ? field.label : undefined;\n  return /*#__PURE__*/React.createElement(RadioGroup, {\n    className: className,\n    htmlForPrefix: field.name,\n    name: field.name,\n    role: \"radiogroup\",\n    \"aria-label\": ariaLabel,\n    \"aria-required\": showRequired,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      var value = event.target.value;\n      setValue(field.name, value);\n      (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, value);\n    }\n  }, field.options.map(function (_ref2) {\n    var label = _ref2.label,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(Radio, {\n      disabled: field.disabled,\n      key: value,\n      label: label,\n      ref: register(field.validation),\n      value: value,\n      id: field.id\n    });\n  }));\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut/dist/GridForm/GridFormInputGroup/GridFormRadioGroupInput/index.js"],"names":["isString","React","Radio","RadioGroup","GridFormRadioGroupInput","_ref","_field$ariaLabel","className","field","register","setValue","showRequired","ariaLabel","label","undefined","createElement","htmlForPrefix","name","role","onChange","event","_field$onUpdate","value","target","onUpdate","call","options","map","_ref2","disabled","key","ref","validation","id"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,eAAlC;AACA,OAAO,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,IAAjC,EAAuC;AAC1E,MAAIC,gBAAJ;;AAEA,MAAIC,SAAS,GAAGF,IAAI,CAACE,SAArB;AAAA,MACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;AAAA,MAEIC,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAAA,MAIIC,YAAY,GAAGN,IAAI,CAACM,YAJxB;AAKA,MAAIC,SAAS,GAAG,CAACN,gBAAgB,GAAGE,KAAK,CAACI,SAA1B,MAAyC,IAAzC,IAAiDN,gBAAgB,KAAK,KAAK,CAA3E,GAA+EA,gBAA/E,GAAkGN,QAAQ,CAACQ,KAAK,CAACK,KAAP,CAAR,GAAwBL,KAAK,CAACK,KAA9B,GAAsCC,SAAxJ;AACA,SAAO,aAAab,KAAK,CAACc,aAAN,CAAoBZ,UAApB,EAAgC;AAClDI,IAAAA,SAAS,EAAEA,SADuC;AAElDS,IAAAA,aAAa,EAAER,KAAK,CAACS,IAF6B;AAGlDA,IAAAA,IAAI,EAAET,KAAK,CAACS,IAHsC;AAIlDC,IAAAA,IAAI,EAAE,YAJ4C;AAKlD,kBAAcN,SALoC;AAMlD,qBAAiBD,YANiC;AAOlDQ,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC,UAAIC,eAAJ;;AAEA,UAAIC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAAzB;AACAZ,MAAAA,QAAQ,CAACF,KAAK,CAACS,IAAP,EAAaK,KAAb,CAAR;AACA,OAACD,eAAe,GAAGb,KAAK,CAACgB,QAAzB,MAAuC,IAAvC,IAA+CH,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqFA,eAAe,CAACI,IAAhB,CAAqBjB,KAArB,EAA4Bc,KAA5B,CAArF;AACD;AAbiD,GAAhC,EAcjBd,KAAK,CAACkB,OAAN,CAAcC,GAAd,CAAkB,UAAUC,KAAV,EAAiB;AACpC,QAAIf,KAAK,GAAGe,KAAK,CAACf,KAAlB;AAAA,QACIS,KAAK,GAAGM,KAAK,CAACN,KADlB;AAEA,WAAO,aAAarB,KAAK,CAACc,aAAN,CAAoBb,KAApB,EAA2B;AAC7C2B,MAAAA,QAAQ,EAAErB,KAAK,CAACqB,QAD6B;AAE7CC,MAAAA,GAAG,EAAER,KAFwC;AAG7CT,MAAAA,KAAK,EAAEA,KAHsC;AAI7CkB,MAAAA,GAAG,EAAEtB,QAAQ,CAACD,KAAK,CAACwB,UAAP,CAJgC;AAK7CV,MAAAA,KAAK,EAAEA,KALsC;AAM7CW,MAAAA,EAAE,EAAEzB,KAAK,CAACyB;AANmC,KAA3B,CAApB;AAQD,GAXE,CAdiB,CAApB;AA0BD,CAnCM","sourcesContent":["import { isString } from 'lodash';\nimport React from 'react';\nimport { Radio, RadioGroup } from '../../../Form';\nexport var GridFormRadioGroupInput = function GridFormRadioGroupInput(_ref) {\n  var _field$ariaLabel;\n\n  var className = _ref.className,\n      field = _ref.field,\n      register = _ref.register,\n      setValue = _ref.setValue,\n      showRequired = _ref.showRequired;\n  var ariaLabel = (_field$ariaLabel = field.ariaLabel) !== null && _field$ariaLabel !== void 0 ? _field$ariaLabel : isString(field.label) ? field.label : undefined;\n  return /*#__PURE__*/React.createElement(RadioGroup, {\n    className: className,\n    htmlForPrefix: field.name,\n    name: field.name,\n    role: \"radiogroup\",\n    \"aria-label\": ariaLabel,\n    \"aria-required\": showRequired,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      var value = event.target.value;\n      setValue(field.name, value);\n      (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, value);\n    }\n  }, field.options.map(function (_ref2) {\n    var label = _ref2.label,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(Radio, {\n      disabled: field.disabled,\n      key: value,\n      label: label,\n      ref: register(field.validation),\n      value: value,\n      id: field.id\n    });\n  }));\n};"]},"metadata":{},"sourceType":"module"}