{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{capitalize}from'lodash';import React,{useEffect}from'react';import{CurriculumCard}from'components/CurriculumCard';// import { trackUserImpression } from '~/libs/eventTracking';\nimport{pathPagePath}from'libs/urlHelpers';// import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var PathCard=function PathCard(_ref){var path=_ref.path,project=_ref.project,trackingData=_ref.trackingData,useReduxRouter=_ref.useReduxRouter,isFullSize=_ref.isFullSize,dataTestId=_ref.dataTestId,headingLevel=_ref.headingLevel,onClick=_ref.onClick;useEffect(function(){if(trackingData.page_name==='article'){var page_name=trackingData.page_name,slug=trackingData.slug,target=trackingData.target;// trackUserImpression({ page_name, slug: slug!, target });\n}},[trackingData]);// const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\nvar pathHref=pathPagePath(project.slug);var linkProps=_objectSpread({href:pathHref,trackingData:trackingData,onClick:onClick},useReduxRouter&&{routeTo:pathHref});// const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n// const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n// const progressState = userCompletedContainerIds?.[path.id]\n//   ? 'completed'\n//   : userEnrolledPathIds?.includes(path.id)\n//   ? 'inProgress'\n//   : undefined;\nvar progressState=undefined;var difficulty=project.difficulty==='Intermediate'?1:0;var scope='lesson';var scopeCount=28;return/*#__PURE__*/_jsx(CurriculumCard,{image:project.thumbnail_url,text:\"\".concat(capitalize(project.goal),\" Path\"),showProLogo:true,title:project.title,tag:\"React\",tagColor:'green',difficulty:1,scope:scope,scopeCount:scopeCount,linkProps:linkProps,progressState:progressState,isFullSize:true,dataTestId:dataTestId||\"path-card-\".concat(project.slug),headingLevel:headingLevel});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/PathCard/index.tsx"],"names":["capitalize","React","useEffect","CurriculumCard","pathPagePath","PathCard","path","project","trackingData","useReduxRouter","isFullSize","dataTestId","headingLevel","onClick","page_name","slug","target","pathHref","linkProps","href","routeTo","progressState","undefined","difficulty","scope","scopeCount","thumbnail_url","goal","title"],"mappings":"sKAEA,OAASA,UAAT,KAA2B,QAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA,OAASC,cAAT,KAA+B,2BAA/B,CAGA;AACA,OAASC,YAAT,KAA6B,iBAA7B,CACA;AACA;AACA;AACA;AACA;AACA;2CAuBA,MAAO,IAAMC,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAS3C,IARJC,CAAAA,IAQI,MARJA,IAQI,CAPJC,OAOI,MAPJA,OAOI,CANJC,YAMI,MANJA,YAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,UAII,MAJJA,UAII,CAHJC,UAGI,MAHJA,UAGI,CAFJC,YAEI,MAFJA,YAEI,CADJC,OACI,MADJA,OACI,CACJX,SAAS,CAAC,UAAM,CACd,GAAIM,YAAY,CAACM,SAAb,GAA2B,SAA/B,CAA0C,IAChCA,CAAAA,SADgC,CACJN,YADI,CAChCM,SADgC,CACrBC,IADqB,CACJP,YADI,CACrBO,IADqB,CACfC,MADe,CACJR,YADI,CACfQ,MADe,CAExC;AACD,CACF,CALQ,CAKN,CAACR,YAAD,CALM,CAAT,CAOA;AAEA,GAAMS,CAAAA,QAAQ,CAAGb,YAAY,CAACG,OAAO,CAACQ,IAAT,CAA7B,CACA,GAAMG,CAAAA,SAAS,gBACbC,IAAI,CAAEF,QADO,CAEbT,YAAY,CAAZA,YAFa,CAGbK,OAAO,CAAPA,OAHa,EAITJ,cAAc,EAAI,CAAEW,OAAO,CAAEH,QAAX,CAJT,CAAf,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMI,CAAAA,aAAa,CAAGC,SAAtB,CAEA,GAAMC,CAAAA,UAAU,CAAGhB,OAAO,CAACgB,UAAR,GAAuB,cAAvB,CAAwC,CAAxC,CAA4C,CAA/D,CACA,GAAMC,CAAAA,KAAK,CAAG,QAAd,CACA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEA,mBACE,KAAC,cAAD,EACE,KAAK,CAAElB,OAAO,CAACmB,aADjB,CAEE,IAAI,WAAK1B,UAAU,CAACO,OAAO,CAACoB,IAAT,CAAf,SAFN,CAGE,WAAW,KAHb,CAIE,KAAK,CAAEpB,OAAO,CAACqB,KAJjB,CAKE,GAAG,CAAE,OALP,CAME,QAAQ,CAAE,OANZ,CAOE,UAAU,CAAE,CAPd,CAQE,KAAK,CAAEJ,KART,CASE,UAAU,CAAEC,UATd,CAUE,SAAS,CAAEP,SAVb,CAWE,aAAa,CAAEG,aAXjB,CAYE,UAAU,CAAE,IAZd,CAaE,UAAU,CAAEV,UAAU,sBAAiBJ,OAAO,CAACQ,IAAzB,CAbxB,CAcE,YAAY,CAAEH,YAdhB,EADF,CAkBD,CA3DM","sourcesContent":["import { HeadingTags } from '@codecademy/gamut';\nimport { UserClickData } from '@codecademy/tracking';\nimport { capitalize } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { CurriculumCard } from 'components/CurriculumCard';\nimport type { ProjectEntityResponse } from 'services/projects';\nimport { PathCardAssetPath } from 'libs/contentAssetPaths';\n// import { trackUserImpression } from '~/libs/eventTracking';\nimport { pathPagePath } from 'libs/urlHelpers';\n// import { useSelectorWith } from '~/libs/useSelectorWith';\n// import {\n//   selectPathEnrollmentIds,\n//   selectUserCompletedContainers,\n// } from '~/state/currentUser/selectors';\n// import { selectFeatureCategoryByIds } from '~/state/entities/categories/selectors';\nimport { Path } from 'typings/path';\n\nexport type PathCardProps = {\n  path?: Pick<\n    Path,\n    | 'id'\n    | 'slug'\n    | 'title'\n    | 'goal'\n    | 'difficulty'\n    | 'category_ids'\n    | 'content_item_type_counts'\n  >;\n  project: ProjectEntityResponse;\n  trackingData: UserClickData;\n  useReduxRouter?: boolean;\n  isFullSize?: boolean;\n  dataTestId?: string;\n  headingLevel?: HeadingTags;\n  onClick?: () => void;\n};\n\nexport const PathCard: React.FC<PathCardProps> = ({\n  path,\n  project,\n  trackingData,\n  useReduxRouter,\n  isFullSize,\n  dataTestId,\n  headingLevel,\n  onClick,\n}) => {\n  useEffect(() => {\n    if (trackingData.page_name === 'article') {\n      const { page_name, slug, target } = trackingData;\n      // trackUserImpression({ page_name, slug: slug!, target });\n    }\n  }, [trackingData]);\n\n  // const tag = useSelectorWith(selectFeatureCategoryByIds, path.category_ids);\n\n  const pathHref = pathPagePath(project.slug);\n  const linkProps = {\n    href: pathHref,\n    trackingData,\n    onClick,\n    ...(useReduxRouter && { routeTo: pathHref }),\n  };\n \n  // const userEnrolledPathIds = useSelector(selectPathEnrollmentIds);\n  // const userCompletedContainerIds = useSelector(selectUserCompletedContainers);\n  // const progressState = userCompletedContainerIds?.[path.id]\n  //   ? 'completed'\n  //   : userEnrolledPathIds?.includes(path.id)\n  //   ? 'inProgress'\n  //   : undefined;\n\n  const progressState = undefined;\n\n  const difficulty = project.difficulty === 'Intermediate' ? 1 : 0;\n  const scope = 'lesson';\n  const scopeCount = 28;\n\n  return (\n    <CurriculumCard\n      image={project.thumbnail_url}\n      text={`${capitalize(project.goal)} Path`}\n      showProLogo\n      title={project.title}\n      tag={\"React\"}\n      tagColor={'green'}\n      difficulty={1}\n      scope={scope}\n      scopeCount={scopeCount}\n      linkProps={linkProps}\n      progressState={progressState}\n      isFullSize={true}\n      dataTestId={dataTestId || `path-card-${project.slug}`}\n      headingLevel={headingLevel}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}