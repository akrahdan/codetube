{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AvatarChooser/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { FlexBox, FormError, Input } from '@codecademy/gamut';\nimport { pxRem, theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Avatar } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseSize = 75;\nconst smBreakpointSize = 120;\nconst StyledAvatar = styled(Avatar)`\n  img {\n    width: ${pxRem(baseSize)};\n    height: ${pxRem(baseSize)};\n  }\n\n  ${theme.breakpoints.sm} {\n    img {\n      width: ${pxRem(smBreakpointSize)};\n      height: ${pxRem(smBreakpointSize)};\n    }\n  }\n`;\n_c = StyledAvatar;\nconst ChoosePhotoLabel = styled.label`\n  padding-top: ${theme.spacing[16]};\n  ${theme.breakpoints.sm} {\n    padding-top: ${theme.spacing[24]};\n  }\n`;\n_c2 = ChoosePhotoLabel;\nconst ChoosePhotoSpan = styled.span`\n  color: ${theme.colors.hyper};\n  font-weight: ${theme.fontWeight.title};\n  cursor: pointer;\n`;\n_c3 = ChoosePhotoSpan;\nconst HiddenInput = styled(Input)`\n  display: none;\n`;\n_c4 = HiddenInput;\nconst StyledFormError = styled(FormError)`\n  position: initial;\n  text-align: center;\n`;\n_c5 = StyledFormError;\nexport const AvatarChooser = ({\n  src: existingSrc,\n  onImageChanged,\n  error,\n  register,\n  validate = validatePhotoUpload,\n  name = 'Avatar Photo'\n}) => {\n  _s();\n\n  const [imageSrc, setImageSrc] = useState(existingSrc);\n  const choosePhotoLabelRef = useRef(null);\n  const onChange = useCallback(event => {\n    const target = event === null || event === void 0 ? void 0 : event.target;\n    const imageFilelist = target === null || target === void 0 ? void 0 : target.files;\n    const imageFile = imageFilelist === null || imageFilelist === void 0 ? void 0 : imageFilelist[0];\n    onImageChanged === null || onImageChanged === void 0 ? void 0 : onImageChanged(imageFilelist);\n    if (imageFile) setImageSrc(URL.createObjectURL(imageFile));\n  }, [setImageSrc, onImageChanged]); // Need to simulate Enter and Space keyboard presses to activate the\n  // file uploader here since it's not a real button.\n\n  const onChooseUploadKeyPress = useCallback(event => {\n    var _choosePhotoLabelRef$;\n\n    if (event.key === 'Enter' || event.key === ' ') (_choosePhotoLabelRef$ = choosePhotoLabelRef.current) === null || _choosePhotoLabelRef$ === void 0 ? void 0 : _choosePhotoLabelRef$.click();\n  }, [choosePhotoLabelRef]);\n  return /*#__PURE__*/_jsxDEV(FlexBox, {\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    width: \"fit-content\",\n    maxWidth: pxRem(120),\n    children: [/*#__PURE__*/_jsxDEV(StyledAvatar, {\n      src: imageSrc,\n      disableDropshadow: true,\n      alt: \"Avatar Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChoosePhotoLabel, {\n      ref: choosePhotoLabelRef,\n      htmlFor: \"avatar-chooser\",\n      children: /*#__PURE__*/_jsxDEV(ChoosePhotoSpan, {\n        role: \"button\",\n        tabIndex: 0,\n        onKeyPress: onChooseUploadKeyPress,\n        children: \"Choose Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HiddenInput, {\n      type: \"file\",\n      htmlFor: \"avatar-chooser\",\n      name: name,\n      onChange: onChange,\n      ref: register === null || register === void 0 ? void 0 : register({\n        validate,\n        required: false\n      }),\n      \"aria-invalid\": Boolean(error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(StyledFormError, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvatarChooser, \"I/9rinEEpIZTbajqjCldRK5FvsY=\");\n\n_c6 = AvatarChooser;\n\nconst validatePhotoUpload = files => {\n  const MAX_FILE_SIZE = 5242880;\n  const MAX_FILE_SIZE_IN_MB = 5;\n  const file = files === null || files === void 0 ? void 0 : files.item(0);\n  if (!file) return true;\n  const {\n    type,\n    size\n  } = file;\n  if (!['image/jpeg', 'image/png'].includes(type)) return 'Please upload a jpeg or png file.';\n  if (size > MAX_FILE_SIZE) return `Sorry, we cannot accept files larger than ${MAX_FILE_SIZE_IN_MB} MB.`;\n  return true;\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledAvatar\");\n$RefreshReg$(_c2, \"ChoosePhotoLabel\");\n$RefreshReg$(_c3, \"ChoosePhotoSpan\");\n$RefreshReg$(_c4, \"HiddenInput\");\n$RefreshReg$(_c5, \"StyledFormError\");\n$RefreshReg$(_c6, \"AvatarChooser\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AvatarChooser/index.tsx"],"names":["FlexBox","FormError","Input","pxRem","theme","styled","React","useCallback","useRef","useState","Avatar","baseSize","smBreakpointSize","StyledAvatar","breakpoints","sm","ChoosePhotoLabel","label","spacing","ChoosePhotoSpan","span","colors","hyper","fontWeight","title","HiddenInput","StyledFormError","AvatarChooser","src","existingSrc","onImageChanged","error","register","validate","validatePhotoUpload","name","imageSrc","setImageSrc","choosePhotoLabelRef","onChange","event","target","imageFilelist","files","imageFile","URL","createObjectURL","onChooseUploadKeyPress","key","current","click","required","Boolean","MAX_FILE_SIZE","MAX_FILE_SIZE_IN_MB","file","item","type","size","includes"],"mappings":"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","sourcesContent":["import { FlexBox, FormError, Input } from '@codecademy/gamut';\nimport { pxRem, theme } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { UseFormMethods, Validate } from 'react-hook-form';\n\nimport { Avatar } from '..';\n\ntype AvatarChooserProps = {\n  src: string;\n  name?: string;\n  register?: UseFormMethods['register'];\n  onImageChanged?: (imageFileList: FileList) => void;\n  validate?: Validate | Record<string, Validate>;\n  error?: string;\n};\n\nconst baseSize = 75;\nconst smBreakpointSize = 120;\n\nconst StyledAvatar = styled(Avatar)`\n  img {\n    width: ${pxRem(baseSize)};\n    height: ${pxRem(baseSize)};\n  }\n\n  ${theme.breakpoints.sm} {\n    img {\n      width: ${pxRem(smBreakpointSize)};\n      height: ${pxRem(smBreakpointSize)};\n    }\n  }\n`;\n\nconst ChoosePhotoLabel = styled.label`\n  padding-top: ${theme.spacing[16]};\n  ${theme.breakpoints.sm} {\n    padding-top: ${theme.spacing[24]};\n  }\n`;\n\nconst ChoosePhotoSpan = styled.span`\n  color: ${theme.colors.hyper};\n  font-weight: ${theme.fontWeight.title};\n  cursor: pointer;\n`;\n\nconst HiddenInput = styled(Input)`\n  display: none;\n`;\n\nconst StyledFormError = styled(FormError)`\n  position: initial;\n  text-align: center;\n`;\n\nexport const AvatarChooser: React.FC<AvatarChooserProps> = ({\n  src: existingSrc,\n  onImageChanged,\n  error,\n  register,\n  validate = validatePhotoUpload,\n  name = 'Avatar Photo',\n}) => {\n  const [imageSrc, setImageSrc] = useState<string>(existingSrc);\n\n  const choosePhotoLabelRef = useRef<HTMLLabelElement>(null);\n\n  const onChange = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const target = event?.target as HTMLInputElement;\n      const imageFilelist = target?.files;\n      const imageFile = imageFilelist?.[0];\n\n      onImageChanged?.(imageFilelist!);\n      if (imageFile) setImageSrc(URL.createObjectURL(imageFile));\n    },\n    [setImageSrc, onImageChanged]\n  );\n\n  // Need to simulate Enter and Space keyboard presses to activate the\n  // file uploader here since it's not a real button.\n  const onChooseUploadKeyPress = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter' || event.key === ' ')\n        choosePhotoLabelRef.current?.click();\n    },\n    [choosePhotoLabelRef]\n  );\n\n  return (\n    <FlexBox\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      width=\"fit-content\"\n      maxWidth={pxRem(120)}\n    >\n      <StyledAvatar src={imageSrc} disableDropshadow alt=\"Avatar Photo\" />\n      <ChoosePhotoLabel ref={choosePhotoLabelRef} htmlFor=\"avatar-chooser\">\n        <ChoosePhotoSpan\n          role=\"button\"\n          tabIndex={0}\n          onKeyPress={onChooseUploadKeyPress}\n        >\n          Choose Photo\n        </ChoosePhotoSpan>\n      </ChoosePhotoLabel>\n      <HiddenInput\n        type=\"file\"\n        htmlFor=\"avatar-chooser\"\n        name={name}\n        onChange={onChange}\n        ref={register?.({\n          validate,\n          required: false,\n        })}\n        aria-invalid={Boolean(error)}\n      />\n      {error && <StyledFormError>{error}</StyledFormError>}\n    </FlexBox>\n  );\n};\n\nconst validatePhotoUpload = (files: FileList): boolean | string => {\n  const MAX_FILE_SIZE = 5242880;\n  const MAX_FILE_SIZE_IN_MB = 5;\n\n  const file = files?.item(0);\n  if (!file) return true;\n\n  const { type, size } = file;\n  if (!['image/jpeg', 'image/png'].includes(type))\n    return 'Please upload a jpeg or png file.';\n\n  if (size > MAX_FILE_SIZE)\n    return `Sorry, we cannot accept files larger than ${MAX_FILE_SIZE_IN_MB} MB.`;\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}