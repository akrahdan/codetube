{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from\"@reduxjs/toolkit\";import{clamp}from\"portal/scenes/CoursePlayer/utilities/clamp\";import{InteractionModes,Defaults,FullscreenState,DefaultResolutions}from\"portal/scenes/CoursePlayer/constants\";import{buildClipProgress}from\"portal/scenes/CoursePlayer/utilities/sync-clip-progress\";import{calculateAspectRatio}from\"portal/scenes/CoursePlayer/utilities/aspect-ratio\";import{findBreakpoint}from\"portal/scenes/CoursePlayer/utilities/find-breakpoint\";import{selectVideoFormat}from\"portal/scenes/CoursePlayer/utilities/video-format-support\";import{getClipProgressById}from'portal/scenes/CoursePlayer/utilities/sync-clip-progress';import{coursesApi}from\"services/courses\";var validModes=Object.values(InteractionModes);var mediaType=selectVideoFormat();function includes(modes,mode){return!!~modes.indexOf(mode);}export var initialState=_objectSpread(_objectSpread({playing:false,views:null,playbackSpeed:1.0,activeMenu:null,currentLecture:null,volumeSliderActive:false,course:null,muted:false,currentUrl:null,currentUrlIndex:0,previousVolume:null,title:null,subtitle:null,time:0,duration:0,bufferedTime:0,playheadStart:0,overlay:null,videoPlayer:null,seekedEvent:null,seekingEvent:null,clipProgress:[],buffering:false,containerSize:null,breakpoint:null,clipId:null,playerSize:null,layout:null,loading:false,userAutoplaySetting:false},Defaults),{},{currentResolution:DefaultResolutions[mediaType][0],supportedResolutions:null,mediaType:mediaType,settings:null});export var playerSlice=createSlice({name:\"player\",initialState:initialState,reducers:{play:function play(state,action){var icon=\"PLAY\";if(action.payload){state.overlay={icon:icon,key:Math.random(),fade:true};// console.log(\"Play: \", state.overlay);\n}state.playing=true;state.playheadStart=state.time;},pause:function pause(state,action){var icon=\"PAUSE\";if(action.payload){state.overlay={icon:icon,key:Math.random(),fade:true};}state.playing=false;state.playheadStart=state.time;},setPlaybackSpeed:function setPlaybackSpeed(state,action){state.playbackSpeed=action.payload;},setCurrentUrl:function setCurrentUrl(state,action){state.currentUrl=action.payload;},setCurrentLecture:function setCurrentLecture(state,action){state.currentLecture=action.payload;},setCurrentViews:function setCurrentViews(state,action){state.views=action.payload;},setCurrentUrlIndex:function setCurrentUrlIndex(state,action){state.currentUrlIndex=action.payload;},setPlaying:function setPlaying(state,action){state.playing=action.payload;},setTitle:function setTitle(state,action){state.title=action.payload;},setSubtitle:function setSubtitle(state,action){state.subtitle=action.payload;},syncSettings:function syncSettings(state,action){state.settings=action.payload;},setMediaType:function setMediaType(state,action){state.mediaType=action.payload;},setPreferredResolutions:function setPreferredResolutions(state,action){state.preferredResolutions=action.payload;},setCurrentResolution:function setCurrentResolution(state,action){state.currentResolution=action.payload;},setSupportedResolutions:function setSupportedResolutions(state,action){state.supportedResolutions=action.payload;},setActiveMenu:function setActiveMenu(state,action){state.activeMenu=action.payload;},setClipId:function setClipId(state,action){var lastProgressTimeFromLocalStorage=getClipProgressById(state.clipProgress,action.payload);state.time=lastProgressTimeFromLocalStorage||0;state.clipId=action.payload;},setVolumeSliderActive:function setVolumeSliderActive(state,action){state.volumeSliderActive=action.payload;},setVolume:function setVolume(state,action){var clamped=clamp(action.payload,0,1);var muted=clamped===0;state.volume=clamped;state.muted=muted;},setPreviousVolume:function setPreviousVolume(state,action){var clamped=clamp(action.payload,0,1);var muted=clamped===0;state.volume=clamped;state.muted=muted;},setInteractionMode:function setInteractionMode(state,action){if(!includes(validModes,action.payload)){throw new Error(\"\".concat(action.payload,\" not in valid list: \").concat(validModes.join()));}state.interactionMode=action.payload;},showUI:function showUI(state,action){state.visible=true;},toggleFullscreen:function toggleFullscreen(state,action){state.fullscreenState=state.fullscreenState===FullscreenState.FULLSCREEN?FullscreenState.NORMAL:FullscreenState.FULLSCREEN;},hideUI:function hideUI(state,action){state.visible=false;},setDuration:function setDuration(state,action){state.duration=action.payload;},setTime:function setTime(state,action){state.time=action.payload;},setContainerSize:function setContainerSize(state,action){var containerSize=action.payload;console.log(\"Container: \",containerSize);if(containerSize.width===0&&containerSize.height===0&&state.containerSize){containerSize=state.containerSize;}var breakpoint=findBreakpoint(containerSize);state.breakpoint=breakpoint;state.playerSize=calculateAspectRatio(containerSize);state.containerSize=containerSize;state.layout=\"\".concat(breakpoint.height,\"p\");},setBufferedTime:function setBufferedTime(state,action){state.bufferedTime=action.payload;},ready:function ready(state,action){state.playheadStart=state.time;state.duration=action.payload;},registerPlayer:function registerPlayer(state,action){state.seekedEvent=new Event(\"ps-seeked\");state.seekingEvent=new Event(\"ps-seeking\");state.videoPlayer=action.payload;},seekStart:function seekStart(state,action){var seekingEvent=state.seekingEvent,videoPlayer=state.videoPlayer;videoPlayer&&videoPlayer.dispatchEvent(seekingEvent);},seekEnd:function seekEnd(state,action){var seekedEvent=state.seekedEvent,videoPlayer=state.videoPlayer;videoPlayer&&videoPlayer.dispatchEvent(seekedEvent);},seek:function seek(state,action){state.playheadStart=action.payload*state.duration;},setOverlay:function setOverlay(state,action){state.overlay=action.payload;},setBuffering:function setBuffering(state,action){state.buffering=action.payload;},setLoading:function setLoading(state,action){state.loading=action.payload;},setAutoplay:function setAutoplay(state,action){state.userAutoplaySetting=action.payload;},setClipProgress:function setClipProgress(state,action){state.clipProgress=buildClipProgress(state.clipProgress,action.payload,state.duration);},setFullscreen:function setFullscreen(state,action){var validFullscreenStates=Object.values(FullscreenState);if(!includes(validFullscreenStates,action.payload)){throw new Error(\"\".concat(action.payload,\" not in valid list: \").concat(validFullscreenStates.join()));}state.fullscreenState=action.payload;},fastForward:function fastForward(state,action){var time=state.time,duration=state.duration;var forwardTime=time+10;var newTime=forwardTime>duration?duration:forwardTime;state.playheadStart=newTime;state.time=newTime;state.overlay={icon:\"FWD\",key:Math.random(),fade:true};},fastRewind:function fastRewind(state,action){var time=state.time,duration=state.duration;var startTime=0;var rewindTime=time-10;var newTime=rewindTime<startTime?startTime:rewindTime;state.playheadStart=newTime;state.time=newTime;state.overlay={icon:\"BACK\",key:Math.random(),fade:true};},toggleMute:function toggleMute(state,action){if(state.muted){var clamped=state.previousVolume||Defaults.volume;var muted=clamped===0;state.volume=clamped;state.muted=muted;}else{state.muted=true;state.previousVolume=state.volume;state.volume=0;}}},extraReducers:function extraReducers(builder){builder.addMatcher(coursesApi.endpoints.fetchPlayerCourse.matchFulfilled,function(state,_ref){var payload=_ref.payload;state.course=payload;});}});export var selectPlayer=function selectPlayer(state){return state.player;};var _playerSlice$actions=playerSlice.actions,play=_playerSlice$actions.play,pause=_playerSlice$actions.pause,setPlaybackSpeed=_playerSlice$actions.setPlaybackSpeed,setActiveMenu=_playerSlice$actions.setActiveMenu,setVolumeSliderActive=_playerSlice$actions.setVolumeSliderActive,setVolume=_playerSlice$actions.setVolume,setPreviousVolume=_playerSlice$actions.setPreviousVolume,toggleMute=_playerSlice$actions.toggleMute,setDuration=_playerSlice$actions.setDuration,setTime=_playerSlice$actions.setTime,ready=_playerSlice$actions.ready,fastForward=_playerSlice$actions.fastForward,fastRewind=_playerSlice$actions.fastRewind,seekEnd=_playerSlice$actions.seekEnd,seekStart=_playerSlice$actions.seekStart,registerPlayer=_playerSlice$actions.registerPlayer,showUI=_playerSlice$actions.showUI,hideUI=_playerSlice$actions.hideUI,setInteractionMode=_playerSlice$actions.setInteractionMode,toggleFullscreen=_playerSlice$actions.toggleFullscreen,setFullscreen=_playerSlice$actions.setFullscreen,seek=_playerSlice$actions.seek,setBufferedTime=_playerSlice$actions.setBufferedTime,setBuffering=_playerSlice$actions.setBuffering,setClipProgress=_playerSlice$actions.setClipProgress,setOverlay=_playerSlice$actions.setOverlay,setContainerSize=_playerSlice$actions.setContainerSize,setAutoplay=_playerSlice$actions.setAutoplay,setLoading=_playerSlice$actions.setLoading,setPlaying=_playerSlice$actions.setPlaying,setCurrentResolution=_playerSlice$actions.setCurrentResolution,setPreferredResolutions=_playerSlice$actions.setPreferredResolutions,setSupportedResolutions=_playerSlice$actions.setSupportedResolutions,setMediaType=_playerSlice$actions.setMediaType,syncSettings=_playerSlice$actions.syncSettings,setCurrentUrl=_playerSlice$actions.setCurrentUrl,setCurrentUrlIndex=_playerSlice$actions.setCurrentUrlIndex,setSubtitle=_playerSlice$actions.setSubtitle,setTitle=_playerSlice$actions.setTitle,setClipId=_playerSlice$actions.setClipId,setCurrentLecture=_playerSlice$actions.setCurrentLecture,setCurrentViews=_playerSlice$actions.setCurrentViews;export{play,pause,setPlaybackSpeed,setActiveMenu,setVolumeSliderActive,setVolume,setPreviousVolume,toggleMute,setDuration,setTime,ready,fastForward,fastRewind,seekEnd,seekStart,registerPlayer,showUI,hideUI,setInteractionMode,toggleFullscreen,setFullscreen,seek,setBufferedTime,setBuffering,setClipProgress,setOverlay,setContainerSize,setAutoplay,setLoading,setPlaying,setCurrentResolution,setPreferredResolutions,setSupportedResolutions,setMediaType,syncSettings,setCurrentUrl,setCurrentUrlIndex,setSubtitle,setTitle,setClipId,setCurrentLecture,setCurrentViews};export var togglePlayPause=function togglePlayPause(){return function(dispatch,getState){var state=getState().player;if(state.playing){dispatch(pause());}else{dispatch(play());}};};export default playerSlice.reducer;export var selectPlayerCourse=function selectPlayerCourse(state){return state.player.course;};export var selectDuration=function selectDuration(state){return state.player.duration;};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/player/playerSlice.ts"],"names":["createSlice","clamp","InteractionModes","Defaults","FullscreenState","DefaultResolutions","buildClipProgress","calculateAspectRatio","findBreakpoint","selectVideoFormat","getClipProgressById","coursesApi","validModes","Object","values","mediaType","includes","modes","mode","indexOf","initialState","playing","views","playbackSpeed","activeMenu","currentLecture","volumeSliderActive","course","muted","currentUrl","currentUrlIndex","previousVolume","title","subtitle","time","duration","bufferedTime","playheadStart","overlay","videoPlayer","seekedEvent","seekingEvent","clipProgress","buffering","containerSize","breakpoint","clipId","playerSize","layout","loading","userAutoplaySetting","currentResolution","supportedResolutions","settings","playerSlice","name","reducers","play","state","action","icon","payload","key","Math","random","fade","pause","setPlaybackSpeed","setCurrentUrl","setCurrentLecture","setCurrentViews","setCurrentUrlIndex","setPlaying","setTitle","setSubtitle","syncSettings","setMediaType","setPreferredResolutions","preferredResolutions","setCurrentResolution","setSupportedResolutions","setActiveMenu","setClipId","lastProgressTimeFromLocalStorage","setVolumeSliderActive","setVolume","clamped","volume","setPreviousVolume","setInteractionMode","Error","join","interactionMode","showUI","visible","toggleFullscreen","fullscreenState","FULLSCREEN","NORMAL","hideUI","setDuration","setTime","setContainerSize","console","log","width","height","setBufferedTime","ready","registerPlayer","Event","seekStart","dispatchEvent","seekEnd","seek","setOverlay","setBuffering","setLoading","setAutoplay","setClipProgress","setFullscreen","validFullscreenStates","fastForward","forwardTime","newTime","fastRewind","startTime","rewindTime","toggleMute","extraReducers","builder","addMatcher","endpoints","fetchPlayerCourse","matchFulfilled","selectPlayer","player","actions","togglePlayPause","dispatch","getState","reducer","selectPlayerCourse","selectDuration"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { StringChain, stubFalse, without } from \"lodash\";\nimport { AppThunk, RootState } from \"store\";\nimport { clamp } from \"portal/scenes/CoursePlayer/utilities/clamp\";\nimport {\n  InteractionModes,\n  Defaults,\n  FullscreenState,\n  DefaultResolutions,\n} from \"portal/scenes/CoursePlayer/constants\";\nimport { buildClipProgress } from \"portal/scenes/CoursePlayer/utilities/sync-clip-progress\";\nimport { calculateAspectRatio } from \"portal/scenes/CoursePlayer/utilities/aspect-ratio\";\nimport { findBreakpoint } from \"portal/scenes/CoursePlayer/utilities/find-breakpoint\";\nimport { selectVideoFormat } from \"portal/scenes/CoursePlayer/utilities/video-format-support\";\nimport { getClipProgressById, getClipProgressFromLocalStorage } from 'portal/scenes/CoursePlayer/utilities/sync-clip-progress'\nimport {\n  CoursePlayerResponse,\n  CourseResponse,\n  coursesApi,\n  Lecture,\n  VideoAnalytics,\n} from \"services/courses\";\nimport { Url } from \"url\";\n\nconst validModes = Object.values(InteractionModes);\nconst mediaType = selectVideoFormat();\n\nfunction includes(modes, mode) {\n  return !!~modes.indexOf(mode);\n}\n\nexport interface Progress {\n  clipId: string;\n  videoSecondsWatched: number\n}\n\nexport interface PlayerState {\n  playing: boolean;\n  currentUrl: string;\n  views: VideoAnalytics[];\n  clipId: string;\n  title: string;\n  subtitle: string;\n  currentUrlIndex: number;\n  currentLecture: Lecture;\n  course: CoursePlayerResponse;\n  playbackSpeed: number;\n  activeMenu: string;\n  volumeSliderActive: boolean;\n  volume: number;\n  muted: boolean;\n  previousVolume: number;\n  interactionMode: string;\n  resolution: ResolutionH;\n  time: number;\n  bufferedTime: number;\n  duration: number;\n  playheadStart: number;\n  overlay: Overlay;\n  videoPlayer: any;\n  seekedEvent: Event;\n  seekingEvent: Event;\n  visible: boolean;\n  fullscreenState: string;\n  clipProgress: Progress[];\n  buffering: boolean;\n  containerSize: ContainerSize;\n  breakpoint: ContainerSize;\n  playerSize: ContainerSize;\n  layout: string;\n  loading: boolean;\n  userAutoplaySetting: boolean;\n  preferredResolutions: any;\n  currentResolution: any;\n  supportedResolutions: Resolution[];\n  mediaType: string;\n  settings: any;\n}\n\nexport interface Overlay {\n  icon: string;\n  key: number;\n  fade: boolean;\n}\n\ninterface ContainerSize {\n  width: number;\n  height: number;\n}\n\ninterface ResolutionH {\n  width: number;\n  height: number;\n  index: number;\n}\ninterface Resolution {\n  width?: string;\n  height: string;\n  index: number;\n}\n\nexport const initialState: PlayerState = {\n  playing: false,\n  views: null,\n  playbackSpeed: 1.0,\n  activeMenu: null,\n  currentLecture: null,\n  volumeSliderActive: false,\n  course: null,\n  muted: false,\n  currentUrl: null,\n  currentUrlIndex: 0,\n  previousVolume: null,\n  title: null,\n  subtitle: null,\n\n  time: 0,\n  duration: 0,\n  bufferedTime: 0,\n  playheadStart: 0,\n  overlay: null,\n  videoPlayer: null,\n  seekedEvent: null,\n  seekingEvent: null,\n\n  clipProgress: [],\n  buffering: false,\n  containerSize: null,\n  breakpoint: null,\n  clipId: null,\n  playerSize: null,\n  layout: null,\n  loading: false,\n  userAutoplaySetting: false,\n  ...Defaults,\n  currentResolution: DefaultResolutions[mediaType][0],\n  supportedResolutions: null,\n  mediaType,\n  settings: null,\n};\nexport const playerSlice = createSlice({\n  name: \"player\",\n  initialState,\n  reducers: {\n    play: (state, action: PayloadAction<boolean>) => {\n      const icon = \"PLAY\";\n\n      if (action.payload) {\n        state.overlay = { icon, key: Math.random(), fade: true };\n        // console.log(\"Play: \", state.overlay);\n      }\n      state.playing = true;\n      state.playheadStart = state.time;\n    },\n\n    pause: (state, action: PayloadAction<boolean>) => {\n      const icon = \"PAUSE\";\n\n      if (action.payload) {\n        state.overlay = { icon, key: Math.random(), fade: true };\n        \n      }\n      state.playing = false;\n      state.playheadStart = state.time;\n    },\n\n    setPlaybackSpeed: (state, action: PayloadAction<number>) => {\n      state.playbackSpeed = action.payload;\n    },\n\n    setCurrentUrl: (state, action: PayloadAction<string>) => {\n      state.currentUrl = action.payload;\n    },\n\n    setCurrentLecture: (state, action: PayloadAction<Lecture>) => {\n      state.currentLecture = action.payload;\n    },\n\n    setCurrentViews: (state, action: PayloadAction<VideoAnalytics[]>) => {\n      state.views = action.payload;\n    },\n\n    setCurrentUrlIndex: (state, action: PayloadAction<number>) => {\n      state.currentUrlIndex = action.payload;\n    },\n\n    setPlaying: (state, action: PayloadAction<boolean>) => {\n      state.playing = action.payload;\n    },\n    setTitle: (state, action: PayloadAction<string>) => {\n      state.title = action.payload;\n    },\n\n    setSubtitle: (state, action: PayloadAction<string>) => {\n      state.subtitle = action.payload;\n    },\n\n    syncSettings: (state, action: PayloadAction<any>) => {\n      state.settings = action.payload;\n    },\n\n    setMediaType: (state, action: PayloadAction<string>) => {\n      state.mediaType = action.payload;\n    },\n\n    setPreferredResolutions: (state, action: PayloadAction<any>) => {\n      state.preferredResolutions = action.payload;\n    },\n\n    setCurrentResolution: (state, action: PayloadAction<any>) => {\n      state.currentResolution = action.payload;\n    },\n\n    setSupportedResolutions: (state, action: PayloadAction<Resolution[]>) => {\n      state.supportedResolutions = action.payload;\n    },\n\n    setActiveMenu: (state, action: PayloadAction<string>) => {\n      state.activeMenu = action.payload;\n    },\n    setClipId: (state, action: PayloadAction<string>) => {\n      const lastProgressTimeFromLocalStorage = getClipProgressById(state.clipProgress, action.payload)\n      state.time = lastProgressTimeFromLocalStorage ||  0\n      state.clipId = action.payload;\n    },\n    setVolumeSliderActive: (state, action: PayloadAction<boolean>) => {\n      state.volumeSliderActive = action.payload;\n    },\n    setVolume: (state, action: PayloadAction<number>) => {\n      const clamped = clamp(action.payload, 0, 1);\n      const muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setPreviousVolume: (state, action: PayloadAction<number>) => {\n      const clamped = clamp(action.payload, 0, 1);\n      const muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setInteractionMode: (state, action: PayloadAction<string>) => {\n      if (!includes(validModes, action.payload)) {\n        throw new Error(\n          `${action.payload} not in valid list: ${validModes.join()}`\n        );\n      }\n      state.interactionMode = action.payload;\n    },\n\n    showUI: (state, action: PayloadAction<void>) => {\n      state.visible = true;\n    },\n\n    toggleFullscreen: (state, action: PayloadAction<void>) => {\n      state.fullscreenState =\n        state.fullscreenState === FullscreenState.FULLSCREEN\n          ? FullscreenState.NORMAL\n          : FullscreenState.FULLSCREEN;\n    },\n\n    hideUI: (state, action: PayloadAction<void>) => {\n      state.visible = false;\n    },\n\n    setDuration: (state, action: PayloadAction<number>) => {\n      state.duration = action.payload;\n    },\n    setTime: (state, action: PayloadAction<number>) => {\n      state.time = action.payload;\n    },\n\n    setContainerSize: (state, action: PayloadAction<ContainerSize>) => {\n      var containerSize = action.payload;\n      console.log(\"Container: \", containerSize);\n      if (\n        containerSize.width === 0 &&\n        containerSize.height === 0 &&\n        state.containerSize\n      ) {\n        containerSize = state.containerSize;\n      }\n      const breakpoint = findBreakpoint(containerSize);\n      state.breakpoint = breakpoint;\n      state.playerSize = calculateAspectRatio(containerSize);\n      state.containerSize = containerSize;\n      state.layout = `${breakpoint.height}p`;\n    },\n\n    setBufferedTime: (state, action: PayloadAction<number>) => {\n      state.bufferedTime = action.payload;\n    },\n\n    ready: (state, action: PayloadAction<number>) => {\n      state.playheadStart = state.time;\n      state.duration = action.payload;\n    },\n    registerPlayer: (state, action: PayloadAction<HTMLVideoElement>) => {\n      state.seekedEvent = new Event(\"ps-seeked\");\n      state.seekingEvent = new Event(\"ps-seeking\");\n      state.videoPlayer = action.payload;\n    },\n\n    seekStart: (state, action: PayloadAction<void>) => {\n      const { seekingEvent, videoPlayer } = state;\n\n      videoPlayer && videoPlayer.dispatchEvent(seekingEvent);\n    },\n\n    seekEnd: (state, action: PayloadAction<void>) => {\n      const { seekedEvent, videoPlayer } = state;\n\n      videoPlayer && videoPlayer.dispatchEvent(seekedEvent);\n    },\n\n    seek: (state, action: PayloadAction<number>) => {\n      state.playheadStart = action.payload * state.duration;\n    },\n\n    setOverlay: (state, action: PayloadAction<Overlay>) => {\n      state.overlay = action.payload;\n    },\n\n    setBuffering: (state, action: PayloadAction<boolean>) => {\n      state.buffering = action.payload;\n    },\n\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n\n    setAutoplay: (state, action: PayloadAction<boolean>) => {\n      state.userAutoplaySetting = action.payload;\n    },\n\n    setClipProgress: (state, action: PayloadAction<Progress>) => {\n      state.clipProgress = buildClipProgress(\n        state.clipProgress,\n        action.payload,\n        state.duration\n      );\n    },\n\n    setFullscreen: (state, action: PayloadAction<string>) => {\n      const validFullscreenStates = Object.values(FullscreenState);\n\n      if (!includes(validFullscreenStates, action.payload)) {\n        throw new Error(\n          `${action.payload} not in valid list: ${validFullscreenStates.join()}`\n        );\n      }\n      state.fullscreenState = action.payload;\n    },\n\n    fastForward: (state, action: PayloadAction<void>) => {\n      const { time, duration } = state;\n\n      const forwardTime = time + 10;\n\n      const newTime = forwardTime > duration ? duration : forwardTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"FWD\",\n        key: Math.random(),\n        fade: true,\n      };\n    },\n\n    fastRewind: (state, action: PayloadAction<void>) => {\n      const { time, duration } = state;\n\n      const startTime = 0;\n      const rewindTime = time - 10;\n\n      const newTime = rewindTime < startTime ? startTime : rewindTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"BACK\",\n        key: Math.random(),\n        fade: true,\n      };\n    },\n\n    toggleMute: (state, action: PayloadAction<void>) => {\n      if (state.muted) {\n        const clamped = state.previousVolume || Defaults.volume;\n        const muted = clamped === 0;\n        state.volume = clamped;\n        state.muted = muted;\n      } else {\n        state.muted = true;\n        state.previousVolume = state.volume;\n        state.volume = 0;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      coursesApi.endpoints.fetchPlayerCourse.matchFulfilled,\n      (state, { payload }) => {\n        state.course = payload;\n      }\n    );\n  },\n});\n\nexport const selectPlayer = (state: RootState) => state.player;\n\nexport const {\n  play,\n  pause,\n  setPlaybackSpeed,\n  setActiveMenu,\n  setVolumeSliderActive,\n  setVolume,\n  setPreviousVolume,\n  toggleMute,\n  setDuration,\n  setTime,\n  ready,\n  fastForward,\n  fastRewind,\n  seekEnd,\n  seekStart,\n  registerPlayer,\n  showUI,\n  hideUI,\n  setInteractionMode,\n  toggleFullscreen,\n  setFullscreen,\n  seek,\n  setBufferedTime,\n  setBuffering,\n  setClipProgress,\n  setOverlay,\n  setContainerSize,\n  setAutoplay,\n  setLoading,\n  setPlaying,\n  setCurrentResolution,\n  setPreferredResolutions,\n  setSupportedResolutions,\n  setMediaType,\n  syncSettings,\n  setCurrentUrl,\n  setCurrentUrlIndex,\n  setSubtitle,\n  setTitle,\n  setClipId,\n  setCurrentLecture,\n  setCurrentViews\n} = playerSlice.actions;\n\nexport const togglePlayPause = (): AppThunk => (dispatch, getState) => {\n  const state = getState().player;\n  if (state.playing) {\n    dispatch(pause());\n  } else {\n    dispatch(play());\n  }\n};\n\nexport default playerSlice.reducer;\n\nexport const selectPlayerCourse = (state: RootState) => state.player.course;\nexport const selectDuration = (state: RootState) => state.player.duration;\n"]},"metadata":{},"sourceType":"module"}