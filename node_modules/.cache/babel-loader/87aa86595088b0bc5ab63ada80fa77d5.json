{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport cookie from 'react-cookies';\nexport const authApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/',\n    prepareHeaders: headers => {\n      const csrfToken = cookie.load('csrftoken');\n\n      if (csrfToken) {\n        headers.set('X-CSRFToken', csrfToken);\n      }\n\n      headers.set('Content-Type', 'application/json');\n      return headers;\n    }\n  }),\n  tagTypes: ['Login'],\n  endpoints: build => ({\n    login: build.mutation({\n      query: body => ({\n        url: 'accounts/login',\n        method: 'POST',\n        body,\n        responseHandler: response => response.json()\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation\n} = authApi;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/services/auth.ts"],"names":["createApi","fetchBaseQuery","cookie","authApi","baseQuery","baseUrl","prepareHeaders","headers","csrfToken","load","set","tagTypes","endpoints","build","login","mutation","query","body","url","method","responseHandler","response","json","useLoginMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAaA,OAAO,MAAMC,OAAO,GAAGH,SAAS,CAAC;AAC7BI,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE,GAAX;AAC1BC,IAAAA,cAAc,EAAGC,OAAD,IAAa;AACzB,YAAMC,SAAS,GAAGN,MAAM,CAACO,IAAP,CAAY,WAAZ,CAAlB;;AACA,UAAGD,SAAH,EAAc;AACVD,QAAAA,OAAO,CAACG,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACH;;AACDD,MAAAA,OAAO,CAACG,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AAEA,aAAOH,OAAP;AACH;AATyB,GAAD,CADI;AAY7BI,EAAAA,QAAQ,EAAE,CAAC,OAAD,CAZmB;AAa7BC,EAAAA,SAAS,EAAGC,KAAD,KAAY;AACpBC,IAAAA,KAAK,EAAGD,KAAK,CAACE,QAAN,CAAsC;AAC1CC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AACdC,QAAAA,GAAG,EAAE,gBADS;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdF,QAAAA,IAHc;AAIdG,QAAAA,eAAe,EAAGC,QAAD,IAAcA,QAAQ,CAACC,IAAT;AAJjB,OAAX;AADmC,KAAtC;AADY,GAAZ;AAbkB,CAAD,CAAzB;AAyBP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAuBpB,OAA7B","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { head } from 'lodash';\nimport cookie from 'react-cookies';\n\nexport interface Login {\n    email: string,\n    password: string\n}\n\nexport interface Signup {\n    email: string,\n    password: string,\n    password2: string\n}\n\nexport const authApi = createApi({\n    baseQuery: fetchBaseQuery({ baseUrl: '/',\n    prepareHeaders: (headers) => {\n        const csrfToken = cookie.load('csrftoken')\n        if(csrfToken) {\n            headers.set('X-CSRFToken', csrfToken)\n        }\n        headers.set('Content-Type', 'application/json')\n\n        return headers\n    }\n    }),\n    tagTypes: ['Login'],\n    endpoints: (build) => ({\n       login:  build.mutation<Login, Partial<Login>>({\n           query: (body) => ({\n               url: 'accounts/login',\n               method: 'POST',\n               body,\n               responseHandler: (response) => response.json()\n           })\n       }),\n    })\n});\n\nexport const { useLoginMutation } = authApi"]},"metadata":{},"sourceType":"module"}