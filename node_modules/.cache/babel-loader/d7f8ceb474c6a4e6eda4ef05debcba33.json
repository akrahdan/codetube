{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Dashboard/ProgressBar.tsx\";\nimport { Box, FlexBox, ProgressBar } from '@codecademy/gamut';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { LoadingBox } from 'components/LoadingBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PercentageBox = styled(Box)`\n  margin-bottom: ${pxRem(2)};\n`;\n_c = PercentageBox;\nexport const PercentageLoading = styled(LoadingBox)`\n  width: ${pxRem(38)};\n  height: 1.25rem;\n  margin-bottom: ${pxRem(6)};\n`;\n_c2 = PercentageLoading;\nexport const ProgressBarLoading = styled(LoadingBox)`\n  width: ${pxRem(96)};\n  height: 0.5rem;\n`;\n_c3 = ProgressBarLoading;\nexport const ContainerProgressBar = ({\n  containerProgress,\n  className\n}) => {\n  const renderProgressLoading = () => /*#__PURE__*/_jsxDEV(FlexBox, {\n    alignItems: \"flex-end\",\n    flexDirection: \"column\",\n    \"data-testid\": \"progress-loading\",\n    children: [/*#__PURE__*/_jsxDEV(PercentageLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBarLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  const percentComplete = (containerProgress === null || containerProgress === void 0 ? void 0 : containerProgress.percent_complete) || 0;\n\n  const renderProgress = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PercentageBox, {\n      as: \"span\",\n      fontSize: 16,\n      fontWeight: \"title\",\n      fontFamily: \"accent\",\n      textAlign: \"right\",\n      \"aria-hidden\": \"true\",\n      children: `${containerProgress.percent_complete}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: {\n        _: pxRem(96),\n        sm: pxRem(72)\n      },\n      height: pxRem(8),\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        percent: percentComplete,\n        pattern: \"diagonalStripesDense\",\n        variant: \"yellow\",\n        size: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(FlexBox, {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    className: className,\n    children: containerProgress ? renderProgress() : renderProgressLoading()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_c4 = ContainerProgressBar;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PercentageBox\");\n$RefreshReg$(_c2, \"PercentageLoading\");\n$RefreshReg$(_c3, \"ProgressBarLoading\");\n$RefreshReg$(_c4, \"ContainerProgressBar\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Dashboard/ProgressBar.tsx"],"names":["Box","FlexBox","ProgressBar","pxRem","styled","React","LoadingBox","PercentageBox","PercentageLoading","ProgressBarLoading","ContainerProgressBar","containerProgress","className","renderProgressLoading","percentComplete","percent_complete","renderProgress","_","sm"],"mappings":";AAAA,SAASA,GAAT,EAAcC,OAAd,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;;AAOA,MAAMC,aAAa,GAAGH,MAAM,CAACJ,GAAD,CAAM;AAClC,mBAAmBG,KAAK,CAAC,CAAD,CAAI;AAC5B,CAFA;KAAMI,a;AAIN,OAAO,MAAMC,iBAAiB,GAAGJ,MAAM,CAACE,UAAD,CAAa;AACpD,WAAWH,KAAK,CAAC,EAAD,CAAK;AACrB;AACA,mBAAmBA,KAAK,CAAC,CAAD,CAAI;AAC5B,CAJO;MAAMK,iB;AAMb,OAAO,MAAMC,kBAAkB,GAAGL,MAAM,CAACE,UAAD,CAAa;AACrD,WAAWH,KAAK,CAAC,EAAD,CAAK;AACrB;AACA,CAHO;MAAMM,kB;AAUb,OAAO,MAAMC,oBAAyD,GAAG,CAAC;AACxEC,EAAAA,iBADwE;AAExEC,EAAAA;AAFwE,CAAD,KAGnE;AACJ,QAAMC,qBAAqB,GAAG,mBAC5B,QAAC,OAAD;AACE,IAAA,UAAU,EAAC,UADb;AAEE,IAAA,aAAa,EAAC,QAFhB;AAGE,mBAAY,kBAHd;AAAA,4BAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,QAAMC,eAAe,GAAG,CAAAH,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEI,gBAAnB,KAAuC,CAA/D;;AAEA,QAAMC,cAAc,GAAG,mBACrB;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,UAAU,EAAC,OAHb;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,SAAS,EAAC,OALZ;AAME,qBAAY,MANd;AAAA,gBAQI,GAAEL,iBAAiB,CAAEI,gBAAiB;AAR1C;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,CAAC,EAAEd,KAAK,CAAC,EAAD,CAAV;AAAgBe,QAAAA,EAAE,EAAEf,KAAK,CAAC,EAAD;AAAzB,OAAZ;AAA6C,MAAA,MAAM,EAAEA,KAAK,CAAC,CAAD,CAA1D;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAEW,eADX;AAEE,QAAA,OAAO,EAAC,sBAFV;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;;AAuBA,sBACE,QAAC,OAAD;AAAS,IAAA,aAAa,EAAC,QAAvB;AAAgC,IAAA,UAAU,EAAC,UAA3C;AAAsD,IAAA,SAAS,EAAEF,SAAjE;AAAA,cACGD,iBAAiB,GAAGK,cAAc,EAAjB,GAAsBH,qBAAqB;AAD/D;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7CM;MAAMH,oB","sourcesContent":["import { Box, FlexBox, ProgressBar } from '@codecademy/gamut';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { LoadingBox } from 'components/LoadingBox';\n\n\n\nexport interface ContainerProgress {\n    percent_complete: number\n}\nconst PercentageBox = styled(Box)`\n  margin-bottom: ${pxRem(2)};\n`;\n\nexport const PercentageLoading = styled(LoadingBox)`\n  width: ${pxRem(38)};\n  height: 1.25rem;\n  margin-bottom: ${pxRem(6)};\n`;\n\nexport const ProgressBarLoading = styled(LoadingBox)`\n  width: ${pxRem(96)};\n  height: 0.5rem;\n`;\n\nexport type ContainerProgressBarProps = {\n  containerProgress?: ContainerProgress;\n  className?: string;\n};\n\nexport const ContainerProgressBar: React.FC<ContainerProgressBarProps> = ({\n  containerProgress,\n  className,\n}) => {\n  const renderProgressLoading = () => (\n    <FlexBox\n      alignItems=\"flex-end\"\n      flexDirection=\"column\"\n      data-testid=\"progress-loading\"\n    >\n      <PercentageLoading />\n      <ProgressBarLoading />\n    </FlexBox>\n  );\n\n  const percentComplete = containerProgress?.percent_complete || 0;\n\n  const renderProgress = () => (\n    <>\n      <PercentageBox\n        as=\"span\"\n        fontSize={16}\n        fontWeight=\"title\"\n        fontFamily=\"accent\"\n        textAlign=\"right\"\n        aria-hidden=\"true\"\n      >\n        {`${containerProgress!.percent_complete}%`}\n      </PercentageBox>\n      <Box width={{ _: pxRem(96), sm: pxRem(72) }} height={pxRem(8)}>\n        <ProgressBar\n          percent={percentComplete}\n          pattern=\"diagonalStripesDense\"\n          variant=\"yellow\"\n          size=\"medium\"\n        />\n      </Box>\n    </>\n  );\n\n  return (\n    <FlexBox flexDirection=\"column\" alignItems=\"flex-end\" className={className}>\n      {containerProgress ? renderProgress() : renderProgressLoading()}\n    </FlexBox>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}