{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/AccordionButton/index.tsx\";\nimport { ArrowChevronDownIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React from 'react';\nimport { ButtonDeprecated } from '../ButtonDeprecated';\nimport { ButtonDeprecatedBase } from '../ButtonDeprecatedBase';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonThemes = {\n  blue: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'white'\n    }\n  },\n  plain: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'brand-dark-blue'\n    }\n  },\n  yellow: {\n    component: ButtonDeprecatedBase,\n    props: {}\n  }\n};\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionButton = ({\n  children,\n  className,\n  expanded,\n  size = 'normal',\n  theme = 'plain',\n  ...baseProps\n}) => {\n  const {\n    component: ButtonComponent,\n    props\n  } = buttonThemes[theme];\n  const iconSize = size === 'large' ? 30 : undefined;\n  return /*#__PURE__*/_jsxDEV(ButtonComponent, {\n    \"aria-expanded\": expanded,\n    className: cx(styles.accordionButton, styles[theme], styles[size], className),\n    ...baseProps,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.children,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArrowChevronDownIcon, {\n      className: cx(styles.expansionIcon, expanded && styles.expansionIconExpanded),\n      height: iconSize,\n      width: iconSize,\n      \"aria-hidden\": true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = AccordionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionButton\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/AccordionButton/index.tsx"],"names":["ArrowChevronDownIcon","cx","React","ButtonDeprecated","ButtonDeprecatedBase","styles","buttonThemes","blue","component","props","flat","theme","plain","yellow","AccordionButton","children","className","expanded","size","baseProps","ButtonComponent","iconSize","undefined","accordionButton","expansionIcon","expansionIconExpanded"],"mappings":";AAAA,SAASA,oBAAT,QAAqC,yBAArC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SACEC,oBADF,QAGO,yBAHP;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;;AAuBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,gBADP;AAEJM,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,KAAK,EAAE;AAFF;AAFH,GADa;AAQnBC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,SAAS,EAAEL,gBADN;AAELM,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,KAAK,EAAE;AAFF;AAFF,GARY;AAenBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,SAAS,EAAEJ,oBADL;AAENK,IAAAA,KAAK,EAAE;AAFD;AAfW,CAArB;AAqBA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,eAA+C,GAAG,CAAC;AAC9DC,EAAAA,QAD8D;AAE9DC,EAAAA,SAF8D;AAG9DC,EAAAA,QAH8D;AAI9DC,EAAAA,IAAI,GAAG,QAJuD;AAK9DP,EAAAA,KAAK,GAAG,OALsD;AAM9D,KAAGQ;AAN2D,CAAD,KAOzD;AACJ,QAAM;AAAEX,IAAAA,SAAS,EAAEY,eAAb;AAA8BX,IAAAA;AAA9B,MAAwCH,YAAY,CAACK,KAAD,CAA1D;AACA,QAAMU,QAAQ,GAAGH,IAAI,KAAK,OAAT,GAAmB,EAAnB,GAAwBI,SAAzC;AAEA,sBACE,QAAC,eAAD;AACE,qBAAeL,QADjB;AAEE,IAAA,SAAS,EAAEhB,EAAE,CACXI,MAAM,CAACkB,eADI,EAEXlB,MAAM,CAACM,KAAD,CAFK,EAGXN,MAAM,CAACa,IAAD,CAHK,EAIXF,SAJW,CAFf;AAAA,OAQMG,SARN;AAAA,OASMV,KATN;AAAA,4BAWE;AAAM,MAAA,SAAS,EAAEJ,MAAM,CAACU,QAAxB;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,oBAAD;AACE,MAAA,SAAS,EAAEd,EAAE,CACXI,MAAM,CAACmB,aADI,EAEXP,QAAQ,IAAIZ,MAAM,CAACoB,qBAFR,CADf;AAKE,MAAA,MAAM,EAAEJ,QALV;AAME,MAAA,KAAK,EAAEA,QANT;AAOE;AAPF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAnCM;KAAMP,e","sourcesContent":["import { ArrowChevronDownIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React from 'react';\n\nimport { ButtonDeprecated } from '../ButtonDeprecated';\nimport {\n  ButtonDeprecatedBase,\n  ButtonDeprecatedBaseProps,\n} from '../ButtonDeprecatedBase';\nimport styles from './styles.module.scss';\n\nexport type AccordionButtonSize = 'normal' | 'large';\n\nexport type AccordionButtonTheme = 'blue' | 'plain' | 'yellow';\n\nexport type AccordionButtonProps = ButtonDeprecatedBaseProps & {\n  /**\n   * Whether the button should display as open or closed.\n   */\n  expanded?: boolean;\n\n  /**\n   * Determines the size of the button.\n   */\n  size?: 'normal' | 'large';\n\n  /**\n   * Visual theme for the clickable header button.\n   */\n  theme?: 'blue' | 'plain' | 'yellow';\n};\n\nconst buttonThemes = {\n  blue: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'white',\n    },\n  },\n  plain: {\n    component: ButtonDeprecated,\n    props: {\n      flat: true,\n      theme: 'brand-dark-blue',\n    },\n  },\n  yellow: {\n    component: ButtonDeprecatedBase,\n    props: {},\n  },\n} as const;\n\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionButton: React.FC<AccordionButtonProps> = ({\n  children,\n  className,\n  expanded,\n  size = 'normal',\n  theme = 'plain',\n  ...baseProps\n}) => {\n  const { component: ButtonComponent, props } = buttonThemes[theme];\n  const iconSize = size === 'large' ? 30 : undefined;\n\n  return (\n    <ButtonComponent\n      aria-expanded={expanded}\n      className={cx(\n        styles.accordionButton,\n        styles[theme],\n        styles[size],\n        className\n      )}\n      {...baseProps}\n      {...props}\n    >\n      <span className={styles.children}>{children}</span>\n      <ArrowChevronDownIcon\n        className={cx(\n          styles.expansionIcon,\n          expanded && styles.expansionIconExpanded\n        )}\n        height={iconSize}\n        width={iconSize}\n        aria-hidden\n      />\n    </ButtonComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}