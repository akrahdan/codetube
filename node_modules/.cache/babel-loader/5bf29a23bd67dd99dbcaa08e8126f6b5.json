{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AccordionArea}from'../AccordionArea';import{AccordionButton}from'../AccordionButton';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */export var Accordion=function Accordion(_ref){var children=_ref.children,className=_ref.className,initiallyExpanded=_ref.initiallyExpanded,_onClick=_ref.onClick,size=_ref.size,theme=_ref.theme,top=_ref.top;var _useState=useState(!!initiallyExpanded),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1];var expandRenderer=function expandRenderer(renderer){return renderer instanceof Function?renderer(expanded):renderer;};return/*#__PURE__*/_jsx(AccordionArea,{className:className,expanded:expanded,top:/*#__PURE__*/_jsx(AccordionButton,{expanded:expanded,onClick:function onClick(){setExpanded(!expanded);_onClick===null||_onClick===void 0?void 0:_onClick(!expanded);},size:size,theme:theme,children:expandRenderer(top)}),children:expandRenderer(children)});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Accordion/index.tsx"],"names":["React","useState","AccordionArea","AccordionButton","Accordion","children","className","initiallyExpanded","onClick","size","theme","top","expanded","setExpanded","expandRenderer","renderer","Function"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OACEC,eADF,KAIO,oBAJP,C,2CA8CA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAQ7C,IAPJC,CAAAA,QAOI,MAPJA,QAOI,CANJC,SAMI,MANJA,SAMI,CALJC,iBAKI,MALJA,iBAKI,CAJJC,QAII,MAJJA,OAII,CAHJC,IAGI,MAHJA,IAGI,CAFJC,KAEI,MAFJA,KAEI,CADJC,GACI,MADJA,GACI,eAC4BV,QAAQ,CAAC,CAAC,CAACM,iBAAH,CADpC,wCACGK,QADH,eACaC,WADb,eAEJ,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,QACrBA,CAAAA,QAAQ,WAAYC,CAAAA,QAApB,CAA+BD,QAAQ,CAACH,QAAD,CAAvC,CAAoDG,QAD/B,EAAvB,CAGA,mBACE,KAAC,aAAD,EACE,SAAS,CAAET,SADb,CAEE,QAAQ,CAAEM,QAFZ,CAGE,GAAG,cACD,KAAC,eAAD,EACE,QAAQ,CAAEA,QADZ,CAEE,OAAO,CAAE,kBAAM,CACbC,WAAW,CAAC,CAACD,QAAF,CAAX,CACAJ,QAAO,OAAP,EAAAA,QAAO,SAAP,QAAAA,QAAO,CAAG,CAACI,QAAJ,CAAP,CACD,CALH,CAME,IAAI,CAAEH,IANR,CAOE,KAAK,CAAEC,KAPT,UASGI,cAAc,CAACH,GAAD,CATjB,EAJJ,UAiBGG,cAAc,CAACT,QAAD,CAjBjB,EADF,CAqBD,CAlCM","sourcesContent":["import React, { useState } from 'react';\n\nimport { AccordionArea } from '../AccordionArea';\nimport {\n  AccordionButton,\n  AccordionButtonSize,\n  AccordionButtonTheme,\n} from '../AccordionButton';\n\nexport type ChildrenOrExpandedRender =\n  | React.ReactNode\n  | ((expanded: boolean) => React.ReactNode);\n\nexport type AccordionProps = {\n  children: ChildrenOrExpandedRender;\n\n  /**\n   * CSS class name added to the root area container.\n   */\n  className?: string;\n\n  /**\n   * Whether the accordion should start off with expanded state.\n   */\n  initiallyExpanded?: boolean;\n\n  /**\n   * Called when the top button is clicked.\n   *\n   * @param expanding - New expanded state the accordion will transition to.\n   */\n  onClick?: (expanding: boolean) => void;\n\n  /**\n   * Visual size of the top button.\n   */\n  size?: AccordionButtonSize;\n\n  /**\n   * Visual theme of the top button.\n   */\n  theme?: AccordionButtonTheme;\n\n  /**\n   * Contents to place within the top button.\n   */\n  top: ChildrenOrExpandedRender;\n};\n\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const Accordion: React.FC<AccordionProps> = ({\n  children,\n  className,\n  initiallyExpanded,\n  onClick,\n  size,\n  theme,\n  top,\n}) => {\n  const [expanded, setExpanded] = useState(!!initiallyExpanded);\n  const expandRenderer = (renderer: ChildrenOrExpandedRender) =>\n    renderer instanceof Function ? renderer(expanded) : renderer;\n\n  return (\n    <AccordionArea\n      className={className}\n      expanded={expanded}\n      top={\n        <AccordionButton\n          expanded={expanded}\n          onClick={() => {\n            setExpanded(!expanded);\n            onClick?.(!expanded);\n          }}\n          size={size}\n          theme={theme}\n        >\n          {expandRenderer(top)}\n        </AccordionButton>\n      }\n    >\n      {expandRenderer(children)}\n    </AccordionArea>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}