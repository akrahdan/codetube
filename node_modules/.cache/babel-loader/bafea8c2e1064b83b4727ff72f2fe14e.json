{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nexport const store = configureStore({\n  reducer: {}\n});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/store/index.ts"],"names":["configureStore","store","reducer"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AAkBA,OAAO,MAAMC,KAAK,GAAGD,cAAc,CAAC;AAChCE,EAAAA,OAAO,EAAE;AADuB,CAAD,CAA5B","sourcesContent":["import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { connectRoutes } from 'redux-first-router';\nimport { SiteState } from 'state/types';\n\nexport type StoreRequestPath = {\n    pathname: string;\n}\n\nexport type ConfigureStoreOptions = {\n    requestPath: StoreRequestPath;\n    initialState: SiteState;\n    reduceInitialState: (initialState: SiteState) => SiteState;\n    routesMap: any;\n    rootReducers: any;\n    rootSaga?: any;\n    hotReloadPath?: string;\n\n}\nexport const store = configureStore({\n    reducer: {\n\n    }\n})\n\nexport type AppDispatch = typeof store.dispatch\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n ReturnType, \n RootState,\n unknown,\n Action<string>\n >;"]},"metadata":{},"sourceType":"module"}