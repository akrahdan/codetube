{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuTarget/index.tsx\";\nimport { Box, FlexBox } from '@codecademy/gamut';\nimport { ArrowChevronRightIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { AppHeaderAvatar } from '../../AppHeader/AppHeaderElements/AppHeaderAvatar';\nimport { focusStyles, hoverStyles, textButtonStyles } from '../../AppHeader/AppHeaderElements/SharedStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppHeaderTextTargetButton = styled.button`\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n_c = AppHeaderTextTargetButton;\nconst AppHeaderLinkButtonInner = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n_c2 = AppHeaderLinkButtonInner;\nconst DisplayNameText = styled.div`\n  max-width: 70vw;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n_c3 = DisplayNameText;\nexport const AppHeaderSubMenuTarget = ({\n  item,\n  openSubMenu\n}) => {\n  const getIcon = () => {\n    if (item.type === 'dropdown') {\n      const Icon = item.icon;\n      return Icon && /*#__PURE__*/_jsxDEV(Icon, {\n        size: 24,\n        \"aria-hidden\": true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AppHeaderAvatar, {\n      avatarSize: 24,\n      imageUrl: item.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppHeaderTextTargetButton, {\n    \"data-testid\": item.dataTestId,\n    onClick: event => openSubMenu(event, item),\n    \"aria-label\": `open ${item} submenu`,\n    children: /*#__PURE__*/_jsxDEV(AppHeaderLinkButtonInner, {\n      lineHeight: \"base\",\n      minWidth: \"0\",\n      py: 16,\n      textAlign: \"left\",\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n          mr: 16,\n          children: getIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), item.type === 'profile-dropdown' ? /*#__PURE__*/_jsxDEV(DisplayNameText, {\n          children: item.userDisplayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : item.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n        alignSelf: \"end\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(ArrowChevronRightIcon, {\n            size: 12,\n            \"aria-hidden\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c4 = AppHeaderSubMenuTarget;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AppHeaderTextTargetButton\");\n$RefreshReg$(_c2, \"AppHeaderLinkButtonInner\");\n$RefreshReg$(_c3, \"DisplayNameText\");\n$RefreshReg$(_c4, \"AppHeaderSubMenuTarget\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuTarget/index.tsx"],"names":["Box","FlexBox","ArrowChevronRightIcon","styled","React","AppHeaderAvatar","focusStyles","hoverStyles","textButtonStyles","AppHeaderTextTargetButton","button","AppHeaderLinkButtonInner","DisplayNameText","div","AppHeaderSubMenuTarget","item","openSubMenu","getIcon","type","Icon","icon","avatar","dataTestId","event","userDisplayName","text"],"mappings":";AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,mBAA7B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,mDAAhC;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,gDAJP;;AAYA,MAAMC,yBAAyB,GAAGN,MAAM,CAACO,MAAO;AAChD;AACA,IAAIF,gBAAiB;AACrB,IAAID,WAAY;AAChB,IAAID,WAAY;AAChB,CALA;KAAMG,yB;AAON,MAAME,wBAAwB,GAAGR,MAAM,CAACH,GAAD,CAAM;AAC7C;AACA;AACA;AACA,CAJA;MAAMW,wB;AAMN,MAAMC,eAAe,GAAGT,MAAM,CAACU,GAAI;AACnC;AACA;AACA;AACA,CAJA;MAAMD,e;AAMN,OAAO,MAAME,sBAA6D,GAAG,CAAC;AAC5EC,EAAAA,IAD4E;AAE5EC,EAAAA;AAF4E,CAAD,KAGvE;AACJ,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIF,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC5B,YAAMC,IAAI,GAAGJ,IAAI,CAACK,IAAlB;AACA,aAAOD,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAf;AACD;;AACD,wBAAO,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,EAA7B;AAAiC,MAAA,QAAQ,EAAEJ,IAAI,CAACM;AAAhD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAND;;AAQA,sBACE,QAAC,yBAAD;AACE,mBAAaN,IAAI,CAACO,UADpB;AAEE,IAAA,OAAO,EAAGC,KAAD,IAA6BP,WAAW,CAACO,KAAD,EAAQR,IAAR,CAFnD;AAGE,kBAAa,QAAOA,IAAK,UAH3B;AAAA,2BAKE,QAAC,wBAAD;AACE,MAAA,UAAU,EAAC,MADb;AAEE,MAAA,QAAQ,EAAC,GAFX;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,SAAS,EAAC,MAJZ;AAKE,MAAA,OAAO,EAAC,MALV;AAAA,8BAOE,QAAC,OAAD;AAAS,QAAA,UAAU,EAAC,QAApB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE,EAAb;AAAA,oBAAkBE,OAAO;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGF,IAAI,CAACG,IAAL,KAAc,kBAAd,gBACC,QAAC,eAAD;AAAA,oBAAkBH,IAAI,CAACS;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD,GAGCT,IAAI,CAACU,IANT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,KAAnB;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,qBAAD;AAAuB,YAAA,IAAI,EAAE,EAA7B;AAAiC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA1CM;MAAMX,sB","sourcesContent":["import { Box, FlexBox } from '@codecademy/gamut';\nimport { ArrowChevronRightIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { AppHeaderAvatar } from '../../AppHeader/AppHeaderElements/AppHeaderAvatar';\nimport {\n  focusStyles,\n  hoverStyles,\n  textButtonStyles,\n} from '../../AppHeader/AppHeaderElements/SharedStyles';\nimport { AppHeaderDropdownItem } from '../../AppHeader/AppHeaderElements/types';\n\nexport type AppHeaderSubMenuTargetProps = {\n  item: AppHeaderDropdownItem;\n  openSubMenu: (event: React.MouseEvent, item: AppHeaderDropdownItem) => void;\n};\n\nconst AppHeaderTextTargetButton = styled.button`\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n\nconst AppHeaderLinkButtonInner = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst DisplayNameText = styled.div`\n  max-width: 70vw;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AppHeaderSubMenuTarget: React.FC<AppHeaderSubMenuTargetProps> = ({\n  item,\n  openSubMenu,\n}) => {\n  const getIcon = () => {\n    if (item.type === 'dropdown') {\n      const Icon = item.icon;\n      return Icon && <Icon size={24} aria-hidden />;\n    }\n    return <AppHeaderAvatar avatarSize={24} imageUrl={item.avatar} />;\n  };\n\n  return (\n    <AppHeaderTextTargetButton\n      data-testid={item.dataTestId}\n      onClick={(event: React.MouseEvent) => openSubMenu(event, item)}\n      aria-label={`open ${item} submenu`}\n    >\n      <AppHeaderLinkButtonInner\n        lineHeight=\"base\"\n        minWidth=\"0\"\n        py={16}\n        textAlign=\"left\"\n        display=\"flex\"\n      >\n        <FlexBox alignItems=\"center\">\n          <FlexBox mr={16}>{getIcon()}</FlexBox>\n\n          {item.type === 'profile-dropdown' ? (\n            <DisplayNameText>{item.userDisplayName}</DisplayNameText>\n          ) : (\n            item.text\n          )}\n        </FlexBox>\n        <FlexBox alignSelf=\"end\">\n          <Box>\n            <ArrowChevronRightIcon size={12} aria-hidden />\n          </Box>\n        </FlexBox>\n      </AppHeaderLinkButtonInner>\n    </AppHeaderTextTargetButton>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}