{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from \"services/courses\";\nexport const initialState = {\n  sections: null,\n  lectures: null,\n  resources: null\n};\nexport const curriculumSplice = createSlice({\n  name: \"curriculum\",\n  initialState,\n  reducers: {// addSection: (state, action: PayloadAction<Section>) => {\n    //   state.sections.push(action.payload);\n    // },\n    // addLecture: (state, action: PayloadAction<Lecture>) => {\n    //   state.lectures = action.payload;\n    // },\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = payload;\n    }).addMatcher(coursesApi.endpoints.fetchSections.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = payload;\n    }).addMatcher(coursesApi.endpoints.fetchLectures.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.lectures = payload;\n    }).addMatcher(coursesApi.endpoints.createLecture.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.lectures = payload;\n    }).addMatcher(coursesApi.endpoints.editSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      const sections = state.sections.map(section => {\n        if (section.id == payload.id) {\n          return payload;\n        }\n\n        return section;\n      });\n      state.sections = sections;\n    }).addMatcher(coursesApi.endpoints.editLecture.matchFulfilled, (state, {\n      payload\n    }) => {\n      const lectures = state.lectures.map(lecture => {\n        if (lecture.id == payload.id) {\n          return payload;\n        }\n\n        return lecture;\n      });\n      state.lectures = lectures;\n    }).addMatcher(coursesApi.endpoints.deleteSection.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.sections = state.sections.filter(section => section.id != payload.id);\n    }).addMatcher(coursesApi.endpoints.deleteLecture.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.lectures = state.lectures.filter(lecture => lecture.id != payload.id);\n    });\n  }\n}); // export const { addSection, addLecture } = curriculumSplice.actions;\n\nexport default curriculumSplice.reducer;\nexport const selectSections = state => state.curriculum.sections;\nexport const selectLectures = state => state.curriculum.lectures;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/curriculum/currriculumSplice.ts"],"names":["createSlice","coursesApi","initialState","sections","lectures","resources","curriculumSplice","name","reducers","extraReducers","builder","addMatcher","endpoints","createSection","matchFulfilled","state","payload","fetchSections","fetchLectures","createLecture","editSection","map","section","id","editLecture","lecture","deleteSection","filter","deleteLecture","reducer","selectSections","curriculum","selectLectures"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { coursesApi, Lecture, Section} from \"services/courses\";\nimport { AppThunk, RootState } from \"store\";\nimport type { MediaResponse } from \"services/courses\";\nexport interface CurriculumState {\n  sections: Section[];\n  lectures: Lecture[];\n  resources: MediaResponse[]\n}\n\n\n\nexport const initialState: CurriculumState = {\n  sections: null,\n  lectures: null,\n  resources: null\n};\n\nexport const curriculumSplice = createSlice({\n  name: \"curriculum\",\n  initialState,\n  reducers: {\n    // addSection: (state, action: PayloadAction<Section>) => {\n    //   state.sections.push(action.payload);\n    // },\n    // addLecture: (state, action: PayloadAction<Lecture>) => {\n    //   state.lectures = action.payload;\n    // },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createSection.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.fetchSections.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.fetchLectures.matchFulfilled,\n        (state, { payload }) => {\n          state.lectures = payload;\n          \n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.createLecture.matchFulfilled,\n        (state, { payload }) => {\n          state.lectures = payload;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.editSection.matchFulfilled,\n        (state, { payload }) => {\n          const sections = state.sections.map((section) => {\n            if (section.id == payload.id) {\n              return payload;\n            }\n            return section;\n          });\n          state.sections = sections;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.editLecture.matchFulfilled,\n        (state, { payload }) => {\n          const lectures = state.lectures.map((lecture) => {\n            if (lecture.id == payload.id) {\n              return payload;\n            }\n            return lecture;\n          });\n          state.lectures = lectures;\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.deleteSection.matchFulfilled,\n        (state, { payload }) => {\n          state.sections = state.sections.filter(\n            (section) => section.id != payload.id\n          );\n        }\n      )\n      .addMatcher(\n        coursesApi.endpoints.deleteLecture.matchFulfilled,\n        (state, { payload }) => {\n          state.lectures = state.lectures.filter(\n            (lecture) => lecture.id != payload.id\n          );\n        }\n      );\n  },\n});\n\n// export const { addSection, addLecture } = curriculumSplice.actions;\n\nexport default curriculumSplice.reducer;\nexport const selectSections = (state: RootState) => state.curriculum.sections;\nexport const selectLectures = (state: RootState) => state.curriculum.lectures;\n"]},"metadata":{},"sourceType":"module"}