{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/PathMarketingPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { helmetJsonLdProp } from 'react-schemaorg';\nimport styles from './styles/index.module.scss';\nimport { Header } from './Header';\nimport { Supporting } from './Supporting';\nimport { Projects } from './Projects';\nimport { Syllabus } from './Syllabus';\nimport { CTASection } from './CTASection';\nimport { Recommendations } from './Recommendations';\nimport { SignupSection } from 'portal/scenes/SignupSection';\nimport { SiginSection } from 'portal/scenes/SignupSection/SigninSection';\nimport { SignupModal } from 'portal/scenes/Modal/SignupModal';\nimport { Payment } from 'portal/scenes/Payments';\nimport { Modal } from 'portal/scenes/Modal';\nimport { selectModal } from 'state/modals/modalSlice';\nimport { useAppSelector } from 'store/hooks';\nimport { useFetchProjectsQuery, useCartUpdateMutation } from 'services/projects';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PathMarketingPage = ({\n  isAnonymous,\n  isPaidLanding,\n  showTrialCTA\n}) => {\n  _s();\n\n  const modal = useAppSelector(selectModal);\n  const [pay, setPay] = useState(false);\n  const {\n    data: projects\n  } = useFetchProjectsQuery();\n  const [cartUpdate] = useCartUpdateMutation();\n  const leadProject = projects && projects.find(element => element.lead == true);\n\n  const ctaCallback = () => {\n    cartUpdate({\n      project_id: leadProject.id\n    }).then(res => {\n      if (res.data && res.data.detail == \"added\") {\n        setPay(!pay);\n      }\n    });\n  };\n\n  const completionTime = \"24hrs\";\n  if (!leadProject) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.page,\n      \"data-testid\": \"path-marketing-page\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        script: [helmetJsonLdProp({\n          '@context': 'https://schema.org',\n          '@type': 'Course',\n          // name: path?.title,\n          // description: path?.short_description,\n          provider: {\n            '@type': 'Organization',\n            name: 'Codefluent',\n            sameAs: 'https://www.codefluent.org/'\n          },\n          educationalCredentialAwarded: 'Codefluent Certificate',\n          timeRequired: completionTime,\n          isAccessibleForFree: false\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        project: leadProject,\n        ctaCallback: ctaCallback,\n        isPaidLanding: isPaidLanding,\n        showTrialCTA: showTrialCTA,\n        useContentfulCTA: true,\n        isAnonymous: isAnonymous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Supporting, {\n        project: leadProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {\n        courses: leadProject.courses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Syllabus, {\n        pathId: `${leadProject.id}`,\n        tracks: leadProject.syllabuses,\n        ctaCallback: ctaCallback,\n        isPaidLanding: isPaidLanding,\n        showTrialCTA: false,\n        useContentfulCTA: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CTASection, {\n        pathId: `${leadProject.id}`,\n        ctaCallback: ctaCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recommendations, {\n        related: leadProject.related,\n        pathId: `${leadProject.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), modal == 'signup' && /*#__PURE__*/_jsxDEV(SignupModal, {\n      onClose: true,\n      children: /*#__PURE__*/_jsxDEV(SignupSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }, this), modal == 'login' && /*#__PURE__*/_jsxDEV(SignupModal, {\n      children: /*#__PURE__*/_jsxDEV(SiginSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 28\n    }, this), pay && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(Payment, {\n        onClose: () => setPay(!pay)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PathMarketingPage, \"siR8rSsqZp5to5Mu+xuGOWeiTU8=\", false, function () {\n  return [useAppSelector, useFetchProjectsQuery, useCartUpdateMutation];\n});\n\n_c = PathMarketingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathMarketingPage\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/PathMarketingPage.tsx"],"names":["React","useState","Helmet","helmetJsonLdProp","styles","Header","Supporting","Projects","Syllabus","CTASection","Recommendations","SignupSection","SiginSection","SignupModal","Payment","Modal","selectModal","useAppSelector","useFetchProjectsQuery","useCartUpdateMutation","PathMarketingPage","isAnonymous","isPaidLanding","showTrialCTA","modal","pay","setPay","data","projects","cartUpdate","leadProject","find","element","lead","ctaCallback","project_id","id","then","res","detail","completionTime","page","provider","name","sameAs","educationalCredentialAwarded","timeRequired","isAccessibleForFree","courses","syllabuses","related"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { helmetJsonLdProp } from 'react-schemaorg';\nimport { Course } from 'schema-dts';\nimport styles from './styles/index.module.scss';\n\nimport { Header } from './Header';\nimport { Supporting } from './Supporting';\nimport { Projects } from './Projects';\n\nimport { Syllabus } from './Syllabus';\nimport { CTASection } from './CTASection';\nimport { Recommendations } from './Recommendations';\nimport { SignupSection } from 'portal/scenes/SignupSection';\nimport { SiginSection } from 'portal/scenes/SignupSection/SigninSection';\nimport { SignupModal } from 'portal/scenes/Modal/SignupModal';\nimport { Payment } from 'portal/scenes/Payments'\nimport { Modal } from 'portal/scenes/Modal';\nimport { selectModal } from 'state/modals/modalSlice';\n\nimport { useAppSelector } from 'store/hooks';\nimport { useFetchProjectsQuery, useCartUpdateMutation, Cart } from 'services/projects';\n\n\nexport type PageProps = {\n  fetchPathAndTrackData?: () => void;\n  isPaidLanding: boolean;\n  // path: Path;\n  // location: RouteLocation;\n  isAnonymous: boolean;\n  showTrialCTA: boolean;\n\n};\n\nexport const PathMarketingPage: React.FC<PageProps> = ({\n  isAnonymous,\n  isPaidLanding,\n  showTrialCTA\n}) => {\n\n  const modal = useAppSelector(selectModal)\n  const [pay, setPay] = useState(false);\n  const { data: projects } = useFetchProjectsQuery()\n  const [ cartUpdate ] = useCartUpdateMutation()\n  const leadProject = projects && projects.find(element => element.lead == true)\n\n  const ctaCallback = () => {\n    cartUpdate({\n      project_id: leadProject.id\n    }).then((res: { data: Cart}) => {\n      if(res.data && res.data.detail == \"added\") {\n        setPay(!pay)\n      }\n    })\n    \n  };\n  const completionTime = \"24hrs\"\n  if (!leadProject) return null\n\n  return (\n    <>\n      <main className={styles.page} data-testid=\"path-marketing-page\">\n        <Helmet\n          script={[\n            helmetJsonLdProp<Course>({\n              '@context': 'https://schema.org',\n              '@type': 'Course',\n              // name: path?.title,\n              // description: path?.short_description,\n              provider: {\n                '@type': 'Organization',\n                name: 'Codefluent',\n                sameAs: 'https://www.codefluent.org/',\n              },\n              educationalCredentialAwarded: 'Codefluent Certificate',\n              timeRequired: completionTime,\n              isAccessibleForFree: false,\n            }),\n          ]}\n        />\n        <Header\n          project={leadProject}\n          ctaCallback={ctaCallback}\n          isPaidLanding={isPaidLanding}\n          showTrialCTA={showTrialCTA}\n          useContentfulCTA={true}\n          isAnonymous={isAnonymous}\n        />\n        <Supporting project={leadProject} />\n        <Projects courses={leadProject.courses} />\n\n        <Syllabus\n          pathId={`${leadProject.id}`}\n          tracks={leadProject.syllabuses}\n          ctaCallback={ctaCallback}\n          isPaidLanding={isPaidLanding}\n          showTrialCTA={false}\n          useContentfulCTA={false}\n        />\n\n        <CTASection\n          pathId={`${leadProject.id}`}\n          ctaCallback={ctaCallback}\n\n        />\n        <Recommendations related={leadProject.related} pathId={`${leadProject.id}`} />\n\n\n      </main>\n\n      {modal == 'signup' && <SignupModal onClose>\n        <SignupSection />\n      </SignupModal>}\n\n      {modal == 'login' && <SignupModal >\n        <SiginSection />\n      </SignupModal>}\n\n      {pay && <Modal>\n        <Payment  onClose={() => setPay(!pay)}/>\n      </Modal>}\n\n     \n\n   \n\n\n\n    </>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}