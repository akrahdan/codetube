{"ast":null,"code":"import React from 'react';\nimport { Select } from '../../../Form';\nexport var GridFormSelectInput = function GridFormSelectInput(_ref) {\n  var className = _ref.className,\n      error = _ref.error,\n      field = _ref.field,\n      register = _ref.register,\n      showRequired = _ref.showRequired;\n  return /*#__PURE__*/React.createElement(Select, {\n    defaultValue: field.defaultValue,\n    disabled: field.disabled,\n    className: className,\n    error: error,\n    htmlFor: field.name,\n    name: field.name,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      return (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, event.target.value);\n    },\n    ref: register(field.validation),\n    options: field.options,\n    id: field.id,\n    \"aria-invalid\": error,\n    \"aria-required\": showRequired\n  });\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/@codecademy/gamut/dist/GridForm/GridFormInputGroup/GridFormSelectInput/index.js"],"names":["React","Select","GridFormSelectInput","_ref","className","error","field","register","showRequired","createElement","defaultValue","disabled","htmlFor","name","onChange","event","_field$onUpdate","onUpdate","call","target","value","ref","validation","options","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAO,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AAClE,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,YAAY,GAAGL,IAAI,CAACK,YAJxB;AAKA,SAAO,aAAaR,KAAK,CAACS,aAAN,CAAoBR,MAApB,EAA4B;AAC9CS,IAAAA,YAAY,EAAEJ,KAAK,CAACI,YAD0B;AAE9CC,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAF8B;AAG9CP,IAAAA,SAAS,EAAEA,SAHmC;AAI9CC,IAAAA,KAAK,EAAEA,KAJuC;AAK9CO,IAAAA,OAAO,EAAEN,KAAK,CAACO,IAL+B;AAM9CA,IAAAA,IAAI,EAAEP,KAAK,CAACO,IANkC;AAO9CC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC,UAAIC,eAAJ;;AAEA,aAAO,CAACA,eAAe,GAAGV,KAAK,CAACW,QAAzB,MAAuC,IAAvC,IAA+CD,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqFA,eAAe,CAACE,IAAhB,CAAqBZ,KAArB,EAA4BS,KAAK,CAACI,MAAN,CAAaC,KAAzC,CAA5F;AACD,KAX6C;AAY9CC,IAAAA,GAAG,EAAEd,QAAQ,CAACD,KAAK,CAACgB,UAAP,CAZiC;AAa9CC,IAAAA,OAAO,EAAEjB,KAAK,CAACiB,OAb+B;AAc9CC,IAAAA,EAAE,EAAElB,KAAK,CAACkB,EAdoC;AAe9C,oBAAgBnB,KAf8B;AAgB9C,qBAAiBG;AAhB6B,GAA5B,CAApB;AAkBD,CAxBM","sourcesContent":["import React from 'react';\nimport { Select } from '../../../Form';\nexport var GridFormSelectInput = function GridFormSelectInput(_ref) {\n  var className = _ref.className,\n      error = _ref.error,\n      field = _ref.field,\n      register = _ref.register,\n      showRequired = _ref.showRequired;\n  return /*#__PURE__*/React.createElement(Select, {\n    defaultValue: field.defaultValue,\n    disabled: field.disabled,\n    className: className,\n    error: error,\n    htmlFor: field.name,\n    name: field.name,\n    onChange: function onChange(event) {\n      var _field$onUpdate;\n\n      return (_field$onUpdate = field.onUpdate) === null || _field$onUpdate === void 0 ? void 0 : _field$onUpdate.call(field, event.target.value);\n    },\n    ref: register(field.validation),\n    options: field.options,\n    id: field.id,\n    \"aria-invalid\": error,\n    \"aria-required\": showRequired\n  });\n};"]},"metadata":{},"sourceType":"module"}