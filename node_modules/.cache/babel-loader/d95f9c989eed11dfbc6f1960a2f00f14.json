{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{MiniChevronDownIcon,MiniDeleteIcon}from'@codecademy/gamut-icons';import{Background,system,timing,variant}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import{motion}from'framer-motion';import React,{useState}from'react';import{Box}from'../Box';import{FillButton,IconButton}from'../Button';import{Truncate}from'../Truncate';import{alertVariants,placementVariants}from'./variants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AlertBanner=styled(Background)(placementVariants);AlertBanner.defaultProps={role:'status','aria-label':'alert box','aria-live':'polite'};var CollapsableContent=styled(motion.div)(system.css({py:4,overflowY:'hidden'}));CollapsableContent.defaultProps={variants:{collapsed:{height:'2rem'},expanded:{height:'auto'}},transition:{duration:0.2,ease:'easeInOut'}};var CollapseButton=styled(IconButton)(variant({prop:'toggleState',defaultVariant:'collapsed',base:{svg:{transition:\"\".concat(timing.fast,\" transform\")}},variants:{collapsed:{},expanded:{svg:{transform:'rotate(180deg)'}}}}));export var Alert=function Alert(_ref){var _alertVariants$type,_cta$children,_cta$children2;var children=_ref.children,cta=_ref.cta,onClose=_ref.onClose,hidden=_ref.hidden,_ref$type=_ref.type,type=_ref$type===void 0?'general':_ref$type,props=_objectWithoutProperties(_ref,[\"children\",\"cta\",\"onClose\",\"hidden\",\"type\"]);var isInline=props.placement==='inline';var activeAlert=(_alertVariants$type=alertVariants===null||alertVariants===void 0?void 0:alertVariants[type])!==null&&_alertVariants$type!==void 0?_alertVariants$type:alertVariants.general;var Icon=activeAlert.icon,bg=activeAlert.bg;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),truncated=_useState4[0],setTruncated=_useState4[1];var toggleState=expanded||isInline?'expanded':'collapsed';var tabIndex=hidden?-1:undefined;var content=isInline?children:/*#__PURE__*/_jsx(Truncate,{expanded:expanded,onTruncate:setTruncated,lines:1,children:children});var expandButton=truncated&&/*#__PURE__*/_jsx(CollapseButton,{tabIndex:tabIndex,\"aria-label\":expanded?'Collapse':'Expand',toggleState:toggleState,variant:\"secondary\",size:\"small\",icon:MiniChevronDownIcon,onClick:function onClick(){return setExpanded(!expanded);}});var ctaButton=cta&&Boolean((_cta$children=cta.children)!==null&&_cta$children!==void 0?_cta$children:cta.text)&&/*#__PURE__*/_jsx(Box,{gridColumn:['2',,'auto'],gridRow:['2',,'auto'],children:/*#__PURE__*/_jsx(FillButton,_objectSpread(_objectSpread({},cta),{},{mode:\"dark\",variant:\"secondary\",size:\"small\",tabIndex:tabIndex,children:(_cta$children2=cta.children)!==null&&_cta$children2!==void 0?_cta$children2:cta.text}))});return/*#__PURE__*/_jsxs(AlertBanner,_objectSpread(_objectSpread({bg:bg},props),{},{children:[/*#__PURE__*/_jsx(Icon,{size:32,\"aria-hidden\":true,p:8}),/*#__PURE__*/_jsx(CollapsableContent,{\"aria-expanded\":expanded,initial:toggleState,animate:toggleState,children:content}),/*#__PURE__*/_jsx(Box,{children:expandButton}),/*#__PURE__*/_jsx(Box,{children:ctaButton}),onClose&&/*#__PURE__*/_jsx(IconButton,{tabIndex:tabIndex,\"aria-label\":\"Close Alert\",variant:\"secondary\",size:\"small\",onClick:onClose,icon:MiniDeleteIcon})]}));};Alert.defaultProps={type:'general',placement:'floating'};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Alert/Alert.tsx"],"names":["MiniChevronDownIcon","MiniDeleteIcon","Background","system","timing","variant","styled","motion","React","useState","Box","FillButton","IconButton","Truncate","alertVariants","placementVariants","AlertBanner","defaultProps","role","CollapsableContent","div","css","py","overflowY","variants","collapsed","height","expanded","transition","duration","ease","CollapseButton","prop","defaultVariant","base","svg","fast","transform","Alert","children","cta","onClose","hidden","type","props","isInline","placement","activeAlert","general","Icon","icon","bg","setExpanded","truncated","setTruncated","toggleState","tabIndex","undefined","content","expandButton","ctaButton","Boolean","text"],"mappings":"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","sourcesContent":["import { MiniChevronDownIcon, MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { Background, system, timing, variant } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport React, { useState } from 'react';\n\nimport { Box } from '../Box';\nimport { FillButton, IconButton } from '../Button';\nimport { Truncate } from '../Truncate';\nimport { alertVariants, placementVariants } from './variants';\n\nexport type AlertType = keyof typeof alertVariants;\nexport type InlineAlertType = Exclude<AlertType, 'notice' | 'feature'>;\nexport type AlertPlacements = 'inline' | 'floating';\n\nexport type AlertBase = {\n  type?: AlertType;\n  placement?: AlertPlacements;\n  hidden?: boolean;\n  className?: string;\n  /** Callback to be called when the close icon is clicked */\n  onClose?: () => void;\n  /** Call to Action Configuration */\n  cta?: Omit<\n    React.ComponentProps<typeof FillButton>,\n    'variant' | 'mode' | 'size'\n  > & { text?: string };\n};\n\nexport type FloatingAlert = AlertBase & {\n  type?: AlertType;\n  placement?: 'floating';\n};\n\nexport type InlineAlert = AlertBase & {\n  type?: InlineAlertType;\n  placement?: 'inline';\n};\n\nexport type AlertProps = FloatingAlert | InlineAlert;\n\nconst AlertBanner = styled(Background)<Pick<AlertProps, 'type' | 'placement'>>(\n  placementVariants\n);\n\nAlertBanner.defaultProps = {\n  role: 'status',\n  'aria-label': 'alert box',\n  'aria-live': 'polite',\n};\n\nconst CollapsableContent = styled(motion.div)(\n  system.css({ py: 4, overflowY: 'hidden' })\n);\n\nCollapsableContent.defaultProps = {\n  variants: {\n    collapsed: { height: '2rem' },\n    expanded: { height: 'auto' },\n  },\n  transition: { duration: 0.2, ease: 'easeInOut' },\n};\n\nconst CollapseButton = styled(IconButton)(\n  variant({\n    prop: 'toggleState',\n    defaultVariant: 'collapsed',\n    base: { svg: { transition: `${timing.fast} transform` } },\n    variants: {\n      collapsed: {},\n      expanded: {\n        svg: {\n          transform: 'rotate(180deg)',\n        },\n      },\n    },\n  })\n);\n\nexport const Alert: React.FC<AlertProps> = ({\n  children,\n  cta,\n  onClose,\n  hidden,\n  type = 'general',\n  ...props\n}) => {\n  const isInline = props.placement === 'inline';\n  const activeAlert = alertVariants?.[type] ?? alertVariants.general;\n  const { icon: Icon, bg } = activeAlert;\n\n  const [expanded, setExpanded] = useState(false);\n  const [truncated, setTruncated] = useState(false);\n\n  const toggleState = expanded || isInline ? 'expanded' : 'collapsed';\n  const tabIndex = hidden ? -1 : undefined;\n\n  const content = isInline ? (\n    children\n  ) : (\n    <Truncate expanded={expanded} onTruncate={setTruncated} lines={1}>\n      {children}\n    </Truncate>\n  );\n\n  const expandButton = truncated && (\n    <CollapseButton\n      tabIndex={tabIndex}\n      aria-label={expanded ? 'Collapse' : 'Expand'}\n      toggleState={toggleState}\n      variant=\"secondary\"\n      size=\"small\"\n      icon={MiniChevronDownIcon}\n      onClick={() => setExpanded(!expanded)}\n    />\n  );\n\n  const ctaButton = cta && Boolean(cta.children ?? cta.text) && (\n    <Box gridColumn={['2', , 'auto']} gridRow={['2', , 'auto']}>\n      <FillButton\n        {...cta}\n        mode=\"dark\"\n        variant=\"secondary\"\n        size=\"small\"\n        tabIndex={tabIndex}\n      >\n        {cta.children ?? cta.text}\n      </FillButton>\n    </Box>\n  );\n\n  return (\n    <AlertBanner bg={bg} {...props}>\n      <Icon size={32} aria-hidden p={8} />\n      <CollapsableContent\n        aria-expanded={expanded}\n        initial={toggleState}\n        animate={toggleState}\n      >\n        {content}\n      </CollapsableContent>\n      <Box>{expandButton}</Box>\n      <Box>{ctaButton}</Box>\n      {onClose && (\n        <IconButton\n          tabIndex={tabIndex}\n          aria-label=\"Close Alert\"\n          variant=\"secondary\"\n          size=\"small\"\n          onClick={onClose}\n          icon={MiniDeleteIcon}\n        />\n      )}\n    </AlertBanner>\n  );\n};\n\nAlert.defaultProps = {\n  type: 'general',\n  placement: 'floating',\n};\n"]},"metadata":{},"sourceType":"module"}