{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{Box,Text}from'@codecademy/gamut';import{ArrowChevronLeftIcon}from'@codecademy/gamut-icons';import{pxRem}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{AppHeaderLinkSections}from'../../AppHeader/AppHeaderElements/AppHeaderLinkSections';import{focusStyles,hoverStyles,textButtonStyles}from'../../AppHeader/AppHeaderElements/SharedStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FullMenuButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: \",\";\\n  padding: 0;\\n  \",\"\\n  \",\"\\n  \",\"\\n\"])),pxRem(24),textButtonStyles,hoverStyles,focusStyles);export var AppHeaderSubMenuMobile=function AppHeaderSubMenuMobile(_ref){var action=_ref.action,handleClose=_ref.handleClose,item=_ref.item;return/*#__PURE__*/_jsxs(Box,{\"aria-labelledby\":\"\".concat(item.text,\" menu\"),children:[/*#__PURE__*/_jsxs(FullMenuButton,{onClick:handleClose,type:\"button\",children:[/*#__PURE__*/_jsx(ArrowChevronLeftIcon,{size:12,\"aria-hidden\":true}),/*#__PURE__*/_jsx(Box,{fontSize:16,ml:8,children:\"Full Menu\"})]}),/*#__PURE__*/_jsx(Text,{as:\"h1\",fontSize:22,mb:16,children:item.type==='profile-dropdown'?item.userDisplayName:item.text}),/*#__PURE__*/_jsx(AppHeaderLinkSections,{action:action,item:item})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderSubMenuMobile/index.tsx"],"names":["Box","Text","ArrowChevronLeftIcon","pxRem","styled","React","AppHeaderLinkSections","focusStyles","hoverStyles","textButtonStyles","FullMenuButton","button","AppHeaderSubMenuMobile","action","handleClose","item","text","type","userDisplayName"],"mappings":"2MAAA,OAASA,GAAT,CAAcC,IAAd,KAA0B,mBAA1B,CACA,OAASC,oBAAT,KAAqC,yBAArC,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,qBAAT,KAAsC,yDAAtC,CACA,OACEC,WADF,CAEEC,WAFF,CAGEC,gBAHF,KAIO,gDAJP,C,wFAUA,GAAMC,CAAAA,cAAc,CAAGN,MAAM,CAACO,MAAV,8HACDR,KAAK,CAAC,EAAD,CADJ,CAGhBM,gBAHgB,CAIhBD,WAJgB,CAKhBD,WALgB,CAApB,CAQA,MAAO,IAAMK,CAAAA,sBAA6D,CAAG,QAAhEA,CAAAA,sBAAgE,MAIvE,IAHJC,CAAAA,MAGI,MAHJA,MAGI,CAFJC,WAEI,MAFJA,WAEI,CADJC,IACI,MADJA,IACI,CACJ,mBACE,MAAC,GAAD,EAAK,4BAAoBA,IAAI,CAACC,IAAzB,SAAL,wBACE,MAAC,cAAD,EAAgB,OAAO,CAAEF,WAAzB,CAAsC,IAAI,CAAC,QAA3C,wBACE,KAAC,oBAAD,EAAsB,IAAI,CAAE,EAA5B,CAAgC,kBAAhC,EADF,cAEE,KAAC,GAAD,EAAK,QAAQ,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBAFF,GADF,cAOE,KAAC,IAAD,EAAM,EAAE,CAAC,IAAT,CAAc,QAAQ,CAAE,EAAxB,CAA4B,EAAE,CAAE,EAAhC,UACGC,IAAI,CAACE,IAAL,GAAc,kBAAd,CAAmCF,IAAI,CAACG,eAAxC,CAA0DH,IAAI,CAACC,IADlE,EAPF,cAUE,KAAC,qBAAD,EAAuB,MAAM,CAAEH,MAA/B,CAAuC,IAAI,CAAEE,IAA7C,EAVF,GADF,CAcD,CAnBM","sourcesContent":["import { Box, Text } from '@codecademy/gamut';\nimport { ArrowChevronLeftIcon } from '@codecademy/gamut-icons';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { AppHeaderDropdownProps } from '../../AppHeader/AppHeaderElements/AppHeaderDropdown';\nimport { AppHeaderLinkSections } from '../../AppHeader/AppHeaderElements/AppHeaderLinkSections';\nimport {\n  focusStyles,\n  hoverStyles,\n  textButtonStyles,\n} from '../../AppHeader/AppHeaderElements/SharedStyles';\n\nexport type AppHeaderSubMenuMobileProps = AppHeaderDropdownProps & {\n  handleClose: () => void;\n};\n\nconst FullMenuButton = styled.button`\n  margin-bottom: ${pxRem(24)};\n  padding: 0;\n  ${textButtonStyles}\n  ${hoverStyles}\n  ${focusStyles}\n`;\n\nexport const AppHeaderSubMenuMobile: React.FC<AppHeaderSubMenuMobileProps> = ({\n  action,\n  handleClose,\n  item,\n}) => {\n  return (\n    <Box aria-labelledby={`${item.text} menu`}>\n      <FullMenuButton onClick={handleClose} type=\"button\">\n        <ArrowChevronLeftIcon size={12} aria-hidden />\n        <Box fontSize={16} ml={8}>\n          Full Menu\n        </Box>\n      </FullMenuButton>\n      <Text as=\"h1\" fontSize={22} mb={16}>\n        {item.type === 'profile-dropdown' ? item.userDisplayName : item.text}\n      </Text>\n      <AppHeaderLinkSections action={action} item={item} />\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}