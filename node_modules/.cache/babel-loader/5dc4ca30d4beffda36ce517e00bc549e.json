{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{PlayIcon}from'@codecademy/gamut-icons';import cx from'classnames';import React,{useState}from'react';import ReactPlayer from'react-player';import styles from'./styles/index.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";var OverlayPlayButton=function OverlayPlayButton(){return/*#__PURE__*/_jsx(\"div\",{className:styles.overlay,children:/*#__PURE__*/_jsx(PlayIcon,{className:styles.hoverButton})});};/**\n * @remarks ReactPlayer has optional key 'wrapper' that we require for the onReady callback\n */export var Video=function Video(_ref){var videoUrl=_ref.videoUrl,videoTitle=_ref.videoTitle,placeholderImage=_ref.placeholderImage,autoplay=_ref.autoplay,controls=_ref.controls,loop=_ref.loop,muted=_ref.muted,className=_ref.className,_onReady=_ref.onReady,onPlay=_ref.onPlay;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];return/*#__PURE__*/_jsx(\"div\",{className:cx(styles.videoWrapper,loading&&styles.loading,className),children:/*#__PURE__*/_jsx(ReactPlayer,{url:videoUrl,light:placeholderImage,title:videoTitle,playing:autoplay,className:styles.iframe,controls:controls===undefined?true:controls,loop:loop,muted:muted,playIcon:/*#__PURE__*/_jsx(OverlayPlayButton,{}),onReady:function onReady(player){_onReady===null||_onReady===void 0?void 0:_onReady(player);setLoading(false);},onPlay:onPlay})});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Video/index.tsx"],"names":["PlayIcon","cx","React","useState","ReactPlayer","styles","OverlayPlayButton","overlay","hoverButton","Video","videoUrl","videoTitle","placeholderImage","autoplay","controls","loop","muted","className","onReady","onPlay","loading","setLoading","videoWrapper","iframe","undefined","player"],"mappings":"uKAAA,OAASA,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,C,2CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,mBACE,YAAK,SAAS,CAAED,MAAM,CAACE,OAAvB,uBACE,KAAC,QAAD,EAAU,SAAS,CAAEF,MAAM,CAACG,WAA5B,EADF,EADF,CAKD,CAND,CAQA;AACA;AACA,GAiBA,MAAO,IAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAWrC,IAVJC,CAAAA,QAUI,MAVJA,QAUI,CATJC,UASI,MATJA,UASI,CARJC,gBAQI,MARJA,gBAQI,CAPJC,QAOI,MAPJA,QAOI,CANJC,QAMI,MANJA,QAMI,CALJC,IAKI,MALJA,IAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,QAEI,MAFJA,OAEI,CADJC,MACI,MADJA,MACI,eAC0BhB,QAAQ,CAAC,IAAD,CADlC,wCACGiB,OADH,eACYC,UADZ,eAEJ,mBACE,YACE,SAAS,CAAEpB,EAAE,CAACI,MAAM,CAACiB,YAAR,CAAsBF,OAAO,EAAIf,MAAM,CAACe,OAAxC,CAAiDH,SAAjD,CADf,uBAGE,KAAC,WAAD,EACE,GAAG,CAAEP,QADP,CAEE,KAAK,CAAEE,gBAFT,CAGE,KAAK,CAAED,UAHT,CAIE,OAAO,CAAEE,QAJX,CAKE,SAAS,CAAER,MAAM,CAACkB,MALpB,CAME,QAAQ,CAAET,QAAQ,GAAKU,SAAb,CAAyB,IAAzB,CAAgCV,QAN5C,CAOE,IAAI,CAAEC,IAPR,CAQE,KAAK,CAAEC,KART,CASE,QAAQ,cAAE,KAAC,iBAAD,IATZ,CAUE,OAAO,CAAE,iBAACS,MAAD,CAAoC,CAC3CP,QAAO,OAAP,EAAAA,QAAO,SAAP,QAAAA,QAAO,CAAGO,MAAH,CAAP,CACAJ,UAAU,CAAC,KAAD,CAAV,CACD,CAbH,CAcE,MAAM,CAAEF,MAdV,EAHF,EADF,CAsBD,CAnCM","sourcesContent":["import { PlayIcon } from '@codecademy/gamut-icons';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\n\nimport styles from './styles/index.module.scss';\n\nconst OverlayPlayButton = () => {\n  return (\n    <div className={styles.overlay}>\n      <PlayIcon className={styles.hoverButton} />\n    </div>\n  );\n};\n\n/**\n * @remarks ReactPlayer has optional key 'wrapper' that we require for the onReady callback\n */\n\nexport type ReactPlayerWithWrapper = ReactPlayer & { wrapper: HTMLElement };\n\nexport type VideoProps = {\n  videoUrl: string;\n  videoTitle?: string;\n  placeholderImage?: string | boolean;\n  autoplay?: boolean;\n  controls?: boolean;\n  loop?: boolean;\n  muted?: boolean;\n  className?: string;\n  onReady?: (player: ReactPlayerWithWrapper) => void;\n  onPlay?: () => void;\n};\n\nexport const Video: React.FC<VideoProps> = ({\n  videoUrl,\n  videoTitle,\n  placeholderImage,\n  autoplay,\n  controls,\n  loop,\n  muted,\n  className,\n  onReady,\n  onPlay,\n}) => {\n  const [loading, setLoading] = useState(true);\n  return (\n    <div\n      className={cx(styles.videoWrapper, loading && styles.loading, className)}\n    >\n      <ReactPlayer\n        url={videoUrl}\n        light={placeholderImage}\n        title={videoTitle}\n        playing={autoplay}\n        className={styles.iframe}\n        controls={controls === undefined ? true : controls}\n        loop={loop}\n        muted={muted}\n        playIcon={<OverlayPlayButton />}\n        onReady={(player: ReactPlayerWithWrapper) => {\n          onReady?.(player);\n          setLoading(false);\n        }}\n        onPlay={onPlay}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}