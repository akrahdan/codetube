{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Category.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./course.scss\";\nimport { useFetchProjectCategoriesQuery } from \"services/projects\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectCategory = ({\n  handleChange,\n  project,\n  updateProject\n}) => {\n  _s();\n\n  const {\n    data: categories\n  } = useFetchProjectCategoriesQuery();\n  if (!categories) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-page-takeover--content-wrapper--3Vzz1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container full-page-takeover--content--1ynJq\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center create-course-flow--takeoverContent--1ds0W\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-course-flow--headerText--1hV-a\",\n            \"data-purpose\": \"header-text\",\n            children: \"Provide the category for the project you will share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-purpose\": \"subhead-text\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"If you're not sure about the right category, you can change it later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"create-course-flow--responseForm--DLkKF\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-course-flow--formOptions--15Rpx form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-course-flow--optionsContainer--3TNVh\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-course-flow--formField--m9MGJ\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-control-single-select-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"courseCategory\",\n                      className: \"form-control\",\n                      value: project ? project.category : -1,\n                      onChange: event => {\n                        handleChange(event.target.value);\n                        updateProject({ ...project,\n                          category: Number(event.target.value)\n                        });\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"default\",\n                        children: \"Choose a category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 25\n                      }, this), categories && categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: cat.id,\n                        children: cat.title\n                      }, cat.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 29\n                      }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: -1,\n                        children: \"I don't know yet\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 60,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectCategory, \"NSEPmMIrUgjreRVelPW9gjg9iRM=\", false, function () {\n  return [useFetchProjectCategoriesQuery];\n});\n\n_c = ProjectCategory;\nexport default ProjectCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCategory\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Category.tsx"],"names":["useFetchProjectCategoriesQuery","React","ProjectCategory","handleChange","project","updateProject","data","categories","category","event","target","value","Number","map","cat","id","title"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,8BAAT,QAA+C,mBAA/C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,OAAO,MAAMC,eAAwC,GAAG,CAAC;AACvDC,EAAAA,YADuD;AAEvDC,EAAAA,OAFuD;AAGvDC,EAAAA;AAHuD,CAAD,KAIlD;AAAA;;AACJ,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAuBP,8BAA8B,EAA3D;AACA,MAAI,CAACO,UAAL,EAAiB,OAAO,IAAP;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,uCADZ;AAEE,4BAAa,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAI,4BAAa,cAAjB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE;AAAM,YAAA,SAAS,EAAC,yCAAhB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,mDAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,6CAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,sCAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,sCAAf;AAAA,2CACE;AACE,sBAAA,EAAE,EAAC,gBADL;AAEE,sBAAA,SAAS,EAAC,cAFZ;AAGE,sBAAA,KAAK,EAAEH,OAAO,GAAGA,OAAO,CAACI,QAAX,GAAsB,CAAC,CAHvC;AAIE,sBAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBN,wBAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACAN,wBAAAA,aAAa,CAAC,EACZ,GAAGD,OADS;AAEZI,0BAAAA,QAAQ,EAAEI,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd;AAFJ,yBAAD,CAAb;AAID,uBAVH;AAAA,8CAYE;AAAQ,wBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZF,EAaGJ,UAAU,IACTA,UAAU,CAACM,GAAX,CAAgBC,GAAD,iBACb;AAAQ,wBAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA,kCACGD,GAAG,CAACE;AADP,yBAA4BF,GAAG,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,8BADF,CAdJ,eAoBE;AAAQ,wBAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CA7DM;;GAAMb,e;UAKkBF,8B;;;KALlBE,e;AA+Db,eAAeA,eAAf","sourcesContent":["import \"./course.scss\";\nimport { useFetchProjectCategoriesQuery } from \"services/projects\";\nimport { ProjectEntityResponse } from \"services/projects\";\nimport React from \"react\";\n\ntype CategoryProps = {\n  handleChange: (value: string) => void,\n  project: ProjectEntityResponse,\n  updateProject: (course: ProjectEntityResponse) => void,\n};\nexport const ProjectCategory: React.FC<CategoryProps> = ({\n  handleChange,\n  project,\n  updateProject,\n}) => {\n  const { data: categories } = useFetchProjectCategoriesQuery();\n  if (!categories) return null;\n  return (\n    <div className=\"full-page-takeover--content-wrapper--3Vzz1\">\n      <div className=\"container full-page-takeover--content--1ynJq\">\n        <div className=\"text-center create-course-flow--takeoverContent--1ds0W\">\n          <div>\n            <div\n              className=\"create-course-flow--headerText--1hV-a\"\n              data-purpose=\"header-text\"\n            >\n              Provide the category for the project you will share\n            </div>\n            <h2 data-purpose=\"subhead-text\">\n              <small>\n                If you're not sure about the right category, you can change it\n                later.\n              </small>\n            </h2>\n            <form className=\"create-course-flow--responseForm--DLkKF\">\n              <div className=\"create-course-flow--formOptions--15Rpx form-group\">\n                <div className=\"create-course-flow--optionsContainer--3TNVh\">\n                  <div className=\"create-course-flow--formField--m9MGJ\">\n                    <div className=\"form-control-single-select-container\">\n                      <select\n                        id=\"courseCategory\"\n                        className=\"form-control\"\n                        value={project ? project.category : -1}\n                        onChange={(event) => {\n                          handleChange(event.target.value);\n                          updateProject({\n                            ...project,\n                            category: Number(event.target.value),\n                          });\n                        }}\n                      >\n                        <option value=\"default\">Choose a category</option>\n                        {categories &&\n                          categories.map((cat) => (\n                            <option value={cat.id} key={cat.id}>\n                              {cat.title}\n                            </option>\n                          ))}\n\n                        <option value={-1}>I don't know yet</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCategory;\n"]},"metadata":{},"sourceType":"module"}