{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{FocusOn}from'react-focus-on';import{jsx as _jsx}from\"react/jsx-runtime\";var focusOnStyles={/**\n   * Prevent the focus-on wrapper from interfering with parent layout\n   */display:'contents'};export var FocusTrap=function FocusTrap(_ref){var className=_ref.className,children=_ref.children,onClickOutside=_ref.onClickOutside,onEscapeKey=_ref.onEscapeKey,_ref$active=_ref.active,active=_ref$active===void 0?true:_ref$active,_ref$allowPageInterac=_ref.allowPageInteraction,allowPageInteraction=_ref$allowPageInterac===void 0?false:_ref$allowPageInterac,focusOnProps=_ref.focusOnProps;return/*#__PURE__*/_jsx(FocusOn,_objectSpread(_objectSpread({enabled:active,onClickOutside:onClickOutside,onEscapeKey:onEscapeKey,style:focusOnStyles,className:className,scrollLock:!allowPageInteraction,noIsolation:allowPageInteraction,\"data-testid\":\"focus-trap\"},focusOnProps),{},{children:children}));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/FocusTrap/index.tsx"],"names":["React","FocusOn","focusOnStyles","display","FocusTrap","className","children","onClickOutside","onEscapeKey","active","allowPageInteraction","focusOnProps"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,gBAAxB,C,2CAGA,GAAMC,CAAAA,aAAa,CAAG,CACpB;AACF;AACA,KACEC,OAAO,CAAE,UAJW,CAAtB,CAkCA,MAAO,IAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAQ7C,IAPJC,CAAAA,SAOI,MAPJA,SAOI,CANJC,QAMI,MANJA,QAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,WAII,MAJJA,WAII,kBAHJC,MAGI,CAHJA,MAGI,sBAHK,IAGL,wCAFJC,oBAEI,CAFJA,oBAEI,gCAFmB,KAEnB,uBADJC,YACI,MADJA,YACI,CACJ,mBACE,KAAC,OAAD,8BACE,OAAO,CAAEF,MADX,CAEE,cAAc,CAAEF,cAFlB,CAGE,WAAW,CAAEC,WAHf,CAIE,KAAK,CAAEN,aAJT,CAKE,SAAS,CAAEG,SALb,CAME,UAAU,CAAE,CAACK,oBANf,CAOE,WAAW,CAAEA,oBAPf,CAQE,cAAY,YARd,EASMC,YATN,eAWGL,QAXH,GADF,CAeD,CAxBM","sourcesContent":["import React from 'react';\nimport { FocusOn } from 'react-focus-on';\nimport { ReactFocusOnProps } from 'react-focus-on/dist/es5/types';\n\nconst focusOnStyles = {\n  /**\n   * Prevent the focus-on wrapper from interfering with parent layout\n   */\n  display: 'contents',\n};\n\nexport type FocusTrapProps = {\n  className?: string;\n  /**\n   * Called when the FocusTrap requests to be closed via the escape key\n   * Overrides default onRequestClose if defined\n   */\n  onEscapeKey?: ReactFocusOnProps['onEscapeKey'];\n  /**\n   * Called when the FocusTrap requests to be closed via clicking outside of the FocusTrap children\n   * Overrides default onRequestClose if defined\n   */\n  onClickOutside?: ReactFocusOnProps['onClickOutside'];\n  /**\n   * Whether the focus trap is active\n   */\n  active?: boolean;\n  /**\n   * Allow page scrolling and click events outside of the focus trap\n   * This is useful for dropdowns and popovers, where the page should still be interactive\n   */\n  allowPageInteraction?: boolean;\n  /**\n   * Passthrough for react-focus-on library props\n   */\n  focusOnProps?: ReactFocusOnProps;\n};\n\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  className,\n  children,\n  onClickOutside,\n  onEscapeKey,\n  active = true,\n  allowPageInteraction = false,\n  focusOnProps,\n}) => {\n  return (\n    <FocusOn\n      enabled={active}\n      onClickOutside={onClickOutside}\n      onEscapeKey={onEscapeKey}\n      style={focusOnStyles}\n      className={className}\n      scrollLock={!allowPageInteraction}\n      noIsolation={allowPageInteraction}\n      data-testid=\"focus-trap\"\n      {...focusOnProps}\n    >\n      {children}\n    </FocusOn>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}