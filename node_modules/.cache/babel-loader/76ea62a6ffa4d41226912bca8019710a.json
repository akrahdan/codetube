{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _templateObject;import{ArrowChevronDownIcon}from'@codecademy/gamut-icons';import{theme}from'@codecademy/gamut-styles';import{css}from'@emotion/react';import React,{useMemo,useState}from'react';import ReactSelect,{components as SelectDropdownElements}from'react-select';import{colorStates,conditionalBorderStyles,formDropdownStyles,formFieldStyles}from'./styles/shared';import{parseOptions}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DropdownIndicator=SelectDropdownElements.DropdownIndicator,SelectContainer=SelectDropdownElements.SelectContainer;var ChevronDropdown=function ChevronDropdown(props){return/*#__PURE__*/_jsx(DropdownIndicator,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(ArrowChevronDownIcon,{size:16})}));};var CustomContainer=function CustomContainer(_ref){var children=_ref.children,rest=_objectWithoutProperties(_ref,[\"children\"]);var inputProps=rest.selectProps.inputProps;var value=rest.hasValue?rest.getValue()[0].value:'';return/*#__PURE__*/_jsxs(SelectContainer,_objectSpread(_objectSpread({},rest),{},{children:[children,/*#__PURE__*/_jsx(\"input\",_objectSpread({type:\"hidden\",value:value},inputProps))]}));};var selectBaseStyles=function selectBaseStyles(_ref2){var error=_ref2.error,activated=_ref2.activated,isFocused=_ref2.isFocused,isDisabled=_ref2.isDisabled;return css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\"\\n  \",\"\\n  line-height: \",\";\\n  display: flex;\\n\"])),formFieldStyles,conditionalBorderStyles({error:error,activated:activated,isFocused:isFocused,isDisabled:isDisabled}),theme.lineHeight.base);};var errorColorState=function errorColorState(error){var color=error?colorStates.error.color:colorStates.base.color;return color;};var customStyles={dropdownIndicator:function dropdownIndicator(provided,state){return{color:errorColorState(state.selectProps.error),display:'flex',padding:'0',pointerEvents:'none'};},container:function container(provided){return _objectSpread(_objectSpread({},provided),{},{pointerEvents:'visible',cursor:'pointer',width:'100%',minWidth:'7rem'});},menu:function menu(provided,state){return _objectSpread(_objectSpread({},provided),formDropdownStyles(state.selectProps.error));},option:function option(provided,state){return{padding:'14px 11px 14px 11px',cursor:'pointer',backgroundColor:state.isSelected&&colorStates.dropdown.selected.backgroundColor||state.isFocused&&colorStates.dropdown.focused.backgroundColor||'transparent','&:hover':{backgroundColor:colorStates.dropdown.focused.backgroundColor}};},control:function control(provided,state){return _objectSpread({},selectBaseStyles({error:state.selectProps.error,activated:state.selectProps.activated,isFocused:state.isFocused,isDisabled:state.isDisabled}));},singleValue:function singleValue(provided,state){return{color:errorColorState(state.selectProps.error),display:'flex'};},valueContainer:function valueContainer(provided){return _objectSpread(_objectSpread({},provided),{},{padding:0});}};var defaultProps={name:undefined,isSearchable:false,isMulti:false,styles:customStyles,components:{DropdownIndicator:ChevronDropdown,IndicatorSeparator:function IndicatorSeparator(){return null;},SelectContainer:CustomContainer}};export var SelectDropdown=function SelectDropdown(_ref3){var options=_ref3.options,error=_ref3.error,id=_ref3.id,disabled=_ref3.disabled,onChange=_ref3.onChange,_ref3$value=_ref3.value,value=_ref3$value===void 0?undefined:_ref3$value,name=_ref3.name,_ref3$placeholder=_ref3.placeholder,placeholder=_ref3$placeholder===void 0?'Select an option':_ref3$placeholder,inputProps=_ref3.inputProps,rest=_objectWithoutProperties(_ref3,[\"options\",\"error\",\"id\",\"disabled\",\"onChange\",\"value\",\"name\",\"placeholder\",\"inputProps\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),activated=_useState2[0],setActivated=_useState2[1];var baseInputProps={name:name};var changeHandler=function changeHandler(optionEvent){onChange===null||onChange===void 0?void 0:onChange(optionEvent,{action:'select-option',option:optionEvent});setActivated(true);};var selectOptions=useMemo(function(){return parseOptions({options:options,id:id});},[options,id]);var parsedValue=useMemo(function(){var currentValue=selectOptions.find(function(_ref4){var optionValue=_ref4.value;return optionValue===value;});return currentValue;},[selectOptions,value]);return/*#__PURE__*/_jsx(ReactSelect,_objectSpread(_objectSpread({},defaultProps),{},{id:id||rest.htmlFor,value:parsedValue,activated:activated,error:Boolean(error),onChange:changeHandler,inputProps:_objectSpread(_objectSpread({},inputProps),baseInputProps),isDisabled:disabled,options:selectOptions,placeholder:placeholder},rest));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/SelectDropdown.tsx"],"names":["ArrowChevronDownIcon","theme","css","React","useMemo","useState","ReactSelect","components","SelectDropdownElements","colorStates","conditionalBorderStyles","formDropdownStyles","formFieldStyles","parseOptions","DropdownIndicator","SelectContainer","ChevronDropdown","props","CustomContainer","children","rest","inputProps","selectProps","value","hasValue","getValue","selectBaseStyles","error","activated","isFocused","isDisabled","lineHeight","base","errorColorState","color","customStyles","dropdownIndicator","provided","state","display","padding","pointerEvents","container","cursor","width","minWidth","menu","option","backgroundColor","isSelected","dropdown","selected","focused","control","singleValue","valueContainer","defaultProps","name","undefined","isSearchable","isMulti","styles","IndicatorSeparator","SelectDropdown","options","id","disabled","onChange","placeholder","setActivated","baseInputProps","changeHandler","optionEvent","action","selectOptions","parsedValue","currentValue","find","optionValue","htmlFor","Boolean"],"mappings":"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","sourcesContent":["import { ArrowChevronDownIcon } from '@codecademy/gamut-icons';\nimport { theme } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport React, {\n  ReactNode,\n  SelectHTMLAttributes,\n  useMemo,\n  useState,\n} from 'react';\nimport ReactSelect, {\n  components as SelectDropdownElements,\n  ContainerProps,\n  IndicatorProps,\n  NamedProps,\n  OptionTypeBase,\n  StylesConfig,\n} from 'react-select';\n\nimport { SelectComponentProps } from './Select';\nimport {\n  colorStates,\n  conditionalBorderStyles,\n  formDropdownStyles,\n  formFieldStyles,\n} from './styles/shared';\nimport { conditionalStyleProps } from './styles/shared-system-props';\nimport { parseOptions } from './utils';\n\nconst { DropdownIndicator, SelectContainer } = SelectDropdownElements;\n\ntype SelectDropdownBaseProps = Omit<\n  SelectComponentProps,\n  'onChange' | 'defaultValue'\n>;\ninterface SelectDropdownProps\n  extends SelectDropdownBaseProps,\n    Pick<NamedProps, 'onChange'>,\n    Pick<SelectHTMLAttributes<HTMLSelectElement>, 'value' | 'disabled'> {\n  inputProps?: Record<string, string | number | boolean>;\n  name?: string;\n  placeholder?: string;\n}\n\ntype OptionStrict = {\n  label: string;\n  value: string;\n};\n\ntype CustomContainerProps = ContainerProps<OptionStrict, false> & {\n  children?: ReactNode[];\n};\n\nconst ChevronDropdown = (props: IndicatorProps<OptionTypeBase, false>) => {\n  return (\n    <DropdownIndicator {...props}>\n      <ArrowChevronDownIcon size={16} />\n    </DropdownIndicator>\n  );\n};\n\nconst CustomContainer = ({ children, ...rest }: CustomContainerProps) => {\n  const { inputProps } = rest.selectProps;\n  const value = rest.hasValue ? rest.getValue()[0].value : '';\n\n  return (\n    <SelectContainer {...rest}>\n      {children}\n      <input type=\"hidden\" value={value} {...inputProps} />\n    </SelectContainer>\n  );\n};\n\nconst selectBaseStyles = ({\n  error,\n  activated,\n  isFocused,\n  isDisabled,\n}: conditionalStyleProps) => css`\n  ${formFieldStyles}\n  ${conditionalBorderStyles({ error, activated, isFocused, isDisabled })}\n  line-height: ${theme.lineHeight.base};\n  display: flex;\n`;\n\nconst errorColorState = (error: boolean) => {\n  const color = error ? colorStates.error.color : colorStates.base.color;\n  return color;\n};\n\nconst customStyles: StylesConfig<OptionTypeBase, false> = {\n  dropdownIndicator: (provided, state) => ({\n    color: errorColorState(state.selectProps.error),\n    display: 'flex',\n    padding: '0',\n    pointerEvents: 'none',\n  }),\n\n  container: (provided) => ({\n    ...provided,\n    pointerEvents: 'visible',\n    cursor: 'pointer',\n    width: '100%',\n    minWidth: '7rem',\n  }),\n\n  menu: (provided, state) => ({\n    ...provided,\n    ...formDropdownStyles(state.selectProps.error),\n  }),\n\n  option: (provided, state) => ({\n    padding: '14px 11px 14px 11px',\n    cursor: 'pointer',\n    backgroundColor:\n      (state.isSelected && colorStates.dropdown.selected.backgroundColor) ||\n      (state.isFocused && colorStates.dropdown.focused.backgroundColor) ||\n      'transparent',\n    '&:hover': {\n      backgroundColor: colorStates.dropdown.focused.backgroundColor,\n    },\n  }),\n\n  control: (provided, state) => ({\n    ...selectBaseStyles({\n      error: state.selectProps.error,\n      activated: state.selectProps.activated,\n      isFocused: state.isFocused,\n      isDisabled: state.isDisabled,\n    }),\n  }),\n\n  singleValue: (provided, state) => ({\n    color: errorColorState(state.selectProps.error),\n    display: 'flex',\n  }),\n\n  valueContainer: (provided) => ({\n    ...provided,\n    padding: 0,\n  }),\n};\n\nconst defaultProps = {\n  name: undefined,\n  isSearchable: false,\n  isMulti: false,\n  styles: customStyles,\n  components: {\n    DropdownIndicator: ChevronDropdown,\n    IndicatorSeparator: () => null,\n    SelectContainer: CustomContainer,\n  },\n};\n\nexport const SelectDropdown: React.FC<SelectDropdownProps> = ({\n  options,\n  error,\n  id,\n  disabled,\n  onChange,\n  value = undefined,\n  name,\n  placeholder = 'Select an option',\n  inputProps,\n  ...rest\n}) => {\n  const [activated, setActivated] = useState(false);\n  const baseInputProps = { name };\n\n  const changeHandler = (optionEvent: OptionStrict) => {\n    onChange?.(optionEvent, {\n      action: 'select-option',\n      option: optionEvent,\n    });\n    setActivated(true);\n  };\n\n  const selectOptions = useMemo(() => {\n    return parseOptions({ options, id });\n  }, [options, id]);\n\n  const parsedValue = useMemo(() => {\n    const currentValue = selectOptions.find(\n      ({ value: optionValue }) => optionValue === value\n    );\n\n    return currentValue;\n  }, [selectOptions, value]);\n\n  return (\n    <ReactSelect\n      {...defaultProps}\n      id={id || rest.htmlFor}\n      value={parsedValue}\n      activated={activated}\n      error={Boolean(error)}\n      onChange={changeHandler}\n      inputProps={{ ...inputProps, ...baseInputProps }}\n      isDisabled={disabled}\n      options={selectOptions}\n      placeholder={placeholder}\n      {...rest}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}