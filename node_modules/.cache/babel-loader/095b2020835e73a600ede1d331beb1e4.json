{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{Box,FillButton,IconButton,StrokeButton}from'@codecademy/gamut';import{ArrowChevronDownFilledIcon,MiniKebabMenuIcon}from'@codecademy/gamut-icons';import{pxRem,styledOptions}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React,{useRef,useState}from'react';import{Popover}from'../Popover';import{DropdownList}from'./DropdownList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DownArrow=styled(ArrowChevronDownFilledIcon,styledOptions)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: \",\";\\n  transition: transform 0.35s ease-out;\\n  \",\";\\n\"])),pxRem(8),function(_ref){var isOpen=_ref.isOpen;return isOpen&&'transform: rotate(-180deg)';});export var DropdownButton=function DropdownButton(_ref2){var _ref2$buttonType=_ref2.buttonType,buttonType=_ref2$buttonType===void 0?'fill':_ref2$buttonType,children=_ref2.children,_ref2$align=_ref2.align,align=_ref2$align===void 0?'left':_ref2$align,dropdownItems=_ref2.dropdownItems,onClick=_ref2.onClick,verticalOffset=_ref2.verticalOffset,horizontalOffset=_ref2.horizontalOffset;var targetRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var handleClick=function handleClick(event){!isOpen&&onClick&&onClick(event);setIsOpen(!isOpen);};var handleRequestClosed=function handleRequestClosed(){setIsOpen(false);};var clickTarget;switch(buttonType){case'fill':clickTarget=/*#__PURE__*/_jsxs(FillButton,{onClick:handleClick,\"data-testid\":\"dropdown-fill-button\",children:[children,/*#__PURE__*/_jsx(DownArrow,{isOpen:isOpen,size:12,\"aria-label\":\"dropdown\"})]});break;case'stroke':clickTarget=/*#__PURE__*/_jsxs(StrokeButton,{onClick:handleClick,\"data-testid\":\"dropdown-stroke-button\",children:[children,/*#__PURE__*/_jsx(DownArrow,{isOpen:isOpen,size:12,\"aria-label\":\"dropdown\"})]});break;case'kebab':clickTarget=/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"More options\",icon:MiniKebabMenuIcon,size:\"small\",variant:\"secondary\",onClick:handleClick,\"data-testid\":\"dropdown-kebab-button\"});break;}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{display:\"inline-block\",ref:targetRef,children:clickTarget}),isOpen&&dropdownItems.length!==0&&/*#__PURE__*/_jsx(Popover,{targetRef:targetRef,isOpen:isOpen,onRequestClose:handleRequestClosed,align:align,verticalOffset:verticalOffset,horizontalOffset:horizontalOffset,outline:true,children:/*#__PURE__*/_jsx(DropdownList,{dropdownItems:dropdownItems,onClose:handleRequestClosed})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/DropdownButton/index.tsx"],"names":["Box","FillButton","IconButton","StrokeButton","ArrowChevronDownFilledIcon","MiniKebabMenuIcon","pxRem","styledOptions","styled","React","useRef","useState","Popover","DropdownList","DownArrow","isOpen","DropdownButton","buttonType","children","align","dropdownItems","onClick","verticalOffset","horizontalOffset","targetRef","setIsOpen","handleClick","event","handleRequestClosed","clickTarget","length"],"mappings":"4VAAA,OAASA,GAAT,CAAcC,UAAd,CAA0BC,UAA1B,CAAsCC,YAAtC,KAA0D,mBAA1D,CACA,OACEC,0BADF,CAEEC,iBAFF,KAGO,yBAHP,CAIA,OAASC,KAAT,CAAgBC,aAAhB,KAAqC,0BAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CAEA,OAASC,OAAT,KAAwB,YAAxB,CACA,OAAuBC,YAAvB,KAA2C,gBAA3C,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACJ,0BAAD,CAA6BG,aAA7B,CAAT,yIAGED,KAAK,CAAC,CAAD,CAHP,CAKX,kBAAGS,CAAAA,MAAH,MAAGA,MAAH,OAAgBA,CAAAA,MAAM,EAAI,4BAA1B,EALW,CAAf,CAiBA,MAAO,IAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,OAQvD,4BAPJC,UAOI,CAPJA,UAOI,2BAPS,MAOT,kBANJC,QAMI,OANJA,QAMI,mBALJC,KAKI,CALJA,KAKI,sBALI,MAKJ,aAJJC,aAII,OAJJA,aAII,CAHJC,OAGI,OAHJA,OAGI,CAFJC,cAEI,OAFJA,cAEI,CADJC,gBACI,OADJA,gBACI,CACJ,GAAMC,CAAAA,SAAS,CAAGd,MAAM,CAAiB,IAAjB,CAAxB,CADI,cAEwBC,QAAQ,CAAC,KAAD,CAFhC,wCAEGI,MAFH,eAEWU,SAFX,eAGJ,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA6B,CAC/C,CAACZ,MAAD,EAAWM,OAAX,EAAsBA,OAAO,CAACM,KAAD,CAA7B,CACAF,SAAS,CAAC,CAACV,MAAF,CAAT,CACD,CAHD,CAIA,GAAMa,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChCH,SAAS,CAAC,KAAD,CAAT,CACD,CAFD,CAIA,GAAII,CAAAA,WAAJ,CACA,OAAQZ,UAAR,EACE,IAAK,MAAL,CACEY,WAAW,cACT,MAAC,UAAD,EAAY,OAAO,CAAEH,WAArB,CAAkC,cAAY,sBAA9C,WACGR,QADH,cAEE,KAAC,SAAD,EAAW,MAAM,CAAEH,MAAnB,CAA2B,IAAI,CAAE,EAAjC,CAAqC,aAAW,UAAhD,EAFF,GADF,CAMA,MACF,IAAK,QAAL,CACEc,WAAW,cACT,MAAC,YAAD,EACE,OAAO,CAAEH,WADX,CAEE,cAAY,wBAFd,WAIGR,QAJH,cAKE,KAAC,SAAD,EAAW,MAAM,CAAEH,MAAnB,CAA2B,IAAI,CAAE,EAAjC,CAAqC,aAAW,UAAhD,EALF,GADF,CASA,MACF,IAAK,OAAL,CACEc,WAAW,cACT,KAAC,UAAD,EACE,aAAW,cADb,CAEE,IAAI,CAAExB,iBAFR,CAGE,IAAI,CAAC,OAHP,CAIE,OAAO,CAAC,WAJV,CAKE,OAAO,CAAEqB,WALX,CAME,cAAY,uBANd,EADF,CAUA,MA/BJ,CAkCA,mBACE,wCACE,KAAC,GAAD,EAAK,OAAO,CAAC,cAAb,CAA4B,GAAG,CAAEF,SAAjC,UACGK,WADH,EADF,CAIGd,MAAM,EAAIK,aAAa,CAACU,MAAd,GAAyB,CAAnC,eACC,KAAC,OAAD,EACE,SAAS,CAAEN,SADb,CAEE,MAAM,CAAET,MAFV,CAGE,cAAc,CAAEa,mBAHlB,CAIE,KAAK,CAAET,KAJT,CAKE,cAAc,CAAEG,cALlB,CAME,gBAAgB,CAAEC,gBANpB,CAOE,OAAO,KAPT,uBASE,KAAC,YAAD,EACE,aAAa,CAAEH,aADjB,CAEE,OAAO,CAAEQ,mBAFX,EATF,EALJ,GADF,CAuBD,CA7EM","sourcesContent":["import { Box, FillButton, IconButton, StrokeButton } from '@codecademy/gamut';\nimport {\n  ArrowChevronDownFilledIcon,\n  MiniKebabMenuIcon,\n} from '@codecademy/gamut-icons';\nimport { pxRem, styledOptions } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useRef, useState } from 'react';\n\nimport { Popover } from '../Popover';\nimport { DropdownItem, DropdownList } from './DropdownList';\n\nconst DownArrow = styled(ArrowChevronDownFilledIcon, styledOptions)<{\n  isOpen?: boolean;\n}>`\n  margin-left: ${pxRem(8)};\n  transition: transform 0.35s ease-out;\n  ${({ isOpen }) => isOpen && 'transform: rotate(-180deg)'};\n`;\n\nexport type DropdownButtonProps = {\n  buttonType?: 'fill' | 'stroke' | 'kebab';\n  dropdownItems: DropdownItem[];\n  align?: 'left' | 'right';\n  onClick?: (event: React.MouseEvent) => void;\n  verticalOffset?: number;\n  horizontalOffset?: number;\n};\n\nexport const DropdownButton: React.FC<DropdownButtonProps> = ({\n  buttonType = 'fill',\n  children,\n  align = 'left',\n  dropdownItems,\n  onClick,\n  verticalOffset,\n  horizontalOffset,\n}) => {\n  const targetRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = (event: React.MouseEvent) => {\n    !isOpen && onClick && onClick(event);\n    setIsOpen(!isOpen);\n  };\n  const handleRequestClosed = () => {\n    setIsOpen(false);\n  };\n\n  let clickTarget: React.ReactNode;\n  switch (buttonType) {\n    case 'fill':\n      clickTarget = (\n        <FillButton onClick={handleClick} data-testid=\"dropdown-fill-button\">\n          {children}\n          <DownArrow isOpen={isOpen} size={12} aria-label=\"dropdown\" />\n        </FillButton>\n      );\n      break;\n    case 'stroke':\n      clickTarget = (\n        <StrokeButton\n          onClick={handleClick}\n          data-testid=\"dropdown-stroke-button\"\n        >\n          {children}\n          <DownArrow isOpen={isOpen} size={12} aria-label=\"dropdown\" />\n        </StrokeButton>\n      );\n      break;\n    case 'kebab':\n      clickTarget = (\n        <IconButton\n          aria-label=\"More options\"\n          icon={MiniKebabMenuIcon}\n          size=\"small\"\n          variant=\"secondary\"\n          onClick={handleClick}\n          data-testid=\"dropdown-kebab-button\"\n        />\n      );\n      break;\n  }\n\n  return (\n    <>\n      <Box display=\"inline-block\" ref={targetRef}>\n        {clickTarget}\n      </Box>\n      {isOpen && dropdownItems.length !== 0 && (\n        <Popover\n          targetRef={targetRef}\n          isOpen={isOpen}\n          onRequestClose={handleRequestClosed}\n          align={align}\n          verticalOffset={verticalOffset}\n          horizontalOffset={horizontalOffset}\n          outline\n        >\n          <DropdownList\n            dropdownItems={dropdownItems}\n            onClose={handleRequestClosed}\n          />\n        </Popover>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}