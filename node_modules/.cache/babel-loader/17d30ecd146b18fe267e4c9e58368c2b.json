{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [goals, setGoals] = useState([{\n    id: \"goalList--0\",\n    name: \"\"\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: \"reqList--0\",\n    name: \"\"\n  }]);\n  const [experience, setExperience] = useState([{\n    id: \"expList--0\",\n    name: \"\"\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n  useEffect(() => {\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults && (goalResults === null || goalResults === void 0 ? void 0 : goalResults.forEach(goal => {\n        if (goal.name) {\n          createGoal({\n            name: goal.name,\n            course: locationPayload.id\n          }).then(() => {\n            const results = goalResults === null || goalResults === void 0 ? void 0 : goalResults.filter(item => item.id != goal.id);\n            setGoals(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      }));\n      const experienceResults = experience;\n      experienceResults && (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.forEach(async (exp, index) => {\n        if (exp === null || exp === void 0 ? void 0 : exp.name) {\n          const awaitExperience = await createExperience({\n            name: exp.name,\n            course: locationPayload.id\n          }).unwrap();\n\n          if (index == (experienceResults === null || experienceResults === void 0 ? void 0 : experienceResults.length) - 1) {\n            if (awaitExperience) {\n              setExperience(awaitExperience);\n              alert.show(\"Your data has been saved successfully\");\n            }\n          }\n        }\n      }));\n      const reqResults = requirements;\n      reqResults && reqResults.forEach(req => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          createRequirement({\n            name: req === null || req === void 0 ? void 0 : req.name,\n            course: locationPayload.id\n          }).then(() => {\n            const results = reqResults === null || reqResults === void 0 ? void 0 : reqResults.filter(item => item.id != req.id);\n            setRequirements(results);\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n      requirementsUpdate && requirementsUpdate.forEach(req => {\n        if (req.name) {\n          console.log(\"Req: \", req);\n          editRequirement({ ...req,\n            course: locationPayload.id\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n      experienceUpdate && (experienceUpdate === null || experienceUpdate === void 0 ? void 0 : experienceUpdate.forEach((req, index) => {\n        if (req === null || req === void 0 ? void 0 : req.name) {\n          editExperience({ ...req,\n            course: locationPayload.id\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      }));\n      goalsUpdate && (goalsUpdate === null || goalsUpdate === void 0 ? void 0 : goalsUpdate.forEach(item => {\n        if (item.name) {\n          editGoal({ ...item,\n            course: locationPayload === null || locationPayload === void 0 ? void 0 : locationPayload.id\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      }));\n    }\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [goalsUpdate && goalsUpdate.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      let gUpdate = [...goalsUpdate];\n                      let index = gUpdate === null || gUpdate === void 0 ? void 0 : gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setGoalsUpdate(gUpdate);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)), goals.map(goal => /*#__PURE__*/_jsxDEV(GoalCreate, {\n                    goal: goal,\n                    handleRemove: value => {\n                      const updatedGoals = goals.filter(result => result.id != value.id);\n                      setGoals(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newGoals = [...goals];\n                      let index = newGoals === null || newGoals === void 0 ? void 0 : newGoals.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newGoals[index] = obj;\n                      setGoals(newGoals);\n                    }\n                  }, goal.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const goalItem = {\n                  id: `goalList--${goals === null || goals === void 0 ? void 0 : goals.length}`,\n                  name: \"\"\n                };\n                const newGoals = [...goals, goalItem];\n                const emptyValue = goals === null || goals === void 0 ? void 0 : goals.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [requirementsUpdate && requirementsUpdate.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      let reqUpdates = [...requirementsUpdate];\n                      let index = reqUpdates === null || reqUpdates === void 0 ? void 0 : reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setRequirementsUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)), requirements.map(req => /*#__PURE__*/_jsxDEV(ReqCreate, {\n                    req: req,\n                    handleRemove: value => {\n                      const updatedReqs = requirements.filter(result => result.id != value.id);\n                      setRequirements(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...requirements];\n                      let index = reqs === null || reqs === void 0 ? void 0 : reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setRequirements(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: `reqList--${requirements === null || requirements === void 0 ? void 0 : requirements.length}`,\n                  name: \"\"\n                };\n                const newReqs = [...requirements, reqItem];\n                const emptyValue = requirements === null || requirements === void 0 ? void 0 : requirements.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [experienceUpdate && experienceUpdate.map(exp => /*#__PURE__*/_jsxDEV(CourseExperience, {\n                    experience: exp,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      let expUpdate = [...experienceUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setExperienceUpdate(expUpdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this)), experience.map(exp => /*#__PURE__*/_jsxDEV(ExperienceCreate, {\n                    experience: exp,\n                    handleRemove: value => {\n                      const updatedExperience = experience.filter(result => result.id != value.id);\n                      setExperience(updatedExperience);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...experience];\n                      let index = expdate === null || expdate === void 0 ? void 0 : expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setExperience(expdate);\n                    }\n                  }, exp === null || exp === void 0 ? void 0 : exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: `expList--${experience.length}`,\n                  name: \"\"\n                };\n                const newExps = [...experience, expItem];\n                const emptyValue = experience.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"CZs8Sl1BRcF7FSPd1tXF33hY41k=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.tsx"],"names":["useEffect","useState","useAlert","Goal","Requirements","CourseExperience","ExperienceCreate","GoalCreate","ReqCreate","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","goals","setGoals","name","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","submit","goalResults","forEach","course","then","results","filter","item","show","experienceResults","exp","index","awaitExperience","unwrap","length","reqResults","console","log","map","obj","gUpdate","findIndex","value","updatedGoals","result","newGoals","goalItem","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","expUpdate","updatedExperience","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { CourseExperience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { selectSave } from \"state/course/courseSplice\";\nimport { usePrompt } from \"../userPrompt\";\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n\n} from \"services/courses\";\n\n\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n\n  const [goals, setGoals] = useState([{ id: \"goalList--0\", name: \"\" }]);\n  const [requirements, setRequirements] = useState([\n    { id: \"reqList--0\", name: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState<Experience[]>([\n    { id: \"expList--0\", name: \"\" },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = (req) => {\n    deleteExperience(req.id);\n  };\n\n  useEffect(() => {\n    setExperienceUpdate(selectedExperiences);\n  }, [selectedExperiences]);\n\n  useEffect(() => {\n    setGoalsUpdate(selectedGoals);\n  }, [selectedGoals]);\n\n  useEffect(() => {\n    setRequirementsUpdate(selectedRequirements);\n  }, [selectedRequirements]);\n\n  useEffect(() => {\n\n    if (selectedSave.submit) {\n      const goalResults = goals;\n      goalResults &&\n        goalResults?.forEach((goal) => {\n          if (goal.name) {\n            createGoal({\n              name: goal.name,\n              course: locationPayload.id,\n            }).then(() => {\n              const results = goalResults?.filter((item) => item.id != goal.id);\n              setGoals(results);\n              alert.show(\"Your data has been saved successfully\")\n            });\n          }\n        });\n\n      const experienceResults = experience;\n      experienceResults &&\n        experienceResults?.forEach( async (exp, index) => {\n          if (exp?.name) {\n           const awaitExperience  = await createExperience({\n              name: exp.name,\n              course: locationPayload.id,\n            }).unwrap()\n           if (index == experienceResults?.length -1 ) {\n            if(awaitExperience) {\n              setExperience(awaitExperience);\n              alert.show(\"Your data has been saved successfully\")\n            }\n            \n           }\n       \n          }\n        });\n\n      const reqResults = requirements;\n      reqResults &&\n        reqResults.forEach((req) => {\n          if (req?.name) {\n            createRequirement({\n              name: req?.name,\n              course: locationPayload.id,\n            }).then(() => {\n              const results = reqResults?.filter((item) => item.id != req.id);\n              setRequirements(results);\n              alert.show(\"Your data has been saved successfully\")\n            });\n          }\n        });\n      requirementsUpdate &&\n        requirementsUpdate.forEach((req) => {\n          if (req.name) {\n            console.log(\"Req: \", req);\n            editRequirement({\n              ...req,\n              course: locationPayload.id,\n            }).then(() => {\n\n              alert.show(\"Your data has been saved successfully\");\n            });\n          }\n        });\n\n      experienceUpdate &&\n        experienceUpdate?.forEach((req, index) => {\n          if (req?.name) {\n            editExperience({\n              ...req,\n              course: locationPayload.id,\n            }).then(() => {\n\n              alert.show(\"Your data has been saved successfully\");\n            });\n          }\n        });\n\n      goalsUpdate &&\n        goalsUpdate?.forEach((item) => {\n          if (item.name) {\n            editGoal({\n              ...item,\n              course: locationPayload?.id,\n            }).then(() => {\n              alert.show(\"Your data has been saved successfully\");\n            });\n          }\n        });\n    }\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goalsUpdate &&\n                      goalsUpdate.map((goal) => (\n                        <Goal\n                          key={goal.id}\n                          goal={goal}\n                          handleRemove={removeGoal}\n                          handleChange={(obj) => {\n                            let gUpdate = [...goalsUpdate];\n                            let index = gUpdate?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setGoalsUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {goals.map((goal) => (\n                      <GoalCreate\n                        key={goal.id}\n                        goal={goal}\n                        handleRemove={(value) => {\n                          const updatedGoals = goals.filter(\n                            (result) => result.id != value.id\n                          );\n                          setGoals(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newGoals = [...goals];\n                          let index = newGoals?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newGoals[index] = obj;\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const goalItem = {\n                    id: `goalList--${goals?.length}`,\n                    name: \"\",\n                  };\n                  const newGoals = [...goals, goalItem];\n                  const emptyValue = goals?.filter((item) => item.name == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirementsUpdate &&\n                      requirementsUpdate.map((req) => (\n                        <Requirements\n                          req={req}\n                          key={req.id}\n                          handleRemove={removeReq}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...requirementsUpdate];\n                            let index = reqUpdates?.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setRequirementsUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {requirements.map((req) => (\n                      <ReqCreate\n                        req={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = requirements.filter(\n                            (result) => result.id != value.id\n                          );\n                          setRequirements(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...requirements];\n                          let index = reqs?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setRequirements(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: `reqList--${requirements?.length}`,\n                    name: \"\",\n                  };\n                  const newReqs = [...requirements, reqItem];\n                  const emptyValue = requirements?.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experienceUpdate &&\n                      experienceUpdate.map((exp) => (\n                        <CourseExperience\n                          key={exp?.id}\n                          experience={exp}\n                          handleRemove={removeExp}\n                          handleChange={(obj) => {\n                            let expUpdate = [...experienceUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setExperienceUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {experience.map((exp) => (\n                      <ExperienceCreate\n                        key={exp?.id}\n                        experience={exp}\n                        handleRemove={(value) => {\n                          const updatedExperience = experience.filter(\n                            (result) => result.id != value.id\n                          );\n                          setExperience(updatedExperience);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...experience];\n\n                          let index = expdate?.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setExperience(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: `expList--${experience.length}`,\n                    name: \"\",\n                  };\n                  const newExps = [...experience, expItem];\n                  const emptyValue = experience.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}