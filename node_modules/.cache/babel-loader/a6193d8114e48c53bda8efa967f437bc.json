{"ast":null,"code":"import { parseAlgoliaHitHighlight } from '@algolia/autocomplete-preset-algolia';\nexport function createHighlightComponent(_ref) {\n  var createElement = _ref.createElement,\n      Fragment = _ref.Fragment;\n  return function Highlight(_ref2) {\n    var hit = _ref2.hit,\n        attribute = _ref2.attribute,\n        _ref2$tagName = _ref2.tagName,\n        tagName = _ref2$tagName === void 0 ? 'mark' : _ref2$tagName;\n    return createElement(Fragment, {}, parseAlgoliaHitHighlight({\n      hit: hit,\n      attribute: attribute\n    }).map(function (x, index) {\n      return x.isHighlighted ? createElement(tagName, {\n        key: index\n      }, x.value) : x.value;\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-js/dist/esm/components/Highlight.js"],"names":["parseAlgoliaHitHighlight","createHighlightComponent","_ref","createElement","Fragment","Highlight","_ref2","hit","attribute","_ref2$tagName","tagName","map","x","index","isHighlighted","key","value"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,sCAAzC;AACA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AAC7C,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAEA,SAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;AAAA,QACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;AAAA,QAEIC,aAAa,GAAGH,KAAK,CAACI,OAF1B;AAAA,QAGIA,OAAO,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,MAA3B,GAAoCA,aAHlD;AAIA,WAAON,aAAa,CAACC,QAAD,EAAW,EAAX,EAAeJ,wBAAwB,CAAC;AAC1DO,MAAAA,GAAG,EAAEA,GADqD;AAE1DC,MAAAA,SAAS,EAAEA;AAF+C,KAAD,CAAxB,CAGhCG,GAHgC,CAG5B,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AACzB,aAAOD,CAAC,CAACE,aAAF,GAAkBX,aAAa,CAACO,OAAD,EAAU;AAC9CK,QAAAA,GAAG,EAAEF;AADyC,OAAV,EAEnCD,CAAC,CAACI,KAFiC,CAA/B,GAEOJ,CAAC,CAACI,KAFhB;AAGD,KAPkC,CAAf,CAApB;AAQD,GAbD;AAcD","sourcesContent":["import { parseAlgoliaHitHighlight } from '@algolia/autocomplete-preset-algolia';\nexport function createHighlightComponent(_ref) {\n  var createElement = _ref.createElement,\n      Fragment = _ref.Fragment;\n  return function Highlight(_ref2) {\n    var hit = _ref2.hit,\n        attribute = _ref2.attribute,\n        _ref2$tagName = _ref2.tagName,\n        tagName = _ref2$tagName === void 0 ? 'mark' : _ref2$tagName;\n    return createElement(Fragment, {}, parseAlgoliaHitHighlight({\n      hit: hit,\n      attribute: attribute\n    }).map(function (x, index) {\n      return x.isHighlighted ? createElement(tagName, {\n        key: index\n      }, x.value) : x.value;\n    }));\n  };\n}"]},"metadata":{},"sourceType":"module"}