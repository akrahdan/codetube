{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation } from \"services/courses\";\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [goals, setGoals] = useState(selectedGoals || [{\n    id: \"answerList--0\",\n    value: \"\"\n  }]);\n  const [requirements, setRequirements] = useState(selectedRequirements || [{\n    id: \"answerList--0\",\n    value: \"\"\n  }]);\n  const [experience, setExperience] = useState(selectedExperiences || [{\n    id: \"answerList--0\",\n    value: \"\"\n  }]);\n\n  const removeGoal = goal => {\n    deleteGoal(goal.id);\n  };\n\n  const removeReq = req => {\n    deleteRequirements(req.id);\n  };\n\n  const removeExp = req => {\n    const updatedExp = experience.filter(item => item.id != req.id);\n    setExperience(updatedExp);\n  };\n\n  usePrompt(true);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your course is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your course?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: goals.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n                    goal: goal,\n                    handleRemove: removeGoal,\n                    handleChange: obj => {\n                      const newGoals = goals.map(item => {\n                        if (item.id == obj.id) {\n                          item.value = obj.value;\n                        }\n\n                        return item;\n                      });\n                      setGoals(newGoals);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${goals.length}`,\n                  value: \"\"\n                };\n                const newGoals = [...goals, answer];\n                const emptyValue = goals.filter(item => item.value == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setGoals(newGoals);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any course requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: requirements.map(req => /*#__PURE__*/_jsxDEV(Requirements, {\n                    req: req,\n                    handleRemove: removeReq,\n                    handleChange: obj => {\n                      const newReqs = requirements.map(item => {\n                        if (item.id == obj.id) {\n                          item.value = obj.value;\n                        }\n\n                        return item;\n                      });\n                      setRequirements(newReqs);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${requirements.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...requirements, answer];\n                const emptyValue = requirements.filter(item => item.value == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setRequirements(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: experience.map(req => /*#__PURE__*/_jsxDEV(Experience, {\n                    experience: req,\n                    handleRemove: removeExp,\n                    handleChange: obj => {\n                      const newReqs = experience.map(item => {\n                        if (item.id == obj.id) {\n                          item.value = obj.value;\n                        }\n\n                        return item;\n                      });\n                      setExperience(newReqs);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const answer = {\n                  id: `answerList--${experience.length}`,\n                  value: \"\"\n                };\n                const newExps = [...experience, answer];\n                const emptyValue = experience.filter(item => item.value == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setExperience(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"q48HQvWPf4J8ZQg8PP3feTgZdfk=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, usePrompt];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Courses/Target/index.js"],"names":["useEffect","useState","Goal","Requirements","Experience","usePrompt","selectLocationPayload","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","selectRequirements","selectGoals","selectExperience","Target","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","requirementsQuery","id","goalsQuery","experienceQuery","goals","setGoals","value","requirements","setRequirements","experience","setExperience","removeGoal","goal","removeReq","req","removeExp","updatedExp","filter","item","map","obj","newGoals","answer","length","emptyValue","newReqs","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { usePrompt } from \"../userPrompt\";\nimport { selectLocationPayload } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation\n} from \"services/courses\";\n\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\n\nexport const Target = () => {\n  \n  const locationPayload = useAppSelector(selectLocationPayload)\n  const selectedRequirements = useAppSelector(selectRequirements)\n  const selectedGoals = useAppSelector(selectGoals)\n  const selectedExperiences = useAppSelector(selectExperience)\n  const [ createGoal ] = useCreateGoalMutation()\n  const [ createExperience ] = useCreateExperienceMutation()\n  const [ createRequirement ] = useCreateRequirementMutation()\n  const [ editGoal ] = useEditGoalMutation()\n  const [ editRequirement ] = useEditRequirementMutation()\n  const [ editExperience ] = useEditExperienceMutation()\n  const [ deleteGoal ] = useDeleteGoalMutation()\n  const [ deleteExperience ] = useDeleteExperienceMutation()\n  const [ deleteRequirements ] = useDeleteRequirementMutation()\n  const { data: requirementsQuery } = useFetchRequirementsQuery(locationPayload.id)\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id)\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id)\n\n  const [goals, setGoals] = useState(selectedGoals || [{ id: \"answerList--0\", value: \"\" }]);\n  const [requirements, setRequirements] = useState(selectedRequirements || [\n    { id: \"answerList--0\", value: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState(selectedExperiences || [\n    { id: \"answerList--0\", value: \"\" },\n  ]);\n  const removeGoal = (goal) => {\n    deleteGoal(goal.id)\n  };\n\n  const removeReq = (req) => {\n    deleteRequirements(req.id)\n  };\n\n  const removeExp = (req) => {\n    const updatedExp = experience.filter((item) => item.id != req.id);\n    setExperience(updatedExp);\n  };\n\n  usePrompt(true)\n\n  useEffect(() => {\n\n  }, [])\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            course is the one for them.\n          </div>\n          <form className>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your course?\n                </label>\n                <div>\n                  <div>\n                    {goals.map((goal) => (\n                      <Goal\n                        goal={goal}\n                        handleRemove={removeGoal}\n                        handleChange={(obj) => {\n                          const newGoals = goals.map((item) => {\n                            if (item.id == obj.id) {\n                              item.value = obj.value;\n                            }\n                            return item;\n                          });\n                          setGoals(newGoals);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${goals.length}`,\n                    value: \"\",\n                  };\n                  const newGoals = [...goals, answer];\n                  const emptyValue = goals.filter((item) => item.value == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setGoals(newGoals);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any course requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {requirements.map((req) => (\n                      <Requirements\n                        req={req}\n                        handleRemove={removeReq}\n                        handleChange={(obj) => {\n                          const newReqs = requirements.map((item) => {\n                            if (item.id == obj.id) {\n                              item.value = obj.value;\n                            }\n                            return item;\n                          });\n                          setRequirements(newReqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${requirements.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...requirements, answer];\n                  const emptyValue = requirements.filter(\n                    (item) => item.value == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setRequirements(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {experience.map((req) => (\n                      <Experience\n                        experience={req}\n                        handleRemove={removeExp}\n                        handleChange={(obj) => {\n                          const newReqs = experience.map((item) => {\n                            if (item.id == obj.id) {\n                              item.value = obj.value;\n                            }\n                            return item;\n                          });\n                          setExperience(newReqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const answer = {\n                    id: `answerList--${experience.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...experience, answer];\n                  const emptyValue = experience.filter(\n                    (item) => item.value == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setExperience(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}