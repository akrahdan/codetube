{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{theme}from'@codecademy/gamut-styles';import{css}from'@emotion/react';import styled from'@emotion/styled';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var Image=styled.img();var defaultAvatarSize='118px';var AvatarContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: table;\\n\\n  \",\"\\n\\n  \",\" {\\n    position: relative;\\n    border-radius: 50%;\\n    object-fit: cover;\\n\\n    \",\"\\n  }\\n\"])),function(_ref){var disableDropshadow=_ref.disableDropshadow,mode=_ref.mode;return!disableDropshadow&&css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n      &::before {\\n        content: '';\\n        position: absolute;\\n        border-radius: 50%;\\n        transform: scale(0.92);\\n        transform-origin: bottom right;\\n        height: 100%;\\n        width: 100%;\\n        background-color: \",\";\\n      }\\n    \"])),mode?mode==='light'?theme.colors.lightGreen:theme.colors.green:theme.colors['feedback-success']);},Image,function(_ref2){var disableDropshadow=_ref2.disableDropshadow;return!disableDropshadow&&css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n        transform: scale(0.92);\\n        transform-origin: top left;\\n      \"])));});export var Avatar=function Avatar(_ref3){var mode=_ref3.mode,disableDropshadow=_ref3.disableDropshadow,className=_ref3.className,avatarImageProps=_objectWithoutProperties(_ref3,[\"mode\",\"disableDropshadow\",\"className\"]);return/*#__PURE__*/_jsx(AvatarContainer,{className:className,mode:mode,disableDropshadow:disableDropshadow,\"data-testid\":\"avatar-container\",children:/*#__PURE__*/_jsx(Image,_objectSpread({width:defaultAvatarSize,height:defaultAvatarSize},avatarImageProps))});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/Avatar/index.tsx"],"names":["theme","css","styled","React","Image","img","defaultAvatarSize","AvatarContainer","div","disableDropshadow","mode","colors","lightGreen","green","Avatar","className","avatarImageProps"],"mappings":"8kBACA,OAASA,KAAT,KAAsB,0BAAtB,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,GAAMC,CAAAA,KAAK,CAAGF,MAAM,CAACG,GAAP,EAAd,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,OAA1B,CAEA,GAAMC,CAAAA,eAAe,CAAGL,MAAM,CAACM,GAAV,2NAOjB,kBAAGC,CAAAA,iBAAH,MAAGA,iBAAH,CAAsBC,IAAtB,MAAsBA,IAAtB,OACA,CAACD,iBAAD,EACAR,GADA,4UAUwBS,IAAI,CACpBA,IAAI,GAAK,OAAT,CACEV,KAAK,CAACW,MAAN,CAAaC,UADf,CAEEZ,KAAK,CAACW,MAAN,CAAaE,KAHK,CAIpBb,KAAK,CAACW,MAAN,CAAa,kBAAb,CAdR,CADA,EAPiB,CA0BjBP,KA1BiB,CA+Bf,mBAAGK,CAAAA,iBAAH,OAAGA,iBAAH,OACA,CAACA,iBAAD,EACAR,GADA,iJADA,EA/Be,CAArB,CAsEA,MAAO,IAAMa,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,WAC3CJ,CAAAA,IAD2C,OAC3CA,IAD2C,CAE3CD,iBAF2C,OAE3CA,iBAF2C,CAG3CM,SAH2C,OAG3CA,SAH2C,CAIxCC,gBAJwC,6FAM3C,KAAC,eAAD,EACE,SAAS,CAAED,SADb,CAEE,IAAI,CAAEL,IAFR,CAGE,iBAAiB,CAAED,iBAHrB,CAIE,cAAY,kBAJd,uBAME,KAAC,KAAD,gBACE,KAAK,CAAEH,iBADT,CAEE,MAAM,CAAEA,iBAFV,EAGMU,gBAHN,EANF,EAN2C,EAAtC","sourcesContent":["import { VisualTheme } from '@codecademy/gamut';\nimport { theme } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nconst Image = styled.img();\n\nconst defaultAvatarSize = '118px';\n\nconst AvatarContainer = styled.div<{\n  mode?: VisualTheme;\n  disableDropshadow?: boolean;\n}>`\n  position: relative;\n  display: table;\n\n  ${({ disableDropshadow, mode }) =>\n    !disableDropshadow &&\n    css`\n      &::before {\n        content: '';\n        position: absolute;\n        border-radius: 50%;\n        transform: scale(0.92);\n        transform-origin: bottom right;\n        height: 100%;\n        width: 100%;\n        background-color: ${mode\n          ? mode === 'light'\n            ? theme.colors.lightGreen\n            : theme.colors.green\n          : theme.colors['feedback-success']};\n      }\n    `}\n\n  ${Image} {\n    position: relative;\n    border-radius: 50%;\n    object-fit: cover;\n\n    ${({ disableDropshadow }) =>\n      !disableDropshadow &&\n      css`\n        transform: scale(0.92);\n        transform-origin: top left;\n      `}\n  }\n`;\n\nexport type AvatarImageProps =\n  | { alt: string; 'aria-labelledby'?: never }\n  | { alt?: never; 'aria-labelledby': string };\n\nexport type AvatarBaseProps = {\n  /**\n   * path to image asset\n   */\n  src: string;\n\n  /**\n   * Disables the drop shadow entirely.\n   */\n  disableDropshadow?: boolean;\n\n  /**\n   * Overrides styles on the Avatar container.\n   */\n  className?: string;\n\n  /**\n   * @deprecated\n   * This will be determined automatically by the theme moving forward.\n   * Supplying it will determine the color of drop shadow.\n   */\n  mode?: VisualTheme;\n};\n\nexport type AvatarProps = AvatarBaseProps & AvatarImageProps;\n\nexport const Avatar: React.FC<AvatarProps> = ({\n  mode,\n  disableDropshadow,\n  className,\n  ...avatarImageProps\n}) => (\n  <AvatarContainer\n    className={className}\n    mode={mode}\n    disableDropshadow={disableDropshadow}\n    data-testid=\"avatar-container\"\n  >\n    <Image\n      width={defaultAvatarSize}\n      height={defaultAvatarSize}\n      {...avatarImageProps}\n    />\n  </AvatarContainer>\n);\n"]},"metadata":{},"sourceType":"module"}