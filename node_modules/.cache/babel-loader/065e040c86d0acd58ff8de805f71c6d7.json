{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/AccordionArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useIsomorphicLayoutEffect } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transitionDuration = 0.2;\nconst variants = {\n  expanded: {\n    height: 'auto'\n  },\n  folded: {\n    height: '0'\n  }\n};\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionArea = ({\n  children,\n  className,\n  expanded,\n  top\n}) => {\n  _s();\n\n  const [delayExpanded, setDelayExpanded] = useState(expanded);\n  useIsomorphicLayoutEffect(() => {\n    const handle = setTimeout(() => setDelayExpanded(expanded), transitionDuration * 1000);\n    return () => clearTimeout(handle);\n  }, [expanded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [top, /*#__PURE__*/_jsxDEV(StyledAccordionBody, {\n      \"aria-expanded\": expanded,\n      initial: expanded ? 'expanded' : 'folded',\n      animate: expanded ? 'expanded' : 'folded',\n      variants: variants,\n      transition: {\n        duration: transitionDuration,\n        ease: 'easeInOut'\n      },\n      children: (expanded || delayExpanded) && children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccordionArea, \"SbQeJ9tZrogl6Pt/ZtUtNe5FXXk=\", false, function () {\n  return [useIsomorphicLayoutEffect];\n});\n\n_c = AccordionArea;\nconst StyledAccordionBody = styled(motion.div)`\n  overflow: hidden;\n`;\n_c2 = StyledAccordionBody;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccordionArea\");\n$RefreshReg$(_c2, \"StyledAccordionBody\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/AccordionArea/index.tsx"],"names":["styled","motion","React","useState","useIsomorphicLayoutEffect","transitionDuration","variants","expanded","height","folded","AccordionArea","children","className","top","delayExpanded","setDelayExpanded","handle","setTimeout","clearTimeout","duration","ease","StyledAccordionBody","div"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,yBAAT,QAA0C,WAA1C;;AAkBA,MAAMC,kBAAkB,GAAG,GAA3B;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GADK;AAEfC,EAAAA,MAAM,EAAE;AAAED,IAAAA,MAAM,EAAE;AAAV;AAFO,CAAjB;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,aAA2C,GAAG,CAAC;AAC1DC,EAAAA,QAD0D;AAE1DC,EAAAA,SAF0D;AAG1DL,EAAAA,QAH0D;AAI1DM,EAAAA;AAJ0D,CAAD,KAKrD;AAAA;;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAACI,QAAD,CAAlD;AAEAH,EAAAA,yBAAyB,CAAC,MAAM;AAC9B,UAAMY,MAAM,GAAGC,UAAU,CACvB,MAAMF,gBAAgB,CAACR,QAAD,CADC,EAEvBF,kBAAkB,GAAG,IAFE,CAAzB;AAKA,WAAO,MAAMa,YAAY,CAACF,MAAD,CAAzB;AACD,GAPwB,EAOtB,CAACT,QAAD,CAPsB,CAAzB;AASA,sBACE;AAAK,IAAA,SAAS,EAAEK,SAAhB;AAAA,eACGC,GADH,eAEE,QAAC,mBAAD;AACE,uBAAeN,QADjB;AAEE,MAAA,OAAO,EAAEA,QAAQ,GAAG,UAAH,GAAgB,QAFnC;AAGE,MAAA,OAAO,EAAEA,QAAQ,GAAG,UAAH,GAAgB,QAHnC;AAIE,MAAA,QAAQ,EAAED,QAJZ;AAKE,MAAA,UAAU,EAAE;AAAEa,QAAAA,QAAQ,EAAEd,kBAAZ;AAAgCe,QAAAA,IAAI,EAAE;AAAtC,OALd;AAAA,gBAOG,CAACb,QAAQ,IAAIO,aAAb,KAA+BH;AAPlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BM;;GAAMD,a;UAQXN,yB;;;KARWM,a;AAiCb,MAAMW,mBAAmB,GAAGrB,MAAM,CAACC,MAAM,CAACqB,GAAR,CAAa;AAC/C;AACA,CAFA;MAAMD,mB","sourcesContent":["import styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useIsomorphicLayoutEffect } from 'react-use';\n\nexport type AccordionAreaProps = {\n  children: React.ReactNode;\n\n  className?: string;\n\n  /**\n   * Whether the accordion is visually expanded to show its contents.\n   */\n  expanded?: boolean;\n\n  /**\n   * Contents of the clickable header button.\n   */\n  top: React.ReactNode;\n};\n\nconst transitionDuration = 0.2;\n\nconst variants = {\n  expanded: { height: 'auto' },\n  folded: { height: '0' },\n};\n\n/**\n * @deprecated\n * This component is in the old visual identity and will be updated soon.\n *\n * Check the [Gamut Board](https://www.notion.so/codecademy/Gamut-Status-Timeline-dd3c135d3848464ea6eb1b48e68fbb1d) for component status\n */\n\nexport const AccordionArea: React.FC<AccordionAreaProps> = ({\n  children,\n  className,\n  expanded,\n  top,\n}) => {\n  const [delayExpanded, setDelayExpanded] = useState(expanded);\n\n  useIsomorphicLayoutEffect(() => {\n    const handle = setTimeout(\n      () => setDelayExpanded(expanded),\n      transitionDuration * 1000\n    );\n\n    return () => clearTimeout(handle);\n  }, [expanded]);\n\n  return (\n    <div className={className}>\n      {top}\n      <StyledAccordionBody\n        aria-expanded={expanded}\n        initial={expanded ? 'expanded' : 'folded'}\n        animate={expanded ? 'expanded' : 'folded'}\n        variants={variants}\n        transition={{ duration: transitionDuration, ease: 'easeInOut' }}\n      >\n        {(expanded || delayExpanded) && children}\n      </StyledAccordionBody>\n    </div>\n  );\n};\n\nconst StyledAccordionBody = styled(motion.div)`\n  overflow: hidden;\n`;\n"]},"metadata":{},"sourceType":"module"}