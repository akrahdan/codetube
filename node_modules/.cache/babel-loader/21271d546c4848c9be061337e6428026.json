{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from 'services/courses';\nconst initialState = {\n  course: null,\n  saveProps: {\n    submit: false,\n    locationPath: null\n  }\n};\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState,\n  reducers: {\n    saveCourse: (state, action) => {}\n  },\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.updateCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.course = payload;\n    }).addMatcher(coursesApi.endpoints.fetchResources.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    }).addMatcher(coursesApi.endpoints.createResource.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.resources = payload;\n    });\n    ;\n    ;\n  }\n});\nexport default courseSlice.reducer;\nexport const selectCourse = state => state.course.course;\nexport const selectResources = state => state.course.resources;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/course/courseSplice.ts"],"names":["createSlice","coursesApi","initialState","course","saveProps","submit","locationPath","courseSlice","name","reducers","saveCourse","state","action","extraReducers","builder","addMatcher","endpoints","createCourse","matchFulfilled","payload","updateCourse","fetchResources","resources","createResource","reducer","selectCourse","selectResources"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAAwBC,UAAxB,QAAwD,kBAAxD;AAWA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAC9CC,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,YAAY,EAAE;AAFgC;AAA3B,CAArB;AAIA,MAAMC,WAAW,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAAY,EAAEA,YAFgB;AAG9BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA+C,CAE1D;AAHO,GAHoB;AAS9BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEId,UAAU,CAACe,SAAX,CAAqBC,YAArB,CAAkCC,cAFtC,EAGI,CAACP,KAAD,EAAQ;AAAEQ,MAAAA;AAAF,KAAR,KAAwB;AACvBR,MAAAA,KAAK,CAACR,MAAN,GAAegB,OAAf;AAEA,KANL,EAOIJ,UAPJ,CAQId,UAAU,CAACe,SAAX,CAAqBI,YAArB,CAAkCF,cARtC,EASI,CAACP,KAAD,EAAQ;AAAEQ,MAAAA;AAAF,KAAR,KAAwB;AACtBR,MAAAA,KAAK,CAACR,MAAN,GAAegB,OAAf;AACD,KAXL,EAYIJ,UAZJ,CAaId,UAAU,CAACe,SAAX,CAAqBK,cAArB,CAAoCH,cAbxC,EAcI,CAACP,KAAD,EAAQ;AAAEQ,MAAAA;AAAF,KAAR,KAAwB;AACtBR,MAAAA,KAAK,CAACW,SAAN,GAAkBH,OAAlB;AAED,KAjBL,EAkBIJ,UAlBJ,CAmBId,UAAU,CAACe,SAAX,CAAqBO,cAArB,CAAoCL,cAnBxC,EAoBI,CAACP,KAAD,EAAQ;AAAEQ,MAAAA;AAAF,KAAR,KAAwB;AACtBR,MAAAA,KAAK,CAACW,SAAN,GAAkBH,OAAlB;AAED,KAvBL;AAwBI;AAAC;AACN;AAnC6B,CAAD,CAA/B;AAwCA,eAAeZ,WAAW,CAACiB,OAA3B;AAEA,OAAO,MAAMC,YAAY,GAAId,KAAD,IAAsBA,KAAK,CAACR,MAAN,CAAaA,MAAxD;AACP,OAAO,MAAMuB,eAAe,GAAIf,KAAD,IAAsBA,KAAK,CAACR,MAAN,CAAamB,SAA3D","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport {CourseResponse, coursesApi, MediaResponse} from 'services/courses'\n\ninterface submitProps {\n  submit: boolean\n  locationPath: string\n}\ntype CourseState = {\n  course: CourseResponse | null,\n  resources: MediaResponse[] | [],\n  saveProps: submitProps | null\n};\nconst initialState = { course: null, saveProps: {\n  submit: false,\n  locationPath: null\n} };\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState as CourseState,\n  reducers: {\n    saveCourse: (state, action: PayloadAction<submitProps>) => {\n      \n    }\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createCourse.matchFulfilled,\n        (state, { payload }) => {\n         state.course = payload\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.updateCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.course = payload\n        }\n      ).addMatcher(\n        coursesApi.endpoints.fetchResources.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      ).addMatcher(\n        coursesApi.endpoints.createResource.matchFulfilled,\n        (state, { payload }) => {\n          state.resources = payload\n\n        }\n      );;;\n  },\n});\n\n\n\nexport default courseSlice.reducer;\n\nexport const selectCourse = (state: RootState) => state.course.course;\nexport const selectResources = (state: RootState) => state.course.resources;\n"]},"metadata":{},"sourceType":"module"}