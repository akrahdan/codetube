{"ast":null,"code":"import{FlexBox,Pattern,Text}from'@codecademy/gamut';import{pxRem,styledOptions,variant}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmptyContainer=styled(FlexBox)(variant({prop:'stretchDirection',defaultVariant:'left',base:{justifySelf:'center',position:'relative',px:32,py:{_:64,lg:96},width:1},variants:{left:{pl:{sm:0},pr:{sm:64,lg:96}},right:{pr:{sm:0},pl:{sm:64,lg:96}}}}));var Dots=styled(Pattern)(variant({prop:'stretchDirection',defaultVariant:'left',base:{position:'absolute',top:0,bottom:0,left:'-6rem',right:'-6rem'},variants:{left:{right:{sm:0}},right:{left:{sm:0}}}}));var illustrationPositionVariants=variant({prop:'illustrationPosition',defaultVariant:'right',base:{mx:{_:'auto',sm:0},mb:{_:32,sm:0}},variants:{left:{mr:{sm:48}},right:{ml:{sm:48}}}});var IllustrationContainer=styled('div',styledOptions)(illustrationPositionVariants);export var EmptySection=function EmptySection(_ref){var bodyText=_ref.bodyText,children=_ref.children,headingText=_ref.headingText,Illustration=_ref.illustration,stretchDirection=_ref.stretchDirection,_ref$illustrationPosi=_ref.illustrationPosition,illustrationPosition=_ref$illustrationPosi===void 0?stretchDirection==='right'?'left':'right':_ref$illustrationPosi,innerBGColor=_ref.innerBGColor;var flexDirection=illustrationPosition==='right'?'row-reverse':'row';return/*#__PURE__*/_jsxs(EmptyContainer,{stretchDirection:stretchDirection,children:[/*#__PURE__*/_jsx(Dots,{name:\"dotLoose\",stretchDirection:stretchDirection}),/*#__PURE__*/_jsxs(FlexBox,{maxWidth:\"822px\",flexBasis:\"100%\",position:\"relative\",bg:innerBGColor,py:48,px:{_:16,sm:48,md:64},zIndex:1,flexDirection:{_:'column',sm:flexDirection},justifyContent:{_:'space-around',md:'space-between'},alignItems:\"center\",textAlign:{_:'center',sm:'start'},children:[/*#__PURE__*/_jsx(IllustrationContainer,{illustrationPosition:illustrationPosition,children:/*#__PURE__*/_jsx(Illustration,{width:pxRem(100)})}),/*#__PURE__*/_jsxs(FlexBox,{flexDirection:\"column\",alignItems:{_:'center',sm:'start'},children:[/*#__PURE__*/_jsx(Text,{as:\"h2\",fontSize:22,mb:8,children:headingText}),/*#__PURE__*/_jsx(Text,{mb:32,children:bodyText}),children]})]})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/EmptySection/index.tsx"],"names":["FlexBox","Pattern","Text","pxRem","styledOptions","variant","styled","React","EmptyContainer","prop","defaultVariant","base","justifySelf","position","px","py","_","lg","width","variants","left","pl","sm","pr","right","Dots","top","bottom","illustrationPositionVariants","mx","mb","mr","ml","IllustrationContainer","EmptySection","bodyText","children","headingText","Illustration","illustration","stretchDirection","illustrationPosition","innerBGColor","flexDirection","md"],"mappings":"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","sourcesContent":["import { ButtonProps, FlexBox, Pattern, Text } from '@codecademy/gamut';\nimport { IllustrationProps } from '@codecademy/gamut-illustrations';\nimport {\n  Colors,\n  pxRem,\n  styledOptions,\n  variant,\n} from '@codecademy/gamut-styles';\nimport { StyleProps } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nimport { DropdownButtonProps } from '..';\n\nexport type EmptySectionProps = {\n  /**\n   * Paragraph text that displays beneath the heading text\n   */\n  bodyText: string;\n  /**\n   * Button or dropdown button with an action for the user to take\n   */\n  children: React.ReactElement<ButtonProps | DropdownButtonProps>;\n  /**\n   * The larger heading text that appears over the body text\n   */\n  headingText: string;\n  illustration: React.ComponentType<IllustrationProps>;\n  /**\n   * Whether the illustration appears to the left or right of the rest of the section's content\n   */\n  illustrationPosition?: 'left' | 'right';\n  /**\n   * This should be the same as the background color in order to create a patterned border effect\n   */\n  innerBGColor: Colors;\n  /**\n   * Whether the pattern background stretches to the end of the left or right of the viewport\n   */\n  stretchDirection: 'left' | 'right';\n};\n\nconst EmptyContainer = styled(FlexBox)(\n  variant({\n    prop: 'stretchDirection',\n    defaultVariant: 'left',\n    base: {\n      justifySelf: 'center',\n      position: 'relative',\n      px: 32,\n      py: { _: 64, lg: 96 },\n      width: 1,\n    },\n    variants: {\n      left: {\n        pl: { sm: 0 },\n        pr: { sm: 64, lg: 96 },\n      },\n      right: {\n        pr: { sm: 0 },\n        pl: { sm: 64, lg: 96 },\n      },\n    },\n  })\n);\n\nconst Dots = styled(Pattern)(\n  variant({\n    prop: 'stretchDirection',\n    defaultVariant: 'left',\n    base: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: '-6rem',\n      right: '-6rem',\n    },\n    variants: {\n      left: {\n        right: { sm: 0 },\n      },\n      right: {\n        left: { sm: 0 },\n      },\n    },\n  })\n);\n\nconst illustrationPositionVariants = variant({\n  prop: 'illustrationPosition',\n  defaultVariant: 'right',\n  base: {\n    mx: { _: 'auto', sm: 0 },\n    mb: { _: 32, sm: 0 },\n  },\n  variants: {\n    left: {\n      mr: { sm: 48 },\n    },\n    right: {\n      ml: { sm: 48 },\n    },\n  },\n});\n\ntype IllustrationContainerProps = StyleProps<\n  typeof illustrationPositionVariants\n>;\n\nconst IllustrationContainer = styled(\n  'div',\n  styledOptions\n)<IllustrationContainerProps>(illustrationPositionVariants);\n\nexport const EmptySection: React.FC<EmptySectionProps> = ({\n  bodyText,\n  children,\n  headingText,\n  illustration: Illustration,\n  stretchDirection,\n  illustrationPosition = stretchDirection === 'right' ? 'left' : 'right',\n  innerBGColor,\n}) => {\n  const flexDirection =\n    illustrationPosition === 'right' ? 'row-reverse' : 'row';\n\n  return (\n    <EmptyContainer stretchDirection={stretchDirection}>\n      <Dots name=\"dotLoose\" stretchDirection={stretchDirection} />\n      <FlexBox\n        maxWidth=\"822px\"\n        flexBasis=\"100%\"\n        position=\"relative\"\n        bg={innerBGColor}\n        py={48}\n        px={{ _: 16, sm: 48, md: 64 }}\n        zIndex={1}\n        flexDirection={{ _: 'column', sm: flexDirection }}\n        justifyContent={{ _: 'space-around', md: 'space-between' }}\n        alignItems=\"center\"\n        textAlign={{ _: 'center', sm: 'start' }}\n      >\n        <IllustrationContainer illustrationPosition={illustrationPosition}>\n          <Illustration width={pxRem(100)} />\n        </IllustrationContainer>\n        <FlexBox\n          flexDirection=\"column\"\n          alignItems={{ _: 'center', sm: 'start' }}\n        >\n          <Text as=\"h2\" fontSize={22} mb={8}>\n            {headingText}\n          </Text>\n          <Text mb={32}>{bodyText}</Text>\n          {children}\n        </FlexBox>\n      </FlexBox>\n    </EmptyContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}