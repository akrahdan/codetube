{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { useCollapsible } from './use-collapsible';\n\nvar Collapsible = function (props) {\n  var _a = props.isOpen,\n      isOpen = _a === void 0 ? false : _a,\n      _b = props.tagName,\n      Tag = _b === void 0 ? 'div' : _b,\n      rest = __rest(props, [\"isOpen\", \"tagName\"]);\n\n  var _c = useCollapsible(isOpen),\n      ref = _c.ref,\n      collapsibleProps = __rest(_c, [\"ref\"]);\n\n  return React.createElement(Tag, __assign({\n    ref: ref\n  }, rest, collapsibleProps));\n};\n\nexport default Collapsible;","map":{"version":3,"sources":["../../../src/react/collapsible.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,cAAT,QAA+B,mBAA/B;;AAMA,IAAM,WAAW,GAA+B,UAAA,KAAA,EAAK;AAC3C,MAAA,EAAA,GAAkD,KAAK,CAAzC,MAAd;AAAA,MAAA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAd;AAAA,MAAgB,EAAA,GAAkC,KAAK,CAAnB,OAApC;AAAA,MAAyB,GAAG,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAApC;AAAA,MAAyC,IAAI,GAAA,MAAA,CAAK,KAAL,EAA/C,CAAA,QAAA,EAAA,SAAA,CAA+C,CAA7C;;AAER,MAAM,EAAA,GAA+B,cAAc,CAAC,MAAD,CAAnD;AAAA,MAAQ,GAAG,GAAA,EAAA,CAAA,GAAX;AAAA,MAAgB,gBAAgB,GAAA,MAAA,CAAA,EAAA,EAA1B,CAAA,KAAA,CAA0B,CAAhC;;AAEA,SAAO,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI,QAAA,CAAA;AAAC,IAAA,GAAG,EAAE;AAAN,GAAA,EAAe,IAAf,EAAyB,gBAAzB,CAAJ,CAAP;AACD,CAND;;AAQA,eAAe,WAAf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { useCollapsible } from './use-collapsible';\nvar Collapsible = function (props) {\n    var _a = props.isOpen, isOpen = _a === void 0 ? false : _a, _b = props.tagName, Tag = _b === void 0 ? 'div' : _b, rest = __rest(props, [\"isOpen\", \"tagName\"]);\n    var _c = useCollapsible(isOpen), ref = _c.ref, collapsibleProps = __rest(_c, [\"ref\"]);\n    return React.createElement(Tag, __assign({ ref: ref }, rest, collapsibleProps));\n};\nexport default Collapsible;\n//# sourceMappingURL=collapsible.js.map"]},"metadata":{},"sourceType":"module"}