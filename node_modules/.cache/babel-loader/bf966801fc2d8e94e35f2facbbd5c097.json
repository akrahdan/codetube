{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  playing: false,\n  playbackSpeed: 1.0,\n  activeMenu: null,\n  volumeSliderActive: false,\n  volume: {\n    volume: 0.5,\n    muted: false\n  }\n};\nexport const playerSlice = createSlice({\n  name: 'player',\n  initialState,\n  reducers: {\n    play: (state, action) => {\n      state.playing = true;\n    },\n    pause: (state, action) => {\n      state.playing = false;\n    },\n    setPlaybackSpeed: (state, action) => {\n      state.playbackSpeed = action.payload;\n    },\n    setActiveMenu: (state, action) => {\n      state.activeMenu = action.payload;\n    },\n    setVolumeSliderActive: (state, action) => {\n      state.volumeSliderActive = action.payload;\n    },\n    setVolume\n  }\n});\nexport const selectPlayer = state => state.player;\nexport const {\n  play,\n  pause,\n  setPlaybackSpeed,\n  setActiveMenu,\n  setVolumeSliderActive\n} = playerSlice.actions;\nexport default playerSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/player/playerSlice.ts"],"names":["createSlice","initialState","playing","playbackSpeed","activeMenu","volumeSliderActive","volume","muted","playerSlice","name","reducers","play","state","action","pause","setPlaybackSpeed","payload","setActiveMenu","setVolumeSliderActive","setVolume","selectPlayer","player","actions","reducer"],"mappings":"AAAA,SAA2BA,WAA3B,QACO,kBADP;AAoBA,OAAO,MAAMC,YAAyB,GAAG;AACrCC,EAAAA,OAAO,EAAE,KAD4B;AAErCC,EAAAA,aAAa,EAAE,GAFsB;AAGrCC,EAAAA,UAAU,EAAE,IAHyB;AAIrCC,EAAAA,kBAAkB,EAAE,KAJiB;AAKrCC,EAAAA,MAAM,EAAE;AACJA,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAL6B,CAAlC;AAUP,OAAO,MAAMC,WAAW,GAAGR,WAAW,CAAC;AACnCS,EAAAA,IAAI,EAAE,QAD6B;AAEnCR,EAAAA,YAFmC;AAGnCS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAwC;AAE1CD,MAAAA,KAAK,CAACV,OAAN,GAAgB,IAAhB;AACH,KAJK;AAMNY,IAAAA,KAAK,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAwC;AAE3CD,MAAAA,KAAK,CAACV,OAAN,GAAgB,KAAhB;AACH,KATK;AAUNa,IAAAA,gBAAgB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAyC;AACvDD,MAAAA,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACG,OAA7B;AACH,KAZK;AAcNC,IAAAA,aAAa,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAyC;AACpDD,MAAAA,KAAK,CAACR,UAAN,GAAmBS,MAAM,CAACG,OAA1B;AACH,KAhBK;AAiBNE,IAAAA,qBAAqB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAA0C;AAC7DD,MAAAA,KAAK,CAACP,kBAAN,GAA2BQ,MAAM,CAACG,OAAlC;AACH,KAnBK;AAoBNG,IAAAA;AApBM;AAHyB,CAAD,CAA/B;AA6BP,OAAO,MAAMC,YAAY,GAAIR,KAAD,IAAsBA,KAAK,CAACS,MAAjD;AAIP,OAAO,MAAO;AAAEV,EAAAA,IAAF;AAAQG,EAAAA,KAAR;AAAeC,EAAAA,gBAAf;AAAiCE,EAAAA,aAAjC;AAAgDC,EAAAA;AAAhD,IAA0EV,WAAW,CAACc,OAA7F;AAIP,eAAed,WAAW,CAACe,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction \n} from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { StringChain, stubFalse, without } from 'lodash';\nimport { AppThunk, RootState } from \"store\";\nimport { clamp } from \"portal/scenes/CoursePlayer/utilities/clamp\";\nexport interface PlayerState { \n    playing: boolean,\n    playbackSpeed: number,\n    activeMenu: string,\n    volumeSliderActive: boolean\n    volume: Volume\n\n}\n\ninterface Volume {\n    volume: number,\n    muted: boolean\n}\n\nexport const initialState: PlayerState = {\n    playing: false,\n    playbackSpeed: 1.0,\n    activeMenu: null,\n    volumeSliderActive: false,\n    volume: {\n        volume: 0.5,\n        muted: false\n    }\n}\nexport const playerSlice = createSlice({\n    name: 'player',\n    initialState,\n    reducers: {\n        play: (state, action: PayloadAction<void>) => {\n          \n            state.playing = true \n        },\n\n        pause: (state, action: PayloadAction<void>) => {\n          \n            state.playing = false \n        },\n        setPlaybackSpeed: (state, action: PayloadAction<number>) =>{\n            state.playbackSpeed = action.payload\n        },\n\n        setActiveMenu: (state, action: PayloadAction<string>) =>{\n            state.activeMenu = action.payload\n        },\n        setVolumeSliderActive: (state, action: PayloadAction<boolean>) =>{\n            state.volumeSliderActive = action.payload\n        },\n        setVolume\n\n        \n    }\n});\n\nexport const selectPlayer = (state: RootState) => state.player\n\n\n\nexport const  { play, pause, setPlaybackSpeed, setActiveMenu, setVolumeSliderActive } = playerSlice.actions\n\n\n\nexport default playerSlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}