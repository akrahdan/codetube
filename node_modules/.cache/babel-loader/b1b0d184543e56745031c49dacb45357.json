{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{Sidebar}from\"./Sidebar\";import{Courses}from\"./Courses\";import{Communication}from\"./Communication\";import{routesDashboard}from\"portal/routes\";import{getRouteMetaForLocation}from\"libs/location/routing\";import{selectLocationPathName}from\"state/location/selectors\";import{selectCurrentPath}from\"state/instructor/instructorSplice\";import{useAppSelector}from\"store/hooks\";import{NavBar}from\"./navbar\";import\"./instructor.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Dashboard=function Dashboard(){var locationPath=useAppSelector(selectLocationPathName);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sideNav=_useState2[0],setSideNav=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),perfNav=_useState4[0],setPerfNav=_useState4[1];var _getRouteMetaForLocat=getRouteMetaForLocation(routesDashboard,locationPath),Scene=_getRouteMetaForLocat.scene;return/*#__PURE__*/_jsxs(\"div\",{className:\"main-content-container\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-frame page-frame--ia\",children:[/*#__PURE__*/_jsx(Sidebar,{sideOpen:sideNav,perfOpen:perfNav}),/*#__PURE__*/_jsx(\"div\",{className:\"main_container\",children:/*#__PURE__*/_jsx(Scene,{sideNavToggle:function sideNavToggle(value){return setSideNav(value);},perfNavToggle:function perfNavToggle(value){return setPerfNav(value);}})})]})})]});};export default Dashboard;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Dashboard/index.js"],"names":["useState","Sidebar","Courses","Communication","routesDashboard","getRouteMetaForLocation","selectLocationPathName","selectCurrentPath","useAppSelector","NavBar","Dashboard","locationPath","sideNav","setSideNav","perfNav","setPerfNav","Scene","scene","value"],"mappings":"uKAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,OAASC,uBAAT,KAAwC,uBAAxC,CACA,OAASC,sBAAT,KAAuC,0BAAvC,CACA,OAASC,iBAAT,KAAkC,mCAAlC,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,MAAO,mBAAP,C,wFAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,GAAMC,CAAAA,YAAY,CAAGH,cAAc,CAACF,sBAAD,CAAnC,CAD6B,cAECN,QAAQ,CAAC,KAAD,CAFT,wCAEtBY,OAFsB,eAEbC,UAFa,8BAGCb,QAAQ,CAAC,KAAD,CAHT,yCAGtBc,OAHsB,eAGbC,UAHa,yCAIJV,uBAAuB,CAC9CD,eAD8C,CAE9CO,YAF8C,CAJnB,CAIdK,KAJc,uBAIrBC,KAJqB,CAQ7B,mBACE,aAAK,SAAS,CAAC,wBAAf,wBACE,KAAC,MAAD,IADF,cAEE,YAAK,SAAS,CAAC,cAAf,uBACE,aAAK,SAAS,CAAC,2BAAf,wBACE,KAAC,OAAD,EAAS,QAAQ,CAAGL,OAApB,CAA6B,QAAQ,CAAIE,OAAzC,EADF,cAEE,YAAK,SAAS,CAAC,gBAAf,uBACE,KAAC,KAAD,EAAO,aAAa,CAAE,uBAACI,KAAD,QAAYL,CAAAA,UAAU,CAACK,KAAD,CAAtB,EAAtB,CACC,aAAa,CAAE,uBAACA,KAAD,QAAYH,CAAAA,UAAU,CAACG,KAAD,CAAtB,EADhB,EADF,EAFF,GADF,EAFF,GADF,CAeD,CAvBM,CAyBP,cAAeR,CAAAA,SAAf","sourcesContent":["import { useState } from \"react\";\n\nimport { Sidebar } from \"./Sidebar\";\nimport { Courses } from \"./Courses\";\nimport { Communication } from \"./Communication\";\nimport { routesDashboard } from \"portal/routes\";\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { selectLocationPathName } from \"state/location/selectors\";\nimport { selectCurrentPath } from \"state/instructor/instructorSplice\";\nimport { useAppSelector } from \"store/hooks\";\nimport { NavBar } from \"./navbar\";\nimport \"./instructor.scss\";\n\nexport const Dashboard = () => {\n  const locationPath = useAppSelector(selectLocationPathName);\n  const [sideNav, setSideNav] = useState(false)\n  const [perfNav, setPerfNav] = useState(false)\n  const { scene: Scene } = getRouteMetaForLocation(\n    routesDashboard,\n    locationPath\n  );\n  return (\n    <div className=\"main-content-container\">\n      <NavBar />\n      <div className=\"main-content\">\n        <div className=\"page-frame page-frame--ia\">\n          <Sidebar sideOpen= {sideNav} perfOpen = {perfNav}/>\n          <div className=\"main_container\">\n            <Scene sideNavToggle={(value ) => setSideNav(value)}\n             perfNavToggle={(value ) => setPerfNav(value)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}