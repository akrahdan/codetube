{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import cx from'classnames';import HtmlToReact from'html-to-react';import marked from'marked';import React,{PureComponent}from'react';import sanitizeMarkdown from'sanitize-markdown';import{omitProps}from'../utils/omitProps';import{createCodeBlockOverride,createTagOverride,standardOverrides}from'./libs/overrides';import{Iframe}from'./libs/overrides/Iframe';import{MarkdownAnchor}from'./libs/overrides/MarkdownAnchor';import{Table}from'./libs/overrides/Table';import{createPreprocessingInstructions}from'./libs/preprocessing';import{defaultSanitizationConfig}from'./libs/sanitizationConfig';import styles from'./styles/index.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";var htmlToReactParser=new HtmlToReact.Parser({xmlMode:true});var preprocessingInstructions=createPreprocessingInstructions(styles);var isValidNode=function isValidNode(){return true;};export var Markdown=/*#__PURE__*/function(_PureComponent){_inherits(Markdown,_PureComponent);var _super=_createSuper(Markdown);function Markdown(){_classCallCheck(this,Markdown);return _super.apply(this,arguments);}_createClass(Markdown,[{key:\"render\",value:function render(){var _this$props=this.props,_this$props$spacing=_this$props.spacing,spacing=_this$props$spacing===void 0?'tight':_this$props$spacing,_this$props$text=_this$props.text,text=_this$props$text===void 0?'':_this$props$text,className=_this$props.className,_this$props$overrides=_this$props.overrides,userOverrides=_this$props$overrides===void 0?{}:_this$props$overrides,_this$props$skipDefau=_this$props.skipDefaultOverrides,skipDefaultOverrides=_this$props$skipDefau===void 0?{}:_this$props$skipDefau,_this$props$inline=_this$props.inline,inline=_this$props$inline===void 0?false:_this$props$inline,headerIds=_this$props.headerIds,onAnchorClick=_this$props.onAnchorClick;if(!text)return null;var spacingStyles=styles[\"spacing-\".concat(spacing)];var classes=cx(spacingStyles,className);var Wrapper=inline?'span':'div';var overrides=Object.keys(userOverrides).map(function(tagName){if(tagName==='CodeBlock'){return createCodeBlockOverride(tagName,userOverrides[tagName]);}return createTagOverride(tagName,userOverrides[tagName]);});var processingInstructions=[!skipDefaultOverrides.iframe&&createTagOverride('iframe',{component:Iframe}),!skipDefaultOverrides.a&&createTagOverride('a',{component:MarkdownAnchor,processNode:function processNode(node,props){// Note: this processNode override is necessary because wrapping this component\n// in an anonymous functional component as with the Table below causes react rendering\n// to crash with some chrome translation features.\n// See https://codecademy.atlassian.net/browse/WEB-1214\nreturn/*#__PURE__*/_jsx(MarkdownAnchor,_objectSpread({onClick:onAnchorClick},props));}}),!skipDefaultOverrides.table&&createTagOverride('table',{component:function component(props){return/*#__PURE__*/_jsx(Table,_objectSpread({maxHeight:spacing==='tight'?180:500},props));},allowedAttributes:['style']})].concat(_toConsumableArray(overrides),_toConsumableArray(standardOverrides)).filter(Boolean);var markedOptions={smartypants:true,headerIds:headerIds,headerPrefix:'heading-'};// Render markdown to html\nvar rawHtml=inline?marked.inlineLexer(text,[],markedOptions):marked(text,markedOptions);var sanitizationConfig=_objectSpread(_objectSpread({},defaultSanitizationConfig),{},{allowedTags:[].concat(_toConsumableArray(defaultSanitizationConfig.allowedTags),_toConsumableArray(Object.keys(userOverrides).map(function(tagName){return tagName.toLowerCase();}))),allowedAttributes:_objectSpread(_objectSpread({},defaultSanitizationConfig.allowedAttributes),Object.keys(userOverrides).reduce(function(acc,tagName){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},tagName.toLowerCase(),(userOverrides[tagName].allowedAttributes||[]).map(function(attr){return attr.toLowerCase();})));},{}))});var html=sanitizeMarkdown(rawHtml,sanitizationConfig);// Render html to a react tree\nvar react=htmlToReactParser.parseWithInstructions(html,isValidNode,processingInstructions,preprocessingInstructions);return/*#__PURE__*/_jsx(Wrapper,_objectSpread(_objectSpread({},omitProps(Object.keys(this.props),this.props)),{},{className:classes,children:react}));}}]);return Markdown;}(PureComponent);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Markdown/index.tsx"],"names":["cx","HtmlToReact","marked","React","PureComponent","sanitizeMarkdown","omitProps","createCodeBlockOverride","createTagOverride","standardOverrides","Iframe","MarkdownAnchor","Table","createPreprocessingInstructions","defaultSanitizationConfig","styles","htmlToReactParser","Parser","xmlMode","preprocessingInstructions","isValidNode","Markdown","props","spacing","text","className","overrides","userOverrides","skipDefaultOverrides","inline","headerIds","onAnchorClick","spacingStyles","classes","Wrapper","Object","keys","map","tagName","processingInstructions","iframe","component","a","processNode","node","table","allowedAttributes","filter","Boolean","markedOptions","smartypants","headerPrefix","rawHtml","inlineLexer","sanitizationConfig","allowedTags","toLowerCase","reduce","acc","attr","html","react","parseWithInstructions"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport HtmlToReact from 'html-to-react';\nimport marked from 'marked';\nimport React, { PureComponent } from 'react';\nimport sanitizeMarkdown from 'sanitize-markdown';\n\nimport { omitProps } from '../utils/omitProps';\nimport {\n  createCodeBlockOverride,\n  createTagOverride,\n  ManyOverrideSettings,\n  standardOverrides,\n} from './libs/overrides';\nimport { Iframe } from './libs/overrides/Iframe';\nimport {\n  MarkdownAnchor,\n  MarkdownAnchorProps,\n} from './libs/overrides/MarkdownAnchor';\nimport { Table, TableProps } from './libs/overrides/Table';\nimport { createPreprocessingInstructions } from './libs/preprocessing';\nimport { defaultSanitizationConfig } from './libs/sanitizationConfig';\nimport styles from './styles/index.module.scss';\n\nconst htmlToReactParser = new HtmlToReact.Parser({\n  xmlMode: true,\n});\n\nconst preprocessingInstructions = createPreprocessingInstructions(styles);\n\nconst isValidNode = () => true;\n\nexport type SkipDefaultOverridesSettings = {\n  a?: boolean;\n  iframe?: boolean;\n  table?: boolean;\n};\n\nexport type MarkdownProps = {\n  className?: string;\n  inline?: boolean;\n  overrides?: ManyOverrideSettings;\n  skipDefaultOverrides?: SkipDefaultOverridesSettings;\n  /**\n   * Enables generated header ids for H1-6 tags\n   * Can generate duplicate IDs if used on separate markdown components on the same page\n   */\n  headerIds?: boolean;\n  spacing?: 'loose' | 'tight' | 'none';\n  text?: string;\n  /**\n   * Callback when a markdown anchor tag is clicked\n   */\n  onAnchorClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nexport class Markdown extends PureComponent<MarkdownProps> {\n  render() {\n    const {\n      spacing = 'tight',\n      text = '',\n      className,\n      overrides: userOverrides = {},\n      skipDefaultOverrides = {},\n      inline = false,\n      headerIds,\n      onAnchorClick,\n    } = this.props;\n\n    if (!text) return null;\n\n    const spacingStyles = styles[`spacing-${spacing}`];\n    const classes = cx(spacingStyles, className);\n\n    const Wrapper = inline ? 'span' : 'div';\n\n    const overrides = Object.keys(userOverrides).map((tagName) => {\n      if (tagName === 'CodeBlock') {\n        return createCodeBlockOverride(tagName, userOverrides[tagName]);\n      }\n      return createTagOverride(tagName, userOverrides[tagName]);\n    });\n\n    const processingInstructions = [\n      !skipDefaultOverrides.iframe &&\n        createTagOverride('iframe', {\n          component: Iframe,\n        }),\n      !skipDefaultOverrides.a &&\n        createTagOverride('a', {\n          component: MarkdownAnchor,\n          processNode: (node, props) => {\n            // Note: this processNode override is necessary because wrapping this component\n            // in an anonymous functional component as with the Table below causes react rendering\n            // to crash with some chrome translation features.\n            // See https://codecademy.atlassian.net/browse/WEB-1214\n            return (\n              <MarkdownAnchor\n                onClick={onAnchorClick}\n                {...(props as MarkdownAnchorProps)}\n              />\n            );\n          },\n        }),\n      !skipDefaultOverrides.table &&\n        createTagOverride('table', {\n          component: (props: TableProps) => (\n            <Table maxHeight={spacing === 'tight' ? 180 : 500} {...props} />\n          ),\n          allowedAttributes: ['style'],\n        }),\n      ...overrides,\n      ...standardOverrides,\n    ].filter(Boolean);\n\n    const markedOptions = {\n      smartypants: true,\n      headerIds,\n      headerPrefix: 'heading-',\n    };\n\n    // Render markdown to html\n    const rawHtml = inline\n      ? marked.inlineLexer(text, [], markedOptions)\n      : marked(text, markedOptions);\n\n    const sanitizationConfig = {\n      ...defaultSanitizationConfig,\n      allowedTags: [\n        ...defaultSanitizationConfig.allowedTags,\n        ...Object.keys(userOverrides).map((tagName) => tagName.toLowerCase()),\n      ],\n      allowedAttributes: {\n        ...defaultSanitizationConfig.allowedAttributes,\n        ...Object.keys(userOverrides).reduce((acc, tagName) => {\n          return {\n            ...acc,\n            [tagName.toLowerCase()]: (\n              userOverrides[tagName].allowedAttributes || []\n            ).map((attr) => attr.toLowerCase()),\n          };\n        }, {}),\n      },\n    };\n\n    const html = sanitizeMarkdown(rawHtml, sanitizationConfig);\n\n    // Render html to a react tree\n    const react = htmlToReactParser.parseWithInstructions(\n      html,\n      isValidNode,\n      processingInstructions,\n      preprocessingInstructions\n    );\n\n    return (\n      <Wrapper\n        {...omitProps(Object.keys(this.props), this.props)}\n        className={classes}\n      >\n        {react}\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}