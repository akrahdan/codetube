{"ast":null,"code":"import pluralize from \"pluralize\";\nimport { isCareerPathPageRedirect, isProMembershipRedirect, isSkillPathPageRedirect } from \"./redirectHelpers\";\n\nconst withLECourseRedirect = (path, redirectSlug) => {\n  if (!redirectSlug) return path;\n  return `${path}?course_redirect=${redirectSlug}`;\n};\n\nexport const homePath = \"/\";\nexport const loginPath = \"/login\";\nexport const logoutPath = \"/logout\";\nexport const onboardingPath = \"/welcome/find-a-course\";\nexport const onboardingFromSignupPath = `${onboardingPath}?fromSignUpPage=true`;\nexport const logoutPathWithRedirectParams = redirectPath => `${logoutPath}?redirect=${encodeURIComponent(redirectPath)}`;\nexport const registerPath = \"/register\";\nexport const eventPath = slug => `/events/${slug}`;\nexport const eventFromSignupPath = slug => `${eventPath(slug)}?fromSignUpPage=true`;\nexport const workerSupportApplicationPath = \"/worker-support/apply\";\nexport const workerSupportThankYouPath = \"/worker-support/thank-you\";\nexport const profilesPath = profileIdOrUsername => `/profiles/${profileIdOrUsername}`;\nexport const profileEditPath = profileIdOrUsername => `${profilesPath(profileIdOrUsername)}/edit`;\nexport const certificatesPath = (username, containerId) => `${profilesPath(username)}/certificates/${containerId}`;\nexport const achievementsPath = username => `/users/${username}/achievements`;\nexport const prodBasePath = \"https://codecademy.com\";\n\nconst getContentItemTypeRoutePart = type => {\n  return type ? pluralize(`${type}`, 2) : \"\";\n};\n\nexport const contentItemResumePath = (courseSlug, contentItem, redirectSlug, anon = false) => {\n  if (!contentItem) return `/courses/${courseSlug}`;\n  const resumePath = anon ? \"\" : \"/resume\";\n\n  if (contentItem.type === \"lesson\") {\n    return withLECourseRedirect(`/courses/${courseSlug}/lessons/${contentItem.slug}${resumePath}`, redirectSlug);\n  }\n\n  return withLECourseRedirect(`/courses/${courseSlug}/${getContentItemTypeRoutePart(contentItem.type)}/${contentItem.slug}`, redirectSlug);\n};\nexport const exerciseResumePath = (courseSlug, lessonSlug, exerciseSlug, redirectSlug) => withLECourseRedirect(`/courses/${courseSlug}/lessons/${lessonSlug}/exercises/${exerciseSlug}`, redirectSlug);\nexport const pathResumePath = pathSlug => {\n  if (!pathSlug) return \"/learn/paths\";\n  return createPathResumePath({\n    pathSlug\n  });\n};\nexport const pathModulePath = (pathSlug, trackSlug, moduleSlug) => {\n  return createPathResumePath({\n    pathSlug,\n    trackSlug,\n    moduleSlug\n  });\n};\nexport const pathContentItemPath = (pathSlug, trackSlug, moduleSlug, contentItemType, contentItemSlug) => {\n  return createPathResumePath({\n    pathSlug,\n    trackSlug,\n    moduleSlug,\n    contentItemType,\n    contentItemSlug\n  });\n};\nexport const createPathResumePath = ({\n  pathSlug,\n  trackSlug,\n  moduleSlug,\n  contentItemType,\n  contentItemSlug\n}) => {\n  const contentItemTypeRoute = getContentItemTypeRoutePart(contentItemType);\n  if (trackSlug && moduleSlug && contentItemType && contentItemTypeRoute && contentItemSlug) return `/paths/${pathSlug}/tracks/${trackSlug}/modules/${moduleSlug}/${contentItemTypeRoute}/${contentItemSlug}`;\n  if (trackSlug && moduleSlug) return `/paths/${pathSlug}/tracks/${trackSlug}/modules/${moduleSlug}`;\n  if (trackSlug) return `/paths/${pathSlug}/tracks/${trackSlug}`;\n  return `/paths/${pathSlug}`;\n};\nexport const learnCoursePath = courseSlug => `/learn/${courseSlug}`;\nexport const learnPathsPath = pathSlug => `/learn/paths/${pathSlug}`;\nexport const learnModulePath = (courseSlug, moduleSlug) => `/learn/${courseSlug}/modules/${moduleSlug}`;\nexport const cheatsheetPath = ({\n  courseSlug,\n  moduleSlug,\n  pathSlug\n}) => {\n  return pathSlug ? `/learn/paths/${pathSlug}/tracks/${courseSlug}/modules/${moduleSlug}/cheatsheet` : `/learn/${courseSlug}/modules/${moduleSlug}/cheatsheet`;\n};\nexport const smartPracticePath = (slug, contentType) => `/smart-practice/${contentType}s/${slug}`;\nexport const reviewCardPath = id => `https://author.codecademy.com/review-cards/${id}`;\nexport const learnPath = () => \"/learn\";\nexport const cohortPath = pathSlug => `/cohorts/${pathSlug}`;\nexport const coursePracticePath = (trackSlug, moduleSlug) => `/practice/tracks/${trackSlug}/modules/${moduleSlug}`;\nexport const pathPracticePath = (pathSlug, trackSlug, moduleSlug) => {\n  const rootPath = `/practice/paths/${pathSlug}/tracks/${trackSlug}`;\n  return moduleSlug ? `${rootPath}/modules/${moduleSlug}` : rootPath;\n};\nexport const challengeProjectPath = slug => `/practice/projects/${slug}`;\nexport const projectCoursePath = slug => `/courses/${slug}`;\nexport const projectDetailPath = slug => `/projects/${slug}`;\nexport const catalogPath = \"/catalog\";\nexport const catalogCategoryPath = (section, category) => `/catalog/${section}/${category}`;\n\nconst getTrialModalParams = (redirectUrl, isTrialPlan, isSignUpPage = false) => {\n  const isAlternativeEntryFromCheckoutFlow = (isProMembershipRedirect(redirectUrl) || isCareerPathPageRedirect(redirectUrl) || isSkillPathPageRedirect(redirectUrl)) && !isTrialPlan && !isSignUpPage;\n  if (isAlternativeEntryFromCheckoutFlow || isTrialPlan) return \"\";\n  return \"modal=pro-trial-welcome\";\n};\n\nexport const postCheckoutLandingPath = ({\n  fromSignUpPage,\n  isInOnboardingAllEntryFeature,\n  isPathRedirect,\n  isTrialPlan,\n  redirectUrl\n}) => {\n  if (isInOnboardingAllEntryFeature && !isTrialPlan && (isProMembershipRedirect(redirectUrl) || isPathRedirect) || fromSignUpPage) {\n    // if from the trial registration flow, send to 'Find something to learn' onboarding\n    return getOnboardingPath(redirectUrl, isTrialPlan);\n  }\n\n  if (isTrialPlan && redirectUrl && isPathRedirect) {\n    // if user was directed to checkout from a path landing page, send them back there\n    return redirectUrl;\n  } // default post-checkout landing is dashboard\n\n\n  return learnPath();\n};\nexport const getOnboardingPath = (redirectUrl, isTrialPlan, isSignUpPage = false) => {\n  if (!redirectUrl) return onboardingPath;\n  const containsWelcomeUrl = redirectUrl.includes(onboardingPath);\n  const trialModalParams = getTrialModalParams(redirectUrl, isTrialPlan, isSignUpPage);\n\n  if (containsWelcomeUrl) {\n    return trialModalParams ? `${onboardingPath}?${trialModalParams}` : onboardingPath;\n  }\n\n  const redirectUrlArr = redirectUrl.split(\"?\");\n  const queryParams = redirectUrlArr.length >= 2 ? redirectUrlArr[1].split(\"&\") : [];\n  const additionalParams = queryParams.filter(elem => elem !== \"modal=pro-trial-welcome\").join(\"&\");\n  const fullRedirectUrl = additionalParams ? `${redirectUrlArr[0]}?${additionalParams}` : redirectUrlArr[0];\n  const encodedRedirectUrl = encodeURIComponent(fullRedirectUrl);\n  return `${onboardingPath}?${trialModalParams}&redirect_url=${encodedRedirectUrl}`;\n};\nexport const searchPath = (query, page) => {\n  if (!query) {\n    return \"/search\";\n  }\n\n  const encodedQuery = encodeURIComponent(query);\n  return `/search?query=${encodedQuery}${page ? `&page=${page}` : \"\"}`;\n};\nexport const programResumePath = program => `/programs/${program}`;\nexport const programContentPath = (program, content) => `/programs/${program}/items/${content}`;\nexport const resetProgressPath = (type, id) => `/reset-progress/${type}/${id}`;\nexport const pathsBasePath = \"/learn/paths\";\nexport const pathSelectorPath = `${pathsBasePath}/new`;\nexport const skillPathSelectorPath = \"/learn/skill-paths/new\";\nexport const choosePathPagePath = goal => goal === \"skill\" ? skillPathSelectorPath : pathSelectorPath;\nexport const pathPagePath = pathSlug => `${pathsBasePath}/${pathSlug}`;\nexport const proPaymentCompletePath = ({\n  planId,\n  couponCode,\n  referralErrors,\n  redirectUrl,\n  fromSignUpPage,\n  currency\n}) => {\n  let uri = `/subscriptions/${planId}/paid?couponCode=${couponCode}&redirect_url=${redirectUrl}&currency=${currency}`;\n  if (fromSignUpPage) uri += \"&fromSignUpPage=true\";\n  if (referralErrors) uri += \"&referral_errors=true\";\n  return uri;\n};\nexport const proCheckoutPath = ({\n  planId,\n  redirectUrl,\n  fromSignUpPage,\n  discountCode,\n  leftHandSide,\n  skipOnboarding,\n  periods,\n  loggedInViaCheckout\n}) => {\n  let url = `/subscriptions/${planId}/checkout?redirect_url=${redirectUrl}`;\n  if (fromSignUpPage) url += `&fromSignUpPage=true`;\n  if (discountCode) url += `&discountCode=${encodeURIComponent(discountCode)}`;\n  if (leftHandSide) url += `&lhs=${leftHandSide}`;\n  if (skipOnboarding) url += `&skipOnboarding=true`;\n  if (periods) url += `&periods=${periods}`;\n  if (loggedInViaCheckout) url += `&logged_in_via_checkout=true`;\n  return url;\n};\nexport const upsellBackPath = ({\n  isTrialPlan,\n  redirectUrl,\n  skipOnboarding\n}) => skipOnboarding ? redirectUrl : getOnboardingPath(redirectUrl, isTrialPlan, true);\nexport const accountPath = () => \"/account\";\nexport const billingPath = () => \"/account/billing\";\nexport const goalSettingsPath = () => \"/account/goals_settings\";\nexport const passwordBreachPath = \"/account/password?pib=true\";\nexport const emailConfirmationPath = status => status ? `/confirm?${status}=true` : \"/confirm\";\nexport const emailConfirmationPathWithToken = token => `/confirm?confirmation_token=${token}`;\nexport const linkAccountPath = provider => `/users/auth/${provider}`; // oauth urls\n\nexport const githubAuthenticationUrl = () => \"/users/auth/github?scope=public_repo,user:email\";\nexport const googleAuthenticationUrl = () => \"/users/auth/google_oauth2?signin=true\";\nexport const facebookAuthenticationUrl = () => \"/users/auth/facebook?signin=true\";\nexport const twitterAuthenticationUrl = () => \"/users/auth/twitter?signin=true\";\nexport const linkedinAuthenticationUrl = () => \"/users/auth/linkedin?signin=true\"; // other authentication urls\n\nexport const forgotPasswordUrl = () => \"/secret/new\";\nexport const resetPasswordUrl = token => `/secret/edit?reset_password_token=${token}`;\nexport const proLandingPath = \"/pro/membership\";\nexport const studentLandingPath = \"/student-center\";\nexport const mobileLandingPagePath = \"/mobile-app-download\"; // Explore\n\nexport const exploreSortingQuizPath = \"/explore/sorting-quiz\"; // Footer\n\nexport const proPauseHelpPageUrl = \"https://help.codecademy.com/hc/en-us/sections/360002034793-Pause\";\nexport const codecademyGoAppleUrl = \"https://itunes.apple.com/us/app/codecademy-go/id1376029326?mt=8\";\nexport const codecademyGoGoogleUrl = \"https://play.google.com/store/apps/details?id=com.ryzac.codecademygo\";\nexport const forumsUrl = \"https://discuss.codecademy.com/\";\nexport const forumAnswerUrl = (questionId, answerId) => `/forum_questions/${questionId}#${answerId}`;\nexport const chaptersUrl = \"https://community.codecademy.com/chapters\"; // other urls\n\nexport const currentUserUrl = \"/current-user\";\nexport const timedChallengeEnrollmentUrl = \"/timed-challenge-enrollment\";\nexport const timedChallengeEnrollmentEnrollUrl = \"/timed-challenge-enrollment/enroll\";\nexport const businessContactPath = \"/business/contact\";\nexport const teamsQuotePath = \"https://pro.codecademy.com/teams-quote/\";\nexport const articlesPath = \"/articles\";\nexport const articlePath = slug => `${articlesPath}/${slug}`;\nexport const shareArticlePath = slug => `${prodBasePath + articlePath(slug)}`;\nexport const cheatsheetHomePath = \"/resources/cheatsheets\";\nexport const cheatsheetsIndexPath = \"/resources/cheatsheets/all\";\nexport const subscriptionPausePageUrl = subscriptionId => `/subscriptions/${subscriptionId}/pause`;\nexport const helpPath = \"/help\";\nexport const subscriptionUpgradePageUrl = `/subscriptions/upgrade`;\nexport const challengeProjectList = \"https://discuss.codecademy.com/t/list-of-challenge-projects/505231\";\nexport const whatsNextProUrl = articlePath(\"whats-next-general\");\nexport const workspacesPath = username => `/users/${username}/workspaces`;\nexport const sandboxPath = id => `/sandboxes/${id}`; // author urls\n\nexport const authorUrl = `https://author.codecademy.com`;\nexport const authorContentItemUrl = contentItemId => `${authorUrl}/content-items/${contentItemId}`;\nexport const authorExerciseUrl = exerciseId => `${authorUrl}/exercises/${exerciseId}`;\nexport const authorAssessmentUrl = assessmentId => `${authorUrl}/assessments/${assessmentId}`;\n// adds pagination params to a fetch url\nexport const paginationUrl = (path, params) => {\n  const urlParams = new URLSearchParams();\n  Object.keys(params).forEach(key => {\n    var _key;\n\n    const value = (_key = params[key]) === null || _key === void 0 ? void 0 : _key.toString();\n    !!value && urlParams.append(key, value);\n  });\n  return `${path}?${urlParams.toString()}`;\n};\nexport const createTrialBusinessPlanUrl = `/business/trial`;\nexport const businessPlansUrl = \"/business/plans\";\nexport const fetchBusinessPlansUrl = \"/business/plans/fetch_plans\";\nexport const businessPlanUrl = planId => `/business/plans/${planId}`;\nexport const businessTrialSignUpUrl = source => `/business/trial/sign_up?source=${source}`;\nexport const businessPlanSeatsUrl = planId => `/business/plans/${planId}/seats`;\nexport const businessPlanInvitationsUrl = planId => `/business/plans/${planId}/invitations`;\nexport const businessSeatsUrl = `/business/seats`;\nexport const businessSeatUrl = seatId => `${businessSeatsUrl}/${seatId}`;\nexport const businessSeatUpdateUrl = (planId, seatId) => `${businessPlansUrl}/${planId}/seats/${seatId}`;\nexport const businessInvitationsUrl = `/business/invitations`;\nexport const businessBulkInvitationsUrl = `${businessInvitationsUrl}/bulk_create`;\nexport const businessInvitationUrl = id => `${businessInvitationsUrl}/${id}`;\nexport const resendInvitationUrl = id => `${businessInvitationUrl(id)}/resend`;\nexport const resendTrialInvitationUrl = `${createTrialBusinessPlanUrl}/resend_invitation`;\nexport const createRegisterUrlUrl = id => `${businessInvitationUrl(id)}/register_url`;\nexport const businessResetPasswordUrl = `/business/reset_password`;\nexport const searchBusinessPlanUsersUrl = (planId, email) => {\n  const url = `/business/plans/${planId}/search`;\n  const urlParams = new URLSearchParams({\n    email\n  });\n  return `${url}?${urlParams.toString()}`;\n};\nexport const createBusinessOrganizationUrl = `/business/organizations`;\nexport const createBusinessPlanUrl = `/business/plans`;\nexport const searchBusinessPlanUrl = `/business/plans/search_plans`;\nexport const businessPaymentCompletePath = ({\n  planId,\n  planEndDate,\n  quantity,\n  transactionType\n}) => {\n  const uri = `/business/plans/${planId}/checkout/confirmation`;\n  const params = `?planEndDate=${planEndDate}&seatQuantity=${quantity}&transactionType=${transactionType}`;\n  return uri + params;\n};\nexport const businessCheckoutURL = (planId, purchaseAction) => `/business/plans/${planId}/checkout/${purchaseAction}/purchase`;\nexport const businessBillingAdminUrl = planId => `/business/plans/${planId}/billing_admin`;\nexport const enableBankDebitUrl = `/business/plans/bank_debit`;\nexport const appendQueryParamsToUrl = (url, queryParams) => {\n  const queryParamEntries = Object.entries(queryParams);\n  if (!queryParamEntries.length) return url;\n  const hashIndex = url.indexOf(\"#\");\n  const hash = hashIndex !== -1 ? url.substr(hashIndex) : \"\";\n  const urlMinusHash = hashIndex !== -1 ? url.substr(0, hashIndex) : url;\n  const alreadyHasQueryParams = url.indexOf(\"?\") !== -1;\n  const newQueryParams = queryParamEntries.map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`).join(\"&\");\n  return urlMinusHash + (alreadyHasQueryParams ? \"&\" : \"?\") + newQueryParams + hash;\n};\nexport const removeQueryParamsFromUrl = (url, queryParamKeysToRemove) => {\n  const queryParamStart = url.indexOf(\"?\");\n  if (queryParamStart === -1) return url;\n  const hashIndex = url.indexOf(\"#\");\n  const hash = hashIndex !== -1 ? url.substr(hashIndex) : \"\";\n  const urlMinusHash = hashIndex !== -1 ? url.substr(0, hashIndex) : url;\n  const urlBeforeQueryParams = url.substr(0, queryParamStart);\n  const queryParamsFromUrl = urlMinusHash.substr(queryParamStart + 1);\n  const filteredQueryParams = queryParamsFromUrl.split(\"&\").map(keyValuePairAsString => keyValuePairAsString.split(\"=\")).filter(([key]) => !queryParamKeysToRemove.includes(key)).map(([key, value]) => key && value ? `${key}=${value}` : key || value).join(\"&\");\n  return urlBeforeQueryParams + (filteredQueryParams.length > 0 ? `?${filteredQueryParams}` : \"\") + hash;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/libs/urlHelpers.ts"],"names":["pluralize","isCareerPathPageRedirect","isProMembershipRedirect","isSkillPathPageRedirect","withLECourseRedirect","path","redirectSlug","homePath","loginPath","logoutPath","onboardingPath","onboardingFromSignupPath","logoutPathWithRedirectParams","redirectPath","encodeURIComponent","registerPath","eventPath","slug","eventFromSignupPath","workerSupportApplicationPath","workerSupportThankYouPath","profilesPath","profileIdOrUsername","profileEditPath","certificatesPath","username","containerId","achievementsPath","prodBasePath","getContentItemTypeRoutePart","type","contentItemResumePath","courseSlug","contentItem","anon","resumePath","exerciseResumePath","lessonSlug","exerciseSlug","pathResumePath","pathSlug","createPathResumePath","pathModulePath","trackSlug","moduleSlug","pathContentItemPath","contentItemType","contentItemSlug","contentItemTypeRoute","learnCoursePath","learnPathsPath","learnModulePath","cheatsheetPath","smartPracticePath","contentType","reviewCardPath","id","learnPath","cohortPath","coursePracticePath","pathPracticePath","rootPath","challengeProjectPath","projectCoursePath","projectDetailPath","catalogPath","catalogCategoryPath","section","category","getTrialModalParams","redirectUrl","isTrialPlan","isSignUpPage","isAlternativeEntryFromCheckoutFlow","postCheckoutLandingPath","fromSignUpPage","isInOnboardingAllEntryFeature","isPathRedirect","getOnboardingPath","containsWelcomeUrl","includes","trialModalParams","redirectUrlArr","split","queryParams","length","additionalParams","filter","elem","join","fullRedirectUrl","encodedRedirectUrl","searchPath","query","page","encodedQuery","programResumePath","program","programContentPath","content","resetProgressPath","pathsBasePath","pathSelectorPath","skillPathSelectorPath","choosePathPagePath","goal","pathPagePath","proPaymentCompletePath","planId","couponCode","referralErrors","currency","uri","proCheckoutPath","discountCode","leftHandSide","skipOnboarding","periods","loggedInViaCheckout","url","upsellBackPath","accountPath","billingPath","goalSettingsPath","passwordBreachPath","emailConfirmationPath","status","emailConfirmationPathWithToken","token","linkAccountPath","provider","githubAuthenticationUrl","googleAuthenticationUrl","facebookAuthenticationUrl","twitterAuthenticationUrl","linkedinAuthenticationUrl","forgotPasswordUrl","resetPasswordUrl","proLandingPath","studentLandingPath","mobileLandingPagePath","exploreSortingQuizPath","proPauseHelpPageUrl","codecademyGoAppleUrl","codecademyGoGoogleUrl","forumsUrl","forumAnswerUrl","questionId","answerId","chaptersUrl","currentUserUrl","timedChallengeEnrollmentUrl","timedChallengeEnrollmentEnrollUrl","businessContactPath","teamsQuotePath","articlesPath","articlePath","shareArticlePath","cheatsheetHomePath","cheatsheetsIndexPath","subscriptionPausePageUrl","subscriptionId","helpPath","subscriptionUpgradePageUrl","challengeProjectList","whatsNextProUrl","workspacesPath","sandboxPath","authorUrl","authorContentItemUrl","contentItemId","authorExerciseUrl","exerciseId","authorAssessmentUrl","assessmentId","paginationUrl","params","urlParams","URLSearchParams","Object","keys","forEach","key","value","toString","append","createTrialBusinessPlanUrl","businessPlansUrl","fetchBusinessPlansUrl","businessPlanUrl","businessTrialSignUpUrl","source","businessPlanSeatsUrl","businessPlanInvitationsUrl","businessSeatsUrl","businessSeatUrl","seatId","businessSeatUpdateUrl","businessInvitationsUrl","businessBulkInvitationsUrl","businessInvitationUrl","resendInvitationUrl","resendTrialInvitationUrl","createRegisterUrlUrl","businessResetPasswordUrl","searchBusinessPlanUsersUrl","email","createBusinessOrganizationUrl","createBusinessPlanUrl","searchBusinessPlanUrl","businessPaymentCompletePath","planEndDate","quantity","transactionType","businessCheckoutURL","purchaseAction","businessBillingAdminUrl","enableBankDebitUrl","appendQueryParamsToUrl","queryParamEntries","entries","hashIndex","indexOf","hash","substr","urlMinusHash","alreadyHasQueryParams","newQueryParams","map","removeQueryParamsFromUrl","queryParamKeysToRemove","queryParamStart","urlBeforeQueryParams","queryParamsFromUrl","filteredQueryParams","keyValuePairAsString"],"mappings":"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","sourcesContent":["import pluralize from \"pluralize\";\n\nimport { userAttributes } from \"libs/userAttributes\";\nimport { ContentItem, ContentItemType } from \"typings/entities\";\nimport { BusinessTransactionType, Currency } from \"typings/payment\";\n\nimport {\n  isCareerPathPageRedirect,\n  isProMembershipRedirect,\n  isSkillPathPageRedirect,\n} from \"./redirectHelpers\";\n\nconst withLECourseRedirect = (path: string, redirectSlug?: string) => {\n  if (!redirectSlug) return path;\n  return `${path}?course_redirect=${redirectSlug}`;\n};\n\nexport const homePath = \"/\";\n\nexport const loginPath = \"/login\";\n\nexport const logoutPath = \"/logout\";\n\nexport const onboardingPath = \"/welcome/find-a-course\";\nexport const onboardingFromSignupPath = `${onboardingPath}?fromSignUpPage=true`;\n\nexport const logoutPathWithRedirectParams = (redirectPath: string) =>\n  `${logoutPath}?redirect=${encodeURIComponent(redirectPath)}`;\n\nexport const registerPath = \"/register\";\n\nexport const eventPath = (slug: string) => `/events/${slug}`;\nexport const eventFromSignupPath = (slug: string) =>\n  `${eventPath(slug)}?fromSignUpPage=true`;\n\nexport const workerSupportApplicationPath = \"/worker-support/apply\";\nexport const workerSupportThankYouPath = \"/worker-support/thank-you\";\n\nexport const profilesPath = (profileIdOrUsername: string) =>\n  `/profiles/${profileIdOrUsername}`;\n\nexport const profileEditPath = (profileIdOrUsername: string) =>\n  `${profilesPath(profileIdOrUsername)}/edit`;\n\nexport const certificatesPath = (username: string, containerId: string) =>\n  `${profilesPath(username)}/certificates/${containerId}`;\n\nexport const achievementsPath = (username: string) =>\n  `/users/${username}/achievements`;\n\nexport const prodBasePath = \"https://codecademy.com\";\n\nconst getContentItemTypeRoutePart = (type?: ContentItemType) => {\n  return type ? pluralize(`${type}`, 2) : \"\";\n};\n\nexport const contentItemResumePath = (\n  courseSlug: string,\n  contentItem?: ContentItem,\n  redirectSlug?: string | undefined,\n  anon = false\n) => {\n  if (!contentItem) return `/courses/${courseSlug}`;\n\n  const resumePath = anon ? \"\" : \"/resume\";\n\n  if (contentItem.type === \"lesson\") {\n    return withLECourseRedirect(\n      `/courses/${courseSlug}/lessons/${contentItem.slug}${resumePath}`,\n      redirectSlug\n    );\n  }\n\n  return withLECourseRedirect(\n    `/courses/${courseSlug}/${getContentItemTypeRoutePart(contentItem.type)}/${\n      contentItem.slug\n    }`,\n    redirectSlug\n  );\n};\n\nexport const exerciseResumePath = (\n  courseSlug: string,\n  lessonSlug: string,\n  exerciseSlug: string,\n  redirectSlug: string\n) =>\n  withLECourseRedirect(\n    `/courses/${courseSlug}/lessons/${lessonSlug}/exercises/${exerciseSlug}`,\n    redirectSlug\n  );\n\nexport const pathResumePath = (pathSlug: string | undefined) => {\n  if (!pathSlug) return \"/learn/paths\";\n\n  return createPathResumePath({\n    pathSlug,\n  });\n};\n\nexport const pathModulePath = (\n  pathSlug: string,\n  trackSlug: string,\n  moduleSlug: string\n) => {\n  return createPathResumePath({\n    pathSlug,\n    trackSlug,\n    moduleSlug,\n  });\n};\n\nexport const pathContentItemPath = (\n  pathSlug: string,\n  trackSlug: string,\n  moduleSlug: string,\n  contentItemType: ContentItemType,\n  contentItemSlug: string\n) => {\n  return createPathResumePath({\n    pathSlug,\n    trackSlug,\n    moduleSlug,\n    contentItemType,\n    contentItemSlug,\n  });\n};\n\nexport type PathResumePathParams = {\n  pathSlug: string;\n  trackSlug?: string;\n  moduleSlug?: string;\n  contentItemType?: ContentItemType;\n  contentItemSlug?: string;\n};\n\nexport const createPathResumePath = ({\n  pathSlug,\n  trackSlug,\n  moduleSlug,\n  contentItemType,\n  contentItemSlug,\n}: PathResumePathParams) => {\n  const contentItemTypeRoute = getContentItemTypeRoutePart(contentItemType);\n  if (\n    trackSlug &&\n    moduleSlug &&\n    contentItemType &&\n    contentItemTypeRoute &&\n    contentItemSlug\n  )\n    return `/paths/${pathSlug}/tracks/${trackSlug}/modules/${moduleSlug}/${contentItemTypeRoute}/${contentItemSlug}`;\n\n  if (trackSlug && moduleSlug)\n    return `/paths/${pathSlug}/tracks/${trackSlug}/modules/${moduleSlug}`;\n\n  if (trackSlug) return `/paths/${pathSlug}/tracks/${trackSlug}`;\n\n  return `/paths/${pathSlug}`;\n};\n\nexport const learnCoursePath = (courseSlug: string) => `/learn/${courseSlug}`;\nexport const learnPathsPath = (pathSlug: string) => `/learn/paths/${pathSlug}`;\n\nexport const learnModulePath = (courseSlug: string, moduleSlug: string) =>\n  `/learn/${courseSlug}/modules/${moduleSlug}`;\n\nexport const cheatsheetPath = ({\n  courseSlug,\n  moduleSlug,\n  pathSlug,\n}: {\n  courseSlug: string;\n  moduleSlug: string;\n  pathSlug?: string;\n}) => {\n  return pathSlug\n    ? `/learn/paths/${pathSlug}/tracks/${courseSlug}/modules/${moduleSlug}/cheatsheet`\n    : `/learn/${courseSlug}/modules/${moduleSlug}/cheatsheet`;\n};\n\nexport const smartPracticePath = (\n  slug: string,\n  contentType: \"path\" | \"track\"\n) => `/smart-practice/${contentType}s/${slug}`;\n\nexport const reviewCardPath = (id: string) =>\n  `https://author.codecademy.com/review-cards/${id}`;\n\nexport const learnPath = () => \"/learn\";\n\nexport const cohortPath = (pathSlug: string) => `/cohorts/${pathSlug}`;\n\nexport const coursePracticePath = (trackSlug: string, moduleSlug: string) =>\n  `/practice/tracks/${trackSlug}/modules/${moduleSlug}`;\n\nexport const pathPracticePath = (\n  pathSlug: string,\n  trackSlug: string,\n  moduleSlug?: string\n) => {\n  const rootPath = `/practice/paths/${pathSlug}/tracks/${trackSlug}`;\n  return moduleSlug ? `${rootPath}/modules/${moduleSlug}` : rootPath;\n};\n\nexport const challengeProjectPath = (slug: string | undefined) =>\n  `/practice/projects/${slug}`;\n\nexport const projectCoursePath = (slug: string | undefined) =>\n  `/courses/${slug}`;\n\nexport const projectDetailPath = (slug: string | undefined) =>\n  `/projects/${slug}`;\n\nexport const catalogPath = \"/catalog\";\nexport const catalogCategoryPath = (section: string, category: string) =>\n  `/catalog/${section}/${category}`;\n\nconst getTrialModalParams = (\n  redirectUrl: string,\n  isTrialPlan?: boolean,\n  isSignUpPage = false\n) => {\n  const isAlternativeEntryFromCheckoutFlow =\n    (isProMembershipRedirect(redirectUrl) ||\n      isCareerPathPageRedirect(redirectUrl) ||\n      isSkillPathPageRedirect(redirectUrl)) &&\n    !isTrialPlan &&\n    !isSignUpPage;\n\n  if (isAlternativeEntryFromCheckoutFlow || isTrialPlan) return \"\";\n\n  return \"modal=pro-trial-welcome\";\n};\n\ntype PostCheckoutLandingPathParams = {\n  fromSignUpPage?: boolean;\n  isInOnboardingAllEntryFeature?: boolean;\n  isPathRedirect: boolean;\n  isTrialPlan?: boolean;\n  redirectUrl: string;\n};\n\nexport const postCheckoutLandingPath = ({\n  fromSignUpPage,\n  isInOnboardingAllEntryFeature,\n  isPathRedirect,\n  isTrialPlan,\n  redirectUrl,\n}: PostCheckoutLandingPathParams): string => {\n  if (\n    (isInOnboardingAllEntryFeature &&\n      !isTrialPlan &&\n      (isProMembershipRedirect(redirectUrl) || isPathRedirect)) ||\n    fromSignUpPage\n  ) {\n    // if from the trial registration flow, send to 'Find something to learn' onboarding\n    return getOnboardingPath(redirectUrl, isTrialPlan);\n  }\n  if (isTrialPlan && redirectUrl && isPathRedirect) {\n    // if user was directed to checkout from a path landing page, send them back there\n    return redirectUrl;\n  }\n  // default post-checkout landing is dashboard\n  return learnPath();\n};\n\nexport const getOnboardingPath = (\n  redirectUrl?: string,\n  isTrialPlan?: boolean,\n  isSignUpPage = false\n) => {\n  if (!redirectUrl) return onboardingPath;\n\n  const containsWelcomeUrl = redirectUrl.includes(onboardingPath);\n  const trialModalParams = getTrialModalParams(\n    redirectUrl,\n    isTrialPlan,\n    isSignUpPage\n  );\n\n  if (containsWelcomeUrl) {\n    return trialModalParams\n      ? `${onboardingPath}?${trialModalParams}`\n      : onboardingPath;\n  }\n\n  const redirectUrlArr = redirectUrl.split(\"?\");\n  const queryParams =\n    redirectUrlArr.length >= 2 ? redirectUrlArr[1].split(\"&\") : [];\n  const additionalParams = queryParams\n    .filter((elem) => elem !== \"modal=pro-trial-welcome\")\n    .join(\"&\");\n  const fullRedirectUrl = additionalParams\n    ? `${redirectUrlArr[0]}?${additionalParams}`\n    : redirectUrlArr[0];\n  const encodedRedirectUrl = encodeURIComponent(fullRedirectUrl);\n\n  return `${onboardingPath}?${trialModalParams}&redirect_url=${encodedRedirectUrl}`;\n};\n\nexport const searchPath = (query?: string, page?: number) => {\n  if (!query) {\n    return \"/search\";\n  }\n\n  const encodedQuery = encodeURIComponent(query);\n  return `/search?query=${encodedQuery}${page ? `&page=${page}` : \"\"}`;\n};\n\nexport const programResumePath = (program: string) => `/programs/${program}`;\n\nexport const programContentPath = (program: string, content: string) =>\n  `/programs/${program}/items/${content}`;\n\nexport const resetProgressPath = (\n  type: \"courses\" | \"modules\" | \"paths\",\n  id: string\n) => `/reset-progress/${type}/${id}`;\n\nexport const pathsBasePath = \"/learn/paths\";\nexport const pathSelectorPath = `${pathsBasePath}/new`;\nexport const skillPathSelectorPath = \"/learn/skill-paths/new\";\nexport const choosePathPagePath = (goal: string) =>\n  goal === \"skill\" ? skillPathSelectorPath : pathSelectorPath;\n\nexport const pathPagePath = (pathSlug: string) =>\n  `${pathsBasePath}/${pathSlug}`;\n\nexport type ProPaymentCompletePathRequest = {\n  couponCode?: string | null;\n  fromSignUpPage?: boolean;\n  planId: string;\n  redirectUrl?: string;\n  referralErrors?: boolean;\n  currency: Currency;\n};\n\nexport const proPaymentCompletePath = ({\n  planId,\n  couponCode,\n  referralErrors,\n  redirectUrl,\n  fromSignUpPage,\n  currency,\n}: ProPaymentCompletePathRequest) => {\n  let uri = `/subscriptions/${planId}/paid?couponCode=${couponCode}&redirect_url=${redirectUrl}&currency=${currency}`;\n  if (fromSignUpPage) uri += \"&fromSignUpPage=true\";\n  if (referralErrors) uri += \"&referral_errors=true\";\n  return uri;\n};\n\nexport const proCheckoutPath = ({\n  planId,\n  redirectUrl,\n  fromSignUpPage,\n  discountCode,\n  leftHandSide,\n  skipOnboarding,\n  periods,\n  loggedInViaCheckout,\n}: {\n  planId?: string;\n  redirectUrl?: string;\n  discountCode?: string;\n  fromSignUpPage?: boolean;\n  leftHandSide?: string;\n  skipOnboarding?: boolean;\n  periods?: string;\n  loggedInViaCheckout?: boolean;\n}) => {\n  let url = `/subscriptions/${planId}/checkout?redirect_url=${redirectUrl}`;\n  if (fromSignUpPage) url += `&fromSignUpPage=true`;\n  if (discountCode) url += `&discountCode=${encodeURIComponent(discountCode)}`;\n  if (leftHandSide) url += `&lhs=${leftHandSide}`;\n  if (skipOnboarding) url += `&skipOnboarding=true`;\n  if (periods) url += `&periods=${periods}`;\n  if (loggedInViaCheckout) url += `&logged_in_via_checkout=true`;\n\n  return url;\n};\n\nexport const upsellBackPath = ({\n  isTrialPlan,\n  redirectUrl,\n  skipOnboarding,\n}: {\n  isTrialPlan: boolean;\n  redirectUrl: string;\n  skipOnboarding: boolean;\n}) =>\n  skipOnboarding\n    ? redirectUrl\n    : getOnboardingPath(redirectUrl, isTrialPlan, true);\n\nexport const accountPath = () => \"/account\";\n\nexport const billingPath = () => \"/account/billing\";\n\nexport const goalSettingsPath = () => \"/account/goals_settings\";\n\nexport const passwordBreachPath = \"/account/password?pib=true\";\n\nexport const emailConfirmationPath = (status?: string) =>\n  status ? `/confirm?${status}=true` : \"/confirm\";\n\nexport const emailConfirmationPathWithToken = (token: string) =>\n  `/confirm?confirmation_token=${token}`;\n\nexport const linkAccountPath = (provider: string) => `/users/auth/${provider}`;\n\n// oauth urls\nexport const githubAuthenticationUrl = () =>\n  \"/users/auth/github?scope=public_repo,user:email\";\n\nexport const googleAuthenticationUrl = () =>\n  \"/users/auth/google_oauth2?signin=true\";\n\nexport const facebookAuthenticationUrl = () =>\n  \"/users/auth/facebook?signin=true\";\n\nexport const twitterAuthenticationUrl = () => \"/users/auth/twitter?signin=true\";\n\nexport const linkedinAuthenticationUrl = () =>\n  \"/users/auth/linkedin?signin=true\";\n// other authentication urls\n\nexport const forgotPasswordUrl = () => \"/secret/new\";\n\nexport const resetPasswordUrl = (token: string) =>\n  `/secret/edit?reset_password_token=${token}`;\n\nexport const proLandingPath = \"/pro/membership\";\n\nexport const studentLandingPath = \"/student-center\";\n\nexport const mobileLandingPagePath = \"/mobile-app-download\";\n\n// Explore\n\nexport const exploreSortingQuizPath = \"/explore/sorting-quiz\";\n\n// Footer\n\nexport const proPauseHelpPageUrl =\n  \"https://help.codecademy.com/hc/en-us/sections/360002034793-Pause\";\n\nexport const codecademyGoAppleUrl =\n  \"https://itunes.apple.com/us/app/codecademy-go/id1376029326?mt=8\";\n\nexport const codecademyGoGoogleUrl =\n  \"https://play.google.com/store/apps/details?id=com.ryzac.codecademygo\";\n\nexport const forumsUrl = \"https://discuss.codecademy.com/\";\n\nexport const forumAnswerUrl = (questionId: string, answerId: string) =>\n  `/forum_questions/${questionId}#${answerId}`;\n\nexport const chaptersUrl = \"https://community.codecademy.com/chapters\";\n\n// other urls\n\nexport const currentUserUrl = \"/current-user\";\n\nexport const timedChallengeEnrollmentUrl = \"/timed-challenge-enrollment\";\nexport const timedChallengeEnrollmentEnrollUrl =\n  \"/timed-challenge-enrollment/enroll\";\n\nexport const businessContactPath = \"/business/contact\";\n\nexport const teamsQuotePath = \"https://pro.codecademy.com/teams-quote/\";\n\nexport const articlesPath = \"/articles\";\n\nexport const articlePath = (slug: string) => `${articlesPath}/${slug}`;\n\nexport const shareArticlePath = (slug: string) =>\n  `${prodBasePath + articlePath(slug)}`;\n\nexport const cheatsheetHomePath = \"/resources/cheatsheets\";\n\nexport const cheatsheetsIndexPath = \"/resources/cheatsheets/all\";\n\nexport const subscriptionPausePageUrl = (subscriptionId: string) =>\n  `/subscriptions/${subscriptionId}/pause`;\n\nexport const helpPath = \"/help\";\n\nexport const subscriptionUpgradePageUrl = `/subscriptions/upgrade`;\n\nexport const challengeProjectList =\n  \"https://discuss.codecademy.com/t/list-of-challenge-projects/505231\";\n\nexport const whatsNextProUrl = articlePath(\"whats-next-general\");\n\nexport const workspacesPath = (username: string) =>\n  `/users/${username}/workspaces`;\nexport const sandboxPath = (id: string) => `/sandboxes/${id}`;\n\n// author urls\nexport const authorUrl = `https://author.codecademy.com`;\nexport const authorContentItemUrl = (contentItemId: string) =>\n  `${authorUrl}/content-items/${contentItemId}`;\nexport const authorExerciseUrl = (exerciseId: string) =>\n  `${authorUrl}/exercises/${exerciseId}`;\nexport const authorAssessmentUrl = (assessmentId: string) =>\n  `${authorUrl}/assessments/${assessmentId}`;\n\ntype PaginationParams = {\n  status?: string;\n  page: number;\n  sort?: string;\n  sort_column?: string;\n};\n\n// adds pagination params to a fetch url\nexport const paginationUrl = (\n  path: string,\n  params: PaginationParams\n): string => {\n  const urlParams = new URLSearchParams();\n  Object.keys(params).forEach((key: string) => {\n    const value = (params as any)[key]?.toString();\n    !!value && urlParams.append(key, value);\n  });\n  return `${path}?${urlParams.toString()}`;\n};\nexport const createTrialBusinessPlanUrl = `/business/trial`;\nexport const businessPlansUrl = \"/business/plans\";\nexport const fetchBusinessPlansUrl = \"/business/plans/fetch_plans\";\nexport const businessPlanUrl = (planId: string) => `/business/plans/${planId}`;\nexport const businessTrialSignUpUrl = (source: string) =>\n  `/business/trial/sign_up?source=${source}`;\nexport const businessPlanSeatsUrl = (planId: string) =>\n  `/business/plans/${planId}/seats`;\nexport const businessPlanInvitationsUrl = (planId: string) =>\n  `/business/plans/${planId}/invitations`;\nexport const businessSeatsUrl = `/business/seats`;\nexport const businessSeatUrl = (seatId: string) =>\n  `${businessSeatsUrl}/${seatId}`;\nexport const businessSeatUpdateUrl = (planId: string, seatId: string): string =>\n  `${businessPlansUrl}/${planId}/seats/${seatId}`;\nexport const businessInvitationsUrl = `/business/invitations`;\nexport const businessBulkInvitationsUrl = `${businessInvitationsUrl}/bulk_create`;\nexport const businessInvitationUrl = (id: string) =>\n  `${businessInvitationsUrl}/${id}`;\nexport const resendInvitationUrl = (id: string) =>\n  `${businessInvitationUrl(id)}/resend`;\n\nexport const resendTrialInvitationUrl = `${createTrialBusinessPlanUrl}/resend_invitation`;\n\nexport const createRegisterUrlUrl = (id: string) =>\n  `${businessInvitationUrl(id)}/register_url`;\nexport const businessResetPasswordUrl = `/business/reset_password`;\nexport const searchBusinessPlanUsersUrl = (planId: string, email: string) => {\n  const url = `/business/plans/${planId}/search`;\n  const urlParams = new URLSearchParams({ email });\n  return `${url}?${urlParams.toString()}`;\n};\nexport const createBusinessOrganizationUrl = `/business/organizations`;\nexport const createBusinessPlanUrl = `/business/plans`;\n\nexport const searchBusinessPlanUrl = `/business/plans/search_plans`;\n\nexport type BusinessPaymentCompletePathRequest = {\n  planId?: string;\n  transactionType: BusinessTransactionType;\n  planEndDate: string;\n  quantity: number;\n};\n\nexport const businessPaymentCompletePath = ({\n  planId,\n  planEndDate,\n  quantity,\n  transactionType,\n}: BusinessPaymentCompletePathRequest) => {\n  const uri = `/business/plans/${planId}/checkout/confirmation`;\n  const params = `?planEndDate=${planEndDate}&seatQuantity=${quantity}&transactionType=${transactionType}`;\n\n  return uri + params;\n};\n\nexport const businessCheckoutURL = (planId: string, purchaseAction: string) =>\n  `/business/plans/${planId}/checkout/${purchaseAction}/purchase`;\n\nexport const businessBillingAdminUrl = (planId: string) =>\n  `/business/plans/${planId}/billing_admin`;\n\nexport const enableBankDebitUrl = `/business/plans/bank_debit`;\n\nexport const appendQueryParamsToUrl = (\n  url: string,\n  queryParams: Record<string, string>\n): string => {\n  const queryParamEntries = Object.entries(queryParams);\n  if (!queryParamEntries.length) return url;\n\n  const hashIndex = url.indexOf(\"#\");\n  const hash = hashIndex !== -1 ? url.substr(hashIndex) : \"\";\n  const urlMinusHash = hashIndex !== -1 ? url.substr(0, hashIndex) : url;\n  const alreadyHasQueryParams = url.indexOf(\"?\") !== -1;\n\n  const newQueryParams = queryParamEntries\n    .map(\n      ([key, value]) =>\n        `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n    )\n    .join(\"&\");\n\n  return (\n    urlMinusHash + (alreadyHasQueryParams ? \"&\" : \"?\") + newQueryParams + hash\n  );\n};\n\nexport const removeQueryParamsFromUrl = (\n  url: string,\n  queryParamKeysToRemove: string[]\n) => {\n  const queryParamStart = url.indexOf(\"?\");\n  if (queryParamStart === -1) return url;\n\n  const hashIndex = url.indexOf(\"#\");\n  const hash = hashIndex !== -1 ? url.substr(hashIndex) : \"\";\n  const urlMinusHash = hashIndex !== -1 ? url.substr(0, hashIndex) : url;\n\n  const urlBeforeQueryParams = url.substr(0, queryParamStart);\n  const queryParamsFromUrl = urlMinusHash.substr(queryParamStart + 1);\n\n  const filteredQueryParams = queryParamsFromUrl\n    .split(\"&\")\n    .map((keyValuePairAsString) => keyValuePairAsString.split(\"=\"))\n    .filter(([key]) => !queryParamKeysToRemove.includes(key))\n    .map(([key, value]) => (key && value ? `${key}=${value}` : key || value))\n    .join(\"&\");\n\n  return (\n    urlBeforeQueryParams +\n    (filteredQueryParams.length > 0 ? `?${filteredQueryParams}` : \"\") +\n    hash\n  );\n};\n"]},"metadata":{},"sourceType":"module"}