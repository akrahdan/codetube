{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/CurriculumCard/index.tsx\";\nimport { Card, HeadingDeprecated } from 'components/ov';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport cx from 'classnames';\nimport React from 'react';\nimport { TrackLink } from 'components/TrackLink';\nimport { Footer } from './Footer/index';\nimport { Header } from './Header';\nimport { Image } from './Image/index';\nimport styles from './styles.module.scss';\nimport { Subtitle } from './Subtitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const cardHeight = 180;\nconst cardStyles = {\n  inProgress: 'yellow',\n  completed: 'navy'\n};\nexport const CurriculumCard = ({\n  title,\n  difficulty,\n  image,\n  showProLogo,\n  progressState,\n  tag,\n  tagColor,\n  text,\n  linkProps,\n  isFullSize = false,\n  dataTestId,\n  headingLevel = 'h3',\n  scope,\n  scopeCount\n}) => {\n  var _linkProps$href;\n\n  const boxVariant = progressState ? cardStyles[progressState] : false;\n  console.log(\"Image: \", image);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    display: \"grid\",\n    gridTemplateRows: \"repeat(3, max-content) 1fr max-content\",\n    minHeight: isFullSize ? pxRem(cardHeight * 2 + 32) : pxRem(cardHeight),\n    variant: boxVariant !== null && boxVariant !== void 0 ? boxVariant : 'navy',\n    shadow: \"medium\",\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      invertColors: progressState === 'completed',\n      showProLogo: showProLogo,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrackLink, {\n      target: \"/\",\n      asButton: true,\n      data: linkProps.trackingData,\n      href: (_linkProps$href = linkProps.href) !== null && _linkProps$href !== void 0 ? _linkProps$href : '/',\n      to: linkProps.routeTo,\n      className: styles.titleLink,\n      onClick: linkProps.onClick,\n      \"aria-label\": `${title}, ${text}, ${showProLogo ? 'Pro only' : ''}`,\n      \"data-testid\": dataTestId,\n      children: /*#__PURE__*/_jsxDEV(HeadingDeprecated, {\n        className: cx(styles.heading, {\n          [styles.completedHeading]: progressState === 'completed',\n          [styles.inProgressHeading]: progressState === 'inProgress'\n        }),\n        as: headingLevel,\n        fontSize: \"xs\",\n        hideMargin: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !progressState && /*#__PURE__*/_jsxDEV(Subtitle, {\n        scope: scope,\n        scopeCount: scopeCount,\n        difficulty: difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageContainer,\n      children: isFullSize && image && /*#__PURE__*/_jsxDEV(Image, {\n        image: image,\n        progressState: progressState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      progressState: progressState,\n      tag: tag,\n      tagColor: tagColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = CurriculumCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurriculumCard\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/CurriculumCard/index.tsx"],"names":["Card","HeadingDeprecated","pxRem","cx","React","TrackLink","Footer","Header","Image","styles","Subtitle","cardHeight","cardStyles","inProgress","completed","CurriculumCard","title","difficulty","image","showProLogo","progressState","tag","tagColor","text","linkProps","isFullSize","dataTestId","headingLevel","scope","scopeCount","boxVariant","console","log","trackingData","href","routeTo","titleLink","onClick","heading","completedHeading","inProgressHeading","imageContainer"],"mappings":"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","sourcesContent":["import { Card, HeadingDeprecated, HeadingTags } from 'components/ov';\nimport { pxRem } from '@codecademy/gamut-styles';\nimport { UserClickData } from '@codecademy/tracking';\nimport cx from 'classnames';\nimport React, { ComponentProps } from 'react';\nimport { To } from 'redux-first-router-link';\n\nimport { TrackLink } from 'components/TrackLink';\n\nimport { TagColor } from './BottomTag/index';\nimport { Footer } from './Footer/index';\nimport { Header, HeaderProps } from './Header';\nimport { Image } from './Image/index';\nimport styles from './styles.module.scss';\nimport { Subtitle, SubtitleProps } from './Subtitle';\n\ntype ProgressState = 'inProgress' | 'completed';\n\nexport const cardHeight = 180;\n\nconst cardStyles: Record<\n  ProgressState,\n  ComponentProps<typeof Card>['variant']\n> = {\n  inProgress: 'yellow',\n  completed: 'navy',\n};\n\ntype CurriculumCardProps = HeaderProps &\n  SubtitleProps & {\n    isFullSize?: boolean;\n    image?: string;\n    progressState?: ProgressState;\n    title: string;\n    tag?: string;\n    tagColor?: TagColor;\n    linkProps: {\n      href?: string;\n      routeTo?: To;\n      onClick?: () => void;\n      trackingData: UserClickData;\n    };\n    dataTestId: string;\n    headingLevel?: HeadingTags;\n  };\n\nexport const CurriculumCard: React.FC<CurriculumCardProps> = ({\n  title,\n  difficulty,\n  image,\n  showProLogo,\n  progressState,\n  tag,\n  tagColor,\n  text,\n  linkProps,\n  isFullSize = false,\n  dataTestId,\n  headingLevel = 'h3',\n  scope,\n  scopeCount,\n}) => {\n  const boxVariant = progressState? cardStyles[progressState]: false;\n  console.log(\"Image: \", image)\n  return (\n    <Card\n      display=\"grid\"\n      gridTemplateRows=\"repeat(3, max-content) 1fr max-content\"\n      minHeight={isFullSize ? pxRem(cardHeight * 2 + 32) : pxRem(cardHeight)}\n      variant={boxVariant ?? 'navy'}\n      shadow=\"medium\"\n      position=\"relative\"\n    >\n      <Header\n        invertColors={progressState === 'completed'}\n        showProLogo={showProLogo}\n        text={text}\n      />\n\n      <TrackLink\n        target='/'\n        asButton\n        data={linkProps.trackingData}\n        href={linkProps.href ?? '/'}\n        to={linkProps.routeTo}\n        className={styles.titleLink}\n        onClick={linkProps.onClick}\n        aria-label={`${title}, ${text}, ${showProLogo ? 'Pro only' : ''}`}\n        data-testid={dataTestId}\n      >\n        <HeadingDeprecated\n          className={cx(styles.heading, {\n            [styles.completedHeading]: progressState === 'completed',\n            [styles.inProgressHeading]: progressState === 'inProgress',\n          })}\n          as={headingLevel}\n          fontSize=\"xs\"\n          hideMargin\n        >\n          {title}\n        </HeadingDeprecated>\n      </TrackLink>\n      <div>\n        {!progressState && (\n          <Subtitle\n            scope={scope}\n            scopeCount={scopeCount}\n            difficulty={difficulty}\n          />\n        )}\n      </div>\n      <div className={styles.imageContainer}>\n        {isFullSize && image && (\n          <Image image={image} progressState={progressState} />\n        )}\n      </div>\n      <Footer progressState={progressState} tag={tag} tagColor={tagColor} />\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}