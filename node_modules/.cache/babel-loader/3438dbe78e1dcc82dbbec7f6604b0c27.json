{"ast":null,"code":"import _objectWithoutProperties from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{MiniInfoOutlineIcon}from'@codecademy/gamut-icons';import{theme,variant}from'@codecademy/gamut-styles';import{css}from'@emotion/react';import styled from'@emotion/styled';import React from'react';import{ToolTip}from'../ToolTip';import{formBaseStyles}from'./styles/shared';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledToolTipContainer=styled.span(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: calc(100% - 1.1rem);\\n\"])));var StyledToolTip=styled(ToolTip)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"])));var labelSizeVariants=variant({defaultVariant:'small',prop:'size',variants:{small:{lineHeight:'title',mb:4},large:{fontSize:22,lineHeight:'base',fontWeight:'title'}}});var disabledLabelStyle=function disabledLabelStyle(_ref){var disabled=_ref.disabled;if(disabled){return css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n      color: \",\";\\n    \"])),theme.colors['gray-600']);}};var formLabelStyles=function formLabelStyles(_ref2){var size=_ref2.size,disabled=_ref2.disabled;return css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  \",\"\\n  \",\"\\n  \",\"\\n  display: block;\\n\"])),formBaseStyles,disabledLabelStyle({disabled:disabled}),labelSizeVariants({size:size}));};var Label=styled.label(formLabelStyles).withComponent(function(props){if(props.htmlFor){return/*#__PURE__*/_jsx(\"label\",_objectSpread({},props));}return/*#__PURE__*/_jsx(\"div\",_objectSpread({},props));});export var FormGroupLabel=function FormGroupLabel(_ref3){var children=_ref3.children,className=_ref3.className,disabled=_ref3.disabled,htmlFor=_ref3.htmlFor,tooltip=_ref3.tooltip,showRequired=_ref3.showRequired,size=_ref3.size,rest=_objectWithoutProperties(_ref3,[\"children\",\"className\",\"disabled\",\"htmlFor\",\"tooltip\",\"showRequired\",\"size\"]);return/*#__PURE__*/_jsxs(Label,_objectSpread(_objectSpread({},rest),{},{htmlFor:htmlFor,disabled:disabled,className:className,size:size,children:[children,showRequired?' *':'',tooltip&&/*#__PURE__*/_jsx(StyledToolTipContainer,{children:/*#__PURE__*/_jsx(StyledToolTip,_objectSpread({alignment:\"bottom-right\",target:/*#__PURE__*/_jsx(MiniInfoOutlineIcon,{size:\"0.8rem\",\"aria-hidden\":\"false\"})},tooltip))})]}));};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/FormGroupLabel.tsx"],"names":["MiniInfoOutlineIcon","theme","variant","css","styled","React","ToolTip","formBaseStyles","StyledToolTipContainer","span","StyledToolTip","labelSizeVariants","defaultVariant","prop","variants","small","lineHeight","mb","large","fontSize","fontWeight","disabledLabelStyle","disabled","colors","formLabelStyles","size","Label","label","withComponent","props","htmlFor","FormGroupLabel","children","className","tooltip","showRequired","rest"],"mappings":"8jBAAA,OAASA,mBAAT,KAAoC,yBAApC,CACA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,0BAA/B,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAsC,OAAtC,CAEA,OAASC,OAAT,KAAsC,YAAtC,CACA,OAASC,cAAT,KAA+B,iBAA/B,C,wFAEA,GAAMC,CAAAA,sBAAsB,CAAGJ,MAAM,CAACK,IAAV,wHAA5B,CAKA,GAAMC,CAAAA,aAAa,CAAGN,MAAM,CAACE,OAAD,CAAT,oFAAnB,CAoBA,GAAMK,CAAAA,iBAAiB,CAAGT,OAAO,CAAC,CAChCU,cAAc,CAAE,OADgB,CAEhCC,IAAI,CAAE,MAF0B,CAGhCC,QAAQ,CAAE,CACRC,KAAK,CAAE,CACLC,UAAU,CAAE,OADP,CAELC,EAAE,CAAE,CAFC,CADC,CAKRC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELH,UAAU,CAAE,MAFP,CAGLI,UAAU,CAAE,OAHP,CALC,CAHsB,CAAD,CAAjC,CAgBA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAA2C,IAAxCC,CAAAA,QAAwC,MAAxCA,QAAwC,CACpE,GAAIA,QAAJ,CAAc,CACZ,MAAOnB,CAAAA,GAAP,4FACWF,KAAK,CAACsB,MAAN,CAAa,UAAb,CADX,EAGD,CACF,CAND,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,WAAGC,CAAAA,IAAH,OAAGA,IAAH,CAASH,QAAT,OAASA,QAAT,OAA6CnB,CAAAA,GAA7C,6GACpBI,cADoB,CAEpBc,kBAAkB,CAAC,CAAEC,QAAQ,CAARA,QAAF,CAAD,CAFE,CAGpBX,iBAAiB,CAAC,CAAEc,IAAI,CAAJA,IAAF,CAAD,CAHG,GAAxB,CAOA,GAAMC,CAAAA,KAAK,CAAGtB,MAAM,CACjBuB,KADW,CACLH,eADK,EAEXI,aAFW,CAEG,SAACC,KAAD,CAAgC,CAC7C,GAAIA,KAAK,CAACC,OAAV,CAAmB,CACjB,mBAAO,8BAAWD,KAAX,EAAP,CACD,CACD,mBAAO,4BAASA,KAAT,EAAP,CACD,CAPW,CAAd,CASA,MAAO,IAAME,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,OASvD,IARJC,CAAAA,QAQI,OARJA,QAQI,CAPJC,SAOI,OAPJA,SAOI,CANJX,QAMI,OANJA,QAMI,CALJQ,OAKI,OALJA,OAKI,CAJJI,OAII,OAJJA,OAII,CAHJC,YAGI,OAHJA,YAGI,CAFJV,IAEI,OAFJA,IAEI,CADDW,IACC,+GACJ,mBACE,MAAC,KAAD,gCACMA,IADN,MAEE,OAAO,CAAEN,OAFX,CAGE,QAAQ,CAAER,QAHZ,CAIE,SAAS,CAAEW,SAJb,CAKE,IAAI,CAAER,IALR,WAOGO,QAPH,CAQGG,YAAY,CAAG,IAAH,CAAU,EARzB,CASGD,OAAO,eACN,KAAC,sBAAD,wBACE,KAAC,aAAD,gBACE,SAAS,CAAC,cADZ,CAEE,MAAM,cAAE,KAAC,mBAAD,EAAqB,IAAI,CAAC,QAA1B,CAAmC,cAAY,OAA/C,EAFV,EAGMA,OAHN,EADF,EAVJ,IADF,CAqBD,CA/BM","sourcesContent":["import { MiniInfoOutlineIcon } from '@codecademy/gamut-icons';\nimport { theme, variant } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { HTMLAttributes } from 'react';\n\nimport { ToolTip, ToolTipProps } from '../ToolTip';\nimport { formBaseStyles } from './styles/shared';\n\nconst StyledToolTipContainer = styled.span`\n  position: absolute;\n  left: calc(100% - 1.1rem);\n`;\n\nconst StyledToolTip = styled(ToolTip)`\n  z-index: 1;\n`;\n\nexport type FormGroupLabelProps = HTMLAttributes<HTMLDivElement> &\n  HTMLAttributes<HTMLLabelElement> & {\n    disabled?: boolean;\n    /**\n     * [The for/id string of a label or labelable form-related element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor). The outer FormGroup or FormLabel should have an identical string as the inner FormElement for accessibility purposes.\n     */\n    htmlFor?: string;\n    tooltip?: ToolTipProps;\n    showRequired?: boolean;\n    size?: 'small' | 'large';\n  };\n\ntype disabledLabelStyleProps = {\n  disabled?: boolean;\n};\n\nconst labelSizeVariants = variant({\n  defaultVariant: 'small',\n  prop: 'size',\n  variants: {\n    small: {\n      lineHeight: 'title',\n      mb: 4,\n    },\n    large: {\n      fontSize: 22,\n      lineHeight: 'base',\n      fontWeight: 'title',\n    },\n  },\n});\n\nconst disabledLabelStyle = ({ disabled }: disabledLabelStyleProps) => {\n  if (disabled) {\n    return css`\n      color: ${theme.colors['gray-600']};\n    `;\n  }\n};\n\nconst formLabelStyles = ({ size, disabled }: FormGroupLabelProps) => css`\n  ${formBaseStyles}\n  ${disabledLabelStyle({ disabled })}\n  ${labelSizeVariants({ size })}\n  display: block;\n`;\n\nconst Label = styled\n  .label(formLabelStyles)\n  .withComponent((props: FormGroupLabelProps) => {\n    if (props.htmlFor) {\n      return <label {...props} />;\n    }\n    return <div {...props} />;\n  });\n\nexport const FormGroupLabel: React.FC<FormGroupLabelProps> = ({\n  children,\n  className,\n  disabled,\n  htmlFor,\n  tooltip,\n  showRequired,\n  size,\n  ...rest\n}) => {\n  return (\n    <Label\n      {...rest}\n      htmlFor={htmlFor}\n      disabled={disabled}\n      className={className}\n      size={size}\n    >\n      {children}\n      {showRequired ? ' *' : ''}\n      {tooltip && (\n        <StyledToolTipContainer>\n          <StyledToolTip\n            alignment=\"bottom-right\"\n            target={<MiniInfoOutlineIcon size=\"0.8rem\" aria-hidden=\"false\" />}\n            {...tooltip}\n          />\n        </StyledToolTipContainer>\n      )}\n    </Label>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}