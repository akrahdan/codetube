{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { coursesApi } from 'services/courses';\nconst initialState = {\n  title: null,\n  description: null,\n  category: null,\n  id: null\n};\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addMatcher(coursesApi.endpoints.createCourse.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.title = payload.title;\n      state.description = payload.description;\n      state.category = payload.category;\n      state.id = payload.id;\n    });\n  }\n});\nexport default courseSlice.reducer;\nexport const selectCourse = state => state.course;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/course/courseSplice.ts"],"names":["createSlice","coursesApi","initialState","title","description","category","id","courseSlice","name","reducers","extraReducers","builder","addMatcher","endpoints","createCourse","matchFulfilled","state","payload","reducer","selectCourse","course"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAAQC,UAAR,QAAyB,kBAAzB;AASA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,WAAW,EAAE,IAA5B;AAAkCC,EAAAA,QAAQ,EAAE,IAA5C;AAAkDC,EAAAA,EAAE,EAAE;AAAtD,CAArB;AACA,MAAMC,WAAW,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAAY,EAAEA,YAFgB;AAG9BO,EAAAA,QAAQ,EAAE,EAHoB;AAM9BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,UADH,CAEIX,UAAU,CAACY,SAAX,CAAqBC,YAArB,CAAkCC,cAFtC,EAGI,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtBD,MAAAA,KAAK,CAACb,KAAN,GAAcc,OAAO,CAACd,KAAtB;AACAa,MAAAA,KAAK,CAACZ,WAAN,GAAoBa,OAAO,CAACb,WAA5B;AACAY,MAAAA,KAAK,CAACX,QAAN,GAAiBY,OAAO,CAACZ,QAAzB;AACAW,MAAAA,KAAK,CAACV,EAAN,GAAWW,OAAO,CAACX,EAAnB;AAED,KATL;AAWD;AAlB6B,CAAD,CAA/B;AAuBA,eAAeC,WAAW,CAACW,OAA3B;AAEA,OAAO,MAAMC,YAAY,GAAIH,KAAD,IAAsBA,KAAK,CAACI,MAAjD","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from \"services/auth\";\nimport type { RootState } from \"store\";\nimport {coursesApi} from 'services/courses'\n\n\ntype CourseState = {\n  title: string | null,\n  id: number | null,\n  description: string | null,\n  category: string | null\n};\nconst initialState = { title: null, description: null, category: null, id: null };\nconst courseSlice = createSlice({\n  name: \"course\",\n  initialState: initialState as CourseState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addMatcher(\n        coursesApi.endpoints.createCourse.matchFulfilled,\n        (state, { payload }) => {\n          state.title = payload.title;\n          state.description = payload.description;\n          state.category = payload.category;\n          state.id = payload.id;\n\n        }\n      );\n  },\n});\n\n\n\nexport default courseSlice.reducer;\n\nexport const selectCourse = (state: RootState) => state.course;\n"]},"metadata":{},"sourceType":"module"}