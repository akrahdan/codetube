{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ContentContainer,Video}from'@codecademy/gamut';import{isEmpty}from'lodash';import React,{useContext,useState}from'react';import{ProjectCard}from'components/ProjectCard';// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from'portal/scenes/Paths/ContentfulContext';// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport{Items}from'./sample';import{HalfCircle}from'./icons/HalfCircle';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var byProject=function byProject(item){return item.type==='project';};var byVideo=function byVideo(item){return item.type==='video';};export var Projects=function Projects(_ref){var courses=_ref.courses;var _useContext=useContext(CMSContext),contentIds=_useContext.content_item_ids,sideShapesColor=_useContext.side_shapes_color,projectsHeadline=_useContext.projects_headline,videoHeadline=_useContext.video_headline;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contentItems=_useState2[0],setContentItems=_useState2[1];// const jwt = useSelector(selectUserJWT);\n// useEffect(() => {\n//   (async () => {\n//     if (contentIds) {\n//       const { data } = await contentServiceRequest({\n//         endpoint: 'content-items/search',\n//         version: 1,\n//         data: {\n//           id: contentIds,\n//           minimal: false,\n//         },\n//         method: 'POST',\n//         jwt,\n//       });\n//       setContentItems(data);\n//     }\n//   })();\n// }, [contentIds, jwt]);\n// const renderProjects = () =>\n//   contentItems\n//     .filter(byProject)\n//     .map((project: ProjectContentItem, index: number) => (\n//       <ProjectCard\n//         project={project}\n//         index={index}\n//         key={project.id}\n//         className={styles.projectCard}\n//         trackingData={{ target: 'path_marketing_page_projects' }}\n//         hoverShadow\n//       />\n//     ));\nvar renderProjects=function renderProjects(){return courses.map(function(course,index){return/*#__PURE__*/_jsx(ProjectCard,{project:course,index:index,className:styles.projectCard,trackingData:{target:'path_marketing_page_projects'},hoverShadow:true},course.id);});};// const renderVideos = () =>\n//   contentItems.filter(byVideo).map((video: VideoContentItem) => (\n//     <div key={video.id} style={{ width: '100%' }}>\n//       <Video\n//         videoUrl={video.video_url}\n//         videoTitle={video.title}\n//         className={styles.video}\n//         onPlay={() =>\n//           // trackUserClick({\n//           //   page_name: 'marketingpathlandingpage',\n//           //   context: 'projects_section',\n//           //   target: 'play_video',\n//           //   video_url: video.video_url,\n//           // })\n//         console.log()}\n//       />\n//       <p className={styles.videoTitle}>{video.title}</p>\n//     </div>\n//   ));\nvar renderVideos=function renderVideos(){return Items.map(function(video){return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%'},children:[/*#__PURE__*/_jsx(Video,{videoUrl:video.video_url,videoTitle:video.title,className:styles.video,onPlay:function onPlay(){return(// trackUserClick({\n//   page_name: 'marketingpathlandingpage',\n//   context: 'projects_section',\n//   target: 'play_video',\n//   video_url: video.video_url,\n// })\nconsole.log());}}),/*#__PURE__*/_jsx(\"p\",{className:styles.videoTitle,children:video.title})]},video.id);});};var projects=renderProjects();var video=renderVideos();if(isEmpty(projects)&&isEmpty(video))return null;return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.backgroundHalfCircle,children:/*#__PURE__*/_jsx(HalfCircle,{fill:sideShapesColor!==null&&sideShapesColor!==void 0?sideShapesColor:'#C8D7FA'})}),/*#__PURE__*/_jsx(ContentContainer,{children:/*#__PURE__*/_jsx(\"div\",{className:styles.contentItemsContainer,children:!isEmpty(projects)&&/*#__PURE__*/_jsxs(\"div\",{className:styles.projectContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:projectsHeadline||'Courses That Are Included'}),/*#__PURE__*/_jsx(\"div\",{className:styles.displayHorizontal,children:projects})]})})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Projects/index.tsx"],"names":["ContentContainer","Video","isEmpty","React","useContext","useState","ProjectCard","CMSContext","Items","HalfCircle","styles","byProject","item","type","byVideo","Projects","courses","contentIds","content_item_ids","sideShapesColor","side_shapes_color","projectsHeadline","projects_headline","videoHeadline","video_headline","contentItems","setContentItems","renderProjects","map","course","index","projectCard","target","id","renderVideos","video","width","video_url","title","console","log","videoTitle","projects","container","backgroundHalfCircle","contentItemsContainer","projectContainer","displayHorizontal"],"mappings":"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","sourcesContent":["import { ContentContainer, Video } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { ProjectCard } from 'components/ProjectCard';\nimport { contentServiceRequest } from 'libs/contentServiceRequest';\n// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\n// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport { ProjectContentItem, VideoContentItem } from 'typings/entities';\nimport { Items, ProjectItems } from './sample';\nimport { HalfCircle } from './icons/HalfCircle';\nimport styles from './styles.module.scss';\nimport type { Course } from 'services/projects';\n\ntype ContentItemTypes = VideoContentItem | ProjectContentItem;\n\ninterface Video {\n  id: string;\n  type: string;\n  video_url: string;\n  time: number;\n  title: string;\n}\n\n\n\nexport type ProjectProps = {\n  courses: Course[]\n}\n\nconst byProject = (item: ContentItemTypes): item is ProjectContentItem =>\n  item.type === 'project';\n\nconst byVideo = (item: ContentItemTypes): item is VideoContentItem =>\n  item.type === 'video';\n\nexport const Projects = ({\n courses\n}: ProjectProps) => {\n  const {\n    content_item_ids: contentIds,\n    side_shapes_color: sideShapesColor,\n    projects_headline: projectsHeadline,\n    video_headline: videoHeadline,\n  } = useContext(CMSContext);\n\n  const [contentItems, setContentItems] = useState<ContentItemTypes[]>([]);\n  // const jwt = useSelector(selectUserJWT);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (contentIds) {\n  //       const { data } = await contentServiceRequest({\n  //         endpoint: 'content-items/search',\n  //         version: 1,\n  //         data: {\n  //           id: contentIds,\n  //           minimal: false,\n  //         },\n  //         method: 'POST',\n  //         jwt,\n  //       });\n\n  //       setContentItems(data);\n  //     }\n  //   })();\n  // }, [contentIds, jwt]);\n\n  // const renderProjects = () =>\n  //   contentItems\n  //     .filter(byProject)\n  //     .map((project: ProjectContentItem, index: number) => (\n  //       <ProjectCard\n  //         project={project}\n  //         index={index}\n  //         key={project.id}\n  //         className={styles.projectCard}\n  //         trackingData={{ target: 'path_marketing_page_projects' }}\n  //         hoverShadow\n  //       />\n  //     ));\n\n  const renderProjects = () =>\n      courses\n      .map((course: Course, index: number) => (\n        <ProjectCard\n          project={course}\n          index={index}\n          key={course.id}\n          className={styles.projectCard}\n          trackingData={{ target: 'path_marketing_page_projects' }}\n          hoverShadow\n        />\n      \n    ));\n\n  // const renderVideos = () =>\n  //   contentItems.filter(byVideo).map((video: VideoContentItem) => (\n  //     <div key={video.id} style={{ width: '100%' }}>\n  //       <Video\n  //         videoUrl={video.video_url}\n  //         videoTitle={video.title}\n  //         className={styles.video}\n  //         onPlay={() =>\n  //           // trackUserClick({\n  //           //   page_name: 'marketingpathlandingpage',\n  //           //   context: 'projects_section',\n  //           //   target: 'play_video',\n  //           //   video_url: video.video_url,\n  //           // })\n  //         console.log()}\n  //       />\n  //       <p className={styles.videoTitle}>{video.title}</p>\n  //     </div>\n  //   ));\n\n    const renderVideos = () =>\n      Items.map((video: VideoContentItem) => (\n        <div key={video.id} style={{ width: '100%' }}>\n          <Video\n            videoUrl={video.video_url}\n            videoTitle={video.title}\n            className={styles.video}\n            onPlay={() =>\n              // trackUserClick({\n              //   page_name: 'marketingpathlandingpage',\n              //   context: 'projects_section',\n              //   target: 'play_video',\n              //   video_url: video.video_url,\n              // })\n            console.log()}\n          />\n          <p className={styles.videoTitle}>{video.title}</p>\n        </div>\n    ));\n\n  const projects = renderProjects();\n  const video = renderVideos();\n\n  if (isEmpty(projects) && isEmpty(video)) return null;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.backgroundHalfCircle}>\n        <HalfCircle fill={sideShapesColor ?? '#C8D7FA'} />\n      </div>\n      \n      <ContentContainer>\n        <div className={styles.contentItemsContainer}>\n          {!isEmpty(projects) && (\n            <div className={styles.projectContainer}>\n              <h2>{projectsHeadline || 'Courses That Are Included'}</h2>\n              <div className={styles.displayHorizontal}>{projects}</div>\n            </div>\n          )}\n         \n        </div>\n      </ContentContainer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}