{"ast":null,"code":"import { MediaTypes } from '../constants'; // import { postMetric } from '../analytics/metric'\n\nconst canPlayType = (videoEl, codec) => videoEl.canPlayType(codec) === 'probably';\n\nexport const getCodecSupport = (videoEl = document.createElement('video')) => {\n  return {\n    h264: canPlayType(videoEl, 'video/mp4; codecs=\"avc1.42E01E\"'),\n    aac: canPlayType(videoEl, 'audio/mp4; codecs=\"mp4a.40.2\"'),\n    vp8: canPlayType(videoEl, 'video/webm; codecs=\"vp8, vorbis\"')\n  };\n};\n\nconst recordWebmFallback = () => {\n  const hostname = window.location.hostname;\n  const isStagingEnv = hostname && (hostname.includes('stage') || hostname.includes('staging')); //   postMetric({\n  //     functionName: 'webmFallbackEvent',\n  //     latency: 1,\n  //     tags: {\n  //       format: 'webm',\n  //     },\n  //   }, isStagingEnv)\n};\n\nexport const selectVideoFormat = (codecSupportFn = getCodecSupport) => {\n  const {\n    h264,\n    aac,\n    vp8\n  } = codecSupportFn();\n  if (h264 && aac) return MediaTypes.HLS;\n  if (h264) return MediaTypes.MP4;\n\n  if (vp8) {\n    recordWebmFallback();\n    return MediaTypes.WEBM;\n  }\n\n  return MediaTypes.HLS;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/utilities/video-format-support.js"],"names":["MediaTypes","canPlayType","videoEl","codec","getCodecSupport","document","createElement","h264","aac","vp8","recordWebmFallback","hostname","window","location","isStagingEnv","includes","selectVideoFormat","codecSupportFn","HLS","MP4","WEBM"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B,C,CACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoBD,OAAO,CAACD,WAAR,CAAoBE,KAApB,MAA+B,UAAvE;;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACF,OAAO,GAAGG,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,KAA+C;AAC5E,SAAO;AACLC,IAAAA,IAAI,EAAEN,WAAW,CAACC,OAAD,EAAU,iCAAV,CADZ;AAELM,IAAAA,GAAG,EAAEP,WAAW,CAACC,OAAD,EAAU,+BAAV,CAFX;AAGLO,IAAAA,GAAG,EAAER,WAAW,CAACC,OAAD,EAAU,kCAAV;AAHX,GAAP;AAKD,CANM;;AAQP,MAAMQ,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;AACA,QAAMG,YAAY,GAAGH,QAAQ,KAAKA,QAAQ,CAACI,QAAT,CAAkB,OAAlB,KAA8BJ,QAAQ,CAACI,QAAT,CAAkB,SAAlB,CAAnC,CAA7B,CAF+B,CAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAVD;;AAYA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,cAAc,GAAGb,eAAlB,KAAsC;AACrE,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAqBQ,cAAc,EAAzC;AAEA,MAAIV,IAAI,IAAIC,GAAZ,EAAiB,OAAOR,UAAU,CAACkB,GAAlB;AACjB,MAAIX,IAAJ,EAAU,OAAOP,UAAU,CAACmB,GAAlB;;AACV,MAAIV,GAAJ,EAAS;AACPC,IAAAA,kBAAkB;AAClB,WAAOV,UAAU,CAACoB,IAAlB;AACD;;AACD,SAAOpB,UAAU,CAACkB,GAAlB;AACD,CAVM","sourcesContent":["import { MediaTypes } from '../constants'\n// import { postMetric } from '../analytics/metric'\n\nconst canPlayType = (videoEl, codec) => videoEl.canPlayType(codec) === 'probably'\n\nexport const getCodecSupport = (videoEl = document.createElement('video')) => {\n  return {\n    h264: canPlayType(videoEl, 'video/mp4; codecs=\"avc1.42E01E\"'),\n    aac: canPlayType(videoEl, 'audio/mp4; codecs=\"mp4a.40.2\"'),\n    vp8: canPlayType(videoEl, 'video/webm; codecs=\"vp8, vorbis\"'),\n  }\n}\n\nconst recordWebmFallback = () => {\n  const hostname = window.location.hostname\n  const isStagingEnv = hostname && (hostname.includes('stage') || hostname.includes('staging'))\n//   postMetric({\n//     functionName: 'webmFallbackEvent',\n//     latency: 1,\n//     tags: {\n//       format: 'webm',\n//     },\n//   }, isStagingEnv)\n}\n\nexport const selectVideoFormat = (codecSupportFn = getCodecSupport) => {\n  const { h264, aac, vp8 } = codecSupportFn()\n\n  if (h264 && aac) return MediaTypes.HLS\n  if (h264) return MediaTypes.MP4\n  if (vp8) {\n    recordWebmFallback()\n    return MediaTypes.WEBM\n  }\n  return MediaTypes.HLS\n}\n"]},"metadata":{},"sourceType":"module"}