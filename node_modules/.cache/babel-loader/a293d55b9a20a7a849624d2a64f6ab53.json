{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{Box}from'@codecademy/gamut';import{SearchIcon}from'@codecademy/gamut-icons';import styled from'@emotion/styled';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchForm=Box.withComponent('form');var StyledInput=styled.input(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: \",\";\\n  font-size: 1rem;\\n  outline: none;\\n  padding-right: 2.5rem;\\n  padding: 0.75rem;\\n  width: 100%;\\n\\n  &::placeholder {\\n    color: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return\"1px solid \".concat(theme.colors['gray-800']);},function(_ref2){var theme=_ref2.theme;return theme.colors['gray-800'];});var SearchButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n  right: 0.75rem;\\n  cursor: pointer;\\n  outline: 0;\\n  border: none;\\n  background-color: transparent;\\n  padding: 0;\\n  line-height: 0;\\n\"])));export var MobileSearchBar=function MobileSearchBar(_ref3){var onSearch=_ref3.onSearch;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var handleChange=function handleChange(event){setSearchValue(event.target.value);};var handleSubmit=function handleSubmit(event){event.preventDefault();onSearch(searchValue);};return/*#__PURE__*/_jsxs(SearchForm,{action:\"/search\",display:\"flex\",id:\"search-form\",onSubmit:handleSubmit,position:\"relative\",py:16,width:\"100%\",children:[/*#__PURE__*/_jsx(StyledInput,{name:\"query\",type:\"search\",placeholder:\"Search our catalog\",\"aria-label\":\"search\",value:searchValue,onChange:handleChange}),/*#__PURE__*/_jsx(SearchButton,{\"aria-label\":\"Enter search\",children:/*#__PURE__*/_jsx(SearchIcon,{})})]});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/gamut-overrides/AppHeaderMobile/AppHeaderMainMenuMobile/MobileSearchBar.tsx"],"names":["Box","SearchIcon","styled","React","useState","SearchForm","withComponent","StyledInput","input","theme","colors","SearchButton","button","MobileSearchBar","onSearch","searchValue","setSearchValue","handleChange","event","target","value","handleSubmit","preventDefault"],"mappings":"mYAAA,OAASA,GAAT,KAAoB,mBAApB,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,GAAMC,CAAAA,UAAU,CAAGL,GAAG,CAACM,aAAJ,CAAkB,MAAlB,CAAnB,CAEA,GAAMC,CAAAA,WAAW,CAAGL,MAAM,CAACM,KAAV,yPAEL,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,2BAA4BA,KAAK,CAACC,MAAN,CAAa,UAAb,CAA5B,GAFK,CAUJ,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAa,UAAb,CAAf,EAVI,CAAjB,CAcA,GAAMC,CAAAA,YAAY,CAAGT,MAAM,CAACU,MAAV,sRAAlB,CAiBA,MAAO,IAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,OAEzD,IADJC,CAAAA,QACI,OADJA,QACI,eACkCV,QAAQ,CAAC,EAAD,CAD1C,wCACGW,WADH,eACgBC,cADhB,eAGJ,GAAMC,CAAAA,YAAwD,CAAG,QAA3DA,CAAAA,YAA2D,CAACC,KAAD,CAAW,CAC1EF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAoC,CAAG,QAAvCA,CAAAA,YAAuC,CAACH,KAAD,CAAW,CACtDA,KAAK,CAACI,cAAN,GACAR,QAAQ,CAACC,WAAD,CAAR,CACD,CAHD,CAKA,mBACE,MAAC,UAAD,EACE,MAAM,CAAC,SADT,CAEE,OAAO,CAAC,MAFV,CAGE,EAAE,CAAC,aAHL,CAIE,QAAQ,CAAEM,YAJZ,CAKE,QAAQ,CAAC,UALX,CAME,EAAE,CAAE,EANN,CAOE,KAAK,CAAC,MAPR,wBASE,KAAC,WAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,QAFP,CAGE,WAAW,CAAC,oBAHd,CAIE,aAAW,QAJb,CAKE,KAAK,CAAEN,WALT,CAME,QAAQ,CAAEE,YANZ,EATF,cAiBE,KAAC,YAAD,EAAc,aAAW,cAAzB,uBACE,KAAC,UAAD,IADF,EAjBF,GADF,CAuBD,CArCM","sourcesContent":["import { Box } from '@codecademy/gamut';\nimport { SearchIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\n\nconst SearchForm = Box.withComponent('form');\n\nconst StyledInput = styled.input`\n  background: none;\n  border: ${({ theme }) => `1px solid ${theme.colors['gray-800']}`};\n  font-size: 1rem;\n  outline: none;\n  padding-right: 2.5rem;\n  padding: 0.75rem;\n  width: 100%;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors['gray-800']};\n  }\n`;\n\nconst SearchButton = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n  right: 0.75rem;\n  cursor: pointer;\n  outline: 0;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  line-height: 0;\n`;\n\nexport type MobileSearchBarProps = {\n  onSearch: (query: string) => void;\n};\n\nexport const MobileSearchBar: React.FC<MobileSearchBarProps> = ({\n  onSearch,\n}) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleSubmit: React.FormEventHandler = (event) => {\n    event.preventDefault();\n    onSearch(searchValue);\n  };\n\n  return (\n    <SearchForm\n      action=\"/search\"\n      display=\"flex\"\n      id=\"search-form\"\n      onSubmit={handleSubmit}\n      position=\"relative\"\n      py={16}\n      width=\"100%\"\n    >\n      <StyledInput\n        name=\"query\"\n        type=\"search\"\n        placeholder=\"Search our catalog\"\n        aria-label=\"search\"\n        value={searchValue}\n        onChange={handleChange}\n      />\n      <SearchButton aria-label=\"Enter search\">\n        <SearchIcon />\n      </SearchButton>\n    </SearchForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}