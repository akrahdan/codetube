{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeader/Search/useHeaderSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from '@codecademy/gamut';\nimport { SearchIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport { SearchPane } from './SearchPane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledIconButton = styled(IconButton)`\n  &:hover {\n    background: none;\n  }\n`;\n_c = StyledIconButton;\nexport const useHeaderSearch = ({\n  onEnable,\n  onSearch,\n  onTrackingClick\n}) => {\n  _s();\n\n  const [isSearchVisible, setIsSearchVisible] = useState(false);\n\n  const toggleSearch = () => {\n    if (isSearchVisible) {\n      onEnable();\n    }\n\n    setIsSearchVisible(oldIsSearchVisible => !oldIsSearchVisible);\n  };\n\n  return [{\n    id: 'search',\n    type: 'render-element',\n    renderElement: () => /*#__PURE__*/_jsxDEV(StyledIconButton, {\n      \"aria-label\": \"Search Codecademy Content\",\n      \"data-testid\": \"header-search\",\n      onClick: toggleSearch,\n      icon: SearchIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, /*#__PURE__*/_jsxDEV(SearchPane, {\n    isSearchVisible: isSearchVisible,\n    onSearch: onSearch,\n    onTrackingClick: onTrackingClick,\n    toggleSearch: toggleSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)];\n};\n\n_s(useHeaderSearch, \"NYI1Me+s2GLlgRDjc10SfKWjm44=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledIconButton\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/AppHeader/Search/useHeaderSearch.tsx"],"names":["IconButton","SearchIcon","styled","React","useState","SearchPane","StyledIconButton","useHeaderSearch","onEnable","onSearch","onTrackingClick","isSearchVisible","setIsSearchVisible","toggleSearch","oldIsSearchVisible","id","type","renderElement"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAQA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACF,UAAD,CAAa;AAC5C;AACA;AACA;AACA,CAJA;KAAMM,gB;AAMN,OAAO,MAAMC,eAAe,GAAG,CAAC;AAC9BC,EAAAA,QAD8B;AAE9BC,EAAAA,QAF8B;AAG9BC,EAAAA;AAH8B,CAAD,KAIR;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAIF,eAAJ,EAAqB;AACnBH,MAAAA,QAAQ;AACT;;AAEDI,IAAAA,kBAAkB,CAAEE,kBAAD,IAAwB,CAACA,kBAA1B,CAAlB;AACD,GAND;;AAQA,SAAO,CACL;AACEC,IAAAA,EAAE,EAAE,QADN;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,aAAa,EAAE,mBACb,QAAC,gBAAD;AACE,oBAAW,2BADb;AAEE,qBAAY,eAFd;AAGE,MAAA,OAAO,EAAEJ,YAHX;AAIE,MAAA,IAAI,EAAEZ;AAJR;AAAA;AAAA;AAAA;AAAA;AAJJ,GADK,eAaL,QAAC,UAAD;AACE,IAAA,eAAe,EAAEU,eADnB;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,eAAe,EAAEC,eAHnB;AAIE,IAAA,YAAY,EAAEG;AAJhB;AAAA;AAAA;AAAA;AAAA,UAbK,CAAP;AAoBD,CAnCM;;GAAMN,e","sourcesContent":["import { IconButton } from '@codecademy/gamut';\nimport { SearchIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\n\nimport { SearchPane } from './SearchPane';\n\nexport type AppHeaderSearch = {\n  onEnable: () => void;\n  onSearch: (query: string) => void;\n  onTrackingClick: (target: string) => void;\n};\n\nconst StyledIconButton = styled(IconButton)`\n  &:hover {\n    background: none;\n  }\n`;\n\nexport const useHeaderSearch = ({\n  onEnable,\n  onSearch,\n  onTrackingClick,\n}: AppHeaderSearch) => {\n  const [isSearchVisible, setIsSearchVisible] = useState(false);\n\n  const toggleSearch = () => {\n    if (isSearchVisible) {\n      onEnable();\n    }\n\n    setIsSearchVisible((oldIsSearchVisible) => !oldIsSearchVisible);\n  };\n\n  return [\n    {\n      id: 'search',\n      type: 'render-element',\n      renderElement: () => (\n        <StyledIconButton\n          aria-label=\"Search Codecademy Content\"\n          data-testid=\"header-search\"\n          onClick={toggleSearch}\n          icon={SearchIcon}\n        />\n      ),\n    },\n    <SearchPane\n      isSearchVisible={isSearchVisible}\n      onSearch={onSearch}\n      onTrackingClick={onTrackingClick}\n      toggleSearch={toggleSearch}\n    />,\n  ] as const;\n};\n"]},"metadata":{},"sourceType":"module"}