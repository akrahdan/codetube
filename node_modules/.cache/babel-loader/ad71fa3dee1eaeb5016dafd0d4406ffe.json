{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { theme } from \"@codecademy/gamut-styles\";\nimport React, { useEffect } from 'react';\nimport { createRootComponent } from \"components/createRootComponent\";\nimport { useAppDispatch } from 'store/hooks';\nimport { useGetCurrentUserQuery } from 'services/auth';\nimport PathRouteSwitcher from \"./scenes/Paths\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PortalRouter = ({\n  portalData,\n  statusCode\n}) => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    data,\n    isLoadinng\n  } = useGetCurrentUserQuery();\n  useEffect(() => {}, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(PathRouteSwitcher, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortalRouter, \"l1qr24R1xbNf43b3zyhLpRL7nlU=\", false, function () {\n  return [useAppDispatch, useGetCurrentUserQuery];\n});\n\n_c = PortalRouter;\nexport default _c2 = createRootComponent(PortalRouter, {\n  theme\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PortalRouter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/index.tsx"],"names":["theme","React","useEffect","createRootComponent","useAppDispatch","useGetCurrentUserQuery","PathRouteSwitcher","PortalRouter","portalData","statusCode","dispatch","data","isLoadinng"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,0BAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AAIA,SAASC,cAAT,QAA+C,aAA/C;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,OAAOC,iBAAP,MAA8B,gBAA9B;;AAOA,OAAO,MAAMC,YAAmC,GAAG,CAAC;AAChDC,EAAAA,UADgD;AAEhDC,EAAAA;AAFgD,CAAD,KAI7C;AAAA;;AACF,QAAMC,QAAQ,GAAGN,cAAc,EAA/B;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBP,sBAAsB,EAAnD;AACAH,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,sBACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdM;;GAAMH,Y;UAKQH,c,EACYC,sB;;;KANpBE,Y;AAkBb,qBAAeJ,mBAAmB,CAACI,YAAD,EAAc;AAAEP,EAAAA;AAAF,CAAd,CAAlC","sourcesContent":["import { theme } from \"@codecademy/gamut-styles\"\nimport React, { useEffect } from 'react'\nimport { createRootComponent } from \"components/createRootComponent\";\nimport { getRouteMetaForLocation } from \"libs/location/routing\";\nimport { createReduxBinder } from \"libs/reduxBinder\";\nimport { configureStore } from \"./store/configureStore\";\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { useGetCurrentUserQuery } from 'services/auth';\nimport PathRouteSwitcher from \"./scenes/Paths\"\n\nexport type PortalProps = {\n    portalData: unknown,\n    statusCode: number\n}\n\nexport const PortalRouter: React.FC<PortalProps> = ({\n    portalData,\n    statusCode\n   \n}) => {\n    const dispatch = useAppDispatch();\n    const { data, isLoadinng } = useGetCurrentUserQuery()\n    useEffect(() => {\n       \n    }, [dispatch])\n\n    return(\n        <PathRouteSwitcher />\n    )\n}\n\n\n\nexport default createRootComponent(PortalRouter,{ theme });\n \n"]},"metadata":{},"sourceType":"module"}