{"ast":null,"code":"import _classCallCheck from \"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport options from \"../options.js\";\nimport strings from \"../assets/strings.js\";\nexport default function createGameScene(_ref) {\n  var on = _ref.on,\n      Phaser = _ref.phaser;\n  return /*#__PURE__*/function (_Phaser$Scene) {\n    _inherits(GameScene, _Phaser$Scene);\n\n    var _super = _createSuper(GameScene);\n\n    function GameScene() {\n      var _this;\n\n      _classCallCheck(this, GameScene);\n\n      _this = _super.call(this, {\n        key: \"GameScene\"\n      });\n      _this.isPaused = false;\n      return _this;\n    }\n\n    _createClass(GameScene, [{\n      key: \"preload\",\n      value: function preload() {\n        this.load.image(\"platform\", \"https://static-assets.codecademy.com/assets/40phaser/platform-test.png\");\n        this.load.spritesheet(\"codey\", \"https://static-assets.codecademy.com/assets/40phaser/codey_sprite.png\", {\n          frameWidth: 72,\n          frameHeight: 72\n        });\n      }\n    }, {\n      key: \"create\",\n      value: function create() {\n        var _this2 = this;\n\n        this.scores = {\n          currScore: 0,\n          highscore: parseInt(localStorage.getItem(\"highscore\"), 10) || 0\n        };\n        this.keys = {\n          spacebar: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),\n          pKey: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P)\n        }; // Running animation\n\n        this.anims.create({\n          key: \"run\",\n          frames: this.anims.generateFrameNumbers(\"codey\", {\n            start: 0,\n            end: 3\n          }),\n          frameRate: 10,\n          repeat: -1\n        }); // jumping animation\n\n        this.anims.create({\n          key: \"jump\",\n          frames: this.anims.generateFrameNumbers(\"codey\", {\n            start: 3,\n            end: 5\n          }),\n          frameRate: 10,\n          repeat: -1\n        });\n        this.platforms = this.physics.add.group({\n          allowGravity: false,\n          immovable: true\n        });\n\n        for (var i = 0; i < 5; i += 1) {\n          this.addPlatform(110 * i);\n        }\n\n        this.addPlatform(125 * 5);\n        this.addPlatform(135 * 6);\n        this.addPlatform(140 * 7);\n        this.player = this.physics.add.sprite(100, this.game.config.height - 100, \"codey\");\n        this.player.body.checkCollision.up = false;\n        this.player.body.checkCollision.left = false;\n        this.player.body.checkCollision.right = false;\n        this.physics.add.collider(this.player, this.platforms);\n        this.physics.add.collider(this.platforms, this.platforms, function (s1, s2) {\n          var b1 = s1.body;\n          var b2 = s2.body;\n\n          if (b1.x > b2.x) {\n            b1.y -= 60;\n          } else {\n            b2.y -= 60;\n          }\n        }); // add the tap/click input\n\n        this.input.on(\"pointerdown\", this.jump, this);\n        this.scoreText = this.add.text(16, 16, strings.score(0), {\n          fontFamily: options.fontFamily,\n          fontSize: options.mediumFontSize,\n          fill: options.blackText\n        }); // add pause button with text\n\n        this.pauseButton = this.add.rectangle(this.game.config.width - 70, 25, 100, 30, options.purpleBox);\n        this.pauseButton.setInteractive();\n        this.pauseButton.text = this.add.text(this.game.config.width - 100, 14, strings.pause, {\n          fontFamily: options.fontFamily,\n          fontSize: options.smallFontSize,\n          fill: options.whiteText\n        });\n        this.pauseButton.on(\"pointerup\", function () {\n          _this2.togglePause();\n        });\n      }\n    }, {\n      key: \"addPlatform\",\n      value: function addPlatform() {\n        var platformX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.game.config.width;\n        var platformY = this.game.config.height - 50;\n        var platform = this.physics.add.sprite(platformX, platformY, \"platform\");\n        this.platforms.add(platform);\n      }\n    }, {\n      key: \"jump\",\n      value: function jump() {\n        if (this.player.body.touching.down) {\n          this.player.body.setAccelerationY(1000);\n          this.player.setVelocityY(-options.jumpForce);\n        }\n\n        on.game(\"jump\");\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        var newScore = Math.floor(this.scores.currScore);\n\n        if (!this.isPaused) {\n          this.scores.currScore += 0.2;\n          this.scoreText.setText(strings.score(newScore));\n\n          if (Phaser.Input.Keyboard.JustDown(this.keys.spacebar)) {\n            this.jump();\n          }\n\n          if (!this.player.body.touching.down) {\n            this.player.anims.play(\"jump\", true);\n          } else {\n            this.player.anims.play(\"run\", true);\n          }\n\n          if (this.player.y > this.game.config.height) {\n            this.scene.stop(\"GameScene\");\n            this.scores.highscore = Math.max(this.scores.highscore, this.scores.currScore);\n            localStorage.setItem(\"highscore\", Math.floor(this.scores.highscore));\n            on.game(\"death\");\n            this.scene.start(\"EndScene\", {\n              score: Math.floor(this.scores.currScore),\n              highscore: Math.floor(this.scores.highscore)\n            });\n          }\n\n          this.platforms.children.iterate(this.updatePlatforms, this);\n        }\n\n        if (Phaser.Input.Keyboard.JustDown(this.keys.pKey)) {\n          this.togglePause();\n        }\n\n        var ariaLabel = [strings.score(newScore), this.isPaused ? strings.pressPToUnpause : strings.pressPToPause, strings.pressSpaceOrTap].join(\". \");\n\n        if (ariaLabel !== this.ariaLabel) {\n          this.ariaLabel = ariaLabel;\n          this.game.canvas.setAttribute(\"aria-label\", ariaLabel);\n        }\n      }\n    }, {\n      key: \"togglePause\",\n      value: function togglePause() {\n        if (this.isPaused) {\n          on.game(\"unpause\");\n          this.pauseButton.text.setText(strings.pause);\n          this.pauseButton.text.x += 6;\n          this.physics.resume();\n          this.anims.resumeAll();\n        } else {\n          on.game(\"pause\");\n          this.pauseButton.text.setText(strings.unpause);\n          this.pauseButton.text.x -= 6;\n          this.physics.pause();\n          this.anims.pauseAll();\n        }\n\n        this.isPaused = !this.isPaused;\n      }\n    }, {\n      key: \"updatePlatforms\",\n      value: function updatePlatforms(platform) {\n        if (platform.x < -platform.width) {\n          var randDiff = Math.floor(Math.random() * 250);\n          platform.x = this.game.config.width + randDiff;\n        } else {\n          options.platformSpeedIncrement = this.scores.currScore / 500;\n          platform.x -= options.platformSpeed * (1 + options.platformSpeedIncrement);\n        }\n      }\n    }]);\n\n    return GameScene;\n  }(Phaser.Scene);\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/40phaser/src/scenes/game.js"],"names":["options","strings","createGameScene","on","Phaser","phaser","key","isPaused","load","image","spritesheet","frameWidth","frameHeight","scores","currScore","highscore","parseInt","localStorage","getItem","keys","spacebar","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","pKey","P","anims","create","frames","generateFrameNumbers","start","end","frameRate","repeat","platforms","physics","add","group","allowGravity","immovable","i","addPlatform","player","sprite","game","config","height","body","checkCollision","up","left","right","collider","s1","s2","b1","b2","x","y","jump","scoreText","text","score","fontFamily","fontSize","mediumFontSize","fill","blackText","pauseButton","rectangle","width","purpleBox","setInteractive","pause","smallFontSize","whiteText","togglePause","platformX","platformY","platform","touching","down","setAccelerationY","setVelocityY","jumpForce","newScore","Math","floor","setText","JustDown","play","scene","stop","max","setItem","children","iterate","updatePlatforms","ariaLabel","pressPToUnpause","pressPToPause","pressSpaceOrTap","join","canvas","setAttribute","resume","resumeAll","unpause","pauseAll","randDiff","random","platformSpeedIncrement","platformSpeed","Scene"],"mappings":"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","sourcesContent":["import options from \"../options.js\";\nimport strings from \"../assets/strings.js\";\n\nexport default function createGameScene({ on, phaser: Phaser }) {\n    return class GameScene extends Phaser.Scene {\n        constructor() {\n            super({ key: \"GameScene\" });\n            this.isPaused = false;\n        }\n\n        preload() {\n            this.load.image(\n                \"platform\",\n                \"https://static-assets.codecademy.com/assets/40phaser/platform-test.png\",\n            );\n            this.load.spritesheet(\n                \"codey\",\n                \"https://static-assets.codecademy.com/assets/40phaser/codey_sprite.png\",\n                {\n                    frameWidth: 72,\n                    frameHeight: 72,\n                },\n            );\n        }\n\n        create() {\n            this.scores = {\n                currScore: 0,\n                highscore: parseInt(localStorage.getItem(\"highscore\"), 10) || 0,\n            };\n\n            this.keys = {\n                spacebar: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),\n                pKey: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P),\n            };\n\n            // Running animation\n            this.anims.create({\n                key: \"run\",\n                frames: this.anims.generateFrameNumbers(\"codey\", { start: 0, end: 3 }),\n                frameRate: 10,\n                repeat: -1,\n            });\n\n            // jumping animation\n            this.anims.create({\n                key: \"jump\",\n                frames: this.anims.generateFrameNumbers(\"codey\", { start: 3, end: 5 }),\n                frameRate: 10,\n                repeat: -1,\n            });\n\n            this.platforms = this.physics.add.group({\n                allowGravity: false,\n                immovable: true,\n            });\n\n            for (let i = 0; i < 5; i += 1) {\n                this.addPlatform(110 * i);\n            }\n\n            this.addPlatform(125 * 5);\n            this.addPlatform(135 * 6);\n            this.addPlatform(140 * 7);\n\n            this.player = this.physics.add.sprite(100, this.game.config.height - 100, \"codey\");\n\n            this.player.body.checkCollision.up = false;\n            this.player.body.checkCollision.left = false;\n            this.player.body.checkCollision.right = false;\n            this.physics.add.collider(this.player, this.platforms);\n            this.physics.add.collider(this.platforms, this.platforms, (s1, s2) => {\n                const b1 = s1.body;\n                const b2 = s2.body;\n\n                if (b1.x > b2.x) {\n                    b1.y -= 60;\n                } else {\n                    b2.y -= 60;\n                }\n            });\n\n            // add the tap/click input\n            this.input.on(\"pointerdown\", this.jump, this);\n\n            this.scoreText = this.add.text(16, 16, strings.score(0), {\n                fontFamily: options.fontFamily,\n                fontSize: options.mediumFontSize,\n                fill: options.blackText,\n            });\n\n            // add pause button with text\n            this.pauseButton = this.add.rectangle(\n                this.game.config.width - 70,\n                25,\n                100,\n                30,\n                options.purpleBox,\n            );\n            this.pauseButton.setInteractive();\n\n            this.pauseButton.text = this.add.text(this.game.config.width - 100, 14, strings.pause, {\n                fontFamily: options.fontFamily,\n                fontSize: options.smallFontSize,\n                fill: options.whiteText,\n            });\n\n            this.pauseButton.on(\"pointerup\", () => {\n                this.togglePause();\n            });\n        }\n\n        addPlatform(platformX = this.game.config.width) {\n            const platformY = this.game.config.height - 50;\n            const platform = this.physics.add.sprite(platformX, platformY, \"platform\");\n\n            this.platforms.add(platform);\n        }\n\n        jump() {\n            if (this.player.body.touching.down) {\n                this.player.body.setAccelerationY(1000);\n                this.player.setVelocityY(-options.jumpForce);\n            }\n            on.game(\"jump\");\n        }\n\n        update() {\n            const newScore = Math.floor(this.scores.currScore);\n\n            if (!this.isPaused) {\n                this.scores.currScore += 0.2;\n                this.scoreText.setText(strings.score(newScore));\n\n                if (Phaser.Input.Keyboard.JustDown(this.keys.spacebar)) {\n                    this.jump();\n                }\n                if (!this.player.body.touching.down) {\n                    this.player.anims.play(\"jump\", true);\n                } else {\n                    this.player.anims.play(\"run\", true);\n                }\n                if (this.player.y > this.game.config.height) {\n                    this.scene.stop(\"GameScene\");\n\n                    this.scores.highscore = Math.max(this.scores.highscore, this.scores.currScore);\n                    localStorage.setItem(\"highscore\", Math.floor(this.scores.highscore));\n\n                    on.game(\"death\");\n                    this.scene.start(\"EndScene\", {\n                        score: Math.floor(this.scores.currScore),\n                        highscore: Math.floor(this.scores.highscore),\n                    });\n                }\n                this.platforms.children.iterate(this.updatePlatforms, this);\n            }\n            if (Phaser.Input.Keyboard.JustDown(this.keys.pKey)) {\n                this.togglePause();\n            }\n\n            const ariaLabel = [\n                strings.score(newScore),\n                this.isPaused ? strings.pressPToUnpause : strings.pressPToPause,\n                strings.pressSpaceOrTap,\n            ].join(\". \");\n\n            if (ariaLabel !== this.ariaLabel) {\n                this.ariaLabel = ariaLabel;\n                this.game.canvas.setAttribute(\"aria-label\", ariaLabel);\n            }\n        }\n\n        togglePause() {\n            if (this.isPaused) {\n                on.game(\"unpause\");\n                this.pauseButton.text.setText(strings.pause);\n                this.pauseButton.text.x += 6;\n                this.physics.resume();\n                this.anims.resumeAll();\n            } else {\n                on.game(\"pause\");\n                this.pauseButton.text.setText(strings.unpause);\n                this.pauseButton.text.x -= 6;\n                this.physics.pause();\n                this.anims.pauseAll();\n            }\n            this.isPaused = !this.isPaused;\n        }\n\n        updatePlatforms(platform) {\n            if (platform.x < -platform.width) {\n                const randDiff = Math.floor(Math.random() * 250);\n                platform.x = this.game.config.width + randDiff;\n            } else {\n                options.platformSpeedIncrement = this.scores.currScore / 500;\n                platform.x -= options.platformSpeed * (1 + options.platformSpeedIncrement);\n            }\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}