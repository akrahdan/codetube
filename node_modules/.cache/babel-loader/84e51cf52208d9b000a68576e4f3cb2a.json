{"ast":null,"code":"import cx from 'classnames';\nimport React from 'react';\nimport { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';\nimport styles from './styles/Text.module.scss';\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */\n\nexport var TextDeprecated = function TextDeprecated(_ref) {\n  var children = _ref.children,\n      _ref$as = _ref.as,\n      Element = _ref$as === void 0 ? 'p' : _ref$as,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 'md' : _ref$fontSize,\n      className = _ref.className,\n      testId = _ref.testId,\n      style = _ref.style;\n  return /*#__PURE__*/React.createElement(Element, {\n    className: cx(styles.text, className, generateResponsiveClassnames({\n      fontSize: fontSize\n    }, styles)),\n    \"data-testid\": testId,\n    style: style\n  }, children);\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/@codecademy/gamut/dist/Typography/TextDeprecated.js"],"names":["cx","React","generateResponsiveClassnames","styles","TextDeprecated","_ref","children","_ref$as","as","Element","_ref$fontSize","fontSize","className","testId","style","createElement","text"],"mappings":"AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,4BAAT,QAA6C,uCAA7C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACxD,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACG,EADnB;AAAA,MAEIC,OAAO,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,GAArB,GAA2BA,OAFzC;AAAA,MAGIG,aAAa,GAAGL,IAAI,CAACM,QAHzB;AAAA,MAIIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,IAA3B,GAAkCA,aAJjD;AAAA,MAKIE,SAAS,GAAGP,IAAI,CAACO,SALrB;AAAA,MAMIC,MAAM,GAAGR,IAAI,CAACQ,MANlB;AAAA,MAOIC,KAAK,GAAGT,IAAI,CAACS,KAPjB;AAQA,SAAO,aAAab,KAAK,CAACc,aAAN,CAAoBN,OAApB,EAA6B;AAC/CG,IAAAA,SAAS,EAAEZ,EAAE,CAACG,MAAM,CAACa,IAAR,EAAcJ,SAAd,EAAyBV,4BAA4B,CAAC;AACjES,MAAAA,QAAQ,EAAEA;AADuD,KAAD,EAE/DR,MAF+D,CAArD,CADkC;AAI/C,mBAAeU,MAJgC;AAK/CC,IAAAA,KAAK,EAAEA;AALwC,GAA7B,EAMjBR,QANiB,CAApB;AAOD,CAhBM","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport { generateResponsiveClassnames } from '../utils/generateResponsiveClassnames';\nimport styles from './styles/Text.module.scss';\n\n/**\n * @deprecated\n * This component is deprecated and is no longer supported.\n *\n * Please use the new [Text](https://gamut.codecademy.com/storybook/?path=/docs/typography-text--text) typography component\n * ```\n * import { Text } from '@codecademy/gamut';\n *\n * <Text as=\"p\">paragraph text</Text>\n * ```\n */\nexport var TextDeprecated = function TextDeprecated(_ref) {\n  var children = _ref.children,\n      _ref$as = _ref.as,\n      Element = _ref$as === void 0 ? 'p' : _ref$as,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 'md' : _ref$fontSize,\n      className = _ref.className,\n      testId = _ref.testId,\n      style = _ref.style;\n  return /*#__PURE__*/React.createElement(Element, {\n    className: cx(styles.text, className, generateResponsiveClassnames({\n      fontSize: fontSize\n    }, styles)),\n    \"data-testid\": testId,\n    style: style\n  }, children);\n};"]},"metadata":{},"sourceType":"module"}