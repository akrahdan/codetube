{"ast":null,"code":"export function createEffectWrapper() {\n  var effects = [];\n  var cleanups = [];\n\n  function runEffect(fn) {\n    effects.push(fn);\n    var effectCleanup = fn();\n    cleanups.push(effectCleanup);\n  }\n\n  return {\n    runEffect: runEffect,\n    cleanupEffects: function cleanupEffects() {\n      var currentCleanups = cleanups;\n      cleanups = [];\n      currentCleanups.forEach(function (cleanup) {\n        cleanup();\n      });\n    },\n    runEffects: function runEffects() {\n      var currentEffects = effects;\n      effects = [];\n      currentEffects.forEach(function (effect) {\n        runEffect(effect);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@algolia/autocomplete-js/dist/esm/createEffectWrapper.js"],"names":["createEffectWrapper","effects","cleanups","runEffect","fn","push","effectCleanup","cleanupEffects","currentCleanups","forEach","cleanup","runEffects","currentEffects","effect"],"mappings":"AAAA,OAAO,SAASA,mBAAT,GAA+B;AACpC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,WAASC,SAAT,CAAmBC,EAAnB,EAAuB;AACrBH,IAAAA,OAAO,CAACI,IAAR,CAAaD,EAAb;AACA,QAAIE,aAAa,GAAGF,EAAE,EAAtB;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,aAAd;AACD;;AAED,SAAO;AACLH,IAAAA,SAAS,EAAEA,SADN;AAELI,IAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,UAAIC,eAAe,GAAGN,QAAtB;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACAM,MAAAA,eAAe,CAACC,OAAhB,CAAwB,UAAUC,OAAV,EAAmB;AACzCA,QAAAA,OAAO;AACR,OAFD;AAGD,KARI;AASLC,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,UAAIC,cAAc,GAAGX,OAArB;AACAA,MAAAA,OAAO,GAAG,EAAV;AACAW,MAAAA,cAAc,CAACH,OAAf,CAAuB,UAAUI,MAAV,EAAkB;AACvCV,QAAAA,SAAS,CAACU,MAAD,CAAT;AACD,OAFD;AAGD;AAfI,GAAP;AAiBD","sourcesContent":["export function createEffectWrapper() {\n  var effects = [];\n  var cleanups = [];\n\n  function runEffect(fn) {\n    effects.push(fn);\n    var effectCleanup = fn();\n    cleanups.push(effectCleanup);\n  }\n\n  return {\n    runEffect: runEffect,\n    cleanupEffects: function cleanupEffects() {\n      var currentCleanups = cleanups;\n      cleanups = [];\n      currentCleanups.forEach(function (cleanup) {\n        cleanup();\n      });\n    },\n    runEffects: function runEffects() {\n      var currentEffects = effects;\n      effects = [];\n      currentEffects.forEach(function (effect) {\n        runEffect(effect);\n      });\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}