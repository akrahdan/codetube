{"ast":null,"code":"import _defineProperty from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _base,_standard,_inline;import{styledOptions,system,variant}from'@codecademy/gamut-styles';import{variance}from'@codecademy/variance';import styled from'@emotion/styled';import{ButtonBase,ButtonSelectors}from'../ButtonBase/ButtonBase';var anchorVariants=variant({base:(_base={display:'inline-block',bg:'transparent',boxShadow:'none',border:'none',p:0,fontSize:'inherit',position:'relative',textColor:'primary',whiteSpace:'nowrap'},_defineProperty(_base,ButtonSelectors.OUTLINE,{content:\"''\",position:'absolute',inset:-4,borderRadius:'4px',border:2,borderColor:'primary',opacity:0,zIndex:0}),_defineProperty(_base,ButtonSelectors.HOVER,{textDecoration:'none',cursor:'pointer'}),_defineProperty(_base,ButtonSelectors.DISABLED,{cursor:'not-allowed',textDecoration:'none',color:'text-disabled'}),_defineProperty(_base,ButtonSelectors.OUTLINE_FOCUS_VISIBLE,{opacity:1}),_base),variants:{standard:(_standard={textColor:'primary'},_defineProperty(_standard,ButtonSelectors.HOVER,{textDecoration:'underline'}),_defineProperty(_standard,ButtonSelectors.FOCUS_VISIBLE,{textColor:'text'}),_standard),inline:(_inline={display:'inline',whiteSpace:'initial',textDecoration:'underline'},_defineProperty(_inline,ButtonSelectors.OUTLINE,{display:'none'}),_defineProperty(_inline,ButtonSelectors.FOCUS_VISIBLE,{outline:'currentColor auto 4px',textDecoration:'underline'}),_inline),interface:{textColor:'text',whiteSpace:'initial'}}});var anchorProps=variance.compose(system.layout,system.typography,system.space);export var AnchorBase=styled('a',styledOptions())(anchorVariants,anchorProps);export var Anchor=AnchorBase.withComponent(ButtonBase);Anchor.defaultProps={variant:'inline'};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Anchor/index.tsx"],"names":["styledOptions","system","variant","variance","styled","ButtonBase","ButtonSelectors","anchorVariants","base","display","bg","boxShadow","border","p","fontSize","position","textColor","whiteSpace","OUTLINE","content","inset","borderRadius","borderColor","opacity","zIndex","HOVER","textDecoration","cursor","DISABLED","color","OUTLINE_FOCUS_VISIBLE","variants","standard","FOCUS_VISIBLE","inline","outline","interface","anchorProps","compose","layout","typography","space","AnchorBase","Anchor","withComponent","defaultProps"],"mappings":"0LAAA,OAASA,aAAT,CAAwBC,MAAxB,CAAgCC,OAAhC,KAA+C,0BAA/C,CACA,OAAqBC,QAArB,KAAqC,sBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAGA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,0BAA5C,CAQA,GAAMC,CAAAA,cAAc,CAAGL,OAAO,CAAC,CAC7BM,IAAI,SACFC,OAAO,CAAE,cADP,CAEFC,EAAE,CAAE,aAFF,CAGFC,SAAS,CAAE,MAHT,CAIFC,MAAM,CAAE,MAJN,CAKFC,CAAC,CAAE,CALD,CAMFC,QAAQ,CAAE,SANR,CAOFC,QAAQ,CAAE,UAPR,CAQFC,SAAS,CAAE,SART,CASFC,UAAU,CAAE,QATV,wBAUDX,eAAe,CAACY,OAVf,CAUyB,CACzBC,OAAO,CAAE,IADgB,CAEzBJ,QAAQ,CAAE,UAFe,CAGzBK,KAAK,CAAE,CAAC,CAHiB,CAIzBC,YAAY,CAAE,KAJW,CAKzBT,MAAM,CAAE,CALiB,CAMzBU,WAAW,CAAE,SANY,CAOzBC,OAAO,CAAE,CAPgB,CAQzBC,MAAM,CAAE,CARiB,CAVzB,wBAoBDlB,eAAe,CAACmB,KApBf,CAoBuB,CACvBC,cAAc,CAAE,MADO,CAEvBC,MAAM,CAAE,SAFe,CApBvB,wBAwBDrB,eAAe,CAACsB,QAxBf,CAwB0B,CAC1BD,MAAM,CAAE,aADkB,CAE1BD,cAAc,CAAE,MAFU,CAG1BG,KAAK,CAAE,eAHmB,CAxB1B,wBA6BDvB,eAAe,CAACwB,qBA7Bf,CA6BuC,CACvCP,OAAO,CAAE,CAD8B,CA7BvC,QADyB,CAkC7BQ,QAAQ,CAAE,CACRC,QAAQ,aACNhB,SAAS,CAAE,SADL,4BAELV,eAAe,CAACmB,KAFX,CAEmB,CACvBC,cAAc,CAAE,WADO,CAFnB,4BAKLpB,eAAe,CAAC2B,aALX,CAK2B,CAC/BjB,SAAS,CAAE,MADoB,CAL3B,YADA,CAURkB,MAAM,WACJzB,OAAO,CAAE,QADL,CAEJQ,UAAU,CAAE,SAFR,CAGJS,cAAc,CAAE,WAHZ,0BAIHpB,eAAe,CAACY,OAJb,CAIuB,CACzBT,OAAO,CAAE,MADgB,CAJvB,0BAOHH,eAAe,CAAC2B,aAPb,CAO6B,CAC/BE,OAAO,CAAE,uBADsB,CAE/BT,cAAc,CAAE,WAFe,CAP7B,UAVE,CAsBRU,SAAS,CAAE,CACTpB,SAAS,CAAE,MADF,CAETC,UAAU,CAAE,SAFH,CAtBH,CAlCmB,CAAD,CAA9B,CA+DA,GAAMoB,CAAAA,WAAW,CAAGlC,QAAQ,CAACmC,OAAT,CAClBrC,MAAM,CAACsC,MADW,CAElBtC,MAAM,CAACuC,UAFW,CAGlBvC,MAAM,CAACwC,KAHW,CAApB,CAMA,MAAO,IAAMC,CAAAA,UAAU,CAAGtC,MAAM,CAAC,GAAD,CAAMJ,aAAa,EAAnB,CAAN,CACxBO,cADwB,CAExB8B,WAFwB,CAAnB,CAKP,MAAO,IAAMM,CAAAA,MAAM,CAAGD,UAAU,CAACE,aAAX,CAAyBvC,UAAzB,CAAf,CAEPsC,MAAM,CAACE,YAAP,CAAsB,CACpB3C,OAAO,CAAE,QADW,CAAtB","sourcesContent":["import { styledOptions, system, variant } from '@codecademy/gamut-styles';\nimport { StyleProps, variance } from '@codecademy/variance';\nimport styled from '@emotion/styled';\nimport { HTMLProps } from 'react';\n\nimport { ButtonBase, ButtonSelectors } from '../ButtonBase/ButtonBase';\n\nexport interface AnchorProps\n  extends StyleProps<typeof anchorProps>,\n    StyleProps<typeof anchorVariants> {\n  onClick?: HTMLProps<HTMLAnchorElement>['onClick'];\n}\n\nconst anchorVariants = variant({\n  base: {\n    display: 'inline-block',\n    bg: 'transparent',\n    boxShadow: 'none',\n    border: 'none',\n    p: 0,\n    fontSize: 'inherit',\n    position: 'relative',\n    textColor: 'primary',\n    whiteSpace: 'nowrap',\n    [ButtonSelectors.OUTLINE]: {\n      content: \"''\",\n      position: 'absolute',\n      inset: -4,\n      borderRadius: '4px',\n      border: 2,\n      borderColor: 'primary',\n      opacity: 0,\n      zIndex: 0,\n    },\n    [ButtonSelectors.HOVER]: {\n      textDecoration: 'none',\n      cursor: 'pointer',\n    },\n    [ButtonSelectors.DISABLED]: {\n      cursor: 'not-allowed',\n      textDecoration: 'none',\n      color: 'text-disabled',\n    },\n    [ButtonSelectors.OUTLINE_FOCUS_VISIBLE]: {\n      opacity: 1,\n    },\n  },\n  variants: {\n    standard: {\n      textColor: 'primary',\n      [ButtonSelectors.HOVER]: {\n        textDecoration: 'underline',\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        textColor: 'text',\n      },\n    },\n    inline: {\n      display: 'inline',\n      whiteSpace: 'initial',\n      textDecoration: 'underline',\n      [ButtonSelectors.OUTLINE]: {\n        display: 'none',\n      },\n      [ButtonSelectors.FOCUS_VISIBLE]: {\n        outline: 'currentColor auto 4px',\n        textDecoration: 'underline',\n      },\n    },\n    interface: {\n      textColor: 'text',\n      whiteSpace: 'initial',\n    },\n  },\n});\n\nconst anchorProps = variance.compose(\n  system.layout,\n  system.typography,\n  system.space\n);\n\nexport const AnchorBase = styled('a', styledOptions<'a'>())<AnchorProps>(\n  anchorVariants,\n  anchorProps\n);\n\nexport const Anchor = AnchorBase.withComponent(ButtonBase);\n\nAnchor.defaultProps = {\n  variant: 'inline',\n};\n"]},"metadata":{},"sourceType":"module"}