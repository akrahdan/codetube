{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/volume-slider/volume-slider.js\";\nimport React, { Component } from 'react'; // import { connect } from 'unistore/react'\n\nimport classNames from 'classnames'; // import * as actions from '../../../actions'\n\nimport { InteractionModes } from '../../constants';\nimport css from './volume-slider.module.scss';\nimport VolumeButton from '../volume-button';\nimport Slider from '../../slider/slider';\nimport { VOLUME_STEP } from '../../constants';\nimport Tooltip from '../../tooltip/tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class VolumeSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      const {\n        setVolume\n      } = this.props;\n      setVolume && setVolume(value);\n    };\n\n    this.handleChangeStart = value => {\n      const {\n        setPreviousVolume,\n        setVolume\n      } = this.props;\n      this.setState({\n        dragging: true\n      });\n      setVolume && setVolume(value);\n      setPreviousVolume && setPreviousVolume(value);\n    };\n\n    this.handleChangeEnd = () => {\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.setVolumeSliderActive = isActive => {\n      return () => this.props.setVolumeSliderActive(isActive);\n    };\n\n    this.state = {\n      dragging: false\n    };\n  }\n\n  render() {\n    const {\n      interactionMode,\n      volume,\n      volumeSliderActive,\n      muted\n    } = this.props;\n    const {\n      dragging\n    } = this.state;\n    const ariaLabel = `Use arrow keys to adjust volume`;\n    const isActive = volumeSliderActive || dragging || interactionMode === InteractionModes.TOUCH || interactionMode === InteractionModes.KEYBOARD;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.volumeSliderWrapper,\n      onMouseEnter: this.setVolumeSliderActive(true),\n      onMouseLeave: this.setVolumeSliderActive(false),\n      onFocus: this.setVolumeSliderActive(true),\n      onBlur: this.setVolumeSliderActive(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.sliderIcon,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          text: muted ? 'Unmute (m)' : 'Mute (m)',\n          children: /*#__PURE__*/_jsxDEV(VolumeButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames({\n          [css.active]: isActive\n        }, css.videoSlider),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames({\n            [css.active]: isActive\n          }, css.wrapper),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames(css.sliderWrapper),\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              ariaLabel: ariaLabel,\n              step: VOLUME_STEP,\n              barClass: css.barClass,\n              className: css.slider,\n              value: volume,\n              onChange: this.handleChange,\n              onChangeStart: this.handleChangeStart,\n              onChangeEnd: this.handleChangeEnd,\n              fillClass: css.fill,\n              hovering: true,\n              padded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default VolumeSlider; // export default connect(\n//   state => ({\n//     volume: state.volume,\n//     volumeSliderActive: state.volumeSliderActive,\n//     interactionMode: state.interactionMode,\n//     muted: state.muted,\n//   }),\n//   store => ({\n//     setVolume: actions.setVolume,\n//     setPreviousVolume: actions.setPreviousVolume,\n//     setVolumeSliderActive: actions.setVolumeSliderActive,\n//   })\n// )(VolumeSlider)","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/CoursePlayer/control-bar/volume-slider/volume-slider.js"],"names":["React","Component","classNames","InteractionModes","css","VolumeButton","Slider","VOLUME_STEP","Tooltip","VolumeSlider","constructor","props","handleChange","value","setVolume","handleChangeStart","setPreviousVolume","setState","dragging","handleChangeEnd","setVolumeSliderActive","isActive","state","render","interactionMode","volume","volumeSliderActive","muted","ariaLabel","TOUCH","KEYBOARD","volumeSliderWrapper","sliderIcon","active","videoSlider","wrapper","sliderWrapper","barClass","slider","fill"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import { connect } from 'unistore/react'\nimport classNames from 'classnames'\n\n// import * as actions from '../../../actions'\nimport { InteractionModes } from '../../constants'\n\nimport css from './volume-slider.module.scss'\nimport VolumeButton from '../volume-button'\nimport Slider from '../../slider/slider'\nimport { VOLUME_STEP } from '../../constants'\nimport Tooltip from '../../tooltip/tooltip'\n\nexport class VolumeSlider extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dragging: false,\n    }\n  }\n\n  handleChange = value => {\n    const { setVolume } = this.props\n\n    setVolume && setVolume(value)\n  }\n\n  handleChangeStart = value => {\n    const { setPreviousVolume, setVolume } = this.props\n\n    this.setState({ dragging: true })\n\n    setVolume && setVolume(value)\n\n    setPreviousVolume && setPreviousVolume(value)\n  }\n\n  handleChangeEnd = () => {\n    this.setState({ dragging: false })\n  }\n\n  setVolumeSliderActive = isActive => {\n    return () => this.props.setVolumeSliderActive(isActive)\n  }\n\n  render() {\n    const { interactionMode, volume, volumeSliderActive, muted } = this.props\n    const { dragging } = this.state\n    const ariaLabel = `Use arrow keys to adjust volume`\n\n    const isActive =\n      volumeSliderActive ||\n      dragging ||\n      (interactionMode === InteractionModes.TOUCH || interactionMode === InteractionModes.KEYBOARD)\n\n    return (\n      <div\n        className={css.volumeSliderWrapper}\n        onMouseEnter={this.setVolumeSliderActive(true)}\n        onMouseLeave={this.setVolumeSliderActive(false)}\n        onFocus={this.setVolumeSliderActive(true)}\n        onBlur={this.setVolumeSliderActive(false)}\n      >\n        <div className={css.sliderIcon}>\n          <Tooltip text={muted ? 'Unmute (m)' : 'Mute (m)'}>\n            <VolumeButton />\n          </Tooltip>\n        </div>\n        <div className={classNames({ [css.active]: isActive }, css.videoSlider)}>\n          <div className={classNames({ [css.active]: isActive }, css.wrapper)}>\n            <div className={classNames(css.sliderWrapper)}>\n              <Slider\n                ariaLabel={ariaLabel}\n                step={VOLUME_STEP}\n                barClass={css.barClass}\n                className={css.slider}\n                value={volume}\n                onChange={this.handleChange}\n                onChangeStart={this.handleChangeStart}\n                onChangeEnd={this.handleChangeEnd}\n                fillClass={css.fill}\n                hovering\n                padded\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default VolumeSlider;\n// export default connect(\n//   state => ({\n//     volume: state.volume,\n//     volumeSliderActive: state.volumeSliderActive,\n//     interactionMode: state.interactionMode,\n//     muted: state.muted,\n//   }),\n//   store => ({\n//     setVolume: actions.setVolume,\n//     setPreviousVolume: actions.setPreviousVolume,\n//     setVolumeSliderActive: actions.setVolumeSliderActive,\n//   })\n// )(VolumeSlider)\n"]},"metadata":{},"sourceType":"module"}