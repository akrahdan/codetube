{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStyleElementAndClass = void 0;\n/**\r\n * Register of created styles link their associated CSS style elements.\r\n */\n\nconst createdStyles = new Set();\n/**\r\n * Registers a class name for emojis, creating a style element for it if necessary.\r\n *\r\n * @param className   Potentially new CSS class name.\r\n */\n\nexports.createStyleElementAndClass = className => {\n  if (createdStyles.has(className)) {\n    return;\n  }\n\n  createdStyles.add(className);\n  const element = document.createElement(\"style\");\n  element.type = \"text/css\";\n  element.appendChild(document.createTextNode(`\n        .${className} {\n            cursor: default;\n            margin-left: -1em;\n            margin-top: -1em;\n            position: fixed;\n            user-select: none;\n            z-index: 2147483647;\n        }\n    `));\n  document.head.appendChild(element);\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/emojisplosion/src/styles.js"],"names":["Object","defineProperty","exports","value","createStyleElementAndClass","createdStyles","Set","className","has","add","element","document","createElement","type","appendChild","createTextNode","head"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,0BAAR,GAAqC,KAAK,CAA1C;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACE,0BAAR,GAAsCG,SAAD,IAAe;AAChD,MAAIF,aAAa,CAACG,GAAd,CAAkBD,SAAlB,CAAJ,EAAkC;AAC9B;AACH;;AACDF,EAAAA,aAAa,CAACI,GAAd,CAAkBF,SAAlB;AACA,QAAMG,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACAF,EAAAA,OAAO,CAACG,IAAR,GAAe,UAAf;AACAH,EAAAA,OAAO,CAACI,WAAR,CAAoBH,QAAQ,CAACI,cAAT,CAAyB;AACjD,WAAWR,SAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATwB,CAApB;AAUAI,EAAAA,QAAQ,CAACK,IAAT,CAAcF,WAAd,CAA0BJ,OAA1B;AACH,CAlBD","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createStyleElementAndClass = void 0;\r\n/**\r\n * Register of created styles link their associated CSS style elements.\r\n */\r\nconst createdStyles = new Set();\r\n/**\r\n * Registers a class name for emojis, creating a style element for it if necessary.\r\n *\r\n * @param className   Potentially new CSS class name.\r\n */\r\nexports.createStyleElementAndClass = (className) => {\r\n    if (createdStyles.has(className)) {\r\n        return;\r\n    }\r\n    createdStyles.add(className);\r\n    const element = document.createElement(\"style\");\r\n    element.type = \"text/css\";\r\n    element.appendChild(document.createTextNode(`\r\n        .${className} {\r\n            cursor: default;\r\n            margin-left: -1em;\r\n            margin-top: -1em;\r\n            position: fixed;\r\n            user-select: none;\r\n            z-index: 2147483647;\r\n        }\r\n    `));\r\n    document.head.appendChild(element);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}