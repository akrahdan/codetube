{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/overrides/NotificationList/index.tsx\";\nimport { Background } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { EmptyNotification } from './EmptyNotification';\nimport { NotificationItem } from './NotificationItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnstyledUnorderedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`.withComponent(Background);\n_c = UnstyledUnorderedList;\nexport const NotificationList = ({\n  notifications,\n  onNotificationClick,\n  onDismiss,\n  headerElementId\n}) => {\n  return isEmpty(notifications) ? /*#__PURE__*/_jsxDEV(EmptyNotification, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(UnstyledUnorderedList, {\n    bg: \"white\",\n    \"aria-labelledby\": headerElementId,\n    \"aria-live\": \"polite\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n      notification: notification,\n      handleClick: () => onNotificationClick === null || onNotificationClick === void 0 ? void 0 : onNotificationClick(notification),\n      handleDismiss: () => onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(notification)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c2 = NotificationList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UnstyledUnorderedList\");\n$RefreshReg$(_c2, \"NotificationList\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/NotificationList/index.tsx"],"names":["Background","styled","isEmpty","React","EmptyNotification","NotificationItem","UnstyledUnorderedList","ul","withComponent","NotificationList","notifications","onNotificationClick","onDismiss","headerElementId","map","notification","id"],"mappings":";AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAUA,MAAMC,qBAAqB,GAAGL,MAAM,CAACM,EAAG;AACxC;AACA;AACA;AACA,CAJ8B,CAI5BC,aAJ4B,CAIdR,UAJc,CAA9B;KAAMM,qB;AAMN,OAAO,MAAMG,gBAAiD,GAAG,CAAC;AAChEC,EAAAA,aADgE;AAEhEC,EAAAA,mBAFgE;AAGhEC,EAAAA,SAHgE;AAIhEC,EAAAA;AAJgE,CAAD,KAK3D;AACJ,SAAOX,OAAO,CAACQ,aAAD,CAAP,gBACL,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,qBAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,uBAAiBG,eAFnB;AAGE,iBAAU,QAHZ;AAAA,cAKGH,aAAa,CAACI,GAAd,CAAmBC,YAAD,iBACjB,QAAC,gBAAD;AAEE,MAAA,YAAY,EAAEA,YAFhB;AAGE,MAAA,WAAW,EAAE,MAAMJ,mBAAN,aAAMA,mBAAN,uBAAMA,mBAAmB,CAAGI,YAAH,CAHxC;AAIE,MAAA,aAAa,EAAE,MAAMH,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAGG,YAAH;AAJhC,OACOA,YAAY,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,YADD;AALH;AAAA;AAAA;AAAA;AAAA,UAHF;AAkBD,CAxBM;MAAMP,gB","sourcesContent":["import { Background } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\n\nimport { EmptyNotification } from './EmptyNotification';\nimport { NotificationItem } from './NotificationItem';\nimport { Notification } from './typings';\n\nexport type NotificationListProps = {\n  onDismiss?: (notification: Notification) => void;\n  notifications: Notification[];\n  onNotificationClick?: (notification: Notification) => void;\n  headerElementId?: string; // Used for aria-labelledby for the list.\n};\n\nconst UnstyledUnorderedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`.withComponent(Background);\n\nexport const NotificationList: React.FC<NotificationListProps> = ({\n  notifications,\n  onNotificationClick,\n  onDismiss,\n  headerElementId,\n}) => {\n  return isEmpty(notifications) ? (\n    <EmptyNotification />\n  ) : (\n    <UnstyledUnorderedList\n      bg=\"white\"\n      aria-labelledby={headerElementId}\n      aria-live=\"polite\"\n    >\n      {notifications.map((notification: Notification) => (\n        <NotificationItem\n          key={notification.id}\n          notification={notification}\n          handleClick={() => onNotificationClick?.(notification)}\n          handleDismiss={() => onDismiss?.(notification)}\n        />\n      ))}\n    </UnstyledUnorderedList>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}