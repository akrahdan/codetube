{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar _a;\n\nexports.__esModule = true;\nexports.togglePlayPause = exports.syncSettings = exports.setMediaType = exports.setSupportedResolutions = exports.setPreferredResolutions = exports.setCurrentResolution = exports.setPlaying = exports.setLoading = exports.setAutoplay = exports.setContainerSize = exports.setOverlay = exports.setClipProgress = exports.setBuffering = exports.setBufferedTime = exports.seek = exports.setFullscreen = exports.toggleFullscreen = exports.setInteractionMode = exports.hideUI = exports.showUI = exports.registerPlayer = exports.seekStart = exports.seekEnd = exports.fastRewind = exports.fastForward = exports.ready = exports.setTime = exports.setDuration = exports.toggleMute = exports.setPreviousVolume = exports.setVolume = exports.setVolumeSliderActive = exports.setActiveMenu = exports.setPlaybackSpeed = exports.pause = exports.play = exports.selectPlayer = exports.playerSlice = exports.initialState = void 0;\n\nvar toolkit_1 = require(\"@reduxjs/toolkit\");\n\nvar clamp_1 = require(\"portal/scenes/CoursePlayer/utilities/clamp\");\n\nvar constants_1 = require(\"portal/scenes/CoursePlayer/constants\");\n\nvar sync_clip_progress_1 = require(\"portal/scenes/CoursePlayer/utilities/sync-clip-progress\");\n\nvar aspect_ratio_1 = require(\"portal/scenes/CoursePlayer/utilities/aspect-ratio\");\n\nvar find_breakpoint_1 = require(\"portal/scenes/CoursePlayer/utilities/find-breakpoint\");\n\nvar video_format_support_1 = require(\"portal/scenes/CoursePlayer/utilities/video-format-support\");\n\nvar validModes = Object.values(constants_1.InteractionModes);\nvar mediaType = video_format_support_1.selectVideoFormat();\nconsole.log(\"VideoFormat: \", constants_1.DefaultResolutions[mediaType][0]);\n\nfunction includes(modes, mode) {\n  return !!~modes.indexOf(mode);\n}\n\nexports.initialState = __assign(__assign({\n  playing: false,\n  playbackSpeed: 1.0,\n  activeMenu: null,\n  volumeSliderActive: false,\n  muted: false,\n  previousVolume: null,\n  time: 0,\n  duration: 0,\n  bufferedTime: 0,\n  playheadStart: 0,\n  overlay: null,\n  videoPlayer: null,\n  seekedEvent: null,\n  seekingEvent: null,\n  clipProgress: 0,\n  buffering: false,\n  containerSize: null,\n  breakpoint: null,\n  playerSize: null,\n  layout: null,\n  loading: false,\n  userAutoplaySetting: false\n}, constants_1.Defaults), {\n  currentResolution: constants_1.DefaultResolutions[mediaType][0],\n  supportedResolutions: null,\n  mediaType: mediaType,\n  settings: null\n});\nexports.playerSlice = toolkit_1.createSlice({\n  name: \"player\",\n  initialState: exports.initialState,\n  reducers: {\n    play: function (state, action) {\n      var icon = \"PLAY\";\n\n      if (action.payload) {\n        state.overlay = {\n          icon: icon,\n          key: Math.random(),\n          fade: true\n        };\n        console.log(\"Play: \", state.overlay);\n      }\n\n      state.playing = true;\n      state.playheadStart = state.time;\n    },\n    pause: function (state, action) {\n      var icon = \"PAUSE\";\n\n      if (action.payload) {\n        state.overlay = {\n          icon: icon,\n          key: Math.random(),\n          fade: true\n        };\n        console.log(\"Pause: \", state.overlay);\n      }\n\n      state.playing = false;\n      state.playheadStart = state.time;\n    },\n    setPlaybackSpeed: function (state, action) {\n      state.playbackSpeed = action.payload;\n    },\n    setPlaying: function (state, action) {\n      state.playing = action.payload;\n    },\n    syncSettings: function (state, action) {\n      state.settings = action.payload;\n    },\n    setMediaType: function (state, action) {\n      state.mediaType = action.payload;\n    },\n    setPreferredResolutions: function (state, action) {\n      state.preferredResolutions = action.payload;\n    },\n    setCurrentResolution: function (state, action) {\n      state.currentResolution = action.payload;\n    },\n    setSupportedResolutions: function (state, action) {\n      state.supportedResolutions = action.payload;\n    },\n    setActiveMenu: function (state, action) {\n      state.activeMenu = action.payload;\n    },\n    setVolumeSliderActive: function (state, action) {\n      state.volumeSliderActive = action.payload;\n    },\n    setVolume: function (state, action) {\n      var clamped = clamp_1.clamp(action.payload, 0, 1);\n      var muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setPreviousVolume: function (state, action) {\n      var clamped = clamp_1.clamp(action.payload, 0, 1);\n      var muted = clamped === 0;\n      state.volume = clamped;\n      state.muted = muted;\n    },\n    setInteractionMode: function (state, action) {\n      if (!includes(validModes, action.payload)) {\n        throw new Error(action.payload + \" not in valid list: \" + validModes.join());\n      }\n\n      state.interactionMode = action.payload;\n    },\n    showUI: function (state, action) {\n      state.visible = true;\n    },\n    toggleFullscreen: function (state, action) {\n      state.fullscreenState = state.fullscreenState === constants_1.FullscreenState.FULLSCREEN ? constants_1.FullscreenState.NORMAL : constants_1.FullscreenState.FULLSCREEN;\n    },\n    hideUI: function (state, action) {\n      state.visible = false;\n    },\n    setDuration: function (state, action) {\n      state.duration = action.payload;\n    },\n    setTime: function (state, action) {\n      state.time = action.payload;\n    },\n    setContainerSize: function (state, action) {\n      var containerSize = action.payload;\n      console.log(\"Container: \", containerSize);\n\n      if (containerSize.width === 0 && containerSize.height === 0 && state.containerSize) {\n        containerSize = state.containerSize;\n      }\n\n      var breakpoint = find_breakpoint_1.findBreakpoint(containerSize);\n      state.breakpoint = breakpoint;\n      state.playerSize = aspect_ratio_1.calculateAspectRatio(containerSize);\n      state.containerSize = containerSize;\n      state.layout = breakpoint.height + \"p\";\n    },\n    setBufferedTime: function (state, action) {\n      state.bufferedTime = action.payload;\n    },\n    ready: function (state, action) {\n      state.playheadStart = state.time;\n      state.duration = action.payload;\n    },\n    registerPlayer: function (state, action) {\n      state.seekedEvent = new Event(\"ps-seeked\");\n      state.seekingEvent = new Event(\"ps-seeking\");\n      state.videoPlayer = action.payload;\n    },\n    seekStart: function (state, action) {\n      var seekingEvent = state.seekingEvent,\n          videoPlayer = state.videoPlayer;\n      videoPlayer && videoPlayer.dispatchEvent(seekingEvent);\n    },\n    seekEnd: function (state, action) {\n      var seekedEvent = state.seekedEvent,\n          videoPlayer = state.videoPlayer;\n      videoPlayer && videoPlayer.dispatchEvent(seekedEvent);\n    },\n    seek: function (state, action) {\n      state.playheadStart = action.payload * state.duration;\n    },\n    setOverlay: function (state, action) {\n      state.overlay = action.payload;\n    },\n    setBuffering: function (state, action) {\n      state.buffering = action.payload;\n    },\n    setLoading: function (state, action) {\n      state.loading = action.payload;\n    },\n    setAutoplay: function (state, action) {\n      state.userAutoplaySetting = action.payload;\n    },\n    setClipProgress: function (state, action) {\n      state.clipProgress = sync_clip_progress_1.buildClipProgress(state.clipProgress, action.payload, state.duration);\n    },\n    setFullscreen: function (state, action) {\n      var validFullscreenStates = Object.values(constants_1.FullscreenState);\n\n      if (!includes(validFullscreenStates, action.payload)) {\n        throw new Error(action.payload + \" not in valid list: \" + validFullscreenStates.join());\n      }\n\n      state.fullscreenState = action.payload;\n    },\n    fastForward: function (state, action) {\n      var time = state.time,\n          duration = state.duration;\n      var forwardTime = time + 10;\n      var newTime = forwardTime > duration ? duration : forwardTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"FWD\",\n        key: Math.random(),\n        fade: true\n      };\n    },\n    fastRewind: function (state, action) {\n      var time = state.time,\n          duration = state.duration;\n      var startTime = 0;\n      var rewindTime = time - 10;\n      var newTime = rewindTime < startTime ? startTime : rewindTime;\n      state.playheadStart = newTime;\n      state.time = newTime;\n      state.overlay = {\n        icon: \"BACK\",\n        key: Math.random(),\n        fade: true\n      };\n    },\n    toggleMute: function (state, action) {\n      if (state.muted) {\n        var clamped = state.previousVolume || constants_1.Defaults.volume;\n        var muted = clamped === 0;\n        state.volume = clamped;\n        state.muted = muted;\n      } else {\n        state.muted = true;\n        state.previousVolume = state.volume;\n        state.volume = 0;\n      }\n    }\n  }\n});\n\nexports.selectPlayer = function (state) {\n  return state.player;\n};\n\nexports.play = (_a = exports.playerSlice.actions, _a.play), exports.pause = _a.pause, exports.setPlaybackSpeed = _a.setPlaybackSpeed, exports.setActiveMenu = _a.setActiveMenu, exports.setVolumeSliderActive = _a.setVolumeSliderActive, exports.setVolume = _a.setVolume, exports.setPreviousVolume = _a.setPreviousVolume, exports.toggleMute = _a.toggleMute, exports.setDuration = _a.setDuration, exports.setTime = _a.setTime, exports.ready = _a.ready, exports.fastForward = _a.fastForward, exports.fastRewind = _a.fastRewind, exports.seekEnd = _a.seekEnd, exports.seekStart = _a.seekStart, exports.registerPlayer = _a.registerPlayer, exports.showUI = _a.showUI, exports.hideUI = _a.hideUI, exports.setInteractionMode = _a.setInteractionMode, exports.toggleFullscreen = _a.toggleFullscreen, exports.setFullscreen = _a.setFullscreen, exports.seek = _a.seek, exports.setBufferedTime = _a.setBufferedTime, exports.setBuffering = _a.setBuffering, exports.setClipProgress = _a.setClipProgress, exports.setOverlay = _a.setOverlay, exports.setContainerSize = _a.setContainerSize, exports.setAutoplay = _a.setAutoplay, exports.setLoading = _a.setLoading, exports.setPlaying = _a.setPlaying, exports.setCurrentResolution = _a.setCurrentResolution, exports.setPreferredResolutions = _a.setPreferredResolutions, exports.setSupportedResolutions = _a.setSupportedResolutions, exports.setMediaType = _a.setMediaType, exports.syncSettings = _a.syncSettings;\n\nexports.togglePlayPause = function () {\n  return function (dispatch, getState) {\n    var state = getState().player;\n\n    if (state.playing) {\n      dispatch(exports.pause());\n    } else {\n      dispatch(exports.play());\n    }\n  };\n};\n\nexports[\"default\"] = exports.playerSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/player/dist/playerSlice.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","_a","exports","__esModule","togglePlayPause","syncSettings","setMediaType","setSupportedResolutions","setPreferredResolutions","setCurrentResolution","setPlaying","setLoading","setAutoplay","setContainerSize","setOverlay","setClipProgress","setBuffering","setBufferedTime","seek","setFullscreen","toggleFullscreen","setInteractionMode","hideUI","showUI","registerPlayer","seekStart","seekEnd","fastRewind","fastForward","ready","setTime","setDuration","toggleMute","setPreviousVolume","setVolume","setVolumeSliderActive","setActiveMenu","setPlaybackSpeed","pause","play","selectPlayer","playerSlice","initialState","toolkit_1","require","clamp_1","constants_1","sync_clip_progress_1","aspect_ratio_1","find_breakpoint_1","video_format_support_1","validModes","values","InteractionModes","mediaType","selectVideoFormat","console","log","DefaultResolutions","includes","modes","mode","indexOf","playing","playbackSpeed","activeMenu","volumeSliderActive","muted","previousVolume","time","duration","bufferedTime","playheadStart","overlay","videoPlayer","seekedEvent","seekingEvent","clipProgress","buffering","containerSize","breakpoint","playerSize","layout","loading","userAutoplaySetting","Defaults","currentResolution","supportedResolutions","settings","createSlice","name","reducers","state","action","icon","payload","key","Math","random","fade","preferredResolutions","clamped","clamp","volume","Error","join","interactionMode","visible","fullscreenState","FullscreenState","FULLSCREEN","NORMAL","width","height","findBreakpoint","calculateAspectRatio","Event","dispatchEvent","buildClipProgress","validFullscreenStates","forwardTime","newTime","startTime","rewindTime","player","actions","dispatch","getState","reducer"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a;\nexports.__esModule = true;\nexports.togglePlayPause = exports.syncSettings = exports.setMediaType = exports.setSupportedResolutions = exports.setPreferredResolutions = exports.setCurrentResolution = exports.setPlaying = exports.setLoading = exports.setAutoplay = exports.setContainerSize = exports.setOverlay = exports.setClipProgress = exports.setBuffering = exports.setBufferedTime = exports.seek = exports.setFullscreen = exports.toggleFullscreen = exports.setInteractionMode = exports.hideUI = exports.showUI = exports.registerPlayer = exports.seekStart = exports.seekEnd = exports.fastRewind = exports.fastForward = exports.ready = exports.setTime = exports.setDuration = exports.toggleMute = exports.setPreviousVolume = exports.setVolume = exports.setVolumeSliderActive = exports.setActiveMenu = exports.setPlaybackSpeed = exports.pause = exports.play = exports.selectPlayer = exports.playerSlice = exports.initialState = void 0;\nvar toolkit_1 = require(\"@reduxjs/toolkit\");\nvar clamp_1 = require(\"portal/scenes/CoursePlayer/utilities/clamp\");\nvar constants_1 = require(\"portal/scenes/CoursePlayer/constants\");\nvar sync_clip_progress_1 = require(\"portal/scenes/CoursePlayer/utilities/sync-clip-progress\");\nvar aspect_ratio_1 = require(\"portal/scenes/CoursePlayer/utilities/aspect-ratio\");\nvar find_breakpoint_1 = require(\"portal/scenes/CoursePlayer/utilities/find-breakpoint\");\nvar video_format_support_1 = require(\"portal/scenes/CoursePlayer/utilities/video-format-support\");\nvar validModes = Object.values(constants_1.InteractionModes);\nvar mediaType = video_format_support_1.selectVideoFormat();\nconsole.log(\"VideoFormat: \", constants_1.DefaultResolutions[mediaType][0]);\nfunction includes(modes, mode) {\n    return !!~modes.indexOf(mode);\n}\nexports.initialState = __assign(__assign({ playing: false, playbackSpeed: 1.0, activeMenu: null, volumeSliderActive: false, muted: false, previousVolume: null, time: 0, duration: 0, bufferedTime: 0, playheadStart: 0, overlay: null, videoPlayer: null, seekedEvent: null, seekingEvent: null, clipProgress: 0, buffering: false, containerSize: null, breakpoint: null, playerSize: null, layout: null, loading: false, userAutoplaySetting: false }, constants_1.Defaults), { currentResolution: constants_1.DefaultResolutions[mediaType][0], supportedResolutions: null, mediaType: mediaType, settings: null });\nexports.playerSlice = toolkit_1.createSlice({\n    name: \"player\",\n    initialState: exports.initialState,\n    reducers: {\n        play: function (state, action) {\n            var icon = \"PLAY\";\n            if (action.payload) {\n                state.overlay = { icon: icon, key: Math.random(), fade: true };\n                console.log(\"Play: \", state.overlay);\n            }\n            state.playing = true;\n            state.playheadStart = state.time;\n        },\n        pause: function (state, action) {\n            var icon = \"PAUSE\";\n            if (action.payload) {\n                state.overlay = { icon: icon, key: Math.random(), fade: true };\n                console.log(\"Pause: \", state.overlay);\n            }\n            state.playing = false;\n            state.playheadStart = state.time;\n        },\n        setPlaybackSpeed: function (state, action) {\n            state.playbackSpeed = action.payload;\n        },\n        setPlaying: function (state, action) {\n            state.playing = action.payload;\n        },\n        syncSettings: function (state, action) {\n            state.settings = action.payload;\n        },\n        setMediaType: function (state, action) {\n            state.mediaType = action.payload;\n        },\n        setPreferredResolutions: function (state, action) {\n            state.preferredResolutions = action.payload;\n        },\n        setCurrentResolution: function (state, action) {\n            state.currentResolution = action.payload;\n        },\n        setSupportedResolutions: function (state, action) {\n            state.supportedResolutions = action.payload;\n        },\n        setActiveMenu: function (state, action) {\n            state.activeMenu = action.payload;\n        },\n        setVolumeSliderActive: function (state, action) {\n            state.volumeSliderActive = action.payload;\n        },\n        setVolume: function (state, action) {\n            var clamped = clamp_1.clamp(action.payload, 0, 1);\n            var muted = clamped === 0;\n            state.volume = clamped;\n            state.muted = muted;\n        },\n        setPreviousVolume: function (state, action) {\n            var clamped = clamp_1.clamp(action.payload, 0, 1);\n            var muted = clamped === 0;\n            state.volume = clamped;\n            state.muted = muted;\n        },\n        setInteractionMode: function (state, action) {\n            if (!includes(validModes, action.payload)) {\n                throw new Error(action.payload + \" not in valid list: \" + validModes.join());\n            }\n            state.interactionMode = action.payload;\n        },\n        showUI: function (state, action) {\n            state.visible = true;\n        },\n        toggleFullscreen: function (state, action) {\n            state.fullscreenState =\n                state.fullscreenState === constants_1.FullscreenState.FULLSCREEN\n                    ? constants_1.FullscreenState.NORMAL\n                    : constants_1.FullscreenState.FULLSCREEN;\n        },\n        hideUI: function (state, action) {\n            state.visible = false;\n        },\n        setDuration: function (state, action) {\n            state.duration = action.payload;\n        },\n        setTime: function (state, action) {\n            state.time = action.payload;\n        },\n        setContainerSize: function (state, action) {\n            var containerSize = action.payload;\n            console.log(\"Container: \", containerSize);\n            if (containerSize.width === 0 &&\n                containerSize.height === 0 &&\n                state.containerSize) {\n                containerSize = state.containerSize;\n            }\n            var breakpoint = find_breakpoint_1.findBreakpoint(containerSize);\n            state.breakpoint = breakpoint;\n            state.playerSize = aspect_ratio_1.calculateAspectRatio(containerSize);\n            state.containerSize = containerSize;\n            state.layout = breakpoint.height + \"p\";\n        },\n        setBufferedTime: function (state, action) {\n            state.bufferedTime = action.payload;\n        },\n        ready: function (state, action) {\n            state.playheadStart = state.time;\n            state.duration = action.payload;\n        },\n        registerPlayer: function (state, action) {\n            state.seekedEvent = new Event(\"ps-seeked\");\n            state.seekingEvent = new Event(\"ps-seeking\");\n            state.videoPlayer = action.payload;\n        },\n        seekStart: function (state, action) {\n            var seekingEvent = state.seekingEvent, videoPlayer = state.videoPlayer;\n            videoPlayer && videoPlayer.dispatchEvent(seekingEvent);\n        },\n        seekEnd: function (state, action) {\n            var seekedEvent = state.seekedEvent, videoPlayer = state.videoPlayer;\n            videoPlayer && videoPlayer.dispatchEvent(seekedEvent);\n        },\n        seek: function (state, action) {\n            state.playheadStart = action.payload * state.duration;\n        },\n        setOverlay: function (state, action) {\n            state.overlay = action.payload;\n        },\n        setBuffering: function (state, action) {\n            state.buffering = action.payload;\n        },\n        setLoading: function (state, action) {\n            state.loading = action.payload;\n        },\n        setAutoplay: function (state, action) {\n            state.userAutoplaySetting = action.payload;\n        },\n        setClipProgress: function (state, action) {\n            state.clipProgress = sync_clip_progress_1.buildClipProgress(state.clipProgress, action.payload, state.duration);\n        },\n        setFullscreen: function (state, action) {\n            var validFullscreenStates = Object.values(constants_1.FullscreenState);\n            if (!includes(validFullscreenStates, action.payload)) {\n                throw new Error(action.payload + \" not in valid list: \" + validFullscreenStates.join());\n            }\n            state.fullscreenState = action.payload;\n        },\n        fastForward: function (state, action) {\n            var time = state.time, duration = state.duration;\n            var forwardTime = time + 10;\n            var newTime = forwardTime > duration ? duration : forwardTime;\n            state.playheadStart = newTime;\n            state.time = newTime;\n            state.overlay = {\n                icon: \"FWD\",\n                key: Math.random(),\n                fade: true\n            };\n        },\n        fastRewind: function (state, action) {\n            var time = state.time, duration = state.duration;\n            var startTime = 0;\n            var rewindTime = time - 10;\n            var newTime = rewindTime < startTime ? startTime : rewindTime;\n            state.playheadStart = newTime;\n            state.time = newTime;\n            state.overlay = {\n                icon: \"BACK\",\n                key: Math.random(),\n                fade: true\n            };\n        },\n        toggleMute: function (state, action) {\n            if (state.muted) {\n                var clamped = state.previousVolume || constants_1.Defaults.volume;\n                var muted = clamped === 0;\n                state.volume = clamped;\n                state.muted = muted;\n            }\n            else {\n                state.muted = true;\n                state.previousVolume = state.volume;\n                state.volume = 0;\n            }\n        }\n    }\n});\nexports.selectPlayer = function (state) { return state.player; };\nexports.play = (_a = exports.playerSlice.actions, _a.play), exports.pause = _a.pause, exports.setPlaybackSpeed = _a.setPlaybackSpeed, exports.setActiveMenu = _a.setActiveMenu, exports.setVolumeSliderActive = _a.setVolumeSliderActive, exports.setVolume = _a.setVolume, exports.setPreviousVolume = _a.setPreviousVolume, exports.toggleMute = _a.toggleMute, exports.setDuration = _a.setDuration, exports.setTime = _a.setTime, exports.ready = _a.ready, exports.fastForward = _a.fastForward, exports.fastRewind = _a.fastRewind, exports.seekEnd = _a.seekEnd, exports.seekStart = _a.seekStart, exports.registerPlayer = _a.registerPlayer, exports.showUI = _a.showUI, exports.hideUI = _a.hideUI, exports.setInteractionMode = _a.setInteractionMode, exports.toggleFullscreen = _a.toggleFullscreen, exports.setFullscreen = _a.setFullscreen, exports.seek = _a.seek, exports.setBufferedTime = _a.setBufferedTime, exports.setBuffering = _a.setBuffering, exports.setClipProgress = _a.setClipProgress, exports.setOverlay = _a.setOverlay, exports.setContainerSize = _a.setContainerSize, exports.setAutoplay = _a.setAutoplay, exports.setLoading = _a.setLoading, exports.setPlaying = _a.setPlaying, exports.setCurrentResolution = _a.setCurrentResolution, exports.setPreferredResolutions = _a.setPreferredResolutions, exports.setSupportedResolutions = _a.setSupportedResolutions, exports.setMediaType = _a.setMediaType, exports.syncSettings = _a.syncSettings;\nexports.togglePlayPause = function () { return function (dispatch, getState) {\n    var state = getState().player;\n    if (state.playing) {\n        dispatch(exports.pause());\n    }\n    else {\n        dispatch(exports.play());\n    }\n}; };\nexports[\"default\"] = exports.playerSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}