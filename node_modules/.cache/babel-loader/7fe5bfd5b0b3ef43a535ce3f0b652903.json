{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Banner/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { Background, system } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useMemo } from 'react';\nimport { Box } from '../Box';\nimport { IconButton, TextButton } from '../Button';\nimport { Markdown } from '../Markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BannerContainer = styled(Background)(system.css({\n  width: '100%',\n  p: 4,\n  display: 'grid',\n  gridTemplateColumns: '2rem minmax(0, 1fr) 2rem',\n  gridTemplateAreas: \"'empty content close'\",\n  columnGap: 8,\n  alignItems: 'center',\n  textAlign: 'center'\n}));\nconst BannerMarkdown = styled(Markdown)(system.css({\n  fontSize: 'inherit'\n}));\n\nconst bindBannerAnchor = onCtaClick => ({\n  allowedAttributes: ['href', 'target'],\n  component: TextButton,\n  processNode: (node, props) => /*#__PURE__*/_jsxDEV(TextButton, { ...props,\n    onClick: () => {\n      var _props$onClick;\n\n      onCtaClick === null || onCtaClick === void 0 ? void 0 : onCtaClick();\n      props === null || props === void 0 ? void 0 : (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props);\n    },\n    mx: 4,\n    size: \"small\",\n    target: \"_BLANK\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n});\n\nexport const Banner = ({\n  children,\n  variant = 'navy',\n  onCtaClick,\n  onClose,\n  ...rest\n}) => {\n  _s();\n\n  const overrides = useMemo(() => ({\n    a: bindBannerAnchor(onCtaClick)\n  }), [onCtaClick]);\n  return /*#__PURE__*/_jsxDEV(BannerContainer, { ...rest,\n    bg: variant,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      gridArea: \"content\",\n      fontSize: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(BannerMarkdown, {\n        overrides: overrides,\n        text: children,\n        skipDefaultOverrides: {\n          a: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      gridArea: \"close\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"secondary\",\n        size: \"small\",\n        \"aria-label\": \"dismiss\",\n        icon: MiniDeleteIcon,\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Banner, \"rebrmAp1IZlQALUg1u9ByLkCEsI=\");\n\n_c = Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Banner/index.tsx"],"names":["MiniDeleteIcon","Background","system","styled","React","useMemo","Box","IconButton","TextButton","Markdown","BannerContainer","css","width","p","display","gridTemplateColumns","gridTemplateAreas","columnGap","alignItems","textAlign","BannerMarkdown","fontSize","bindBannerAnchor","onCtaClick","allowedAttributes","component","processNode","node","props","onClick","Banner","children","variant","onClose","rest","overrides","a"],"mappings":"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","sourcesContent":["import { MiniDeleteIcon } from '@codecademy/gamut-icons';\nimport { Background, BackgroundProps, system } from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { useMemo } from 'react';\n\nimport { Box } from '../Box';\nimport { IconButton, TextButton } from '../Button';\nimport { Markdown } from '../Markdown';\n\nexport type BannerVariants = 'navy' | 'yellow';\n\nexport interface BannerProps extends Omit<BackgroundProps, 'bg'> {\n  children: string;\n  /** Visual variations for banners */\n  variant?: BannerVariants;\n  /**  Callback called when the user closes the banner. */\n  onClose: () => void;\n  /** Call to action click callback */\n  onCtaClick?: () => void;\n}\n\nconst BannerContainer = styled(Background)(\n  system.css({\n    width: '100%',\n    p: 4,\n    display: 'grid',\n    gridTemplateColumns: '2rem minmax(0, 1fr) 2rem',\n    gridTemplateAreas: \"'empty content close'\",\n    columnGap: 8,\n    alignItems: 'center',\n    textAlign: 'center',\n  })\n);\n\nconst BannerMarkdown = styled(Markdown)(system.css({ fontSize: 'inherit' }));\n\nconst bindBannerAnchor = (onCtaClick?: BannerProps['onCtaClick']) => ({\n  allowedAttributes: ['href', 'target'],\n  component: TextButton,\n  processNode: (node: unknown, props: { onClick?: () => void }) => (\n    <TextButton\n      {...props}\n      onClick={() => {\n        onCtaClick?.();\n        props?.onClick?.();\n      }}\n      mx={4}\n      size=\"small\"\n      target=\"_BLANK\"\n    />\n  ),\n});\n\nexport const Banner: React.FC<BannerProps> = ({\n  children,\n  variant = 'navy',\n  onCtaClick,\n  onClose,\n  ...rest\n}: BannerProps) => {\n  const overrides = useMemo(\n    () => ({\n      a: bindBannerAnchor(onCtaClick),\n    }),\n    [onCtaClick]\n  );\n\n  return (\n    <BannerContainer {...rest} bg={variant}>\n      <Box gridArea=\"content\" fontSize=\"inherit\">\n        <BannerMarkdown\n          overrides={overrides}\n          text={children}\n          skipDefaultOverrides={{ a: true }}\n        />\n      </Box>\n      <Box gridArea=\"close\">\n        <IconButton\n          variant=\"secondary\"\n          size=\"small\"\n          aria-label=\"dismiss\"\n          icon={MiniDeleteIcon}\n          onClick={onClose}\n        />\n      </Box>\n    </BannerContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}