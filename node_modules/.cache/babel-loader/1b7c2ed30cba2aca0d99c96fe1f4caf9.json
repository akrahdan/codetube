{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Projects/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ContentContainer, Video } from '@codecademy/gamut';\nimport { isEmpty } from 'lodash';\nimport React, { useContext, useState } from 'react';\nimport { CardGrid } from 'portal/components/CardGrid';\nimport { CourseCard } from 'components/CourseCard';\n// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext'; // import { selectUserJWT } from '~/state/currentUser/selectors';\n\nimport { Items } from './sample';\nimport { HalfCircle } from './icons/HalfCircle';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst byProject = item => item.type === 'project';\n\nconst byVideo = item => item.type === 'video';\n\nexport const Projects = ({\n  courses,\n  linkCallback\n}) => {\n  _s();\n\n  const {\n    content_item_ids: contentIds,\n    side_shapes_color: sideShapesColor,\n    projects_headline: projectsHeadline,\n    video_headline: videoHeadline\n  } = useContext(CMSContext);\n\n  const onCardClicked = course => {\n    window.location = linkCallback(course);\n  };\n\n  const [contentItems, setContentItems] = useState([]); // const jwt = useSelector(selectUserJWT);\n  // useEffect(() => {\n  //   (async () => {\n  //     if (contentIds) {\n  //       const { data } = await contentServiceRequest({\n  //         endpoint: 'content-items/search',\n  //         version: 1,\n  //         data: {\n  //           id: contentIds,\n  //           minimal: false,\n  //         },\n  //         method: 'POST',\n  //         jwt,\n  //       });\n  //       setContentItems(data);\n  //     }\n  //   })();\n  // }, [contentIds, jwt]);\n  // const renderProjects = () =>\n  //   contentItems\n  //     .filter(byProject)\n  //     .map((project: ProjectContentItem, index: number) => (\n  //       <ProjectCard\n  //         project={project}\n  //         index={index}\n  //         key={project.id}\n  //         className={styles.projectCard}\n  //         trackingData={{ target: 'path_marketing_page_projects' }}\n  //         hoverShadow\n  //       />\n  //     ));\n\n  const renderProjects = () => courses.map((course, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(CourseCard, {\n      project: course,\n      index: index,\n      onClick: () => onCardClicked(course),\n      className: styles.projectCard,\n      trackingData: {\n        target: 'path_marketing_page_projects'\n      },\n      hoverShadow: true\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this));\n\n  const renderVideos = () => Items.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Video, {\n      videoUrl: video.video_url,\n      videoTitle: video.title,\n      className: styles.video,\n      onPlay: () => // trackUserClick({\n      //   page_name: 'marketingpathlandingpage',\n      //   context: 'projects_section',\n      //   target: 'play_video',\n      //   video_url: video.video_url,\n      // })\n      console.log()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.videoTitle,\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this));\n\n  const projects = renderProjects();\n  const video = renderVideos();\n  if (isEmpty(projects) && isEmpty(video)) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.backgroundHalfCircle,\n      children: /*#__PURE__*/_jsxDEV(HalfCircle, {\n        fill: sideShapesColor !== null && sideShapesColor !== void 0 ? sideShapesColor : '#C8D7FA'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentItemsContainer,\n        children: !isEmpty(projects) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: projectsHeadline || 'Courses That Are Included'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.displayHorizontal,\n            children: /*#__PURE__*/_jsxDEV(CardGrid, {\n              as: \"u\",\n              children: projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"F4dnHvFrXugi2gG0LqbxOpcjNJU=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Projects/index.tsx"],"names":["ContentContainer","Video","isEmpty","React","useContext","useState","CardGrid","CourseCard","CMSContext","Items","HalfCircle","styles","byProject","item","type","byVideo","Projects","courses","linkCallback","content_item_ids","contentIds","side_shapes_color","sideShapesColor","projects_headline","projectsHeadline","video_headline","videoHeadline","onCardClicked","course","window","location","contentItems","setContentItems","renderProjects","map","index","projectCard","target","id","renderVideos","video","width","video_url","title","console","log","videoTitle","projects","container","backgroundHalfCircle","contentItemsContainer","projectContainer","displayHorizontal"],"mappings":"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","sourcesContent":["import { ContentContainer, Video } from '@codecademy/gamut';\nimport cx from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CardGrid } from 'portal/components/CardGrid';\nimport { CourseCard } from 'components/CourseCard';\nimport { contentServiceRequest } from 'libs/contentServiceRequest';\n// import { trackUserClick } from '~/libs/eventTracking';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\n// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport { ProjectContentItem, VideoContentItem } from 'typings/entities';\nimport { Items, ProjectItems } from './sample';\nimport { HalfCircle } from './icons/HalfCircle';\nimport styles from './styles.module.scss';\nimport type { Course } from 'services/projects';\nimport { CoursePlayerResponse, CourseResponse } from 'services/courses';\n\ntype ContentItemTypes = VideoContentItem | ProjectContentItem;\n\ninterface Video {\n  id: string;\n  type: string;\n  video_url: string;\n  time: number;\n  title: string;\n}\n\n\n\nexport type ProjectProps = {\n  courses: CoursePlayerResponse[]\n  linkCallback: (project: CoursePlayerResponse) => any;\n}\n\nconst byProject = (item: ContentItemTypes): item is ProjectContentItem =>\n  item.type === 'project';\n\nconst byVideo = (item: ContentItemTypes): item is VideoContentItem =>\n  item.type === 'video';\n\nexport const Projects = ({\n  courses,\n  linkCallback,\n}: ProjectProps) => {\n  const {\n    content_item_ids: contentIds,\n    side_shapes_color: sideShapesColor,\n    projects_headline: projectsHeadline,\n    video_headline: videoHeadline,\n  } = useContext(CMSContext);\n\n  const onCardClicked = (course: CoursePlayerResponse) => {\n    window.location = linkCallback(course);\n  };\n\n  const [contentItems, setContentItems] = useState<ContentItemTypes[]>([]);\n  // const jwt = useSelector(selectUserJWT);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (contentIds) {\n  //       const { data } = await contentServiceRequest({\n  //         endpoint: 'content-items/search',\n  //         version: 1,\n  //         data: {\n  //           id: contentIds,\n  //           minimal: false,\n  //         },\n  //         method: 'POST',\n  //         jwt,\n  //       });\n\n  //       setContentItems(data);\n  //     }\n  //   })();\n  // }, [contentIds, jwt]);\n\n  // const renderProjects = () =>\n  //   contentItems\n  //     .filter(byProject)\n  //     .map((project: ProjectContentItem, index: number) => (\n  //       <ProjectCard\n  //         project={project}\n  //         index={index}\n  //         key={project.id}\n  //         className={styles.projectCard}\n  //         trackingData={{ target: 'path_marketing_page_projects' }}\n  //         hoverShadow\n  //       />\n  //     ));\n\n  const renderProjects = () =>\n    courses\n      .map((course: CoursePlayerResponse, index: number) => (\n        <li>\n          <CourseCard\n            project={course}\n            index={index}\n            key={course.id}\n            onClick={() => onCardClicked(course)}\n            className={styles.projectCard}\n            trackingData={{ target: 'path_marketing_page_projects' }}\n            hoverShadow\n          />\n        </li>\n\n\n      ));\n\n\n\n  const renderVideos = () =>\n    Items.map((video: VideoContentItem) => (\n      <div key={video.id} style={{ width: '100%' }}>\n        <Video\n          videoUrl={video.video_url}\n          videoTitle={video.title}\n          className={styles.video}\n          onPlay={() =>\n            // trackUserClick({\n            //   page_name: 'marketingpathlandingpage',\n            //   context: 'projects_section',\n            //   target: 'play_video',\n            //   video_url: video.video_url,\n            // })\n            console.log()}\n        />\n        <p className={styles.videoTitle}>{video.title}</p>\n      </div>\n    ));\n\n  const projects = renderProjects();\n  const video = renderVideos();\n\n  if (isEmpty(projects) && isEmpty(video)) return null;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.backgroundHalfCircle}>\n        <HalfCircle fill={sideShapesColor ?? '#C8D7FA'} />\n      </div>\n\n      <ContentContainer>\n        <div className={styles.contentItemsContainer}>\n          {!isEmpty(projects) && (\n            <div className={styles.projectContainer}>\n              <h2>{projectsHeadline || 'Courses That Are Included'}</h2>\n              <div className={styles.displayHorizontal}>\n                <CardGrid as=\"u\">\n                  {projects}      \n                </CardGrid>\n\n              </div>\n            </div>\n          )}\n\n        </div>\n      </ContentContainer>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}