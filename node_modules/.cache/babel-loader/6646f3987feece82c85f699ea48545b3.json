{"ast":null,"code":"import { canUseEventListeners, canUseDOM } from 'exenv';\nimport React from 'react';\nimport { usePrevious } from '@pluralsight/ps-design-system-util';\nexport default function useOnInnerFocus(ref, _a) {\n  var onEnter = _a.onEnter,\n      onLeave = _a.onLeave;\n  var refContainsActiveElement = React.useCallback(function () {\n    if (!canUseDOM || !ref.current) return false;\n    return ref.current.contains(document.activeElement);\n  }, [ref]);\n\n  var _b = React.useState(refContainsActiveElement),\n      activeElInRef = _b[0],\n      setActiveElInRef = _b[1];\n\n  var prevActiveElInRef = usePrevious(activeElInRef);\n  var handleFocus = React.useCallback(function () {\n    var nextActive = refContainsActiveElement();\n    setActiveElInRef(nextActive);\n  }, [refContainsActiveElement, setActiveElInRef]);\n  React.useEffect(function () {\n    if (!exists(activeElInRef) || !exists(prevActiveElInRef)) return;\n    if (prevActiveElInRef === activeElInRef) return;\n    var entering = !prevActiveElInRef && activeElInRef;\n    var leaving = prevActiveElInRef && !activeElInRef;\n    if (entering) onEnter();else if (leaving) onLeave();\n  }, [activeElInRef, prevActiveElInRef, onEnter, onLeave]);\n  React.useEffect(function () {\n    if (!canUseEventListeners) return;\n    document.addEventListener('focus', handleFocus, true);\n    return function () {\n      document.removeEventListener('focus', handleFocus, true);\n    };\n  }, [handleFocus]);\n}\n\nvar exists = function (val) {\n  return typeof val !== 'undefined';\n};","map":{"version":3,"sources":["../../../src/react/use-on-inner-focus.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,EAA+B,SAA/B,QAAgD,OAAhD;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,WAAT,QAA4B,oCAA5B;AAOA,eAAc,SAAU,eAAV,CACZ,GADY,EAEZ,EAFY,EAEuB;MAAjC,OAAO,GAAA,EAAA,CAAA,O;MAAE,OAAO,GAAA,EAAA,CAAA,O;AAElB,MAAM,wBAAwB,GAAG,KAAK,CAAC,WAAN,CAAkB,YAAA;AACjD,QAAI,CAAC,SAAD,IAAc,CAAC,GAAG,CAAC,OAAvB,EAAgC,OAAO,KAAP;AAEhC,WAAO,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAqB,QAAQ,CAAC,aAA9B,CAAP;AACD,GAJgC,EAI9B,CAAC,GAAD,CAJ8B,CAAjC;;AAMM,MAAA,EAAA,GAAoC,KAAK,CAAC,QAAN,CACxC,wBADwC,CAApC;AAAA,MAAC,aAAa,GAAA,EAAA,CAAA,CAAA,CAAd;AAAA,MAAgB,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAhC;;AAGN,MAAM,iBAAiB,GAAG,WAAW,CAAC,aAAD,CAArC;AAEA,MAAM,WAAW,GAAG,KAAK,CAAC,WAAN,CAAkB,YAAA;AACpC,QAAM,UAAU,GAAG,wBAAwB,EAA3C;AACA,IAAA,gBAAgB,CAAC,UAAD,CAAhB;AACD,GAHmB,EAGjB,CAAC,wBAAD,EAA2B,gBAA3B,CAHiB,CAApB;AAKA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,CAAC,MAAM,CAAC,aAAD,CAAP,IAA0B,CAAC,MAAM,CAAC,iBAAD,CAArC,EAA0D;AAC1D,QAAI,iBAAiB,KAAK,aAA1B,EAAyC;AAEzC,QAAM,QAAQ,GAAG,CAAC,iBAAD,IAAsB,aAAvC;AACA,QAAM,OAAO,GAAG,iBAAiB,IAAI,CAAC,aAAtC;AAEA,QAAI,QAAJ,EAAc,OAAO,GAArB,KACK,IAAI,OAAJ,EAAa,OAAO;AAC1B,GATD,EASG,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,OAAnC,EAA4C,OAA5C,CATH;AAWA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd,QAAI,CAAC,oBAAL,EAA2B;AAE3B,IAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,WAAnC,EAAgD,IAAhD;AAEA,WAAO,YAAA;AACL,MAAA,QAAQ,CAAC,mBAAT,CAA6B,OAA7B,EAAsC,WAAtC,EAAmD,IAAnD;AACD,KAFD;AAGD,GARD,EAQG,CAAC,WAAD,CARH;AASD;;AAED,IAAM,MAAM,GAAG,UAAC,GAAD,EAAa;AAAK,SAAA,OAAO,GAAP,KAAA,WAAA;AAA0B,CAA3D","sourceRoot":"","sourcesContent":["import { canUseEventListeners, canUseDOM } from 'exenv';\nimport React from 'react';\nimport { usePrevious } from '@pluralsight/ps-design-system-util';\nexport default function useOnInnerFocus(ref, _a) {\n    var onEnter = _a.onEnter, onLeave = _a.onLeave;\n    var refContainsActiveElement = React.useCallback(function () {\n        if (!canUseDOM || !ref.current)\n            return false;\n        return ref.current.contains(document.activeElement);\n    }, [ref]);\n    var _b = React.useState(refContainsActiveElement), activeElInRef = _b[0], setActiveElInRef = _b[1];\n    var prevActiveElInRef = usePrevious(activeElInRef);\n    var handleFocus = React.useCallback(function () {\n        var nextActive = refContainsActiveElement();\n        setActiveElInRef(nextActive);\n    }, [refContainsActiveElement, setActiveElInRef]);\n    React.useEffect(function () {\n        if (!exists(activeElInRef) || !exists(prevActiveElInRef))\n            return;\n        if (prevActiveElInRef === activeElInRef)\n            return;\n        var entering = !prevActiveElInRef && activeElInRef;\n        var leaving = prevActiveElInRef && !activeElInRef;\n        if (entering)\n            onEnter();\n        else if (leaving)\n            onLeave();\n    }, [activeElInRef, prevActiveElInRef, onEnter, onLeave]);\n    React.useEffect(function () {\n        if (!canUseEventListeners)\n            return;\n        document.addEventListener('focus', handleFocus, true);\n        return function () {\n            document.removeEventListener('focus', handleFocus, true);\n        };\n    }, [handleFocus]);\n}\nvar exists = function (val) { return typeof val !== 'undefined'; };\n//# sourceMappingURL=use-on-inner-focus.js.map"]},"metadata":{},"sourceType":"module"}