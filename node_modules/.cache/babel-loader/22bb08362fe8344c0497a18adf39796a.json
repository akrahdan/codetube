{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { authApi } from 'services/auth';\nconst initialState = {\n  user: null,\n  token: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    setCredentials: (state, {\n      payload: {\n        user,\n        token\n      }\n    }) => {\n      state.user = user;\n      state.token = token;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(authApi.endpoints.logout.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = null;\n      state.token = null;\n    }).addMatcher(authApi.endpoints.signup.matchFulfilled, (state, {\n      payload\n    }) => {\n      state.user = pay;\n    });\n  }\n});\nexport const {\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const selectCurrentUser = state => state.auth.user;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/auth/authSlice.ts"],"names":["createSlice","authApi","initialState","user","token","authSlice","name","reducers","setCredentials","state","payload","extraReducers","builder","addMatcher","endpoints","logout","matchFulfilled","signup","pay","actions","reducer","selectCurrentUser","auth"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,SAAUC,OAAV,QAAwB,eAAxB;AAMA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAArB;AACA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,MADoB;AAE1BJ,EAAAA,YAAY,EAAEA,YAFY;AAG1BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAE,CACZC,KADY,EAEZ;AAAEC,MAAAA,OAAO,EAAE;AAAEP,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAX,KAFY,KAGX;AACDK,MAAAA,KAAK,CAACN,IAAN,GAAaA,IAAb;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AACH;AAPK,GAHgB;AAY1BO,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACNC,UADD,CAEIZ,OAAO,CAACa,SAAR,CAAkBC,MAAlB,CAAyBC,cAF7B,EAGI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AAEtBD,MAAAA,KAAK,CAACN,IAAN,GAAa,IAAb;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AAED,KARL,EASES,UATF,CAUIZ,OAAO,CAACa,SAAR,CAAkBG,MAAlB,CAAyBD,cAV7B,EAWI,CAACP,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAuB;AACnBD,MAAAA,KAAK,CAACN,IAAN,GAAae,GAAb;AACH,KAbL;AAeH;AA5ByB,CAAD,CAA7B;AA+BA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAAqBH,SAAS,CAACc,OAArC;AAEP,eAAed,SAAS,CAACe,OAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAIZ,KAAD,IAAsBA,KAAK,CAACa,IAAN,CAAWnB,IAA3D","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { UserSubmitKey } from \"components/Forms/RegistrationForm/dist/types\";\nimport type { User } from 'services/auth';\nimport type { RootState } from 'store';\nimport  { authApi} from 'services/auth'\n\ntype AuthState = {\n    user: User | null\n    token: string | null\n}\nconst initialState = { user: null, token: null }\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: initialState as AuthState,\n    reducers: {\n        setCredentials: (\n            state,\n            { payload: { user, token}}: PayloadAction<{ user: User; token: string}>\n        ) => {\n            state.user = user\n            state.token = token\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n        .addMatcher(\n            authApi.endpoints.logout.matchFulfilled,\n            (state, { payload }) => {\n            \n              state.user = null\n              state.token = null\n              \n            }\n        ).addMatcher(\n            authApi.endpoints.signup.matchFulfilled,\n            (state, { payload}) => {\n                state.user = pay\n            }\n        )\n    }\n})\n\nexport const { setCredentials } = authSlice.actions\n\nexport default authSlice.reducer\n\nexport const selectCurrentUser = (state: RootState) => state.auth.user"]},"metadata":{},"sourceType":"module"}