{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/codefluent/src/components/AppHeader/useAppHeaderProps.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@codecademy/gamut';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { SearchButton } from './Search/SearchButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedPopoverVariants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2\n    }\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.2\n    }\n  }\n};\nconst animatedPopoverProps = {\n  initial: 'exit',\n  animate: 'enter',\n  exit: 'exit',\n  variants: AnimatedPopoverVariants\n};\nexport const useAppHeaderProps = () => {\n  _s();\n\n  const [isSearchVisible, setSearchVisible] = useState(false);\n  const [isMobileNotificationsOpen, setIsMobileNotificationsOpen] = useState(false);\n\n  const toggleSearch = () => {\n    setSearchVisible(!isSearchVisible);\n  };\n\n  const toggleMobileNotifications = () => {\n    setIsMobileNotificationsOpen(!isMobileNotificationsOpen);\n  };\n\n  const handleClick = (event, item) => {\n    if (item.type !== 'render-element') {}\n\n    console.log(event);\n  };\n\n  const headerProps = {\n    type: 'anon',\n    action: handleClick,\n    search: {\n      onEnable: () => console.log(),\n      onSearch: query => /*#__PURE__*/_jsxDEV(SearchButton, {\n        toggleSearch: toggleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }, this),\n      onTrackingClick: target => console.log()\n    }\n  };\n\n  const search = /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    zIndex: 15,\n    children: [isSearchVisible && /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, { ...animatedPopoverProps\n      }, \"search\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), isMobileNotificationsOpen && /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        _: 'block',\n        md: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: /*#__PURE__*/_jsxDEV(motion.div, { ...animatedPopoverProps,\n          \"data-testid\": \"header-mobile-notifications-dropdown\"\n        }, \"mobile notifications\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n\n  return [headerProps, search];\n};\n\n_s(useAppHeaderProps, \"yRCLK2iOrzyOwFTECvppvsNXG1g=\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/AppHeader/useAppHeaderProps.tsx"],"names":["Box","AnimatePresence","motion","React","useState","SearchButton","AnimatedPopoverVariants","enter","opacity","transition","duration","exit","animatedPopoverProps","initial","animate","variants","useAppHeaderProps","isSearchVisible","setSearchVisible","isMobileNotificationsOpen","setIsMobileNotificationsOpen","toggleSearch","toggleMobileNotifications","handleClick","event","item","type","console","log","headerProps","action","search","onEnable","onSearch","query","onTrackingClick","target","_","md"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AAMA,SAASC,eAAT,EAA0BC,MAA1B,QAA+D,eAA/D;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAIA,SAASC,YAAT,QAA6B,uBAA7B;;AAGA,MAAMC,uBAAiC,GAAG;AACxCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAA1B,GADiC;AAExCC,EAAAA,IAAI,EAAE;AAAEH,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAA1B;AAFkC,CAA1C;AAKA,MAAME,oBAAiC,GAAG;AACxCC,EAAAA,OAAO,EAAE,MAD+B;AAExCC,EAAAA,OAAO,EAAE,OAF+B;AAGxCH,EAAAA,IAAI,EAAE,MAHkC;AAIxCI,EAAAA,QAAQ,EAAET;AAJ8B,CAA1C;AAOA,OAAO,MAAMU,iBAAiB,GAAG,MAAM;AAAA;;AAKrC,QAAM,CAACC,eAAD,EAAkBC,gBAAlB,IAAsCd,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACe,yBAAD,EAA4BC,4BAA5B,IAA4DhB,QAAQ,CACxE,KADwE,CAA1E;;AAIA,QAAMiB,YAAY,GAAG,MAAM;AAEzBH,IAAAA,gBAAgB,CAAC,CAACD,eAAF,CAAhB;AACD,GAHD;;AAKA,QAAMK,yBAAyB,GAAG,MAAM;AAEtCF,IAAAA,4BAA4B,CAAC,CAACD,yBAAF,CAA5B;AACD,GAHD;;AAKA,QAAMI,WAAkC,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1D,QAAIA,IAAI,CAACC,IAAL,KAAc,gBAAlB,EAAoC,CAEnC;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,GALD;;AASA,QAAMK,WAA8B,GAAI;AAClCH,IAAAA,IAAI,EAAE,MAD4B;AAGlCI,IAAAA,MAAM,EAAEP,WAH0B;AAIlCQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,MAAML,OAAO,CAACC,GAAR,EADV;AAENK,MAAAA,QAAQ,EAAGC,KAAD,iBAAmB,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFvB;AAGNc,MAAAA,eAAe,EAAGC,MAAD,IAAoBT,OAAO,CAACC,GAAR;AAH/B;AAJ0B,GAAxC;;AAiBA,QAAMG,MAAM,gBACV,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,MAAM,EAAE,EAAjC;AAAA,eACGd,eAAe,iBACd,QAAC,eAAD;AAAA,8BACE,QAAC,MAAD,CAAQ,GAAR,OAA6BL;AAA7B,SAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EASGO,yBAAyB,iBACxB,QAAC,GAAD;AAAK,MAAA,OAAO,EAAE;AAAEkB,QAAAA,CAAC,EAAE,OAAL;AAAcC,QAAAA,EAAE,EAAE;AAAlB,OAAd;AAAA,6BACE,QAAC,eAAD;AAAA,+BACE,QAAC,MAAD,CAAQ,GAAR,OAEM1B,oBAFN;AAGE,yBAAY;AAHd,WACM,sBADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA0BA,SAAO,CAACiB,WAAD,EAAcE,MAAd,CAAP;AACD,CA1EM;;GAAMf,iB","sourcesContent":["import { Box } from '@codecademy/gamut';\nimport type {\n \n  AppHeaderClickHandler,\n  GlobalHeaderProps,\n} from 'components/gamut-overrides';\nimport { AnimatePresence, motion, MotionProps, Variants } from 'framer-motion';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Search } from './Search';\nimport { MobileSearchBar } from './Search/MobileSearchBar';\nimport { SearchButton } from './Search/SearchButton';\n\n\nconst AnimatedPopoverVariants: Variants = {\n  enter: { opacity: 1, transition: { duration: 0.2 } },\n  exit: { opacity: 0, transition: { duration: 0.2 } },\n};\n\nconst animatedPopoverProps: MotionProps = {\n  initial: 'exit',\n  animate: 'enter',\n  exit: 'exit',\n  variants: AnimatedPopoverVariants,\n};\n\nexport const useAppHeaderProps = () => {\n  \n  \n  \n\n  const [isSearchVisible, setSearchVisible] = useState(false);\n\n  const [isMobileNotificationsOpen, setIsMobileNotificationsOpen] = useState(\n    false\n  );\n\n  const toggleSearch = () => {\n    \n    setSearchVisible(!isSearchVisible);\n  };\n\n  const toggleMobileNotifications = () => {\n    \n    setIsMobileNotificationsOpen(!isMobileNotificationsOpen);\n  };\n\n  const handleClick: AppHeaderClickHandler = (event, item) => {\n    if (item.type !== 'render-element') {\n     \n    }\n    console.log(event)\n  };\n\n\n\n  const headerProps: GlobalHeaderProps =  {\n        type: 'anon',\n       \n        action: handleClick,\n        search: {\n          onEnable: () => console.log(),\n          onSearch: (query: string) => <SearchButton toggleSearch={toggleSearch} />,\n          onTrackingClick: (target: string) => console.log()\n          \n        }\n      \n     \n       \n      };\n\n  \n\n  const search = (\n    <Box position=\"relative\" zIndex={15}>\n      {isSearchVisible && (\n        <AnimatePresence>\n          <motion.div key=\"search\" {...animatedPopoverProps}>\n            \n          </motion.div>\n          )\n        </AnimatePresence>\n      )}\n      {isMobileNotificationsOpen && (\n        <Box display={{ _: 'block', md: 'none' }}>\n          <AnimatePresence>\n            <motion.div\n              key=\"mobile notifications\"\n              {...animatedPopoverProps}\n              data-testid=\"header-mobile-notifications-dropdown\"\n            >\n              \n            </motion.div>\n          </AnimatePresence>\n        </Box>\n      )}\n    </Box>\n  );\n\n  return [headerProps, search] as const;\n};\n"]},"metadata":{},"sourceType":"module"}