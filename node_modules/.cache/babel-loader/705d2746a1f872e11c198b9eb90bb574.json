{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import{colors,noSelect,pxRem,screenReaderOnly}from'@codecademy/gamut-styles';import styled from'@emotion/styled';import React,{forwardRef}from'react';import{variables}from'./_variables';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var activeColor=colors.hyper;var CheckboxLabel=styled.label(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  \",\"\\n  display: flex;\\n  align-items: flex-start;\\n  cursor: pointer;\\n  margin: (\",\" / 2) 0;\\n  width: 100%;\\n  font-weight: normal;\\n  padding: \",\" 0;\\n\"])),noSelect,variables.formPadding,variables.formPadding);var CheckboxElement=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: relative;\\n  margin-right: 0.5rem;\\n  min-width: 1.5rem;\\n  height: 1.5rem;\\n  border: 2px solid \",\";\\n  border-radius: \",\";\\n  transition: all 0.1s ease-in-out;\\n  margin-top: \",\";\\n\"])),variables.borderColor,variables.borderRadius,function(_ref){var multiline=_ref.multiline;return multiline&&'3px';});var CheckboxVector=styled.svg(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: -2px;\\n  left: -2px;\\n\"])));var Polyline=styled.polyline(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  fill: none;\\n  stroke: \",\";\\n  stroke-width: 2;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-dasharray: 18px;\\n  stroke-dashoffset: 18px;\\n\"])),colors['gray-100']);// Maybe ScreenReaderFocusable\nvar Input=styled.input(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  \",\"\\n\\n  &:focus + \",\" > \",\" {\\n    outline: \",\" solid \",\";\\n    outline-offset: \",\";\\n  }\\n\\n  &:checked + \",\" \",\" {\\n    border-color: \",\";\\n\\n    \",\" {\\n      path {\\n        fill: \",\";\\n      }\\n\\n      \",\" {\\n        stroke-dashoffset: 0;\\n        transition: stroke-dashoffset \",\";\\n      }\\n    }\\n  }\\n\\n  &:checked:disabled + \",\" \",\" {\\n    border-color: \",\";\\n\\n    \",\" {\\n      \",\" {\\n        fill: \",\";\\n      }\\n      path {\\n        fill: \",\";\\n      }\\n    }\\n  }\\n\"])),screenReaderOnly,CheckboxLabel,CheckboxElement,pxRem(2),activeColor,pxRem(2),CheckboxLabel,CheckboxElement,activeColor,CheckboxVector,activeColor,Polyline,variables.transitionTime,CheckboxLabel,CheckboxElement,variables.itemBackgroundHover,CheckboxVector,Polyline,variables.itemBackgroundHover,variables.itemBackgroundHover);var CheckboxText=styled.span(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  align-self: center;\\n  font-size: \",\";\\n\"])),function(_ref2){var multiline=_ref2.multiline;return multiline&&'0.75rem';});export var Checkbox=/*#__PURE__*/forwardRef(function(_ref3,ref){var className=_ref3.className,label=_ref3.label,htmlFor=_ref3.htmlFor,multiline=_ref3.multiline,id=_ref3.id,rest=_objectWithoutProperties(_ref3,[\"className\",\"label\",\"htmlFor\",\"multiline\",\"id\"]);return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({id:id||htmlFor,type:\"checkbox\"},rest),{},{ref:ref})),/*#__PURE__*/_jsxs(CheckboxLabel,{htmlFor:id||htmlFor,children:[/*#__PURE__*/_jsx(CheckboxElement,{multiline:multiline,children:/*#__PURE__*/_jsxs(CheckboxVector,{width:\"24px\",height:\"24px\",viewBox:\"0 0 20 20\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z\",fill:\"none\"}),/*#__PURE__*/_jsx(Polyline,{points:\"4 11 8 15 16 6\"})]})}),/*#__PURE__*/_jsx(CheckboxText,{multiline:multiline,children:label})]})]});});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Form/Checkbox.tsx"],"names":["colors","noSelect","pxRem","screenReaderOnly","styled","React","forwardRef","variables","activeColor","hyper","CheckboxLabel","label","formPadding","CheckboxElement","div","borderColor","borderRadius","multiline","CheckboxVector","svg","Polyline","polyline","Input","input","transitionTime","itemBackgroundHover","CheckboxText","span","Checkbox","ref","className","htmlFor","id","rest"],"mappings":"ioBAAA,OACEA,MADF,CAEEC,QAFF,CAGEC,KAHF,CAIEC,gBAJF,KAKO,0BALP,CAMA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,KAAkE,OAAlE,CAEA,OAASC,SAAT,KAA0B,cAA1B,C,wFAiBA,GAAMC,CAAAA,WAAW,CAAGR,MAAM,CAACS,KAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAGN,MAAM,CAACO,KAAV,+NACfV,QADe,CAKNM,SAAS,CAACK,WALJ,CAQNL,SAAS,CAACK,WARJ,CAAnB,CAWA,GAAMC,CAAAA,eAAe,CAAGT,MAAM,CAACU,GAAV,wQAKCP,SAAS,CAACQ,WALX,CAMFR,SAAS,CAACS,YANR,CAQL,kBAAGC,CAAAA,SAAH,MAAGA,SAAH,OAAmBA,CAAAA,SAAS,EAAI,KAAhC,EARK,CAArB,CAWA,GAAMC,CAAAA,cAAc,CAAGd,MAAM,CAACe,GAAV,yHAApB,CAMA,GAAMC,CAAAA,QAAQ,CAAGhB,MAAM,CAACiB,QAAV,oOAEFrB,MAAM,CAAC,UAAD,CAFJ,CAAd,CAUA;AACA,GAAMsB,CAAAA,KAAK,CAAGlB,MAAM,CAACmB,KAAV,uiBACPpB,gBADO,CAGGO,aAHH,CAGsBG,eAHtB,CAIIX,KAAK,CAAC,CAAD,CAJT,CAIsBM,WAJtB,CAKWN,KAAK,CAAC,CAAD,CALhB,CAQKQ,aARL,CAQsBG,eARtB,CASSL,WATT,CAWLU,cAXK,CAaKV,WAbL,CAgBHY,QAhBG,CAkB6Bb,SAAS,CAACiB,cAlBvC,CAuBcd,aAvBd,CAuB+BG,eAvB/B,CAwBSN,SAAS,CAACkB,mBAxBnB,CA0BLP,cA1BK,CA2BHE,QA3BG,CA4BKb,SAAS,CAACkB,mBA5Bf,CA+BKlB,SAAS,CAACkB,mBA/Bf,CAAX,CAqCA,GAAMC,CAAAA,YAAY,CAAGtB,MAAM,CAACuB,IAAV,+GAEH,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAS,EAAI,SAAhC,EAFG,CAAlB,CAKA,MAAO,IAAMW,CAAAA,QAAQ,cAAGtB,UAAU,CAChC,eAAwDuB,GAAxD,KAAGC,CAAAA,SAAH,OAAGA,SAAH,CAAcnB,KAAd,OAAcA,KAAd,CAAqBoB,OAArB,OAAqBA,OAArB,CAA8Bd,SAA9B,OAA8BA,SAA9B,CAAyCe,EAAzC,OAAyCA,EAAzC,CAAgDC,IAAhD,qGACE,aAAK,SAAS,CAAEH,SAAhB,wBACE,KAAC,KAAD,8BAAO,EAAE,CAAEE,EAAE,EAAID,OAAjB,CAA0B,IAAI,CAAC,UAA/B,EAA8CE,IAA9C,MAAoD,GAAG,CAAEJ,GAAzD,GADF,cAEE,MAAC,aAAD,EAAe,OAAO,CAAEG,EAAE,EAAID,OAA9B,wBACE,KAAC,eAAD,EAAiB,SAAS,CAAEd,SAA5B,uBACE,MAAC,cAAD,EAAgB,KAAK,CAAC,MAAtB,CAA6B,MAAM,CAAC,MAApC,CAA2C,OAAO,CAAC,WAAnD,wBACE,aACE,CAAC,CAAC,wLADJ,CAEE,IAAI,CAAC,MAFP,EADF,cAKE,KAAC,QAAD,EAAU,MAAM,CAAC,gBAAjB,EALF,GADF,EADF,cAUE,KAAC,YAAD,EAAc,SAAS,CAAEA,SAAzB,UAAqCN,KAArC,EAVF,GAFF,GADF,EADgC,CAA3B","sourcesContent":["import {\n  colors,\n  noSelect,\n  pxRem,\n  screenReaderOnly,\n} from '@codecademy/gamut-styles';\nimport styled from '@emotion/styled';\nimport React, { forwardRef, InputHTMLAttributes, ReactNode } from 'react';\n\nimport { variables } from './_variables';\n\nexport type CheckboxProps = InputHTMLAttributes<HTMLInputElement> &\n  Multiline & {\n    checked?: boolean;\n    className?: string;\n    disabled?: boolean;\n    htmlFor: string;\n    label: ReactNode;\n    name?: string;\n    required?: boolean;\n    value?: string;\n    id?: string;\n  };\n\ntype Multiline = { multiline?: boolean };\n\nconst activeColor = colors.hyper;\n\nconst CheckboxLabel = styled.label`\n  ${noSelect}\n  display: flex;\n  align-items: flex-start;\n  cursor: pointer;\n  margin: (${variables.formPadding} / 2) 0;\n  width: 100%;\n  font-weight: normal;\n  padding: ${variables.formPadding} 0;\n`;\n\nconst CheckboxElement = styled.div<Multiline>`\n  position: relative;\n  margin-right: 0.5rem;\n  min-width: 1.5rem;\n  height: 1.5rem;\n  border: 2px solid ${variables.borderColor};\n  border-radius: ${variables.borderRadius};\n  transition: all 0.1s ease-in-out;\n  margin-top: ${({ multiline }) => multiline && '3px'};\n`;\n\nconst CheckboxVector = styled.svg`\n  position: absolute;\n  top: -2px;\n  left: -2px;\n`;\n\nconst Polyline = styled.polyline`\n  fill: none;\n  stroke: ${colors['gray-100']};\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-dasharray: 18px;\n  stroke-dashoffset: 18px;\n`;\n\n// Maybe ScreenReaderFocusable\nconst Input = styled.input`\n  ${screenReaderOnly}\n\n  &:focus + ${CheckboxLabel} > ${CheckboxElement} {\n    outline: ${pxRem(2)} solid ${activeColor};\n    outline-offset: ${pxRem(2)};\n  }\n\n  &:checked + ${CheckboxLabel} ${CheckboxElement} {\n    border-color: ${activeColor};\n\n    ${CheckboxVector} {\n      path {\n        fill: ${activeColor};\n      }\n\n      ${Polyline} {\n        stroke-dashoffset: 0;\n        transition: stroke-dashoffset ${variables.transitionTime};\n      }\n    }\n  }\n\n  &:checked:disabled + ${CheckboxLabel} ${CheckboxElement} {\n    border-color: ${variables.itemBackgroundHover};\n\n    ${CheckboxVector} {\n      ${Polyline} {\n        fill: ${variables.itemBackgroundHover};\n      }\n      path {\n        fill: ${variables.itemBackgroundHover};\n      }\n    }\n  }\n`;\n\nconst CheckboxText = styled.span<Multiline>`\n  align-self: center;\n  font-size: ${({ multiline }) => multiline && '0.75rem'};\n`;\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ className, label, htmlFor, multiline, id, ...rest }, ref) => (\n    <div className={className}>\n      <Input id={id || htmlFor} type=\"checkbox\" {...rest} ref={ref} />\n      <CheckboxLabel htmlFor={id || htmlFor}>\n        <CheckboxElement multiline={multiline}>\n          <CheckboxVector width=\"24px\" height=\"24px\" viewBox=\"0 0 20 20\">\n            <path\n              d=\"M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z\"\n              fill=\"none\"\n            />\n            <Polyline points=\"4 11 8 15 16 6\" />\n          </CheckboxVector>\n        </CheckboxElement>\n        <CheckboxText multiline={multiline}>{label}</CheckboxText>\n      </CheckboxLabel>\n    </div>\n  )\n);\n"]},"metadata":{},"sourceType":"module"}