{"ast":null,"code":"import { each, isObject } from 'lodash';\nimport React from 'react';\n\nvar formatAsOptions = function formatAsOptions(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      key = _ref.key;\n  var option = key ? /*#__PURE__*/React.createElement(\"option\", {\n    label: label,\n    key: key,\n    value: value,\n    \"data-testid\": key\n  }, label) : /*#__PURE__*/React.createElement(\"option\", {\n    label: value,\n    key: label,\n    value: value,\n    \"data-testid\": label\n  }, value);\n  return option;\n};\n\nexport var parseOptions = function parseOptions(_ref2) {\n  var options = _ref2.options,\n      id = _ref2.id;\n  var parsedOptions = [];\n\n  if (options instanceof Array) {\n    options.forEach(function (value) {\n      var label = id ? \"\".concat(id, \"-\").concat(value) : value;\n      parsedOptions.push({\n        label: label,\n        value: value\n      });\n    });\n  } else if (isObject(options)) {\n    each(options, function (label, value) {\n      var key = id ? \"\".concat(id, \"-\").concat(value) : value;\n      parsedOptions.push({\n        label: label,\n        value: value,\n        key: key\n      });\n    });\n  }\n\n  return parsedOptions;\n};\nexport var parseSelectOptions = function parseSelectOptions(props) {\n  return parseOptions(props).map(formatAsOptions);\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/@codecademy/gamut/dist/Form/utils.js"],"names":["each","isObject","React","formatAsOptions","_ref","label","value","key","option","createElement","parseOptions","_ref2","options","id","parsedOptions","Array","forEach","concat","push","parseSelectOptions","props","map"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,GAAG,GAAGH,IAAI,CAACG,GAFf;AAGA,MAAIC,MAAM,GAAGD,GAAG,GAAG,aAAaL,KAAK,CAACO,aAAN,CAAoB,QAApB,EAA8B;AAC5DJ,IAAAA,KAAK,EAAEA,KADqD;AAE5DE,IAAAA,GAAG,EAAEA,GAFuD;AAG5DD,IAAAA,KAAK,EAAEA,KAHqD;AAI5D,mBAAeC;AAJ6C,GAA9B,EAK7BF,KAL6B,CAAhB,GAKJ,aAAaH,KAAK,CAACO,aAAN,CAAoB,QAApB,EAA8B;AACrDJ,IAAAA,KAAK,EAAEC,KAD8C;AAErDC,IAAAA,GAAG,EAAEF,KAFgD;AAGrDC,IAAAA,KAAK,EAAEA,KAH8C;AAIrD,mBAAeD;AAJsC,GAA9B,EAKtBC,KALsB,CALzB;AAWA,SAAOE,MAAP;AACD,CAhBD;;AAkBA,OAAO,IAAIE,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACrD,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAAA,MACIC,EAAE,GAAGF,KAAK,CAACE,EADf;AAEA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAIF,OAAO,YAAYG,KAAvB,EAA8B;AAC5BH,IAAAA,OAAO,CAACI,OAAR,CAAgB,UAAUV,KAAV,EAAiB;AAC/B,UAAID,KAAK,GAAGQ,EAAE,GAAG,GAAGI,MAAH,CAAUJ,EAAV,EAAc,GAAd,EAAmBI,MAAnB,CAA0BX,KAA1B,CAAH,GAAsCA,KAApD;AACAQ,MAAAA,aAAa,CAACI,IAAd,CAAmB;AACjBb,QAAAA,KAAK,EAAEA,KADU;AAEjBC,QAAAA,KAAK,EAAEA;AAFU,OAAnB;AAID,KAND;AAOD,GARD,MAQO,IAAIL,QAAQ,CAACW,OAAD,CAAZ,EAAuB;AAC5BZ,IAAAA,IAAI,CAACY,OAAD,EAAU,UAAUP,KAAV,EAAiBC,KAAjB,EAAwB;AACpC,UAAIC,GAAG,GAAGM,EAAE,GAAG,GAAGI,MAAH,CAAUJ,EAAV,EAAc,GAAd,EAAmBI,MAAnB,CAA0BX,KAA1B,CAAH,GAAsCA,KAAlD;AACAQ,MAAAA,aAAa,CAACI,IAAd,CAAmB;AACjBb,QAAAA,KAAK,EAAEA,KADU;AAEjBC,QAAAA,KAAK,EAAEA,KAFU;AAGjBC,QAAAA,GAAG,EAAEA;AAHY,OAAnB;AAKD,KAPG,CAAJ;AAQD;;AAED,SAAOO,aAAP;AACD,CAzBM;AA0BP,OAAO,IAAIK,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACjE,SAAOV,YAAY,CAACU,KAAD,CAAZ,CAAoBC,GAApB,CAAwBlB,eAAxB,CAAP;AACD,CAFM","sourcesContent":["import { each, isObject } from 'lodash';\nimport React from 'react';\n\nvar formatAsOptions = function formatAsOptions(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      key = _ref.key;\n  var option = key ? /*#__PURE__*/React.createElement(\"option\", {\n    label: label,\n    key: key,\n    value: value,\n    \"data-testid\": key\n  }, label) : /*#__PURE__*/React.createElement(\"option\", {\n    label: value,\n    key: label,\n    value: value,\n    \"data-testid\": label\n  }, value);\n  return option;\n};\n\nexport var parseOptions = function parseOptions(_ref2) {\n  var options = _ref2.options,\n      id = _ref2.id;\n  var parsedOptions = [];\n\n  if (options instanceof Array) {\n    options.forEach(function (value) {\n      var label = id ? \"\".concat(id, \"-\").concat(value) : value;\n      parsedOptions.push({\n        label: label,\n        value: value\n      });\n    });\n  } else if (isObject(options)) {\n    each(options, function (label, value) {\n      var key = id ? \"\".concat(id, \"-\").concat(value) : value;\n      parsedOptions.push({\n        label: label,\n        value: value,\n        key: key\n      });\n    });\n  }\n\n  return parsedOptions;\n};\nexport var parseSelectOptions = function parseSelectOptions(props) {\n  return parseOptions(props).map(formatAsOptions);\n};"]},"metadata":{},"sourceType":"module"}