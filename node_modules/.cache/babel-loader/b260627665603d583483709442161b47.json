{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\nimport { Outcome } from \"./Outcome\";\nimport { selectSave } from \"state/course/courseSplice\";\nimport { selectLocationPayload, selectLocationType } from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport { useCreateExperienceMutation, useCreateGoalMutation, useCreateRequirementMutation, useEditExperienceMutation, useEditGoalMutation, useEditRequirementMutation, useFetchExperienceQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useDeleteExperienceMutation, useDeleteGoalMutation, useDeleteRequirementMutation, useEditLectureMutation } from \"services/courses\";\nimport { useCreateHeadingMutation, useCreateIncludedMutation, useCreateLearningOutcomeMutation, useCreateSyllabusMutation, useEditSyllabusMutation, useEditIncludedMutation, useDeleteOutcomeMutation, useEditLearningOutcomeMutation, useFetchIncludedQuery, useDeleteSyllabusMutation, useDeleteIncludedMutation, useFetchSyllabusQuery, useFetchOutcomesQuery } from 'services/projects';\nimport { selectRequirements, selectGoals, selectExperience } from \"state/target/targetSplice\";\nimport { selectOutcomes, selectIncluded, selectSyllabuses } from 'state/project/projectSplice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Target = () => {\n  _s();\n\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus] = useEditSyllabusMutation();\n  const [editLearningOutcome] = useEditLearningOutcomeMutation();\n  const [editIncluded] = useEditIncludedMutation();\n  const [deleteSyllabus] = useDeleteSyllabusMutation();\n  const [deleteOutcome] = useDeleteOutcomeMutation();\n  const [deleteIncluded] = useDeleteIncludedMutation();\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const {\n    data: syllabusQuery\n  } = useFetchSyllabusQuery(locationPayload.id);\n  const {\n    data: learningQuery\n  } = useFetchOutcomesQuery(locationPayload.id);\n  const {\n    data: IncludedQuery\n  } = useFetchIncludedQuery(locationPayload.id);\n  const {\n    data: requirementsQuery\n  } = useFetchRequirementsQuery(locationPayload.id);\n  const {\n    data: goalsQuery\n  } = useFetchGoalsQuery(locationPayload.id);\n  const {\n    data: experienceQuery\n  } = useFetchExperienceQuery(locationPayload.id);\n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses);\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes);\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded);\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] = useState(selectedRequirements);\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n  const [syllabuses, setSyllabuses] = useState([{\n    id: \"syllabusList--0\",\n    title: \"\"\n  }]);\n  const [outcomes, setOutcomes] = useState([{\n    id: \"outcomeList--0\",\n    title: \"\"\n  }]);\n  const [included, setIncluded] = useState([{\n    id: \"incList--0\",\n    title: \"\"\n  }]);\n  const [goals, setGoals] = useState([{\n    id: \"goalList--0\",\n    name: \"\"\n  }]);\n  const [requirements, setRequirements] = useState([{\n    id: \"reqList--0\",\n    name: \"\"\n  }]);\n  const [experience, setExperience] = useState([{\n    id: \"expList--0\",\n    name: \"\"\n  }]);\n\n  const removeSyllabus = syllabus => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = req => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = req => {\n    deleteIncluded(req.id);\n  };\n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n  useEffect(() => {\n    const syllabusResults = syllabuses;\n    syllabusResults && syllabusResults.forEach(syllabus => {\n      if (syllabus.title) {\n        createSyllabus({\n          title: syllabus.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = syllabusResults.filter(item => item.id != syllabus.id);\n          setSyllabuses(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const learningOutcomes = outcomes;\n    learningOutcomes && learningOutcomes.forEach(exp => {\n      if (exp.title) {\n        createLearningOutcome({\n          title: exp.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = learningOutcomes.filter(item => item.id != exp.id);\n          setOutcomes(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    const incResults = included;\n    incResults && incResults.forEach(req => {\n      if (req.title) {\n        createIncluded({\n          title: req.title,\n          project: locationPayload.id\n        }).then(() => {\n          const results = incResults.filter(item => item.id != req.id);\n          setIncluded(results);\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    syllabusUpdate && syllabusUpdate.forEach(req => {\n      if (req.title) {\n        console.log(\"Req: \", req);\n        editSyllabus({ ...req,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    learningUpdate && learningUpdate.forEach((req, index) => {\n      if (req.title) {\n        editLearningOutcome({ ...req,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n    includeUpdate && includeUpdate.forEach(item => {\n      if (item.title) {\n        editIncluded({ ...item,\n          project: locationPayload.id\n        }).then(() => {\n          alert.show(\"Your data has been saved successfully\");\n        });\n      }\n    });\n  }, [selectedSave]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-header--wrapper--3Vunm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-header--main-content--22it3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-purpose\": \"page-title\",\n          className: \"font-heading-serif-xl sub-header--title--2VD8q\",\n          children: \"Target your students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content--wrap_component--2TEkz\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-form--subtitle--3R5d-\",\n          children: \"The descriptions you write here will help students decide if your project is the one for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"learn-goal\",\n                className: \"control-label\",\n                children: \"What will students learn in your project?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [syllabusUpdate && syllabusUpdate.map(syllabus => /*#__PURE__*/_jsxDEV(Syllabus, {\n                    syllabus: syllabus,\n                    handleRemove: removeSyllabus,\n                    handleChange: obj => {\n                      let gUpdate = [...syllabusUpdate];\n                      let index = gUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      gUpdate[index] = obj;\n                      setSyllabusUpdate(gUpdate);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this)), syllabuses.map(syllabus => /*#__PURE__*/_jsxDEV(SyllabusCreate, {\n                    syllabus: syllabus,\n                    handleRemove: value => {\n                      const updatedGoals = syllabus.filter(result => result.id != value.id);\n                      set(updatedGoals);\n                    },\n                    handleChange: obj => {\n                      let newSyllabus = [...syllabuses];\n                      let index = newSyllabus.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      newSyllabus[index] = obj;\n                      setSyllabuses(newSyllabus);\n                    }\n                  }, syllabus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const syllabusItem = {\n                  id: `syllabusList--${syllabuses.length}`,\n                  title: \"\"\n                };\n                const newSyllabus = [...syllabuses, syllabusItem];\n                const emptyValue = syllabuses.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setSyllabuses(newSyllabus);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"requirements\",\n                className: \"control-label\",\n                children: \"Are there any project requirements or prerequisites?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [learningUpdate && learningUpdate.map(req => /*#__PURE__*/_jsxDEV(Outcome, {\n                    outcome: req,\n                    handleRemove: removeOutcome,\n                    handleChange: obj => {\n                      let reqUpdates = [...learningUpdate];\n                      let index = reqUpdates.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqUpdates[index] = obj;\n                      setLearningUpdate(reqUpdates);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)), outcomes.map(req => /*#__PURE__*/_jsxDEV(CreateOutcome, {\n                    outcome: req,\n                    handleRemove: value => {\n                      const updatedReqs = outcomes.filter(result => result.id != value.id);\n                      setOutcomes(updatedReqs);\n                    },\n                    handleChange: obj => {\n                      let reqs = [...outcomes];\n                      let index = reqs.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      reqs[index] = obj;\n                      setOutcomes(reqs);\n                    }\n                  }, req.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const reqItem = {\n                  id: `outcomeList--${outcomes.length}`,\n                  value: \"\"\n                };\n                const newReqs = [...outcomes, reqItem];\n                const emptyValue = outcomes.filter(item => item.name == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setOutcomes(newReqs);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"target-student\",\n                className: \"control-label\",\n                children: \"Who are your target students?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [includeUpdate && includeUpdate.map(exp => /*#__PURE__*/_jsxDEV(Included, {\n                    inc: exp,\n                    handleRemove: removeIncluded,\n                    handleChange: obj => {\n                      let expUpdate = [...includeUpdate];\n                      let index = expUpdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expUpdate[index] = obj;\n                      setIncludeUpdate(expUpdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 25\n                  }, this)), included.map(exp => /*#__PURE__*/_jsxDEV(CreateIncluded, {\n                    inc: exp,\n                    handleRemove: value => {\n                      const updatedIncluded = included.filter(result => result.id != value.id);\n                      setIncluded(updatedIncluded);\n                    },\n                    handleChange: obj => {\n                      let expdate = [...included];\n                      let index = expdate.findIndex(item => {\n                        return item.id == obj.id;\n                      });\n                      expdate[index] = obj;\n                      setIncluded(expdate);\n                    }\n                  }, exp.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const expItem = {\n                  id: `incList--${included.length}`,\n                  value: \"\"\n                };\n                const newExps = [...included, expItem];\n                const emptyValue = included.filter(item => item.title == \"\");\n\n                if (emptyValue.length) {\n                  return;\n                } else {\n                  setIncluded(newExps);\n                }\n              },\n              type: \"button\",\n              className: \"goals-form--button--2_zb1 btn btn-tertiary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr5 cfi cfi-add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), \" Add an answer\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Target, \"SQdQ9eJPxCh2n98AevCvT/wmUZE=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useCreateSyllabusMutation, useCreateLearningOutcomeMutation, useCreateIncludedMutation, useEditSyllabusMutation, useEditLearningOutcomeMutation, useEditIncludedMutation, useDeleteSyllabusMutation, useDeleteOutcomeMutation, useDeleteIncludedMutation, useCreateGoalMutation, useCreateExperienceMutation, useCreateRequirementMutation, useEditGoalMutation, useEditRequirementMutation, useEditExperienceMutation, useDeleteGoalMutation, useDeleteExperienceMutation, useDeleteRequirementMutation, useFetchSyllabusQuery, useFetchOutcomesQuery, useFetchIncludedQuery, useFetchRequirementsQuery, useFetchGoalsQuery, useFetchExperienceQuery, useAlert];\n});\n\n_c = Target;\nexport default Target;\n\nvar _c;\n\n$RefreshReg$(_c, \"Target\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Instructor/Projects/Target/index.js"],"names":["useEffect","useState","useAlert","Goal","Requirements","Experience","ExperienceCreate","GoalCreate","ReqCreate","Included","CreateIncluded","Syllabus","SyllabusCreate","CreateOutcome","Outcome","selectSave","selectLocationPayload","selectLocationType","useAppSelector","useCreateExperienceMutation","useCreateGoalMutation","useCreateRequirementMutation","useEditExperienceMutation","useEditGoalMutation","useEditRequirementMutation","useFetchExperienceQuery","useFetchRequirementsQuery","useFetchGoalsQuery","useDeleteExperienceMutation","useDeleteGoalMutation","useDeleteRequirementMutation","useEditLectureMutation","useCreateHeadingMutation","useCreateIncludedMutation","useCreateLearningOutcomeMutation","useCreateSyllabusMutation","useEditSyllabusMutation","useEditIncludedMutation","useDeleteOutcomeMutation","useEditLearningOutcomeMutation","useFetchIncludedQuery","useDeleteSyllabusMutation","useDeleteIncludedMutation","useFetchSyllabusQuery","useFetchOutcomesQuery","selectRequirements","selectGoals","selectExperience","selectOutcomes","selectIncluded","selectSyllabuses","Target","locationPath","selectedSave","locationPayload","selectedRequirements","selectedGoals","selectedExperiences","selectedOutcomes","selectedIncluded","selectedSyllabuses","createSyllabus","createLearningOutcome","createIncluded","editSyllabus","editLearningOutcome","editIncluded","deleteSyllabus","deleteOutcome","deleteIncluded","createGoal","createExperience","createRequirement","editGoal","editRequirement","editExperience","deleteGoal","deleteExperience","deleteRequirements","data","syllabusQuery","id","learningQuery","IncludedQuery","requirementsQuery","goalsQuery","experienceQuery","syllabusUpdate","setSyllabusUpdate","learningUpdate","setLearningUpdate","includeUpdate","setIncludeUpdate","goalsUpdate","setGoalsUpdate","requirementsUpdate","setRequirementsUpdate","experienceUpdate","setExperienceUpdate","alert","syllabuses","setSyllabuses","title","outcomes","setOutcomes","included","setIncluded","goals","setGoals","name","requirements","setRequirements","experience","setExperience","removeSyllabus","syllabus","removeOutcome","req","removeIncluded","syllabusResults","forEach","project","then","results","filter","item","show","learningOutcomes","exp","incResults","console","log","index","map","obj","gUpdate","findIndex","value","updatedGoals","result","set","newSyllabus","syllabusItem","length","emptyValue","reqUpdates","updatedReqs","reqs","reqItem","newReqs","expUpdate","updatedIncluded","expdate","expItem","newExps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { Goal } from \"./Goal\";\nimport { Requirements } from \"./Requirements\";\nimport { Experience } from \"./Experience\";\nimport { ExperienceCreate } from \"./ExperienceCreate\";\nimport { GoalCreate } from \"./GoalCreate\";\nimport { ReqCreate } from \"./ReqCreate\";\n\nimport { Included } from \"./Includeded\";\nimport { CreateIncluded } from \"./CreateIncluded\";\nimport { Syllabus } from \"./Syllabus\";\nimport { SyllabusCreate } from \"./SyllabusCreate\";\nimport { CreateOutcome } from \"./CreateOutcome\";\n\nimport { Outcome } from \"./Outcome\";\n\nimport { selectSave } from \"state/course/courseSplice\";\n\nimport {\n  selectLocationPayload,\n  selectLocationType,\n} from \"state/location/selectors\";\nimport { useAppSelector } from \"store/hooks\";\nimport {\n  useCreateExperienceMutation,\n  useCreateGoalMutation,\n  useCreateRequirementMutation,\n  useEditExperienceMutation,\n  useEditGoalMutation,\n  useEditRequirementMutation,\n  useFetchExperienceQuery,\n  useFetchRequirementsQuery,\n  useFetchGoalsQuery,\n  useDeleteExperienceMutation,\n  useDeleteGoalMutation,\n  useDeleteRequirementMutation,\n  useEditLectureMutation,\n} from \"services/courses\";\n\nimport { \n  useCreateHeadingMutation,\n  useCreateIncludedMutation,\n  useCreateLearningOutcomeMutation,\n  useCreateSyllabusMutation,\n  useEditSyllabusMutation,\n  useEditIncludedMutation,\n  useDeleteOutcomeMutation,\n  useEditLearningOutcomeMutation,\n  useFetchIncludedQuery,\n  useDeleteSyllabusMutation,\n  useDeleteIncludedMutation,\n  useFetchSyllabusQuery,\n  useFetchOutcomesQuery\n} from 'services/projects'\nimport {\n  selectRequirements,\n  selectGoals,\n  selectExperience,\n} from \"state/target/targetSplice\";\n\nimport { selectOutcomes, selectIncluded, selectSyllabuses} from 'state/project/projectSplice'\n\nexport const Target = () => {\n  const locationPath = useAppSelector(selectLocationType);\n  const selectedSave = useAppSelector(selectSave);\n  const locationPayload = useAppSelector(selectLocationPayload);\n  const selectedRequirements = useAppSelector(selectRequirements);\n  const selectedGoals = useAppSelector(selectGoals);\n  const selectedExperiences = useAppSelector(selectExperience);\n  const selectedOutcomes = useAppSelector(selectOutcomes);\n  const selectedIncluded = useAppSelector(selectIncluded);\n  const selectedSyllabuses = useAppSelector(selectSyllabuses);\n  const [createSyllabus] = useCreateSyllabusMutation();\n  const [createLearningOutcome] = useCreateLearningOutcomeMutation();\n  const [createIncluded] = useCreateIncludedMutation();\n  const [editSyllabus ] = useEditSyllabusMutation();\n  const [editLearningOutcome ] = useEditLearningOutcomeMutation();\n  const [editIncluded ] = useEditIncludedMutation();\n  const [ deleteSyllabus] = useDeleteSyllabusMutation()\n  const [deleteOutcome] = useDeleteOutcomeMutation()\n  const [ deleteIncluded ] = useDeleteIncludedMutation()\n\n  const [createGoal] = useCreateGoalMutation();\n  const [createExperience] = useCreateExperienceMutation();\n  const [createRequirement] = useCreateRequirementMutation();\n  const [editGoal] = useEditGoalMutation();\n  const [editRequirement] = useEditRequirementMutation();\n  const [editExperience] = useEditExperienceMutation();\n  const [deleteGoal] = useDeleteGoalMutation();\n  const [deleteExperience] = useDeleteExperienceMutation();\n  const [deleteRequirements] = useDeleteRequirementMutation();\n  const { data: syllabusQuery } = useFetchSyllabusQuery(locationPayload.id);\n  const { data: learningQuery } = useFetchOutcomesQuery(locationPayload.id);\n  const { data: IncludedQuery } = useFetchIncludedQuery(locationPayload.id);\n  const { data: requirementsQuery } = useFetchRequirementsQuery(\n    locationPayload.id\n  );\n  const { data: goalsQuery } = useFetchGoalsQuery(locationPayload.id);\n  const { data: experienceQuery } = useFetchExperienceQuery(locationPayload.id);\n  \n  const [syllabusUpdate, setSyllabusUpdate] = useState(selectedSyllabuses)\n  const [learningUpdate, setLearningUpdate] = useState(selectedOutcomes)\n  const [includeUpdate, setIncludeUpdate] = useState(selectedIncluded)\n  const [goalsUpdate, setGoalsUpdate] = useState(selectedGoals);\n  const [requirementsUpdate, setRequirementsUpdate] =\n    useState(selectedRequirements);\n\n  const [experienceUpdate, setExperienceUpdate] = useState(selectedExperiences);\n  const alert = useAlert();\n\n  const [syllabuses, setSyllabuses] = useState([{ id: \"syllabusList--0\", title: \"\" }]);\n  const [outcomes, setOutcomes] = useState([\n    { id: \"outcomeList--0\", title: \"\" },\n  ]);\n\n  const [included, setIncluded] = useState([\n    { id: \"incList--0\", title: \"\" },\n  ]);\n\n  const [goals, setGoals] = useState([{ id: \"goalList--0\", name: \"\" }]);\n  const [requirements, setRequirements] = useState([\n    { id: \"reqList--0\", name: \"\" },\n  ]);\n\n  const [experience, setExperience] = useState([\n    { id: \"expList--0\", name: \"\" },\n  ]);\n\n  const removeSyllabus = (syllabus) => {\n    deleteSyllabus(syllabus.id);\n  };\n\n  const removeOutcome = (req) => {\n    deleteOutcome(req.id);\n  };\n\n  const removeIncluded = (req) => {\n    deleteIncluded(req.id);\n  };\n \n\n  useEffect(() => {\n    setLearningUpdate(selectedOutcomes);\n  }, [selectedOutcomes]);\n\n  useEffect(() => {\n    setIncludeUpdate(selectedIncluded);\n  }, [selectedIncluded]);\n\n  useEffect(() => {\n    setSyllabusUpdate(selectedSyllabuses);\n  }, [selectedSyllabuses]);\n\n  useEffect(() => {\n    const  syllabusResults= syllabuses;\n    syllabusResults &&\n    syllabusResults.forEach((syllabus) => {\n        if (syllabus.title) {\n          createSyllabus({\n            title: syllabus.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = syllabusResults.filter((item) => item.id != syllabus.id);\n            setSyllabuses(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n\n    const learningOutcomes = outcomes;\n    learningOutcomes &&\n    learningOutcomes.forEach((exp) => {\n        if (exp.title) {\n          createLearningOutcome({\n            title: exp.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = learningOutcomes.filter(\n              (item) => item.id != exp.id\n            );\n            setOutcomes(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n\n    const incResults = included;\n    incResults &&\n    incResults.forEach((req) => {\n        if (req.title) {\n          createIncluded({\n            title: req.title,\n            project: locationPayload.id,\n          }).then(() => {\n            const results = incResults.filter((item) => item.id != req.id);\n            setIncluded(results);\n            alert.show(\"Your data has been saved successfully\")\n          });\n        }\n      });\n    syllabusUpdate &&\n    syllabusUpdate.forEach((req) => {\n        if (req.title) {\n          console.log(\"Req: \", req);\n          editSyllabus({\n            ...req,\n            project: locationPayload.id,\n          }).then(() => {\n           \n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    learningUpdate &&\n    learningUpdate.forEach((req, index) => {\n        if (req.title) {\n          editLearningOutcome({\n            ...req,\n            project: locationPayload.id,\n          }).then(() => {\n           \n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n\n    includeUpdate &&\n    includeUpdate.forEach((item) => {\n        if (item.title) {\n          editIncluded({\n            ...item,\n            project: locationPayload.id,\n          }).then(() => {\n            alert.show(\"Your data has been saved successfully\");\n          });\n        }\n      });\n  }, [selectedSave]);\n  return (\n    <div>\n      <div className=\"sub-header--wrapper--3Vunm\">\n        <div className=\"sub-header--main-content--22it3\">\n          <h2\n            data-purpose=\"page-title\"\n            className=\"font-heading-serif-xl sub-header--title--2VD8q\"\n          >\n            Target your students\n          </h2>\n        </div>\n      </div>\n      <div className=\"main-content--wrap_component--2TEkz\">\n        {\" \"}\n        <div className=\"form_container\">\n          <div className=\"goals-form--subtitle--3R5d-\">\n            The descriptions you write here will help students decide if your\n            project is the one for them.\n          </div>\n          <form>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"learn-goal\" className=\"control-label\">\n                  What will students learn in your project?\n                </label>\n                <div>\n                  <div>\n                    {syllabusUpdate &&\n                      syllabusUpdate.map((syllabus) => (\n                        <Syllabus\n                          key={syllabus.id}\n                          syllabus={syllabus}\n                          handleRemove={removeSyllabus}\n                          handleChange={(obj) => {\n                            let gUpdate = [...syllabusUpdate];\n                            let index = gUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            gUpdate[index] = obj;\n                            setSyllabusUpdate(gUpdate);\n                          }}\n                        />\n                      ))}\n                    {syllabuses.map((syllabus) => (\n                      <SyllabusCreate\n                        key={syllabus.id}\n                        syllabus={syllabus}\n                        handleRemove={(value) => {\n                          const updatedGoals = syllabus.filter(\n                            (result) => result.id != value.id\n                          );\n                          set(updatedGoals);\n                        }}\n                        handleChange={(obj) => {\n                          let newSyllabus = [...syllabuses];\n                          let index = newSyllabus.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          newSyllabus[index] = obj;\n                          setSyllabuses(newSyllabus);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const syllabusItem = {\n                    id: `syllabusList--${syllabuses.length}`,\n                    title: \"\",\n                  };\n                  const newSyllabus = [...syllabuses, syllabusItem];\n                  const emptyValue = syllabuses.filter((item) => item.title == \"\");\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setSyllabuses(newSyllabus);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"requirements\" className=\"control-label\">\n                  Are there any project requirements or prerequisites?\n                </label>\n                <div>\n                  <div>\n                    {learningUpdate &&\n                      learningUpdate.map((req) => (\n                        <Outcome\n                          outcome={req}\n                          key={req.id}\n                          handleRemove={removeOutcome}\n                          handleChange={(obj) => {\n                            let reqUpdates = [...learningUpdate];\n                            let index = reqUpdates.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            reqUpdates[index] = obj;\n                            setLearningUpdate(reqUpdates);\n                          }}\n                        />\n                      ))}\n\n                    {outcomes.map((req) => (\n                      <CreateOutcome\n                        outcome={req}\n                        key={req.id}\n                        handleRemove={(value) => {\n                          const updatedReqs = outcomes.filter(\n                            (result) => result.id != value.id\n                          );\n                          setOutcomes(updatedReqs);\n                        }}\n                        handleChange={(obj) => {\n                          let reqs = [...outcomes];\n                          let index = reqs.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          reqs[index] = obj;\n                          setOutcomes(reqs);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const reqItem = {\n                    id: `outcomeList--${outcomes.length}`,\n                    value: \"\",\n                  };\n                  const newReqs = [...outcomes, reqItem];\n                  const emptyValue = outcomes.filter(\n                    (item) => item.name == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setOutcomes(newReqs);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"target-student\" className=\"control-label\">\n                  Who are your target students?\n                </label>\n                <div>\n                  <div>\n                    {includeUpdate &&\n                      includeUpdate.map((exp) => (\n                        <Included\n                          key={exp.id}\n                          inc={exp}\n                          handleRemove={removeIncluded}\n                          handleChange={(obj) => {\n                            let expUpdate = [...includeUpdate];\n\n                            let index = expUpdate.findIndex((item) => {\n                              return item.id == obj.id;\n                            });\n                            expUpdate[index] = obj;\n                            setIncludeUpdate(expUpdate);\n                          }}\n                        />\n                      ))}\n\n                    {included.map((exp) => (\n                      <CreateIncluded\n                        key={exp.id}\n                        inc={exp}\n                        handleRemove={(value) => {\n                          const updatedIncluded = included.filter(\n                            (result) => result.id != value.id\n                          );\n                          setIncluded(updatedIncluded);\n                        }}\n                        handleChange={(obj) => {\n                          let expdate = [...included];\n\n                          let index = expdate.findIndex((item) => {\n                            return item.id == obj.id;\n                          });\n                          expdate[index] = obj;\n                          setIncluded(expdate);\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  const expItem = {\n                    id: `incList--${included.length}`,\n                    value: \"\",\n                  };\n                  const newExps = [...included, expItem];\n                  const emptyValue = included.filter(\n                    (item) => item.title == \"\"\n                  );\n                  if (emptyValue.length) {\n                    return;\n                  } else {\n                    setIncluded(newExps);\n                  }\n                }}\n                type=\"button\"\n                className=\"goals-form--button--2_zb1 btn btn-tertiary\"\n              >\n                <span className=\"mr5 cfi cfi-add\" /> Add an answer\n              </button>\n            </div>\n          </form>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Target;\n"]},"metadata":{},"sourceType":"module"}