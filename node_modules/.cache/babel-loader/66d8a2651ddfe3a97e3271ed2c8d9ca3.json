{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const initialState = {\n  playing: false\n};\nexport const playerSlice = createSlice({\n  name: 'player',\n  initialState,\n  reducers: {\n    play: (state, action) => {\n      state.playing = t;\n    },\n    pause: (state, action) => {\n      state.playing = action.payload;\n    }\n  }\n});\nexport const selectPlayer = state => state.player.playing;\nexport const {\n  play,\n  pause\n} = playerSlice.actions;\nexport default playerSlice.reducer;","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/state/player/playerSlice.ts"],"names":["createSlice","initialState","playing","playerSlice","name","reducers","play","state","action","t","pause","payload","selectPlayer","player","actions","reducer"],"mappings":"AAAA,SAA2BA,WAA3B,QACO,kBADP;AAUA,OAAO,MAAMC,YAAyB,GAAG;AACrCC,EAAAA,OAAO,EAAE;AAD4B,CAAlC;AAGP,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAE,QAD6B;AAEnCH,EAAAA,YAFmC;AAGnCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAwC;AAE1CD,MAAAA,KAAK,CAACL,OAAN,GAAgBO,CAAhB;AACH,KAJK;AAMNC,IAAAA,KAAK,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAwC;AAE3CD,MAAAA,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACG,OAAvB;AACH;AATK;AAHyB,CAAD,CAA/B;AAiBP,OAAO,MAAMC,YAAY,GAAIL,KAAD,IAAsBA,KAAK,CAACM,MAAN,CAAaX,OAAxD;AAGP,OAAO,MAAO;AAAEI,EAAAA,IAAF;AAAQI,EAAAA;AAAR,IAAkBP,WAAW,CAACW,OAArC;AAIP,eAAeX,WAAW,CAACY,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction \n} from \"@reduxjs/toolkit\";\nimport { v1 as uuid } from \"uuid\";\nimport { stubFalse, without } from 'lodash';\nimport { AppThunk, RootState } from \"store\";\n\nexport interface PlayerState { \n    playing: boolean\n}\n\nexport const initialState: PlayerState = {\n    playing: false\n}\nexport const playerSlice = createSlice({\n    name: 'player',\n    initialState,\n    reducers: {\n        play: (state, action: PayloadAction<void>) => {\n          \n            state.playing = t \n        },\n\n        pause: (state, action: PayloadAction<void>) => {\n          \n            state.playing = action.payload \n        },\n        \n    }\n});\n\nexport const selectPlayer = (state: RootState) => state.player.playing\n\n\nexport const  { play, pause } = playerSlice.actions\n\n\n\nexport default playerSlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}