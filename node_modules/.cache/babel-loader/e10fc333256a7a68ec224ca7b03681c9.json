{"ast":null,"code":"var _jsxFileName = \"/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Header/Card.tsx\";\nimport { Logo } from '@codecademy/gamut-labs';\nimport React, { Fragment } from 'react';\nimport styles from './styles/Card.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  completionTime,\n  project\n}) => {\n  const {\n    included,\n    experience,\n    difficulty,\n    tags\n  } = project; // const { card_content: card = [] } = useContext(CMSContext);\n  // const [includes, experienceLevel, forThoseWho] = card;\n\n  const includesWithClass = tags.map((str, i, self) => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"em\", {\n        className: styles.highlight,\n        children: str\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), i !== self.length - 1 && ', ']\n    }, str, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.logo,\n        children: /*#__PURE__*/_jsxDEV(Logo, {\n          type: \"proAlt\",\n          height: 21\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: completionTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Includes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.content,\n      children: includesWithClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.content,\n      children: [\"For the \", experience, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Good morning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.content,\n      children: included.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.title\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Earn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.content,\n      children: \"Certificate of Completion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Header/Card.tsx"],"names":["Logo","React","Fragment","styles","Card","completionTime","project","included","experience","difficulty","tags","includesWithClass","map","str","i","self","highlight","length","card","header","logo","title","content","item"],"mappings":";AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;AAGA,OAAOC,MAAP,MAAmB,2BAAnB;;AAOE,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAA4C;AAC9D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA;AAApC,MAA6CJ,OAAnD,CAD8D,CAE9D;AACA;;AAEA,QAAMK,iBAAiB,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,EAASC,IAAT,KAAkB;AAInD,wBACE,QAAC,QAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEZ,MAAM,CAACa,SAAtB;AAAA,kBAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,CAAC,KAAKC,IAAI,CAACE,MAAL,GAAc,CAApB,IAAyB,IAF5B;AAAA,OAAeJ,GAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAVyB,CAA1B;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACe,IAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,MAAvB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAEhB,MAAM,CAACiB,IAAxB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,MAAM,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAOf;AAAP;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAG,MAAA,SAAS,EAAEF,MAAM,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAG,MAAA,SAAS,EAAElB,MAAM,CAACmB,OAArB;AAAA,gBAA+BX;AAA/B;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAG,MAAA,SAAS,EAAER,MAAM,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAG,MAAA,SAAS,EAAElB,MAAM,CAACmB,OAArB;AAAA,6BAAuCd,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAG,MAAA,SAAS,EAAEL,MAAM,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAI,MAAA,SAAS,EAAElB,MAAM,CAACmB,OAAtB;AAAA,gBACGf,QAAQ,CAACK,GAAT,CAAcW,IAAD,iBACZ;AAAA,kBAAsBA,IAAI,CAACF;AAA3B,SAASE,IAAI,CAACF,KAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF,eAiBE;AAAG,MAAA,SAAS,EAAElB,MAAM,CAACkB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AAAG,MAAA,SAAS,EAAElB,MAAM,CAACmB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvCM;KAAMlB,I","sourcesContent":["import { Logo } from '@codecademy/gamut-labs'\nimport React, { Fragment, useContext } from 'react';\nimport type { ProjectEntityResponse } from 'services/projects';\n\nimport styles from './styles/Card.module.scss'\n\nexport type CardProps = {\n    project: ProjectEntityResponse\n    completionTime: string;\n  };\n  \n  export const Card = ({ completionTime, project }: CardProps) => {\n    const { included, experience, difficulty, tags } = project\n    // const { card_content: card = [] } = useContext(CMSContext);\n    // const [includes, experienceLevel, forThoseWho] = card;\n  \n    const includesWithClass = tags.map((str, i, self) => {\n      \n\n  \n      return (\n        <Fragment key={str}>\n          <em className={styles.highlight}>{str}</em>\n          {i !== self.length - 1 && ', '}\n        </Fragment>\n      );\n    });\n  \n    return (\n      <div className={styles.card}>\n        <div className={styles.header}>\n          <span className={styles.logo}>\n            <Logo type=\"proAlt\" height={21} />\n          </span>\n          <span>{completionTime}</span>\n        </div>\n        <p className={styles.title}>Includes</p>\n        <p className={styles.content}>{includesWithClass}</p>\n        <p className={styles.title}>Experience</p>\n        <p className={styles.content}>For the {experience} </p>\n        <p className={styles.title}>Good morning</p>\n        <ul className={styles.content}>\n          {included.map((item) => (\n            <li key={item.title}>{item.title}</li>\n          ))}\n        </ul>\n        <p className={styles.title}>Earn</p>\n        <p className={styles.content}>Certificate of Completion</p>\n      </div>\n    );\n  };"]},"metadata":{},"sourceType":"module"}