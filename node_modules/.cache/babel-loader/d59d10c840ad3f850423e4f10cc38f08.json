{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11,_templateObject12,_templateObject13;import{pxRem,theme}from'@codecademy/gamut-styles';import{css}from'@emotion/react';export var colorStates={base:{color:theme.colors.navy,placeholder:theme.colors['gray-900'],backgroundColor:theme.colors.white,borderColor:theme.colors['gray-600']},hover:{borderColor:theme.colors.hyper},disabled:{color:theme.colors['gray-900'],backgroundColor:theme.colors['gray-100'],borderColor:theme.colors['gray-900']},error:{color:theme.colors.red,borderColor:theme.colors.red},valid:{color:theme.colors.green},activated:{borderColor:theme.colors.navy},dropdown:{focused:{backgroundColor:theme.colors['gray-100']},selected:{backgroundColor:theme.colors['gray-300']}}};// these are split for now because ReactRecurly demands separate styles for focus.\nexport var formFieldFocusStyles=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-color: \",\";\\n  box-shadow: inset 0 0 0 1px \",\";\\n\"])),colorStates.hover.borderColor,colorStates.hover.borderColor);var formFieldDisabledStyles=css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border-color: \",\";\\n  color: \",\";\\n  font-style: italic;\\n  cursor: not-allowed;\\n  &:hover {\\n    border-color: \",\";\\n  }\\n\"])),colorStates.disabled.backgroundColor,colorStates.disabled.borderColor,colorStates.disabled.color,colorStates.disabled.borderColor);export var conditionalBorderStyles=function conditionalBorderStyles(_ref){var error=_ref.error,activated=_ref.activated,isFocused=_ref.isFocused,isDisabled=_ref.isDisabled;if(isDisabled){return formFieldDisabledStyles;}if(error&&isFocused){return css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n      border-color: \",\";\\n      box-shadow: inset 0 0 0 1px \",\";\\n\\n      &:hover {\\n        border-color: \",\";\\n      }\\n    \"])),colorStates.error.borderColor,colorStates.error.borderColor,colorStates.error.borderColor);}if(error){return css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n      border-color: \",\";\\n\\n      &:hover {\\n        border-color: \",\";\\n      }\\n    \"])),colorStates.error.borderColor,colorStates.error.borderColor);}if(isFocused){return css(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n      border-color: \",\";\\n      box-shadow: inset 0 0 0 1px \",\";\\n    \"])),colorStates.hover.borderColor,colorStates.hover.borderColor);}if(activated){return css(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n      border-color: \",\";\\n    \"])),colorStates.activated.borderColor);}};var transitionConcatenator=function transitionConcatenator(arrayOfProperties,transition){var cssString=\"\".concat(arrayOfProperties.join(\" \".concat(transition,\",\")),\" \").concat(transition);return css(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    transition: \",\";\\n  \"])),cssString);};export var formBaseStyles=css(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-weight: normal;\\n  font-size: \",\";\\n\"])),colorStates.base.color,theme.fontSize[16]);export var formBaseComponentStyles=css(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  \",\"\\n  width: 100%;\\n  outline: none;\\n  background-color: \",\";\\n  min-width: auto;\\n\"])),formBaseStyles,colorStates.base.backgroundColor);export var formDropdownStyles=function formDropdownStyles(error){return css(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  \",\"\\n  position: absolute;\\n  margin-top: -2px;\\n  border: 1px solid \",\";\\n  border-top: 1px solid\\n    \",\";\\n  z-index: 2;\\n\"])),formBaseComponentStyles,colorStates.activated.borderColor,error?colorStates.error.borderColor:colorStates.hover.borderColor);};export var formBaseFieldStyles=css(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  \",\"\\n  \",\"\\n  border: 1px solid \",\";\\n  border-radius: 2px;\\n\\n  &:hover {\\n    border-color: \",\";\\n  }\\n\\n  &::placeholder {\\n    color: \",\";\\n    font-style: italic;\\n  }\\n\\n  &:disabled,\\n  [disabled] {\\n    \",\";\\n    opacity: 1;\\n  }\\n\"])),formBaseComponentStyles,transitionConcatenator(['border-color','box-shadow'],'0.2s ease-in-out'),colorStates.base.borderColor,colorStates.hover.borderColor,colorStates.base.placeholder,formFieldDisabledStyles);// ReactRecurly needs to apply padding in a very particular way\nexport var formFieldPaddingStyles=css(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: \",\" \",\";\\n\"])),pxRem(11),theme.spacing[8]);export var formFieldStyles=css(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  \",\"\\n  &:focus {\\n    \",\"\\n  }\\n  \",\"\\n\"])),formBaseFieldStyles,formFieldFocusStyles,formFieldPaddingStyles);","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/overrides/Form/styles/shared.tsx"],"names":["pxRem","theme","css","colorStates","base","color","colors","navy","placeholder","backgroundColor","white","borderColor","hover","hyper","disabled","error","red","valid","green","activated","dropdown","focused","selected","formFieldFocusStyles","formFieldDisabledStyles","conditionalBorderStyles","isFocused","isDisabled","transitionConcatenator","arrayOfProperties","transition","cssString","join","formBaseStyles","fontSize","formBaseComponentStyles","formDropdownStyles","formBaseFieldStyles","formFieldPaddingStyles","spacing","formFieldStyles"],"mappings":"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","sourcesContent":["import { pxRem, theme } from '@codecademy/gamut-styles';\nimport { css } from '@emotion/react';\nimport { StandardPropertiesHyphen } from 'csstype';\n\nimport { conditionalStyleProps } from './shared-system-props';\n\nexport const colorStates = {\n  base: {\n    color: theme.colors.navy,\n    placeholder: theme.colors['gray-900'],\n    backgroundColor: theme.colors.white,\n    borderColor: theme.colors['gray-600'],\n  },\n  hover: { borderColor: theme.colors.hyper },\n  disabled: {\n    color: theme.colors['gray-900'],\n    backgroundColor: theme.colors['gray-100'],\n    borderColor: theme.colors['gray-900'],\n  },\n  error: { color: theme.colors.red, borderColor: theme.colors.red },\n  valid: { color: theme.colors.green },\n  activated: { borderColor: theme.colors.navy },\n  dropdown: {\n    focused: { backgroundColor: theme.colors['gray-100'] },\n    selected: { backgroundColor: theme.colors['gray-300'] },\n  },\n};\n\n// these are split for now because ReactRecurly demands separate styles for focus.\nexport const formFieldFocusStyles = css`\n  border-color: ${colorStates.hover.borderColor};\n  box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n`;\n\nconst formFieldDisabledStyles = css`\n  background-color: ${colorStates.disabled.backgroundColor};\n  border-color: ${colorStates.disabled.borderColor};\n  color: ${colorStates.disabled.color};\n  font-style: italic;\n  cursor: not-allowed;\n  &:hover {\n    border-color: ${colorStates.disabled.borderColor};\n  }\n`;\n\nexport const conditionalBorderStyles = ({\n  error,\n  activated,\n  isFocused,\n  isDisabled,\n}: conditionalStyleProps) => {\n  if (isDisabled) {\n    return formFieldDisabledStyles;\n  }\n\n  if (error && isFocused) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (error) {\n    return css`\n      border-color: ${colorStates.error.borderColor};\n\n      &:hover {\n        border-color: ${colorStates.error.borderColor};\n      }\n    `;\n  }\n\n  if (isFocused) {\n    return css`\n      border-color: ${colorStates.hover.borderColor};\n      box-shadow: inset 0 0 0 1px ${colorStates.hover.borderColor};\n    `;\n  }\n\n  if (activated) {\n    return css`\n      border-color: ${colorStates.activated.borderColor};\n    `;\n  }\n};\n\nconst transitionConcatenator = (\n  arrayOfProperties: Array<keyof StandardPropertiesHyphen>,\n  transition: string\n) => {\n  const cssString = `${arrayOfProperties.join(\n    ` ${transition},`\n  )} ${transition}`;\n\n  return css`\n    transition: ${cssString};\n  `;\n};\n\nexport const formBaseStyles = css`\n  color: ${colorStates.base.color};\n  font-weight: normal;\n  font-size: ${theme.fontSize[16]};\n`;\n\nexport const formBaseComponentStyles = css`\n  ${formBaseStyles}\n  width: 100%;\n  outline: none;\n  background-color: ${colorStates.base.backgroundColor};\n  min-width: auto;\n`;\n\nexport const formDropdownStyles = (error: boolean) => css`\n  ${formBaseComponentStyles}\n  position: absolute;\n  margin-top: -2px;\n  border: 1px solid ${colorStates.activated.borderColor};\n  border-top: 1px solid\n    ${error ? colorStates.error.borderColor : colorStates.hover.borderColor};\n  z-index: 2;\n`;\n\nexport const formBaseFieldStyles = css`\n  ${formBaseComponentStyles}\n  ${transitionConcatenator(['border-color', 'box-shadow'], '0.2s ease-in-out')}\n  border: 1px solid ${colorStates.base.borderColor};\n  border-radius: 2px;\n\n  &:hover {\n    border-color: ${colorStates.hover.borderColor};\n  }\n\n  &::placeholder {\n    color: ${colorStates.base.placeholder};\n    font-style: italic;\n  }\n\n  &:disabled,\n  [disabled] {\n    ${formFieldDisabledStyles};\n    opacity: 1;\n  }\n`;\n\n// ReactRecurly needs to apply padding in a very particular way\nexport const formFieldPaddingStyles = css`\n  padding: ${pxRem(11)} ${theme.spacing[8]};\n`;\n\nexport const formFieldStyles = css`\n  ${formBaseFieldStyles}\n  &:focus {\n    ${formFieldFocusStyles}\n  }\n  ${formFieldPaddingStyles}\n`;\n"]},"metadata":{},"sourceType":"module"}