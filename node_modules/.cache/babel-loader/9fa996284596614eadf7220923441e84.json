{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/akrah/Documents/dev/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{AccordionArea,Anchor,Box,Text}from'@codecademy/gamut';import{MiniChevronDownIcon}from'@codecademy/gamut-icons';import styled from'@emotion/styled';import React,{useState}from'react';import{system,transitionConcat}from'@codecademy/gamut-styles';import{SectionItemLink}from'./SectionItemLink';import{SelectedSectionItem}from'./SelectedSectionItem';// this is needed to add a few pixels of extra space for the left side of the focus-visible outline\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledAccordionArea=styled(AccordionArea)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-bottom: \",\";\\n  position: relative;\\n  left: -4px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.spacing[32];});var ExpandChevron=styled(MiniChevronDownIcon)(system.css({transform:'rotate(0deg)',transition:transitionConcat(['transform'],'slow','ease-out')}),system.states({expanded:{transform:'rotate(180deg)'}}));export var AccordionMenu=function AccordionMenu(_ref2){var section=_ref2.section,onSectionToggle=_ref2.onSectionToggle,onItemClick=_ref2.onItemClick,selectedItem=_ref2.selectedItem;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),expanded=_useState2[0],setExpanded=_useState2[1];return/*#__PURE__*/_jsx(StyledAccordionArea,{expanded:expanded,top:/*#__PURE__*/_jsxs(Anchor,{variant:\"interface\",width:\"max-content\",py:12,px:4,onClick:function onClick(){onSectionToggle(section.slug);setExpanded(function(prev){return!prev;});},children:[/*#__PURE__*/_jsx(Text,{variant:\"title-xs\",children:section.title}),/*#__PURE__*/_jsx(ExpandChevron,{ml:12,size:14,expanded:expanded})]}),children:section.items.map(function(item){return/*#__PURE__*/_jsx(Box,{py:8,px:4,children:selectedItem===item.slug?/*#__PURE__*/_jsx(SelectedSectionItem,{children:item.title}):/*#__PURE__*/_jsx(SectionItemLink,{href:item.href,onClick:function onClick(event){item.onClick(event);onItemClick();},children:item.title})},item.slug);})});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/components/gamut-overrides/LayoutMenu/AccordionMenu.tsx"],"names":["AccordionArea","Anchor","Box","Text","MiniChevronDownIcon","styled","React","useState","system","transitionConcat","SectionItemLink","SelectedSectionItem","StyledAccordionArea","theme","spacing","ExpandChevron","css","transform","transition","states","expanded","AccordionMenu","section","onSectionToggle","onItemClick","selectedItem","setExpanded","slug","prev","title","items","map","item","href","event","onClick"],"mappings":"4VAAA,OAASA,aAAT,CAAwBC,MAAxB,CAAgCC,GAAhC,CAAqCC,IAArC,KAAiD,mBAAjD,CACA,OAASC,mBAAT,KAAoC,yBAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAGA,OAASC,MAAT,CAAiBC,gBAAjB,KAAyC,0BAAzC,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,mBAAT,KAAoC,uBAApC,CAEA;wFAEA,GAAMC,CAAAA,mBAAmB,CAAGP,MAAM,CAACL,aAAD,CAAT,iIACL,kBAAGa,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,OAAN,CAAc,EAAd,CAAf,EADK,CAAzB,CAMA,GAAMC,CAAAA,aAAa,CAAGV,MAAM,CAACD,mBAAD,CAAN,CACpBI,MAAM,CAACQ,GAAP,CAAW,CACTC,SAAS,CAAE,cADF,CAETC,UAAU,CAAET,gBAAgB,CAAC,CAAC,WAAD,CAAD,CAAgB,MAAhB,CAAwB,UAAxB,CAFnB,CAAX,CADoB,CAKpBD,MAAM,CAACW,MAAP,CAAc,CACZC,QAAQ,CAAE,CAAEH,SAAS,CAAE,gBAAb,CADE,CAAd,CALoB,CAAtB,CA8BA,MAAO,IAAMI,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,OAKrD,IAJJC,CAAAA,OAII,OAJJA,OAII,CAHJC,eAGI,OAHJA,eAGI,CAFJC,WAEI,OAFJA,WAEI,CADJC,YACI,OADJA,YACI,eAC4BlB,QAAQ,CAAC,IAAD,CADpC,wCACGa,QADH,eACaM,WADb,eAGJ,mBACE,KAAC,mBAAD,EACE,QAAQ,CAAEN,QADZ,CAEE,GAAG,cACD,MAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,aAFR,CAGE,EAAE,CAAE,EAHN,CAIE,EAAE,CAAE,CAJN,CAKE,OAAO,CAAE,kBAAM,CACbG,eAAe,CAACD,OAAO,CAACK,IAAT,CAAf,CACAD,WAAW,CAAC,SAACE,IAAD,QAAU,CAACA,IAAX,EAAD,CAAX,CACD,CARH,wBAUE,KAAC,IAAD,EAAM,OAAO,CAAC,UAAd,UAA0BN,OAAO,CAACO,KAAlC,EAVF,cAWE,KAAC,aAAD,EAAe,EAAE,CAAE,EAAnB,CAAuB,IAAI,CAAE,EAA7B,CAAiC,QAAQ,CAAET,QAA3C,EAXF,GAHJ,UAkBGE,OAAO,CAACQ,KAAR,CAAcC,GAAd,CAAkB,SAACC,IAAD,qBACjB,KAAC,GAAD,EAAqB,EAAE,CAAE,CAAzB,CAA4B,EAAE,CAAE,CAAhC,UACGP,YAAY,GAAKO,IAAI,CAACL,IAAtB,cACC,KAAC,mBAAD,WAAsBK,IAAI,CAACH,KAA3B,EADD,cAGC,KAAC,eAAD,EACE,IAAI,CAAEG,IAAI,CAACC,IADb,CAEE,OAAO,CAAE,iBAACC,KAAD,CAAW,CAClBF,IAAI,CAACG,OAAL,CAAaD,KAAb,EACAV,WAAW,GACZ,CALH,UAOGQ,IAAI,CAACH,KAPR,EAJJ,EAAUG,IAAI,CAACL,IAAf,CADiB,EAAlB,CAlBH,EADF,CAsCD,CA9CM","sourcesContent":["import { AccordionArea, Anchor, Box, Text } from '@codecademy/gamut';\nimport { MiniChevronDownIcon } from '@codecademy/gamut-icons';\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\n\n\nimport { system, transitionConcat } from '@codecademy/gamut-styles';\nimport { SectionItemLink } from './SectionItemLink';\nimport { SelectedSectionItem } from './SelectedSectionItem';\n\n// this is needed to add a few pixels of extra space for the left side of the focus-visible outline\n\nconst StyledAccordionArea = styled(AccordionArea)`\n  padding-bottom: ${({ theme }) => theme.spacing[32]};\n  position: relative;\n  left: -4px;\n`;\n\nconst ExpandChevron = styled(MiniChevronDownIcon)(\n  system.css({\n    transform: 'rotate(0deg)',\n    transition: transitionConcat(['transform'], 'slow', 'ease-out'),\n  }),\n  system.states({\n    expanded: { transform: 'rotate(180deg)' },\n  })\n);\n\nexport type SectionItem = {\n  title: string;\n  slug: string;\n  href: string;\n  onClick: (event: React.MouseEvent) => void;\n};\n\nexport type Section = {\n  title: string;\n  slug: string;\n  items: SectionItem[];\n};\n\nexport type AccordionMenuProps = {\n  section: Section;\n  onSectionToggle: (sectionSlug: string) => void;\n  onItemClick: () => void;\n  selectedItem?: string;\n};\n\nexport const AccordionMenu: React.FC<AccordionMenuProps> = ({\n  section,\n  onSectionToggle,\n  onItemClick,\n  selectedItem,\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <StyledAccordionArea\n      expanded={expanded}\n      top={\n        <Anchor\n          variant=\"interface\"\n          width=\"max-content\"\n          py={12}\n          px={4}\n          onClick={() => {\n            onSectionToggle(section.slug);\n            setExpanded((prev) => !prev);\n          }}\n        >\n          <Text variant=\"title-xs\">{section.title}</Text>\n          <ExpandChevron ml={12} size={14} expanded={expanded} />\n        </Anchor>\n      }\n    >\n      {section.items.map((item) => (\n        <Box key={item.slug} py={8} px={4}>\n          {selectedItem === item.slug ? (\n            <SelectedSectionItem>{item.title}</SelectedSectionItem>\n          ) : (\n            <SectionItemLink\n              href={item.href}\n              onClick={(event) => {\n                item.onClick(event);\n                onItemClick();\n              }}\n            >\n              {item.title}\n            </SectionItemLink>\n          )}\n        </Box>\n      ))}\n    </StyledAccordionArea>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}