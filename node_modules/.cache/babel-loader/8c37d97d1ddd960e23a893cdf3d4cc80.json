{"ast":null,"code":"import _slicedToArray from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import CMSContext from'portal/scenes/Paths/ContentfulContext';// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport{Paths}from'./sample';import RecommendationsPresenter from'./Recommendations';import{jsx as _jsx}from\"react/jsx-runtime\";export var Recommendations=function Recommendations(_ref){var pathId=_ref.pathId,related=_ref.related;var cms=useContext(CMSContext);var pathIds=cms.other_path_ids;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),paths=_useState2[0],setPaths=_useState2[1];return/*#__PURE__*/_jsx(RecommendationsPresenter,{projects:related,pathId:pathId,paths:Paths,cms:cms});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/portal/scenes/Paths/PathMarketingPage/Recommendations/index.tsx"],"names":["React","useContext","useState","CMSContext","Paths","RecommendationsPresenter","Recommendations","pathId","related","cms","pathIds","other_path_ids","paths","setPaths"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAAuCC,QAAvC,KAAuD,OAAvD,CAIA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA;AAEA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,mBAArC,C,2CAQA,MAAO,IAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAAyB,IAAtBC,CAAAA,MAAsB,MAAtBA,MAAsB,CAAdC,OAAc,MAAdA,OAAc,CACtF,GAAMC,CAAAA,GAAG,CAAGR,UAAU,CAACE,UAAD,CAAtB,CADsF,GAE9DO,CAAAA,OAF8D,CAElDD,GAFkD,CAE9EE,cAF8E,eAI5DT,QAAQ,CAAS,EAAT,CAJoD,wCAI/EU,KAJ+E,eAIxEC,QAJwE,eAOtF,mBAAO,KAAC,wBAAD,EAA0B,QAAQ,CAAGL,OAArC,CAA8C,MAAM,CAAED,MAAtD,CAA8D,KAAK,CAAEH,KAArE,CAA4E,GAAG,CAAEK,GAAjF,EAAP,CACD,CARM","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { contentServiceRequest } from 'libs/contentServiceRequest';\nimport CMSContext from 'portal/scenes/Paths/ContentfulContext';\n// import { selectUserJWT } from '~/state/currentUser/selectors';\nimport { Path } from 'typings/path';\nimport { Paths } from './sample';\nimport RecommendationsPresenter from './Recommendations';\nimport type { ProjectEntityResponse } from 'services/projects';\n\nexport type RecommendationsProps = {\n  pathId: string;\n  related: ProjectEntityResponse[]\n};\n\nexport const Recommendations: React.FC<RecommendationsProps> = ({ pathId, related }) => {\n  const cms = useContext(CMSContext);\n  const { other_path_ids: pathIds } = cms;\n\n  const [paths, setPaths] = useState<Path[]>([]);\n  \n\n  return <RecommendationsPresenter projects ={related} pathId={pathId} paths={Paths} cms={cms} />;\n};\n"]},"metadata":{},"sourceType":"module"}