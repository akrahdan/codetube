{"ast":null,"code":"function focusWithin(document, opts) {\n  const className = Object(opts).className;\n  const attr = Object(opts).attr || 'focus-within';\n  const force = Object(opts).force;\n  const lastElements = [];\n\n  try {\n    document.querySelector(':focus-within');\n\n    if (!force) {\n      return initialize;\n    }\n  } catch (ignoredError) {\n    /* do nothing and continue */\n  }\n\n  function onfocuschange() {\n    let lastElement;\n\n    while (lastElement = lastElements.pop()) {\n      if (attr) {\n        lastElement.removeAttribute(attr);\n      }\n\n      if (className) {\n        lastElement.classList.remove(className);\n      }\n    }\n\n    let activeElement = document.activeElement; // only add focus if it has not been added and is not the document element\n\n    if (!/^(#document|HTML|BODY)$/.test(Object(activeElement).nodeName)) {\n      while (activeElement && activeElement.nodeType === 1) {\n        if (attr) {\n          activeElement.setAttribute(attr, '');\n        }\n\n        if (className) {\n          activeElement.classList.add(className);\n        }\n\n        lastElements.push(activeElement);\n        activeElement = activeElement.parentNode;\n      }\n    }\n  }\n\n  function initialize() {\n    document.addEventListener('focus', onfocuschange, true);\n    document.addEventListener('blur', onfocuschange, true);\n  }\n  /**\n  * Callback wrapper for check loaded state\n  */\n\n  /* eslint-disable */\n\n\n  !function load() {\n    if (/m/.test(document.readyState)) {\n      document.removeEventListener('readystatechange', load) | initialize();\n    } else {\n      document.addEventListener('readystatechange', load);\n    }\n  }();\n  /* eslint-enable */\n\n  return initialize;\n}\n\nexport default focusWithin;","map":{"version":3,"sources":["src/browser.js"],"names":["className","Object","attr","force","lastElements","document","lastElement","activeElement","initialize"],"mappings":"AAAe,SAAA,WAAA,CAAA,QAAA,EAAA,IAAA,EAAqC;QAC7CA,SAAS,GAAGC,MAAM,CAANA,IAAM,CAANA,CAAlB,S;QACMC,IAAI,GAAGD,MAAM,CAANA,IAAM,CAANA,CAAAA,IAAAA,IAAb,c;QACME,KAAK,GAAGF,MAAM,CAANA,IAAM,CAANA,CAAd,K;QACMG,YAAY,GAAlB,E;;MAEI;AACHC,IAAAA,QAAQ,CAARA,aAAAA,CAAAA,eAAAA;;QAEI,CAAJ,K,EAAY;aACX,U;;AAJF,G,CAME,OAAA,YAAA,EAAqB;;;;WAEvB,a,GAAyB;QACxB,W;;WAEOC,WAAW,GAAGF,YAAY,CAAjC,GAAqBA,E,EAAoB;UACxC,I,EAAU;AACTE,QAAAA,WAAW,CAAXA,eAAAA,CAAAA,IAAAA;;;UAGD,S,EAAe;AACdA,QAAAA,WAAW,CAAXA,SAAAA,CAAAA,MAAAA,CAAAA,SAAAA;;;;QAIEC,aAAa,GAAGF,QAAQ,CAbJ,a,CAAA,CAAA;;QAgBpB,CAAC,0BAAA,IAAA,CAA+BJ,MAAM,CAANA,aAAM,CAANA,CAApC,QAAK,C,EAAgE;aAC7DM,aAAa,IAAIA,aAAa,CAAbA,QAAAA,KAAxB,C,EAAsD;YACrD,I,EAAU;AACTA,UAAAA,aAAa,CAAbA,YAAAA,CAAAA,IAAAA,EAAAA,EAAAA;;;YAGD,S,EAAe;AACdA,UAAAA,aAAa,CAAbA,SAAAA,CAAAA,GAAAA,CAAAA,SAAAA;;;AAGDH,QAAAA,YAAY,CAAZA,IAAAA,CAAAA,aAAAA;AAEAG,QAAAA,aAAa,GAAGA,aAAa,CAA7BA,UAAAA;;;;;WAKH,U,GAAsB;AACrBF,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,OAAAA,EAAAA,aAAAA,EAAAA,IAAAA;AACAA,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,MAAAA,EAAAA,aAAAA,EAAAA,IAAAA;;;;;;;;;GAOA,SAAA,IAAA,GAAgB;QACZ,IAAA,IAAA,CAASA,QAAQ,CAArB,UAAI,C,EAA+B;AAClCA,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,kBAAAA,EAAAA,IAAAA,IAAyDG,UAAzDH,EAAAA;AADD,K,MAEO;AACNA,MAAAA,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAAAA,IAAAA;;AAJF,GAAC,E;;;SASD,U","sourcesContent":["export default function focusWithin(document, opts) {\n\tconst className = Object(opts).className;\n\tconst attr = Object(opts).attr || 'focus-within';\n\tconst force = Object(opts).force;\n\tconst lastElements = [];\n\n\ttry {\n\t\tdocument.querySelector(':focus-within');\n\n\t\tif (!force) {\n\t\t\treturn initialize;\n\t\t}\n\t} catch (ignoredError) { /* do nothing and continue */ }\n\n\tfunction onfocuschange() {\n\t\tlet lastElement;\n\n\t\twhile (lastElement = lastElements.pop()) {\n\t\t\tif (attr) {\n\t\t\t\tlastElement.removeAttribute(attr);\n\t\t\t}\n\n\t\t\tif (className) {\n\t\t\t\tlastElement.classList.remove(className);\n\t\t\t}\n\t\t}\n\n\t\tlet activeElement = document.activeElement;\n\n\t\t// only add focus if it has not been added and is not the document element\n\t\tif (!/^(#document|HTML|BODY)$/.test(Object(activeElement).nodeName)) {\n\t\t\twhile (activeElement && activeElement.nodeType === 1) {\n\t\t\t\tif (attr) {\n\t\t\t\t\tactiveElement.setAttribute(attr, '');\n\t\t\t\t}\n\n\t\t\t\tif (className) {\n\t\t\t\t\tactiveElement.classList.add(className);\n\t\t\t\t}\n\n\t\t\t\tlastElements.push(activeElement);\n\n\t\t\t\tactiveElement = activeElement.parentNode;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initialize() {\n\t\tdocument.addEventListener('focus', onfocuschange, true);\n\t\tdocument.addEventListener('blur', onfocuschange, true);\n\t}\n\n\t/**\n\t* Callback wrapper for check loaded state\n\t*/\n\t/* eslint-disable */\n\t!function load() {\n\t\tif (/m/.test(document.readyState)) {\n\t\t\tdocument.removeEventListener('readystatechange', load) | initialize();\n\t\t} else {\n\t\t\tdocument.addEventListener('readystatechange', load);\n\t\t}\n\t}()\n\t/* eslint-enable */\n\n\treturn initialize;\n}\n"]},"metadata":{},"sourceType":"module"}