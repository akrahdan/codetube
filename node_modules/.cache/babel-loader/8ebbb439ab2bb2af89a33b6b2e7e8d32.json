{"ast":null,"code":"import _objectSpread from\"/Users/akrah/Documents/dev/readux/src/codefluent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Box}from'../../Box';import{CTAButton,FillButton,TextButton}from'../../Button';import{ButtonDeprecated}from'../../ButtonDeprecated';import{Column}from'../../Layout';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var positions={left:'flex-start',center:'center',right:'flex-end',stretch:'stretch'};export var GridFormButtons=function GridFormButtons(props){var getButton=function getButton(){switch(props.type){case'cta':return/*#__PURE__*/_jsx(CTAButton,{type:\"submit\",mode:props.mode,disabled:props.disabled,children:props.contents});case'business':/**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */return/*#__PURE__*/_jsx(ButtonDeprecated,{disabled:props.disabled,outline:props.outline,theme:props.theme,type:\"submit\",children:props.contents});default:return/*#__PURE__*/_jsx(FillButton,{type:\"submit\",mode:props.mode,disabled:props.disabled,children:props.contents});}};return/*#__PURE__*/_jsx(Column,{size:props.size,children:/*#__PURE__*/_jsxs(Box,{mb:8,alignSelf:\"center\",justifySelf:positions[props.position||'left'],children:[props.cancel&&/*#__PURE__*/_jsx(TextButton,_objectSpread(_objectSpread({},props.cancel),{},{mr:32,\"data-testid\":\"cancel-button\"})),getButton()]})});};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/GridForm/GridFormButtons/index.tsx"],"names":["React","Box","CTAButton","FillButton","TextButton","ButtonDeprecated","Column","positions","left","center","right","stretch","GridFormButtons","props","getButton","type","mode","disabled","contents","outline","theme","size","position","cancel"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,KAAsC,OAAtC,CAEA,OAASC,GAAT,KAAoB,WAApB,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,UAAhC,KAAkD,cAAlD,CAEA,OACEC,gBADF,KAGO,wBAHP,CAIA,OAASC,MAAT,KAAuB,cAAvB,C,wFAwCA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,IAAI,CAAE,YADU,CAEhBC,MAAM,CAAE,QAFQ,CAGhBC,KAAK,CAAE,UAHS,CAIhBC,OAAO,CAAE,SAJO,CAAlB,CAOA,MAAO,IAAMC,CAAAA,eAEZ,CAAG,QAFSA,CAAAA,eAET,CAACC,KAAD,CAAW,CACb,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,OAAQD,KAAK,CAACE,IAAd,EACE,IAAK,KAAL,CACE,mBACE,KAAC,SAAD,EAAW,IAAI,CAAC,QAAhB,CAAyB,IAAI,CAAEF,KAAK,CAACG,IAArC,CAA2C,QAAQ,CAAEH,KAAK,CAACI,QAA3D,UACGJ,KAAK,CAACK,QADT,EADF,CAKF,IAAK,UAAL,CACE;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WACQ,mBACE,KAAC,gBAAD,EACE,QAAQ,CAAEL,KAAK,CAACI,QADlB,CAEE,OAAO,CAAEJ,KAAK,CAACM,OAFjB,CAGE,KAAK,CAAEN,KAAK,CAACO,KAHf,CAIE,IAAI,CAAC,QAJP,UAMGP,KAAK,CAACK,QANT,EADF,CAUF,QACE,mBACE,KAAC,UAAD,EAAY,IAAI,CAAC,QAAjB,CAA0B,IAAI,CAAEL,KAAK,CAACG,IAAtC,CAA4C,QAAQ,CAAEH,KAAK,CAACI,QAA5D,UACGJ,KAAK,CAACK,QADT,EADF,CA3BJ,CAiCD,CAlCD,CAoCA,mBACE,KAAC,MAAD,EAAQ,IAAI,CAAEL,KAAK,CAACQ,IAApB,uBACE,MAAC,GAAD,EACE,EAAE,CAAE,CADN,CAEE,SAAS,CAAC,QAFZ,CAGE,WAAW,CAAEd,SAAS,CAACM,KAAK,CAACS,QAAN,EAAkB,MAAnB,CAHxB,WAKGT,KAAK,CAACU,MAAN,eACC,KAAC,UAAD,gCAAgBV,KAAK,CAACU,MAAtB,MAA8B,EAAE,CAAE,EAAlC,CAAsC,cAAY,eAAlD,GANJ,CAQGT,SAAS,EARZ,GADF,EADF,CAcD,CArDM","sourcesContent":["import React, { ComponentProps } from 'react';\n\nimport { Box } from '../../Box';\nimport { CTAButton, FillButton, TextButton } from '../../Button';\nimport { ButtonProps } from '../../Button/shared';\nimport {\n  ButtonDeprecated,\n  ButtonDeprecatedProps,\n} from '../../ButtonDeprecated';\nimport { Column } from '../../Layout';\nimport { VisualTheme } from '../../theming/VisualTheme';\n\nexport type GridFormButtonsPosition = keyof typeof positions;\n\nexport type SubmitButtonType = 'cta' | 'fill';\nexport type SubmitButtonDeprecatedType = 'business';\n\ntype GridFormBase = {\n  contents: React.ReactNode;\n  position?: GridFormButtonsPosition;\n  size: ComponentProps<typeof Column>['size'];\n  disabled?: ButtonDeprecatedProps['disabled'];\n  mode?: VisualTheme;\n};\n\ntype GridFormButtonSubmitPropsDeprecated = GridFormBase & {\n  type?: SubmitButtonDeprecatedType;\n  theme?: ButtonDeprecatedProps['theme'];\n  outline?: ButtonDeprecatedProps['outline'];\n};\n\ntype GridFormSubmitPropsStandard = GridFormBase & {\n  type?: SubmitButtonType;\n};\n\nexport type GridFormSubmitProps =\n  | GridFormButtonSubmitPropsDeprecated\n  | GridFormSubmitPropsStandard;\n\nexport type GridFormCancelButtonProps = {\n  children: React.ReactNode;\n  href?: 'string';\n  onClick?: () => void;\n};\n\ntype CancelButtonProps = {\n  cancel?: ButtonProps;\n};\n\nconst positions = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch',\n};\n\nexport const GridFormButtons: React.FC<\n  GridFormSubmitProps & CancelButtonProps\n> = (props) => {\n  const getButton = () => {\n    switch (props.type) {\n      case 'cta':\n        return (\n          <CTAButton type=\"submit\" mode={props.mode} disabled={props.disabled}>\n            {props.contents}\n          </CTAButton>\n        );\n      case 'business':\n        /**\n         * There are current designs that currently rely on the deprecated button.\n         * Primarily business components such as /WorkerSupportApplication/index.tsx,\n         * /PlanInvitationBulkForm/PlanInvitationBulkForm.tsx and /PlanInvitationForm/PlanInvitationForm.tsx\n         * currently using brand-blue variant of the deprecated button. With the later two also using the also\n         * using the outline button. Once work is finished for the colorMode changes for buttons the deprecated button\n         * can be removed.\n         */\n        return (\n          <ButtonDeprecated\n            disabled={props.disabled}\n            outline={props.outline}\n            theme={props.theme}\n            type=\"submit\"\n          >\n            {props.contents}\n          </ButtonDeprecated>\n        );\n      default:\n        return (\n          <FillButton type=\"submit\" mode={props.mode} disabled={props.disabled}>\n            {props.contents}\n          </FillButton>\n        );\n    }\n  };\n\n  return (\n    <Column size={props.size}>\n      <Box\n        mb={8}\n        alignSelf=\"center\"\n        justifySelf={positions[props.position || 'left']}\n      >\n        {props.cancel && (\n          <TextButton {...props.cancel} mr={32} data-testid=\"cancel-button\" />\n        )}\n        {getButton()}\n      </Box>\n    </Column>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}