{"ast":null,"code":"import { updateScroll } from '../connectRoutes';\nexport default (function (dispatch, getState, route, selectLocationState, bag) {\n  if (typeof window !== 'undefined') {\n    var thunk = route.thunk;\n\n    if (typeof thunk === 'function') {\n      var _selectLocationState = selectLocationState(getState()),\n          kind = _selectLocationState.kind,\n          hasSSR = _selectLocationState.hasSSR; // call thunks always if it's not initial load of the app or only if it's load\n      // without SSR setup yet, so app state is setup on client when prototyping,\n      // such as with with webpack-dev-server before server infrastructure is built.\n      // NEW: if there is no path, it's assumed to be a pathless route, which is always called.\n\n\n      if (kind !== 'load' || kind === 'load' && !hasSSR || !route.path) {\n        var prom = thunk(dispatch, getState, bag);\n\n        if (prom && typeof prom.next === 'function') {\n          prom.next(updateScroll);\n        }\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/node_modules/redux-first-router/dist/es/pure-utils/attemptCallRouteThunk.js"],"names":["updateScroll","dispatch","getState","route","selectLocationState","bag","window","thunk","_selectLocationState","kind","hasSSR","path","prom","next"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAGA,gBAAgB,UAAUC,QAAV,EAAoBC,QAApB,EAA8BC,KAA9B,EAAqCC,mBAArC,EAA0DC,GAA1D,EAA+D;AAC7E,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,KAAK,GAAGJ,KAAK,CAACI,KAAlB;;AAEA,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAIC,oBAAoB,GAAGJ,mBAAmB,CAACF,QAAQ,EAAT,CAA9C;AAAA,UACIO,IAAI,GAAGD,oBAAoB,CAACC,IADhC;AAAA,UAEIC,MAAM,GAAGF,oBAAoB,CAACE,MAFlC,CAD+B,CAK/B;AACA;AACA;AACA;;;AAGA,UAAID,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,MAAT,IAAmB,CAACC,MAAvC,IAAiD,CAACP,KAAK,CAACQ,IAA5D,EAAkE;AAChE,YAAIC,IAAI,GAAGL,KAAK,CAACN,QAAD,EAAWC,QAAX,EAAqBG,GAArB,CAAhB;;AAEA,YAAIO,IAAI,IAAI,OAAOA,IAAI,CAACC,IAAZ,KAAqB,UAAjC,EAA6C;AAC3CD,UAAAA,IAAI,CAACC,IAAL,CAAUb,YAAV;AACD;AACF;AACF;AACF;AACF,CAxBD","sourcesContent":["import { updateScroll } from '../connectRoutes';\n\n\nexport default (function (dispatch, getState, route, selectLocationState, bag) {\n  if (typeof window !== 'undefined') {\n    var thunk = route.thunk;\n\n    if (typeof thunk === 'function') {\n      var _selectLocationState = selectLocationState(getState()),\n          kind = _selectLocationState.kind,\n          hasSSR = _selectLocationState.hasSSR;\n\n      // call thunks always if it's not initial load of the app or only if it's load\n      // without SSR setup yet, so app state is setup on client when prototyping,\n      // such as with with webpack-dev-server before server infrastructure is built.\n      // NEW: if there is no path, it's assumed to be a pathless route, which is always called.\n\n\n      if (kind !== 'load' || kind === 'load' && !hasSSR || !route.path) {\n        var prom = thunk(dispatch, getState, bag);\n\n        if (prom && typeof prom.next === 'function') {\n          prom.next(updateScroll);\n        }\n      }\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}