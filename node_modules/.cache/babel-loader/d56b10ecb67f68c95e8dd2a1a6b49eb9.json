{"ast":null,"code":"import { theme, variant } from '@codecademy/gamut-styles';\nimport { ButtonSelectors } from '../ButtonBase/ButtonBase';\nimport { buttonVariants, templateVariants } from './shared';\nexport const fillButtonVariants = templateVariants(buttonVariants, variant => ({\n  bg: variant,\n  color: 'background',\n  [ButtonSelectors.OUTLINE]: {\n    borderColor: variant\n  },\n  [ButtonSelectors.HOVER]: {\n    bg: `${variant}-hover`,\n    color: 'background'\n  },\n  [ButtonSelectors.ACTIVE]: {\n    borderColor: 'text',\n    bg: variant,\n    color: 'background'\n  },\n  [ButtonSelectors.DISABLED]: {\n    color: 'text-disabled',\n    bg: 'background-disabled'\n  }\n}));\nexport const textButtonVariants = templateVariants(buttonVariants, variant => ({\n  borderColor: 'transparent',\n  color: variant,\n  [ButtonSelectors.OUTLINE]: {\n    borderColor: variant\n  },\n  [ButtonSelectors.HOVER]: {\n    bg: 'background-selected'\n  },\n  [ButtonSelectors.ACTIVE]: {\n    bg: 'transparent',\n    color: 'text'\n  },\n  [ButtonSelectors.DISABLED]: {\n    color: 'text-disabled',\n    bg: 'transparent'\n  }\n}));\nexport const strokeButtonVariants = templateVariants(buttonVariants, variant => ({\n  borderColor: variant,\n  bg: 'transparent',\n  color: variant,\n  [ButtonSelectors.OUTLINE]: {\n    borderColor: variant\n  },\n  [ButtonSelectors.HOVER]: {\n    bg: 'background-selected'\n  },\n  [ButtonSelectors.ACTIVE]: {\n    bg: variant,\n    color: 'background'\n  },\n  [ButtonSelectors.DISABLED]: {\n    borderColor: 'background-disabled',\n    color: 'text-disabled',\n    bg: 'transparent'\n  }\n}));\nexport const ctaButtonVariants = templateVariants(['primary'], variant => ({\n  borderRadius: '2px',\n  fontFamily: 'accent',\n  fontWeight: 'title',\n  boxShadow: `-4px 4px 0 0 ${theme.colors.text}`,\n  color: 'background',\n  py: 12,\n  px: 24,\n  bg: variant,\n  [ButtonSelectors.OUTLINE]: {\n    borderColor: variant,\n    bottom: -9,\n    left: -9\n  },\n  [ButtonSelectors.HOVER]: {\n    boxShadow: `-8px 8px 0 0 ${theme.colors.text}`\n  },\n  [ButtonSelectors.ACTIVE]: {\n    boxShadow: 'none',\n    bg: 'secondary'\n  },\n  [ButtonSelectors.DISABLED]: {\n    boxShadow: 'none',\n    color: 'text-disabled',\n    bg: 'background-disabled'\n  }\n}));\nexport const sizeVariants = variant({\n  prop: 'size',\n  defaultVariant: 'normal',\n  variants: {\n    normal: {\n      fontSize: 16,\n      height: 40,\n      minWidth: 40,\n      py: 4,\n      px: 16\n    },\n    small: {\n      fontSize: 14,\n      height: 32,\n      minWidth: 32,\n      py: 4,\n      px: 8\n    }\n  }\n});\nexport const iconSizeVariants = variant({\n  prop: 'size',\n  defaultVariant: 'normal',\n  variants: {\n    normal: {\n      height: 40,\n      width: 40\n    },\n    small: {\n      height: 32,\n      width: 32\n    }\n  }\n});","map":{"version":3,"sources":["/Users/akrah/Documents/dev/readux/src/codefluent/src/components/overrides/Button/variants.ts"],"names":["theme","variant","ButtonSelectors","buttonVariants","templateVariants","fillButtonVariants","bg","color","OUTLINE","borderColor","HOVER","ACTIVE","DISABLED","textButtonVariants","strokeButtonVariants","ctaButtonVariants","borderRadius","fontFamily","fontWeight","boxShadow","colors","text","py","px","bottom","left","sizeVariants","prop","defaultVariant","variants","normal","fontSize","height","minWidth","small","iconSizeVariants","width"],"mappings":"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","sourcesContent":["import { theme, variant } from '@codecademy/gamut-styles';\n\nimport { ButtonSelectors } from '../ButtonBase/ButtonBase';\nimport { buttonVariants, templateVariants } from './shared';\n\nexport const fillButtonVariants = templateVariants(\n  buttonVariants,\n  (variant) => ({\n    bg: variant,\n    color: 'background',\n    [ButtonSelectors.OUTLINE]: { borderColor: variant },\n    [ButtonSelectors.HOVER]: {\n      bg: `${variant}-hover`,\n      color: 'background',\n    },\n    [ButtonSelectors.ACTIVE]: {\n      borderColor: 'text',\n      bg: variant,\n      color: 'background',\n    },\n    [ButtonSelectors.DISABLED]: {\n      color: 'text-disabled',\n      bg: 'background-disabled',\n    },\n  })\n);\n\nexport const textButtonVariants = templateVariants(\n  buttonVariants,\n  (variant) => ({\n    borderColor: 'transparent',\n    color: variant,\n    [ButtonSelectors.OUTLINE]: { borderColor: variant },\n    [ButtonSelectors.HOVER]: {\n      bg: 'background-selected',\n    },\n    [ButtonSelectors.ACTIVE]: {\n      bg: 'transparent',\n      color: 'text',\n    },\n    [ButtonSelectors.DISABLED]: {\n      color: 'text-disabled',\n      bg: 'transparent',\n    },\n  })\n);\n\nexport const strokeButtonVariants = templateVariants(\n  buttonVariants,\n  (variant) => ({\n    borderColor: variant,\n    bg: 'transparent',\n    color: variant,\n    [ButtonSelectors.OUTLINE]: {\n      borderColor: variant,\n    },\n    [ButtonSelectors.HOVER]: {\n      bg: 'background-selected',\n    },\n    [ButtonSelectors.ACTIVE]: {\n      bg: variant,\n      color: 'background',\n    },\n    [ButtonSelectors.DISABLED]: {\n      borderColor: 'background-disabled',\n      color: 'text-disabled',\n      bg: 'transparent',\n    },\n  })\n);\n\nexport const ctaButtonVariants = templateVariants(['primary'], (variant) => ({\n  borderRadius: '2px',\n  fontFamily: 'accent',\n  fontWeight: 'title',\n  boxShadow: `-4px 4px 0 0 ${theme.colors.text}`,\n  color: 'background',\n  py: 12,\n  px: 24,\n  bg: variant,\n  [ButtonSelectors.OUTLINE]: {\n    borderColor: variant,\n    bottom: -9,\n    left: -9,\n  },\n  [ButtonSelectors.HOVER]: {\n    boxShadow: `-8px 8px 0 0 ${theme.colors.text}`,\n  },\n  [ButtonSelectors.ACTIVE]: {\n    boxShadow: 'none',\n    bg: 'secondary',\n  },\n  [ButtonSelectors.DISABLED]: {\n    boxShadow: 'none',\n    color: 'text-disabled',\n    bg: 'background-disabled',\n  },\n}));\n\nexport const sizeVariants = variant({\n  prop: 'size',\n  defaultVariant: 'normal',\n  variants: {\n    normal: {\n      fontSize: 16,\n      height: 40,\n      minWidth: 40,\n      py: 4,\n      px: 16,\n    },\n    small: {\n      fontSize: 14,\n      height: 32,\n      minWidth: 32,\n      py: 4,\n      px: 8,\n    },\n  },\n});\n\nexport const iconSizeVariants = variant({\n  prop: 'size',\n  defaultVariant: 'normal',\n  variants: {\n    normal: {\n      height: 40,\n      width: 40,\n    },\n    small: {\n      height: 32,\n      width: 32,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}