{"ast":null,"code":"const existingCareerPaths = new Set(['web-development', 'data-science', 'code-foundations', 'computer-science']);\nexport const isValidPortalRedirect = redirectUrl => !!redirectUrl && (redirectUrl.includes('courses') || redirectUrl.includes('paths') || redirectUrl.includes('learn') || redirectUrl.includes('catalog'));\nexport const isProMembershipRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return (redirectValues[0] === 'pro' || redirectValues[1] === 'pro') && (redirectValues[1].split('?')[0] === 'membership' || redirectValues[2].split('?')[0] === 'membership');\n};\nexport const isCareerPathPageRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'learn' && redirectValues[2] === 'paths' && existingCareerPaths.has(redirectValues[3]);\n};\nexport const isSkillPathPageRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'learn' && redirectValues[2] === 'paths' && !existingCareerPaths.has(redirectValues[3]);\n};\nexport const isHomePageRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('?')[0].split('/');\n  return redirectUrl === '' || redirectUrl[1] === '' || redirectValues[1] === 'register' || redirectValues[1] === 'login';\n};\nexport const isCoursePageRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'learn' && !isCareerPathPageRedirect(redirectUrl) && !isSkillPathPageRedirect(redirectUrl);\n};\nexport const isLeRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'courses';\n};\nexport const isAltEntryPointRedirect = redirectUrl => {\n  return isCareerPathPageRedirect(redirectUrl) || isCoursePageRedirect(redirectUrl) || isLeRedirect(redirectUrl);\n};\nexport const isCatalogPageRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'catalog';\n};\n\nconst isJobsPageRedict = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'about' && redirectValues[2] === 'careers';\n};\n\nconst isTermsOfServiceRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'terms';\n};\n\nconst isPrivacyPolicyRedirect = redirectUrl => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'policy';\n};\n\nexport const isValidRecommendationLocation = redirectUrl => !!redirectUrl && (isCareerPathPageRedirect(redirectUrl) || isCoursePageRedirect(redirectUrl) || isLeRedirect(redirectUrl));\nexport const getRedirectSlug = redirectUrl => {\n  const redirectValues = !!redirectUrl && redirectUrl.split('/');\n  const slug = isLeRedirect(redirectUrl) ? redirectUrl.split('/')[2] : redirectValues[redirectValues.length - 1];\n  return isValidRecommendationLocation(redirectUrl) && slug;\n};\nexport const getEntryPoint = redirectUrl => {\n  if (isHomePageRedirect(redirectUrl)) {\n    return 'home_page';\n  }\n\n  if (isCareerPathPageRedirect(redirectUrl)) {\n    return 'careerpath_page';\n  }\n\n  if (isSkillPathPageRedirect(redirectUrl)) {\n    return 'skillpath_page';\n  }\n\n  if (isCoursePageRedirect(redirectUrl)) {\n    return 'course_page';\n  }\n\n  if (isLeRedirect(redirectUrl)) {\n    return 'learning_environment';\n  }\n\n  if (isCatalogPageRedirect(redirectUrl)) {\n    return 'catalog';\n  }\n\n  if (isJobsPageRedict(redirectUrl)) {\n    return 'jobs_page';\n  }\n\n  if (isPrivacyPolicyRedirect(redirectUrl)) {\n    return 'privacy_policy_page';\n  }\n\n  if (isTermsOfServiceRedirect(redirectUrl)) {\n    return 'terms_of_service_page';\n  }\n\n  if (isProMembershipRedirect(redirectUrl)) {\n    return 'pro_membership_page';\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["/Users/akrah/Documents/dev/codefluent/src/libs/redirectHelpers.ts"],"names":["existingCareerPaths","Set","isValidPortalRedirect","redirectUrl","includes","isProMembershipRedirect","redirectValues","split","isCareerPathPageRedirect","has","isSkillPathPageRedirect","isHomePageRedirect","isCoursePageRedirect","isLeRedirect","isAltEntryPointRedirect","isCatalogPageRedirect","isJobsPageRedict","isTermsOfServiceRedirect","isPrivacyPolicyRedirect","isValidRecommendationLocation","getRedirectSlug","slug","length","getEntryPoint","undefined"],"mappings":"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","sourcesContent":["const existingCareerPaths = new Set([\n  'web-development',\n  'data-science',\n  'code-foundations',\n  'computer-science',\n]);\n\nexport const isValidPortalRedirect = (redirectUrl?: string) =>\n  !!redirectUrl &&\n  (redirectUrl.includes('courses') ||\n    redirectUrl.includes('paths') ||\n    redirectUrl.includes('learn') ||\n    redirectUrl.includes('catalog'));\n\nexport const isProMembershipRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    (redirectValues[0] === 'pro' || redirectValues[1] === 'pro') &&\n    (redirectValues[1].split('?')[0] === 'membership' ||\n      redirectValues[2].split('?')[0] === 'membership')\n  );\n};\n\nexport const isCareerPathPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    redirectValues[2] === 'paths' &&\n    existingCareerPaths.has(redirectValues[3])\n  );\n};\n\nexport const isSkillPathPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    redirectValues[2] === 'paths' &&\n    !existingCareerPaths.has(redirectValues[3])\n  );\n};\n\nexport const isHomePageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('?')[0].split('/');\n  return (\n    redirectUrl === '' ||\n    redirectUrl[1] === '' ||\n    redirectValues[1] === 'register' ||\n    redirectValues[1] === 'login'\n  );\n};\n\nexport const isCoursePageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return (\n    isValidPortalRedirect(redirectUrl) &&\n    redirectValues[1] === 'learn' &&\n    !isCareerPathPageRedirect(redirectUrl) &&\n    !isSkillPathPageRedirect(redirectUrl)\n  );\n};\n\nexport const isLeRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'courses';\n};\n\nexport const isAltEntryPointRedirect = (redirectUrl: string) => {\n  return (\n    isCareerPathPageRedirect(redirectUrl) ||\n    isCoursePageRedirect(redirectUrl) ||\n    isLeRedirect(redirectUrl)\n  );\n};\n\nexport const isCatalogPageRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return isValidPortalRedirect(redirectUrl) && redirectValues[1] === 'catalog';\n};\n\nconst isJobsPageRedict = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'about' && redirectValues[2] === 'careers';\n};\n\nconst isTermsOfServiceRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'terms';\n};\n\nconst isPrivacyPolicyRedirect = (redirectUrl: string) => {\n  const redirectValues = redirectUrl.split('/');\n  return redirectValues[1] === 'policy';\n};\n\nexport const isValidRecommendationLocation = (redirectUrl: string) =>\n  !!redirectUrl &&\n  (isCareerPathPageRedirect(redirectUrl) ||\n    isCoursePageRedirect(redirectUrl) ||\n    isLeRedirect(redirectUrl));\n\nexport const getRedirectSlug = (redirectUrl: string) => {\n  const redirectValues: any = !!redirectUrl && redirectUrl.split('/');\n  const slug = isLeRedirect(redirectUrl)\n    ? redirectUrl.split('/')[2]\n    : redirectValues[redirectValues.length - 1];\n  return isValidRecommendationLocation(redirectUrl) && slug;\n};\n\nexport const getEntryPoint = (redirectUrl: string) => {\n  if (isHomePageRedirect(redirectUrl)) {\n    return 'home_page';\n  }\n  if (isCareerPathPageRedirect(redirectUrl)) {\n    return 'careerpath_page';\n  }\n  if (isSkillPathPageRedirect(redirectUrl)) {\n    return 'skillpath_page';\n  }\n  if (isCoursePageRedirect(redirectUrl)) {\n    return 'course_page';\n  }\n  if (isLeRedirect(redirectUrl)) {\n    return 'learning_environment';\n  }\n  if (isCatalogPageRedirect(redirectUrl)) {\n    return 'catalog';\n  }\n  if (isJobsPageRedict(redirectUrl)) {\n    return 'jobs_page';\n  }\n  if (isPrivacyPolicyRedirect(redirectUrl)) {\n    return 'privacy_policy_page';\n  }\n  if (isTermsOfServiceRedirect(redirectUrl)) {\n    return 'terms_of_service_page';\n  }\n  if (isProMembershipRedirect(redirectUrl)) {\n    return 'pro_membership_page';\n  }\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"module"}